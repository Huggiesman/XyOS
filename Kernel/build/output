
Kernel:     file format elf64-littleaarch64


Disassembly of section .text:

ffff0000000e0000 <__start>:
.section ".text.boot"

_boot:
    // Zero out all registers
    MOV    X0, XZR
ffff0000000e0000:	aa1f03e0 	mov	x0, xzr
    MOV    X1, XZR
ffff0000000e0004:	aa1f03e1 	mov	x1, xzr
    MOV    X2, XZR
ffff0000000e0008:	aa1f03e2 	mov	x2, xzr
    MOV    X3,  XZR
ffff0000000e000c:	aa1f03e3 	mov	x3, xzr
    MOV    X4,  XZR
ffff0000000e0010:	aa1f03e4 	mov	x4, xzr
    MOV    X5,  XZR
ffff0000000e0014:	aa1f03e5 	mov	x5, xzr
    MOV    X6,  XZR
ffff0000000e0018:	aa1f03e6 	mov	x6, xzr
    MOV    X7,  XZR
ffff0000000e001c:	aa1f03e7 	mov	x7, xzr
    MOV    X8,  XZR
ffff0000000e0020:	aa1f03e8 	mov	x8, xzr
    MOV    X9,  XZR
ffff0000000e0024:	aa1f03e9 	mov	x9, xzr
    MOV    X10, XZR
ffff0000000e0028:	aa1f03ea 	mov	x10, xzr
    MOV    X11, XZR
ffff0000000e002c:	aa1f03eb 	mov	x11, xzr
    MOV    X12, XZR
ffff0000000e0030:	aa1f03ec 	mov	x12, xzr
    MOV    X13, XZR
ffff0000000e0034:	aa1f03ed 	mov	x13, xzr
    MOV    X14, XZR
ffff0000000e0038:	aa1f03ee 	mov	x14, xzr
    MOV    X15, XZR
ffff0000000e003c:	aa1f03ef 	mov	x15, xzr
    MOV    X16, XZR
ffff0000000e0040:	aa1f03f0 	mov	x16, xzr
    MOV    X17, XZR
ffff0000000e0044:	aa1f03f1 	mov	x17, xzr
    MOV    X18, XZR
ffff0000000e0048:	aa1f03f2 	mov	x18, xzr
    MOV    X19, XZR
ffff0000000e004c:	aa1f03f3 	mov	x19, xzr
    MOV    X20, XZR
ffff0000000e0050:	aa1f03f4 	mov	x20, xzr
    MOV    X21, XZR
ffff0000000e0054:	aa1f03f5 	mov	x21, xzr
    MOV    X22, XZR
ffff0000000e0058:	aa1f03f6 	mov	x22, xzr
    MOV    X23, XZR
ffff0000000e005c:	aa1f03f7 	mov	x23, xzr
    MOV    X24, XZR
ffff0000000e0060:	aa1f03f8 	mov	x24, xzr
    MOV    X25, XZR
ffff0000000e0064:	aa1f03f9 	mov	x25, xzr
    MOV    X26, XZR
ffff0000000e0068:	aa1f03fa 	mov	x26, xzr
    MOV    X27, XZR
ffff0000000e006c:	aa1f03fb 	mov	x27, xzr
    MOV    X28, XZR
ffff0000000e0070:	aa1f03fc 	mov	x28, xzr
    MOV    X29, XZR
ffff0000000e0074:	aa1f03fd 	mov	x29, xzr
    MOV    X30, XZR
ffff0000000e0078:	aa1f03fe 	mov	x30, xzr

    // get cpu id
    mrs     x1, mpidr_el1
ffff0000000e007c:	d53800a1 	mrs	x1, mpidr_el1
    and     x1, x1, #3
ffff0000000e0080:	92400421 	and	x1, x1, #0x3

    // jump if cpu id == 0
    cbz     x1, 2f
ffff0000000e0084:	b4000061 	cbz	x1, ffff0000000e0090 <__start+0x90>

    // infinite loop if cpu id != 0
1:  wfe
ffff0000000e0088:	d503205f 	wfe
    b       1b
ffff0000000e008c:	17ffffff 	b	ffff0000000e0088 <__start+0x88>

    // cpu id == 0
    // clear bss
    // TODO: Why is x1 not incremented?
2:  ldr     x1, =__bss_start
ffff0000000e0090:	58000141 	ldr	x1, ffff0000000e00b8 <__start+0xb8>
    ldr     w2, =__bss_size
ffff0000000e0094:	180000e2 	ldr	w2, ffff0000000e00b0 <__start+0xb0>
3:  cbz     w2, 4f
ffff0000000e0098:	34000082 	cbz	w2, ffff0000000e00a8 <__start+0xa8>
    str     xzr, [x1], #8
ffff0000000e009c:	f800843f 	str	xzr, [x1], #8
    sub     w2, w2, #1
ffff0000000e00a0:	51000442 	sub	w2, w2, #0x1
    cbnz    w2, 3b
ffff0000000e00a4:	35ffffa2 	cbnz	w2, ffff0000000e0098 <__start+0x98>

    // jump to C code
4:  bl      main
ffff0000000e00a8:	940011ea 	bl	ffff0000000e4850 <main>
    // just in case we somehow return...
    b       1b
ffff0000000e00ac:	17fffff7 	b	ffff0000000e0088 <__start+0x88>
ffff0000000e00b0:	00000006 	.word	0x00000006
ffff0000000e00b4:	00000000 	.inst	0x00000000 ; undefined
ffff0000000e00b8:	000e6880 	.word	0x000e6880
ffff0000000e00bc:	ffff0000 	.word	0xffff0000

ffff0000000e00c0 <putc>:
#include <stdarg.h>

/*
 * These are the methods that control I/O to FrameBuffer or UART
 */
void putc(char c){
ffff0000000e00c0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
ffff0000000e00c4:	910003fd 	mov	x29, sp
ffff0000000e00c8:	f9000bf3 	str	x19, [sp, #16]
ffff0000000e00cc:	12001c13 	and	w19, w0, #0xff
    if (c == '\n') {
ffff0000000e00d0:	71002a7f 	cmp	w19, #0xa
ffff0000000e00d4:	540000a0 	b.eq	ffff0000000e00e8 <putc+0x28>  // b.none
        uart_output('\r');
    }
    uart_output(c);
ffff0000000e00d8:	2a1303e0 	mov	w0, w19
}
ffff0000000e00dc:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e00e0:	a8c27bfd 	ldp	x29, x30, [sp], #32
    uart_output(c);
ffff0000000e00e4:	1400057f 	b	ffff0000000e16e0 <uart_output>
        uart_output('\r');
ffff0000000e00e8:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e00ec:	9400057d 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e00f0:	2a1303e0 	mov	w0, w19
}
ffff0000000e00f4:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e00f8:	a8c27bfd 	ldp	x29, x30, [sp], #32
    uart_output(c);
ffff0000000e00fc:	14000579 	b	ffff0000000e16e0 <uart_output>

ffff0000000e0100 <puth_64>:

void puth_64(uint64_t num) {
ffff0000000e0100:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
ffff0000000e0104:	910003fd 	mov	x29, sp
ffff0000000e0108:	a90153f3 	stp	x19, x20, [sp, #16]
    putc('0');
    putc('x');
    uint32_t should_print = 0;
    for(uint32_t i = 16; i >= 1; i--) {
ffff0000000e010c:	52800213 	mov	w19, #0x10                  	// #16
void puth_64(uint64_t num) {
ffff0000000e0110:	a9025bf5 	stp	x21, x22, [sp, #32]
ffff0000000e0114:	aa0003f6 	mov	x22, x0
    uart_output(c);
ffff0000000e0118:	52800600 	mov	w0, #0x30                  	// #48
ffff0000000e011c:	94000571 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0120:	52800795 	mov	w21, #0x3c                  	// #60
    uint32_t should_print = 0;
ffff0000000e0124:	52800014 	mov	w20, #0x0                   	// #0
    uart_output(c);
ffff0000000e0128:	52800f00 	mov	w0, #0x78                  	// #120
ffff0000000e012c:	9400056d 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0130:	14000007 	b	ffff0000000e014c <puth_64+0x4c>
ffff0000000e0134:	d503201f 	nop
ffff0000000e0138:	11015c00 	add	w0, w0, #0x57
ffff0000000e013c:	94000569 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0140:	510012b5 	sub	w21, w21, #0x4
    for(uint32_t i = 16; i >= 1; i--) {
ffff0000000e0144:	71000673 	subs	w19, w19, #0x1
ffff0000000e0148:	540001e0 	b.eq	ffff0000000e0184 <puth_64+0x84>  // b.none
        uint32_t hex = (num >> ((i-1) * 4)) & 0xF;
ffff0000000e014c:	9ad526c1 	lsr	x1, x22, x21
        should_print |= (hex || i == 1);
ffff0000000e0150:	72000c21 	ands	w1, w1, #0xf
ffff0000000e0154:	7a410a64 	ccmp	w19, #0x1, #0x4, eq  // eq = none
ffff0000000e0158:	12001c20 	and	w0, w1, #0xff
ffff0000000e015c:	1a9f17e2 	cset	w2, eq  // eq = none
        if (should_print) {
            if (hex >= 10) {
ffff0000000e0160:	7100243f 	cmp	w1, #0x9
        should_print |= (hex || i == 1);
ffff0000000e0164:	2a020294 	orr	w20, w20, w2
        if (should_print) {
ffff0000000e0168:	34fffed4 	cbz	w20, ffff0000000e0140 <puth_64+0x40>
            if (hex >= 10) {
ffff0000000e016c:	54fffe68 	b.hi	ffff0000000e0138 <puth_64+0x38>  // b.pmore
    uart_output(c);
ffff0000000e0170:	1100c000 	add	w0, w0, #0x30
ffff0000000e0174:	9400055b 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0178:	510012b5 	sub	w21, w21, #0x4
    for(uint32_t i = 16; i >= 1; i--) {
ffff0000000e017c:	71000673 	subs	w19, w19, #0x1
ffff0000000e0180:	54fffe61 	b.ne	ffff0000000e014c <puth_64+0x4c>  // b.any
            } else {
                putc(hex + '0');
            }
        }
    }
}
ffff0000000e0184:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e0188:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e018c:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e0190:	d65f03c0 	ret
ffff0000000e0194:	d503201f 	nop
ffff0000000e0198:	d503201f 	nop
ffff0000000e019c:	d503201f 	nop

ffff0000000e01a0 <getc>:

char getc(){
ffff0000000e01a0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
ffff0000000e01a4:	910003fd 	mov	x29, sp
    return uart_input();
ffff0000000e01a8:	94000562 	bl	ffff0000000e1730 <uart_input>
}
ffff0000000e01ac:	a8c17bfd 	ldp	x29, x30, [sp], #16
ffff0000000e01b0:	d65f03c0 	ret
ffff0000000e01b4:	d503201f 	nop
ffff0000000e01b8:	d503201f 	nop
ffff0000000e01bc:	d503201f 	nop

ffff0000000e01c0 <c2x>:

char c2x( char ch ) {
ffff0000000e01c0:	12001c02 	and	w2, w0, #0xff
    if ( (ch <= 9) ) return '0' + ch;
ffff0000000e01c4:	1100c041 	add	w1, w2, #0x30
ffff0000000e01c8:	11015c40 	add	w0, w2, #0x57
ffff0000000e01cc:	12001c21 	and	w1, w1, #0xff
ffff0000000e01d0:	7100245f 	cmp	w2, #0x9
ffff0000000e01d4:	12001c00 	and	w0, w0, #0xff
    return 'a' + ch - 10;
}
ffff0000000e01d8:	1a818000 	csel	w0, w0, w1, hi  // hi = pmore
ffff0000000e01dc:	d65f03c0 	ret

ffff0000000e01e0 <a2d>:

int a2d(char ch) {
ffff0000000e01e0:	12001c01 	and	w1, w0, #0xff
    if( ch >= '0' && ch <= '9' ) return ch - '0';
ffff0000000e01e4:	5100c020 	sub	w0, w1, #0x30
ffff0000000e01e8:	12001c02 	and	w2, w0, #0xff
ffff0000000e01ec:	7100245f 	cmp	w2, #0x9
ffff0000000e01f0:	54000149 	b.ls	ffff0000000e0218 <a2d+0x38>  // b.plast
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e01f4:	51018420 	sub	w0, w1, #0x61
ffff0000000e01f8:	12001c00 	and	w0, w0, #0xff
ffff0000000e01fc:	7100141f 	cmp	w0, #0x5
ffff0000000e0200:	54000109 	b.ls	ffff0000000e0220 <a2d+0x40>  // b.plast
    if( ch >= 'A' && ch <= 'F' ) return ch - 'A' + 10;
ffff0000000e0204:	51010420 	sub	w0, w1, #0x41
ffff0000000e0208:	12001c00 	and	w0, w0, #0xff
ffff0000000e020c:	7100141f 	cmp	w0, #0x5
ffff0000000e0210:	540000c8 	b.hi	ffff0000000e0228 <a2d+0x48>  // b.pmore
ffff0000000e0214:	5100dc20 	sub	w0, w1, #0x37
    return -1;
}
ffff0000000e0218:	d65f03c0 	ret
ffff0000000e021c:	d503201f 	nop
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e0220:	51015c20 	sub	w0, w1, #0x57
}
ffff0000000e0224:	d65f03c0 	ret
    return -1;
ffff0000000e0228:	12800000 	mov	w0, #0xffffffff            	// #-1
}
ffff0000000e022c:	d65f03c0 	ret

ffff0000000e0230 <a2i>:

char a2i(char ch, const char **src, int base, int *nump) {
ffff0000000e0230:	12001c00 	and	w0, w0, #0xff
    int num, digit;
    const char *p;

    p = *src; num = 0;
ffff0000000e0234:	52800007 	mov	w7, #0x0                   	// #0
ffff0000000e0238:	f9400028 	ldr	x8, [x1]
    while(( digit = a2d(ch) ) >= 0 ) {
ffff0000000e023c:	1400000c 	b	ffff0000000e026c <a2i+0x3c>
    if( ch >= 'A' && ch <= 'F' ) return ch - 'A' + 10;
ffff0000000e0240:	51010405 	sub	w5, w0, #0x41
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e0244:	7100149f 	cmp	w4, #0x5
    if( ch >= 'A' && ch <= 'F' ) return ch - 'A' + 10;
ffff0000000e0248:	12001ca4 	and	w4, w5, #0xff
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e024c:	540002a9 	b.ls	ffff0000000e02a0 <a2i+0x70>  // b.plast
    if( ch >= 'A' && ch <= 'F' ) return ch - 'A' + 10;
ffff0000000e0250:	7100149f 	cmp	w4, #0x5
ffff0000000e0254:	540001e8 	b.hi	ffff0000000e0290 <a2i+0x60>  // b.pmore
ffff0000000e0258:	5100dc04 	sub	w4, w0, #0x37
        if ( digit > base ) break;
ffff0000000e025c:	6b04005f 	cmp	w2, w4
ffff0000000e0260:	5400018b 	b.lt	ffff0000000e0290 <a2i+0x60>  // b.tstop
        num = num*base + digit;
ffff0000000e0264:	1b0210e7 	madd	w7, w7, w2, w4
        ch = *p++;
ffff0000000e0268:	38401500 	ldrb	w0, [x8], #1
    if( ch >= '0' && ch <= '9' ) return ch - '0';
ffff0000000e026c:	5100c005 	sub	w5, w0, #0x30
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e0270:	51018404 	sub	w4, w0, #0x61
    if( ch >= '0' && ch <= '9' ) return ch - '0';
ffff0000000e0274:	12001ca6 	and	w6, w5, #0xff
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e0278:	12001c84 	and	w4, w4, #0xff
    if( ch >= '0' && ch <= '9' ) return ch - '0';
ffff0000000e027c:	710024df 	cmp	w6, #0x9
ffff0000000e0280:	54fffe08 	b.hi	ffff0000000e0240 <a2i+0x10>  // b.pmore
ffff0000000e0284:	2a0503e4 	mov	w4, w5
        if ( digit > base ) break;
ffff0000000e0288:	6b04005f 	cmp	w2, w4
ffff0000000e028c:	54fffeca 	b.ge	ffff0000000e0264 <a2i+0x34>  // b.tcont
    }
    *src = p; *nump = num;
ffff0000000e0290:	f9000028 	str	x8, [x1]
ffff0000000e0294:	b9000067 	str	w7, [x3]
    return ch;
}
ffff0000000e0298:	d65f03c0 	ret
ffff0000000e029c:	d503201f 	nop
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e02a0:	51015c04 	sub	w4, w0, #0x57
ffff0000000e02a4:	17ffffee 	b	ffff0000000e025c <a2i+0x2c>
ffff0000000e02a8:	d503201f 	nop
ffff0000000e02ac:	d503201f 	nop

ffff0000000e02b0 <ui2a>:
void ui2a(uint64_t num, unsigned int base, char *bf) {
    int n = 0;
    int dgt;
    uint64_t d = 1;

    while( (num / d) >= base ) d *= base;
ffff0000000e02b0:	2a0103e1 	mov	w1, w1
ffff0000000e02b4:	eb01001f 	cmp	x0, x1
ffff0000000e02b8:	54000483 	b.cc	ffff0000000e0348 <ui2a+0x98>  // b.lo, b.ul, b.last
    uint64_t d = 1;
ffff0000000e02bc:	d2800023 	mov	x3, #0x1                   	// #1
    while( (num / d) >= base ) d *= base;
ffff0000000e02c0:	9b017c63 	mul	x3, x3, x1
ffff0000000e02c4:	9ac30804 	udiv	x4, x0, x3
ffff0000000e02c8:	eb01009f 	cmp	x4, x1
ffff0000000e02cc:	54ffffa2 	b.cs	ffff0000000e02c0 <ui2a+0x10>  // b.hs, b.nlast

    while( d != 0 ) {
ffff0000000e02d0:	b4000343 	cbz	x3, ffff0000000e0338 <ui2a+0x88>
ffff0000000e02d4:	52800005 	mov	w5, #0x0                   	// #0
        dgt = num / d;
        num %= d;
        d /= base;
        if( n || dgt > 0 || d == 0 ) {
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e02d8:	52800609 	mov	w9, #0x30                  	// #48
ffff0000000e02dc:	52800ae8 	mov	w8, #0x57                  	// #87
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e02e0:	710000bf 	cmp	w5, #0x0
        num %= d;
ffff0000000e02e4:	9b038080 	msub	x0, x4, x3, x0
        d /= base;
ffff0000000e02e8:	9ac10863 	udiv	x3, x3, x1
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e02ec:	7a400880 	ccmp	w4, #0x0, #0x0, eq  // eq = none
ffff0000000e02f0:	5400010c 	b.gt	ffff0000000e0310 <ui2a+0x60>
ffff0000000e02f4:	52800005 	mov	w5, #0x0                   	// #0
ffff0000000e02f8:	b50001c3 	cbnz	x3, ffff0000000e0330 <ui2a+0x80>
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e02fc:	91000447 	add	x7, x2, #0x1
ffff0000000e0300:	1100c084 	add	w4, w4, #0x30
ffff0000000e0304:	39000044 	strb	w4, [x2]
            ++n;
        }
    }
    *bf = 0;
ffff0000000e0308:	390000ff 	strb	wzr, [x7]
}
ffff0000000e030c:	d65f03c0 	ret
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0310:	7100289f 	cmp	w4, #0xa
ffff0000000e0314:	91000447 	add	x7, x2, #0x1
ffff0000000e0318:	1a88b126 	csel	w6, w9, w8, lt  // lt = tstop
            ++n;
ffff0000000e031c:	110004a5 	add	w5, w5, #0x1
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0320:	0b0400c4 	add	w4, w6, w4
ffff0000000e0324:	39000044 	strb	w4, [x2]
ffff0000000e0328:	aa0703e2 	mov	x2, x7
    while( d != 0 ) {
ffff0000000e032c:	b4fffee3 	cbz	x3, ffff0000000e0308 <ui2a+0x58>
ffff0000000e0330:	9ac30804 	udiv	x4, x0, x3
ffff0000000e0334:	17ffffeb 	b	ffff0000000e02e0 <ui2a+0x30>
ffff0000000e0338:	aa0203e7 	mov	x7, x2
    *bf = 0;
ffff0000000e033c:	390000ff 	strb	wzr, [x7]
}
ffff0000000e0340:	d65f03c0 	ret
ffff0000000e0344:	d503201f 	nop
ffff0000000e0348:	aa0003e4 	mov	x4, x0
    uint64_t d = 1;
ffff0000000e034c:	d2800023 	mov	x3, #0x1                   	// #1
ffff0000000e0350:	17ffffe1 	b	ffff0000000e02d4 <ui2a+0x24>
ffff0000000e0354:	d503201f 	nop
ffff0000000e0358:	d503201f 	nop
ffff0000000e035c:	d503201f 	nop

ffff0000000e0360 <i2a>:

void i2a(int64_t num, char *bf) {
    if( num < 0 ) {
ffff0000000e0360:	b6f800a0 	tbz	x0, #63, ffff0000000e0374 <i2a+0x14>
        num = -num;
        *bf++ = '-';
ffff0000000e0364:	528005a2 	mov	w2, #0x2d                  	// #45
        num = -num;
ffff0000000e0368:	cb0003e0 	neg	x0, x0
        *bf++ = '-';
ffff0000000e036c:	39000022 	strb	w2, [x1]
ffff0000000e0370:	91000421 	add	x1, x1, #0x1
    }
    ui2a(num, 10, bf);
ffff0000000e0374:	aa0003e4 	mov	x4, x0
    uint64_t d = 1;
ffff0000000e0378:	d2800022 	mov	x2, #0x1                   	// #1
    while( (num / d) >= base ) d *= base;
ffff0000000e037c:	f100241f 	cmp	x0, #0x9
ffff0000000e0380:	5400010d 	b.le	ffff0000000e03a0 <i2a+0x40>
ffff0000000e0384:	d503201f 	nop
ffff0000000e0388:	8b020842 	add	x2, x2, x2, lsl #2
ffff0000000e038c:	8b020042 	add	x2, x2, x2
ffff0000000e0390:	9ac20803 	udiv	x3, x0, x2
ffff0000000e0394:	f100247f 	cmp	x3, #0x9
ffff0000000e0398:	54ffff88 	b.hi	ffff0000000e0388 <i2a+0x28>  // b.pmore
    while( d != 0 ) {
ffff0000000e039c:	b4000422 	cbz	x2, ffff0000000e0420 <i2a+0xc0>
        d /= base;
ffff0000000e03a0:	b202e7e7 	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e03a4:	52800003 	mov	w3, #0x0                   	// #0
        d /= base;
ffff0000000e03a8:	f29999a7 	movk	x7, #0xcccd
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e03ac:	52800609 	mov	w9, #0x30                  	// #48
ffff0000000e03b0:	52800ae8 	mov	w8, #0x57                  	// #87
ffff0000000e03b4:	d503201f 	nop
        dgt = num / d;
ffff0000000e03b8:	9ac20880 	udiv	x0, x4, x2
        d /= base;
ffff0000000e03bc:	9bc77c45 	umulh	x5, x2, x7
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e03c0:	7100007f 	cmp	w3, #0x0
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e03c4:	91000426 	add	x6, x1, #0x1
            ++n;
ffff0000000e03c8:	11000463 	add	w3, w3, #0x1
        num %= d;
ffff0000000e03cc:	9b029004 	msub	x4, x0, x2, x4
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e03d0:	7a400800 	ccmp	w0, #0x0, #0x0, eq  // eq = none
        d /= base;
ffff0000000e03d4:	d343fca2 	lsr	x2, x5, #3
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e03d8:	5400008c 	b.gt	ffff0000000e03e8 <i2a+0x88>
ffff0000000e03dc:	b4000162 	cbz	x2, ffff0000000e0408 <i2a+0xa8>
ffff0000000e03e0:	52800003 	mov	w3, #0x0                   	// #0
ffff0000000e03e4:	17fffff5 	b	ffff0000000e03b8 <i2a+0x58>
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e03e8:	7100281f 	cmp	w0, #0xa
ffff0000000e03ec:	1a88b125 	csel	w5, w9, w8, lt  // lt = tstop
ffff0000000e03f0:	0b0000a0 	add	w0, w5, w0
ffff0000000e03f4:	39000020 	strb	w0, [x1]
ffff0000000e03f8:	aa0603e1 	mov	x1, x6
    while( d != 0 ) {
ffff0000000e03fc:	b5fffde2 	cbnz	x2, ffff0000000e03b8 <i2a+0x58>
ffff0000000e0400:	14000005 	b	ffff0000000e0414 <i2a+0xb4>
ffff0000000e0404:	d503201f 	nop
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0408:	91000426 	add	x6, x1, #0x1
ffff0000000e040c:	1100c000 	add	w0, w0, #0x30
ffff0000000e0410:	39000020 	strb	w0, [x1]
    *bf = 0;
ffff0000000e0414:	390000df 	strb	wzr, [x6]
}
ffff0000000e0418:	d65f03c0 	ret
ffff0000000e041c:	d503201f 	nop
    while( d != 0 ) {
ffff0000000e0420:	aa0103e6 	mov	x6, x1
    *bf = 0;
ffff0000000e0424:	390000df 	strb	wzr, [x6]
}
ffff0000000e0428:	d65f03c0 	ret
ffff0000000e042c:	d503201f 	nop

ffff0000000e0430 <putstr>:
 * I/O FUNCTIONS
 */
/*
 * This function does not protect you against race conditions
 */
void putstr(const char *str) {
ffff0000000e0430:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
ffff0000000e0434:	910003fd 	mov	x29, sp
ffff0000000e0438:	a90153f3 	stp	x19, x20, [sp, #16]
ffff0000000e043c:	aa0003f4 	mov	x20, x0
    while( *str ) {
ffff0000000e0440:	39400013 	ldrb	w19, [x0]
ffff0000000e0444:	340000f3 	cbz	w19, ffff0000000e0460 <putstr+0x30>
    uart_output(c);
ffff0000000e0448:	2a1303e0 	mov	w0, w19
    if (c == '\n') {
ffff0000000e044c:	71002a7f 	cmp	w19, #0xa
ffff0000000e0450:	54000100 	b.eq	ffff0000000e0470 <putstr+0x40>  // b.none
    uart_output(c);
ffff0000000e0454:	940004a3 	bl	ffff0000000e16e0 <uart_output>
    while( *str ) {
ffff0000000e0458:	38401e93 	ldrb	w19, [x20, #1]!
ffff0000000e045c:	35ffff73 	cbnz	w19, ffff0000000e0448 <putstr+0x18>
        putc( *str );
        str++;
    }
}
ffff0000000e0460:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e0464:	a8c27bfd 	ldp	x29, x30, [sp], #32
ffff0000000e0468:	d65f03c0 	ret
ffff0000000e046c:	d503201f 	nop
        uart_output('\r');
ffff0000000e0470:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e0474:	9400049b 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e0478:	2a1303e0 	mov	w0, w19
ffff0000000e047c:	94000499 	bl	ffff0000000e16e0 <uart_output>
    while( *str ) {
ffff0000000e0480:	38401e93 	ldrb	w19, [x20, #1]!
ffff0000000e0484:	35fffe33 	cbnz	w19, ffff0000000e0448 <putstr+0x18>
}
ffff0000000e0488:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e048c:	a8c27bfd 	ldp	x29, x30, [sp], #32
ffff0000000e0490:	d65f03c0 	ret
ffff0000000e0494:	d503201f 	nop
ffff0000000e0498:	d503201f 	nop
ffff0000000e049c:	d503201f 	nop

ffff0000000e04a0 <newline>:

void newline() {
ffff0000000e04a0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
        uart_output('\r');
ffff0000000e04a4:	528001a0 	mov	w0, #0xd                   	// #13
void newline() {
ffff0000000e04a8:	910003fd 	mov	x29, sp
        uart_output('\r');
ffff0000000e04ac:	9400048d 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e04b0:	52800140 	mov	w0, #0xa                   	// #10
ffff0000000e04b4:	9400048b 	bl	ffff0000000e16e0 <uart_output>
    putc('\n');
    putc('\r');
}
ffff0000000e04b8:	a8c17bfd 	ldp	x29, x30, [sp], #16
    uart_output(c);
ffff0000000e04bc:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e04c0:	14000488 	b	ffff0000000e16e0 <uart_output>
ffff0000000e04c4:	d503201f 	nop
ffff0000000e04c8:	d503201f 	nop
ffff0000000e04cc:	d503201f 	nop

ffff0000000e04d0 <println>:

void println(const char *str) {
ffff0000000e04d0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
ffff0000000e04d4:	910003fd 	mov	x29, sp
ffff0000000e04d8:	a90153f3 	stp	x19, x20, [sp, #16]
ffff0000000e04dc:	aa0003f4 	mov	x20, x0
    while( *str ) {
ffff0000000e04e0:	39400013 	ldrb	w19, [x0]
ffff0000000e04e4:	340000f3 	cbz	w19, ffff0000000e0500 <println+0x30>
    uart_output(c);
ffff0000000e04e8:	2a1303e0 	mov	w0, w19
    if (c == '\n') {
ffff0000000e04ec:	71002a7f 	cmp	w19, #0xa
ffff0000000e04f0:	54000140 	b.eq	ffff0000000e0518 <println+0x48>  // b.none
    uart_output(c);
ffff0000000e04f4:	9400047b 	bl	ffff0000000e16e0 <uart_output>
    while( *str ) {
ffff0000000e04f8:	38401e93 	ldrb	w19, [x20, #1]!
ffff0000000e04fc:	35ffff73 	cbnz	w19, ffff0000000e04e8 <println+0x18>
        putc( *str );
        str++;
    }
    newline(putc);
}
ffff0000000e0500:	a94153f3 	ldp	x19, x20, [sp, #16]
    newline(putc);
ffff0000000e0504:	90000000 	adrp	x0, ffff0000000e0000 <__start>
ffff0000000e0508:	91030000 	add	x0, x0, #0xc0
}
ffff0000000e050c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    newline(putc);
ffff0000000e0510:	17ffffe4 	b	ffff0000000e04a0 <newline>
ffff0000000e0514:	d503201f 	nop
        uart_output('\r');
ffff0000000e0518:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e051c:	94000471 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e0520:	2a1303e0 	mov	w0, w19
ffff0000000e0524:	9400046f 	bl	ffff0000000e16e0 <uart_output>
    while( *str ) {
ffff0000000e0528:	38401e93 	ldrb	w19, [x20, #1]!
ffff0000000e052c:	35fffdf3 	cbnz	w19, ffff0000000e04e8 <println+0x18>
}
ffff0000000e0530:	a94153f3 	ldp	x19, x20, [sp, #16]
    newline(putc);
ffff0000000e0534:	90000000 	adrp	x0, ffff0000000e0000 <__start>
ffff0000000e0538:	91030000 	add	x0, x0, #0xc0
}
ffff0000000e053c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    newline(putc);
ffff0000000e0540:	17ffffd8 	b	ffff0000000e04a0 <newline>
ffff0000000e0544:	d503201f 	nop
ffff0000000e0548:	d503201f 	nop
ffff0000000e054c:	d503201f 	nop

ffff0000000e0550 <putw>:

void putw(int n, char fc, char *bf) {
ffff0000000e0550:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
ffff0000000e0554:	910003fd 	mov	x29, sp
ffff0000000e0558:	f9000bf3 	str	x19, [sp, #16]
ffff0000000e055c:	a9025bf5 	stp	x21, x22, [sp, #32]
ffff0000000e0560:	12001c36 	and	w22, w1, #0xff
ffff0000000e0564:	f9001bf7 	str	x23, [sp, #48]
    char ch;
    char *p = bf;

    while( *p++ && n > 0 ) n--;
ffff0000000e0568:	91000455 	add	x21, x2, #0x1
void putw(int n, char fc, char *bf) {
ffff0000000e056c:	aa0203f7 	mov	x23, x2
    while( *p++ && n > 0 ) n--;
ffff0000000e0570:	39400053 	ldrb	w19, [x2]
ffff0000000e0574:	340008b3 	cbz	w19, ffff0000000e0688 <putw+0x138>
ffff0000000e0578:	7100001f 	cmp	w0, #0x0
ffff0000000e057c:	5400032d 	b.le	ffff0000000e05e0 <putw+0x90>
ffff0000000e0580:	aa1503e1 	mov	x1, x21
ffff0000000e0584:	14000003 	b	ffff0000000e0590 <putw+0x40>
ffff0000000e0588:	2a0303e0 	mov	w0, w3
ffff0000000e058c:	340002a3 	cbz	w3, ffff0000000e05e0 <putw+0x90>
ffff0000000e0590:	39400022 	ldrb	w2, [x1]
ffff0000000e0594:	51000403 	sub	w3, w0, #0x1
ffff0000000e0598:	91000421 	add	x1, x1, #0x1
ffff0000000e059c:	35ffff62 	cbnz	w2, ffff0000000e0588 <putw+0x38>
ffff0000000e05a0:	f9000fb4 	str	x20, [x29, #24]
    while( n-- > 0 ) putc( fc );
ffff0000000e05a4:	51000814 	sub	w20, w0, #0x2
ffff0000000e05a8:	340007c3 	cbz	w3, ffff0000000e06a0 <putw+0x150>
ffff0000000e05ac:	71002adf 	cmp	w22, #0xa
ffff0000000e05b0:	54000480 	b.eq	ffff0000000e0640 <putw+0xf0>  // b.none
ffff0000000e05b4:	d503201f 	nop
    uart_output(c);
ffff0000000e05b8:	2a1603e0 	mov	w0, w22
    while( n-- > 0 ) putc( fc );
ffff0000000e05bc:	51000694 	sub	w20, w20, #0x1
    uart_output(c);
ffff0000000e05c0:	94000448 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e05c4:	11000680 	add	w0, w20, #0x1
    while( n-- > 0 ) putc( fc );
ffff0000000e05c8:	7100001f 	cmp	w0, #0x0
ffff0000000e05cc:	54ffff6c 	b.gt	ffff0000000e05b8 <putw+0x68>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e05d0:	394002f3 	ldrb	w19, [x23]
ffff0000000e05d4:	f9400fb4 	ldr	x20, [x29, #24]
ffff0000000e05d8:	34000113 	cbz	w19, ffff0000000e05f8 <putw+0xa8>
ffff0000000e05dc:	d503201f 	nop
    uart_output(c);
ffff0000000e05e0:	2a1303e0 	mov	w0, w19
    if (c == '\n') {
ffff0000000e05e4:	71002a7f 	cmp	w19, #0xa
ffff0000000e05e8:	54000140 	b.eq	ffff0000000e0610 <putw+0xc0>  // b.none
    uart_output(c);
ffff0000000e05ec:	9400043d 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e05f0:	384016b3 	ldrb	w19, [x21], #1
ffff0000000e05f4:	35ffff73 	cbnz	w19, ffff0000000e05e0 <putw+0x90>
}
ffff0000000e05f8:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e05fc:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e0600:	f9401bf7 	ldr	x23, [sp, #48]
ffff0000000e0604:	a8c47bfd 	ldp	x29, x30, [sp], #64
ffff0000000e0608:	d65f03c0 	ret
ffff0000000e060c:	d503201f 	nop
        uart_output('\r');
ffff0000000e0610:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e0614:	94000433 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e0618:	2a1303e0 	mov	w0, w19
ffff0000000e061c:	94000431 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0620:	384016b3 	ldrb	w19, [x21], #1
ffff0000000e0624:	35fffdf3 	cbnz	w19, ffff0000000e05e0 <putw+0x90>
}
ffff0000000e0628:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e062c:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e0630:	f9401bf7 	ldr	x23, [sp, #48]
ffff0000000e0634:	a8c47bfd 	ldp	x29, x30, [sp], #64
ffff0000000e0638:	d65f03c0 	ret
ffff0000000e063c:	d503201f 	nop
        uart_output('\r');
ffff0000000e0640:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e0644:	94000427 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e0648:	52800140 	mov	w0, #0xa                   	// #10
    while( n-- > 0 ) putc( fc );
ffff0000000e064c:	51000694 	sub	w20, w20, #0x1
    uart_output(c);
ffff0000000e0650:	94000424 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0654:	11000680 	add	w0, w20, #0x1
    while( n-- > 0 ) putc( fc );
ffff0000000e0658:	7100001f 	cmp	w0, #0x0
ffff0000000e065c:	54fffbad 	b.le	ffff0000000e05d0 <putw+0x80>
        uart_output('\r');
ffff0000000e0660:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e0664:	9400041f 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e0668:	52800140 	mov	w0, #0xa                   	// #10
    while( n-- > 0 ) putc( fc );
ffff0000000e066c:	51000694 	sub	w20, w20, #0x1
    uart_output(c);
ffff0000000e0670:	9400041c 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0674:	11000680 	add	w0, w20, #0x1
    while( n-- > 0 ) putc( fc );
ffff0000000e0678:	7100001f 	cmp	w0, #0x0
ffff0000000e067c:	54fffe2c 	b.gt	ffff0000000e0640 <putw+0xf0>
ffff0000000e0680:	17ffffd4 	b	ffff0000000e05d0 <putw+0x80>
ffff0000000e0684:	d503201f 	nop
ffff0000000e0688:	f9000fb4 	str	x20, [x29, #24]
ffff0000000e068c:	7100001f 	cmp	w0, #0x0
ffff0000000e0690:	51000414 	sub	w20, w0, #0x1
ffff0000000e0694:	54fff8cc 	b.gt	ffff0000000e05ac <putw+0x5c>
ffff0000000e0698:	f9400fb4 	ldr	x20, [x29, #24]
ffff0000000e069c:	17ffffd7 	b	ffff0000000e05f8 <putw+0xa8>
ffff0000000e06a0:	f9400fb4 	ldr	x20, [x29, #24]
ffff0000000e06a4:	17ffffcf 	b	ffff0000000e05e0 <putw+0x90>
ffff0000000e06a8:	d503201f 	nop
ffff0000000e06ac:	d503201f 	nop

ffff0000000e06b0 <format>:

void format(const char *fmt, va_list va) {
ffff0000000e06b0:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
ffff0000000e06b4:	910003fd 	mov	x29, sp
ffff0000000e06b8:	a90153f3 	stp	x19, x20, [sp, #16]
        d /= base;
ffff0000000e06bc:	b202e7f4 	mov	x20, #0xcccccccccccccccc    	// #-3689348814741910324
void format(const char *fmt, va_list va) {
ffff0000000e06c0:	a9025bf5 	stp	x21, x22, [sp, #32]
        d /= base;
ffff0000000e06c4:	f29999b4 	movk	x20, #0xcccd
void format(const char *fmt, va_list va) {
ffff0000000e06c8:	a90363f7 	stp	x23, x24, [sp, #48]
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e06cc:	52800615 	mov	w21, #0x30                  	// #48
ffff0000000e06d0:	b9401837 	ldr	w23, [x1, #24]
ffff0000000e06d4:	a9406036 	ldp	x22, x24, [x1]
void format(const char *fmt, va_list va) {
ffff0000000e06d8:	f90023f9 	str	x25, [sp, #64]
ffff0000000e06dc:	aa0003f9 	mov	x25, x0
    char bf[21];
    char ch, lz;
    int w;

    while ( ( ch = *(fmt++) ) ) {
ffff0000000e06e0:	39400333 	ldrb	w19, [x25]
ffff0000000e06e4:	34000153 	cbz	w19, ffff0000000e070c <format+0x5c>
        if ( ch != '%' )
ffff0000000e06e8:	7100967f 	cmp	w19, #0x25
ffff0000000e06ec:	540001e0 	b.eq	ffff0000000e0728 <format+0x78>  // b.none
    if (c == '\n') {
ffff0000000e06f0:	71002a7f 	cmp	w19, #0xa
ffff0000000e06f4:	54000a60 	b.eq	ffff0000000e0840 <format+0x190>  // b.none
    while ( ( ch = *(fmt++) ) ) {
ffff0000000e06f8:	91000739 	add	x25, x25, #0x1
    uart_output(c);
ffff0000000e06fc:	2a1303e0 	mov	w0, w19
ffff0000000e0700:	940003f8 	bl	ffff0000000e16e0 <uart_output>
    while ( ( ch = *(fmt++) ) ) {
ffff0000000e0704:	39400333 	ldrb	w19, [x25]
ffff0000000e0708:	35ffff13 	cbnz	w19, ffff0000000e06e8 <format+0x38>
                    putc(ch);
                    break;
            }
        }
    }
}
ffff0000000e070c:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e0710:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e0714:	a94363f7 	ldp	x23, x24, [sp, #48]
ffff0000000e0718:	f94023f9 	ldr	x25, [sp, #64]
ffff0000000e071c:	a8c87bfd 	ldp	x29, x30, [sp], #128
ffff0000000e0720:	d65f03c0 	ret
ffff0000000e0724:	d503201f 	nop
            ch = *(fmt++);
ffff0000000e0728:	39400720 	ldrb	w0, [x25, #1]
ffff0000000e072c:	91000b24 	add	x4, x25, #0x2
            switch ( ch ) {
ffff0000000e0730:	7100c01f 	cmp	w0, #0x30
ffff0000000e0734:	540008e0 	b.eq	ffff0000000e0850 <format+0x1a0>  // b.none
ffff0000000e0738:	540010c3 	b.cc	ffff0000000e0950 <format+0x2a0>  // b.lo, b.ul, b.last
    p = *src; num = 0;
ffff0000000e073c:	52800001 	mov	w1, #0x0                   	// #0
        num = num*base + digit;
ffff0000000e0740:	52800146 	mov	w6, #0xa                   	// #10
            switch ( ch ) {
ffff0000000e0744:	7100e41f 	cmp	w0, #0x39
ffff0000000e0748:	54000129 	b.ls	ffff0000000e076c <format+0xbc>  // b.plast
ffff0000000e074c:	14000081 	b	ffff0000000e0950 <format+0x2a0>
    if( ch >= 'A' && ch <= 'F' ) return ch - 'A' + 10;
ffff0000000e0750:	7100145f 	cmp	w2, #0x5
ffff0000000e0754:	54000268 	b.hi	ffff0000000e07a0 <format+0xf0>  // b.pmore
ffff0000000e0758:	5100dc03 	sub	w3, w0, #0x37
        if ( digit > base ) break;
ffff0000000e075c:	7100287f 	cmp	w3, #0xa
ffff0000000e0760:	5400020c 	b.gt	ffff0000000e07a0 <format+0xf0>
        num = num*base + digit;
ffff0000000e0764:	1b060c21 	madd	w1, w1, w6, w3
        ch = *p++;
ffff0000000e0768:	38401480 	ldrb	w0, [x4], #1
    if( ch >= '0' && ch <= '9' ) return ch - '0';
ffff0000000e076c:	5100c003 	sub	w3, w0, #0x30
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e0770:	51018402 	sub	w2, w0, #0x61
    if( ch >= '0' && ch <= '9' ) return ch - '0';
ffff0000000e0774:	12001c65 	and	w5, w3, #0xff
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e0778:	12001c42 	and	w2, w2, #0xff
    if( ch >= '0' && ch <= '9' ) return ch - '0';
ffff0000000e077c:	710024bf 	cmp	w5, #0x9
ffff0000000e0780:	54ffff29 	b.ls	ffff0000000e0764 <format+0xb4>  // b.plast
    if( ch >= 'A' && ch <= 'F' ) return ch - 'A' + 10;
ffff0000000e0784:	51010403 	sub	w3, w0, #0x41
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e0788:	7100145f 	cmp	w2, #0x5
    if( ch >= 'A' && ch <= 'F' ) return ch - 'A' + 10;
ffff0000000e078c:	12001c62 	and	w2, w3, #0xff
    if( ch >= 'a' && ch <= 'f' ) return ch - 'a' + 10;
ffff0000000e0790:	54fffe08 	b.hi	ffff0000000e0750 <format+0xa0>  // b.pmore
ffff0000000e0794:	51015c03 	sub	w3, w0, #0x57
        if ( digit > base ) break;
ffff0000000e0798:	7100287f 	cmp	w3, #0xa
ffff0000000e079c:	54fffe4d 	b.le	ffff0000000e0764 <format+0xb4>
    *src = p; *nump = num;
ffff0000000e07a0:	aa0403f9 	mov	x25, x4
    if( ch >= 'A' && ch <= 'F' ) return ch - 'A' + 10;
ffff0000000e07a4:	52800013 	mov	w19, #0x0                   	// #0
            switch( ch ) {
ffff0000000e07a8:	7101901f 	cmp	w0, #0x64
ffff0000000e07ac:	540005e1 	b.ne	ffff0000000e0868 <format+0x1b8>  // b.any
ffff0000000e07b0:	a904efba 	stp	x26, x27, [x29, #72]
                    i2a(va_arg(va, int64_t), bf);
ffff0000000e07b4:	37f82ef7 	tbnz	w23, #31, ffff0000000e0d90 <format+0x6e0>
ffff0000000e07b8:	91003ec2 	add	x2, x22, #0xf
ffff0000000e07bc:	aa1603e0 	mov	x0, x22
ffff0000000e07c0:	927df056 	and	x22, x2, #0xfffffffffffffff8
ffff0000000e07c4:	f9400003 	ldr	x3, [x0]
    if( num < 0 ) {
ffff0000000e07c8:	9101a3a5 	add	x5, x29, #0x68
ffff0000000e07cc:	b6f800a3 	tbz	x3, #63, ffff0000000e07e0 <format+0x130>
        num = -num;
ffff0000000e07d0:	cb0303e3 	neg	x3, x3
        *bf++ = '-';
ffff0000000e07d4:	910004a5 	add	x5, x5, #0x1
ffff0000000e07d8:	528005a0 	mov	w0, #0x2d                  	// #45
ffff0000000e07dc:	3901a3a0 	strb	w0, [x29, #104]
    ui2a(num, 10, bf);
ffff0000000e07e0:	aa0303e4 	mov	x4, x3
    uint64_t d = 1;
ffff0000000e07e4:	d2800020 	mov	x0, #0x1                   	// #1
    while( (num / d) >= base ) d *= base;
ffff0000000e07e8:	f100247f 	cmp	x3, #0x9
ffff0000000e07ec:	540000ed 	b.le	ffff0000000e0808 <format+0x158>
ffff0000000e07f0:	8b000800 	add	x0, x0, x0, lsl #2
ffff0000000e07f4:	8b000000 	add	x0, x0, x0
ffff0000000e07f8:	9ac00862 	udiv	x2, x3, x0
ffff0000000e07fc:	f100245f 	cmp	x2, #0x9
ffff0000000e0800:	54ffff88 	b.hi	ffff0000000e07f0 <format+0x140>  // b.pmore
    while( d != 0 ) {
ffff0000000e0804:	b4002ba0 	cbz	x0, ffff0000000e0d78 <format+0x6c8>
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0808:	52800003 	mov	w3, #0x0                   	// #0
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e080c:	52800ae8 	mov	w8, #0x57                  	// #87
        dgt = num / d;
ffff0000000e0810:	9ac00882 	udiv	x2, x4, x0
        d /= base;
ffff0000000e0814:	9bd47c06 	umulh	x6, x0, x20
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0818:	7100007f 	cmp	w3, #0x0
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e081c:	910004a7 	add	x7, x5, #0x1
            ++n;
ffff0000000e0820:	11000463 	add	w3, w3, #0x1
        num %= d;
ffff0000000e0824:	9b009044 	msub	x4, x2, x0, x4
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0828:	7a400840 	ccmp	w2, #0x0, #0x0, eq  // eq = none
        d /= base;
ffff0000000e082c:	d343fcc0 	lsr	x0, x6, #3
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0830:	5400240c 	b.gt	ffff0000000e0cb0 <format+0x600>
ffff0000000e0834:	b40029a0 	cbz	x0, ffff0000000e0d68 <format+0x6b8>
ffff0000000e0838:	52800003 	mov	w3, #0x0                   	// #0
ffff0000000e083c:	17fffff5 	b	ffff0000000e0810 <format+0x160>
        uart_output('\r');
ffff0000000e0840:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e0844:	940003a7 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0848:	17ffffac 	b	ffff0000000e06f8 <format+0x48>
ffff0000000e084c:	d503201f 	nop
                    lz = 1; ch = *(fmt++);
ffff0000000e0850:	39400b20 	ldrb	w0, [x25, #2]
ffff0000000e0854:	91000f39 	add	x25, x25, #0x3
                    break;
ffff0000000e0858:	52800033 	mov	w19, #0x1                   	// #1
            lz = 0; w = 0;
ffff0000000e085c:	52800001 	mov	w1, #0x0                   	// #0
            switch( ch ) {
ffff0000000e0860:	7101901f 	cmp	w0, #0x64
ffff0000000e0864:	54fffa60 	b.eq	ffff0000000e07b0 <format+0x100>  // b.none
ffff0000000e0868:	54000188 	b.hi	ffff0000000e0898 <format+0x1e8>  // b.pmore
ffff0000000e086c:	7100941f 	cmp	w0, #0x25
ffff0000000e0870:	54000780 	b.eq	ffff0000000e0960 <format+0x2b0>  // b.none
ffff0000000e0874:	71018c1f 	cmp	w0, #0x63
ffff0000000e0878:	54000860 	b.eq	ffff0000000e0984 <format+0x2d4>  // b.none
ffff0000000e087c:	35fff320 	cbnz	w0, ffff0000000e06e0 <format+0x30>
}
ffff0000000e0880:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e0884:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e0888:	a94363f7 	ldp	x23, x24, [sp, #48]
ffff0000000e088c:	f94023f9 	ldr	x25, [sp, #64]
ffff0000000e0890:	a8c87bfd 	ldp	x29, x30, [sp], #128
ffff0000000e0894:	d65f03c0 	ret
            switch( ch ) {
ffff0000000e0898:	7101d41f 	cmp	w0, #0x75
ffff0000000e089c:	540014c0 	b.eq	ffff0000000e0b34 <format+0x484>  // b.none
ffff0000000e08a0:	7101e01f 	cmp	w0, #0x78
ffff0000000e08a4:	54000860 	b.eq	ffff0000000e09b0 <format+0x300>  // b.none
ffff0000000e08a8:	7101cc1f 	cmp	w0, #0x73
ffff0000000e08ac:	54fff1a1 	b.ne	ffff0000000e06e0 <format+0x30>  // b.any
ffff0000000e08b0:	a904efba 	stp	x26, x27, [x29, #72]
ffff0000000e08b4:	f9002fbc 	str	x28, [x29, #88]
                    putw(w, 0, va_arg(va, char*));
ffff0000000e08b8:	37f828d7 	tbnz	w23, #31, ffff0000000e0dd0 <format+0x720>
ffff0000000e08bc:	91003ec2 	add	x2, x22, #0xf
ffff0000000e08c0:	aa1603e0 	mov	x0, x22
ffff0000000e08c4:	927df056 	and	x22, x2, #0xfffffffffffffff8
ffff0000000e08c8:	f940001b 	ldr	x27, [x0]
    while( *p++ && n > 0 ) n--;
ffff0000000e08cc:	9100077a 	add	x26, x27, #0x1
ffff0000000e08d0:	39400373 	ldrb	w19, [x27]
ffff0000000e08d4:	340012b3 	cbz	w19, ffff0000000e0b28 <format+0x478>
ffff0000000e08d8:	34000281 	cbz	w1, ffff0000000e0928 <format+0x278>
ffff0000000e08dc:	aa1a03e0 	mov	x0, x26
ffff0000000e08e0:	14000004 	b	ffff0000000e08f0 <format+0x240>
ffff0000000e08e4:	d503201f 	nop
ffff0000000e08e8:	2a0303e1 	mov	w1, w3
ffff0000000e08ec:	340001e3 	cbz	w3, ffff0000000e0928 <format+0x278>
ffff0000000e08f0:	39400002 	ldrb	w2, [x0]
ffff0000000e08f4:	51000423 	sub	w3, w1, #0x1
ffff0000000e08f8:	91000400 	add	x0, x0, #0x1
ffff0000000e08fc:	35ffff62 	cbnz	w2, ffff0000000e08e8 <format+0x238>
    while( n-- > 0 ) putc( fc );
ffff0000000e0900:	5100083c 	sub	w28, w1, #0x2
ffff0000000e0904:	34000123 	cbz	w3, ffff0000000e0928 <format+0x278>
    uart_output(c);
ffff0000000e0908:	52800000 	mov	w0, #0x0                   	// #0
    while( n-- > 0 ) putc( fc );
ffff0000000e090c:	5100079c 	sub	w28, w28, #0x1
    uart_output(c);
ffff0000000e0910:	94000374 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0914:	11000780 	add	w0, w28, #0x1
    while( n-- > 0 ) putc( fc );
ffff0000000e0918:	7100001f 	cmp	w0, #0x0
ffff0000000e091c:	54ffff6c 	b.gt	ffff0000000e0908 <format+0x258>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0920:	39400373 	ldrb	w19, [x27]
ffff0000000e0924:	340000f3 	cbz	w19, ffff0000000e0940 <format+0x290>
    uart_output(c);
ffff0000000e0928:	2a1303e0 	mov	w0, w19
    if (c == '\n') {
ffff0000000e092c:	71002a7f 	cmp	w19, #0xa
ffff0000000e0930:	540001c0 	b.eq	ffff0000000e0968 <format+0x2b8>  // b.none
    uart_output(c);
ffff0000000e0934:	9400036b 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0938:	38401753 	ldrb	w19, [x26], #1
ffff0000000e093c:	35ffff73 	cbnz	w19, ffff0000000e0928 <format+0x278>
ffff0000000e0940:	a944efba 	ldp	x26, x27, [x29, #72]
ffff0000000e0944:	f9402fbc 	ldr	x28, [x29, #88]
ffff0000000e0948:	17ffff66 	b	ffff0000000e06e0 <format+0x30>
ffff0000000e094c:	d503201f 	nop
            ch = *(fmt++);
ffff0000000e0950:	aa0403f9 	mov	x25, x4
            switch ( ch ) {
ffff0000000e0954:	52800013 	mov	w19, #0x0                   	// #0
            lz = 0; w = 0;
ffff0000000e0958:	52800001 	mov	w1, #0x0                   	// #0
ffff0000000e095c:	17ffffc1 	b	ffff0000000e0860 <format+0x1b0>
    uart_output(c);
ffff0000000e0960:	94000360 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0964:	17ffff5f 	b	ffff0000000e06e0 <format+0x30>
        uart_output('\r');
ffff0000000e0968:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e096c:	9400035d 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e0970:	2a1303e0 	mov	w0, w19
ffff0000000e0974:	9400035b 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0978:	38401753 	ldrb	w19, [x26], #1
ffff0000000e097c:	35fffd73 	cbnz	w19, ffff0000000e0928 <format+0x278>
ffff0000000e0980:	17fffff0 	b	ffff0000000e0940 <format+0x290>
                    putc( va_arg( va, int ) );
ffff0000000e0984:	37f82377 	tbnz	w23, #31, ffff0000000e0df0 <format+0x740>
ffff0000000e0988:	91002ec1 	add	x1, x22, #0xb
ffff0000000e098c:	aa1603e0 	mov	x0, x22
ffff0000000e0990:	927df036 	and	x22, x1, #0xfffffffffffffff8
ffff0000000e0994:	b9400013 	ldr	w19, [x0]
    if (c == '\n') {
ffff0000000e0998:	12001e60 	and	w0, w19, #0xff
ffff0000000e099c:	7100281f 	cmp	w0, #0xa
ffff0000000e09a0:	54000ac0 	b.eq	ffff0000000e0af8 <format+0x448>  // b.none
    uart_output(c);
ffff0000000e09a4:	12001e60 	and	w0, w19, #0xff
ffff0000000e09a8:	9400034e 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e09ac:	17ffff4d 	b	ffff0000000e06e0 <format+0x30>
ffff0000000e09b0:	a904efba 	stp	x26, x27, [x29, #72]
                    ui2a(va_arg(va, uint64_t), 16, bf);
ffff0000000e09b4:	37f81ff7 	tbnz	w23, #31, ffff0000000e0db0 <format+0x700>
ffff0000000e09b8:	91003ec2 	add	x2, x22, #0xf
ffff0000000e09bc:	aa1603e0 	mov	x0, x22
ffff0000000e09c0:	927df056 	and	x22, x2, #0xfffffffffffffff8
ffff0000000e09c4:	f9400003 	ldr	x3, [x0]
    while( (num / d) >= base ) d *= base;
ffff0000000e09c8:	f1003c7f 	cmp	x3, #0xf
ffff0000000e09cc:	54000a09 	b.ls	ffff0000000e0b0c <format+0x45c>  // b.plast
    uint64_t d = 1;
ffff0000000e09d0:	d2800020 	mov	x0, #0x1                   	// #1
ffff0000000e09d4:	d503201f 	nop
    while( (num / d) >= base ) d *= base;
ffff0000000e09d8:	d37cec00 	lsl	x0, x0, #4
ffff0000000e09dc:	9ac00862 	udiv	x2, x3, x0
ffff0000000e09e0:	f1003c5f 	cmp	x2, #0xf
ffff0000000e09e4:	54ffffa8 	b.hi	ffff0000000e09d8 <format+0x328>  // b.pmore
    while( d != 0 ) {
ffff0000000e09e8:	b40008e0 	cbz	x0, ffff0000000e0b04 <format+0x454>
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e09ec:	52800004 	mov	w4, #0x0                   	// #0
ffff0000000e09f0:	7100009f 	cmp	w4, #0x0
        num %= d;
ffff0000000e09f4:	9b008c43 	msub	x3, x2, x0, x3
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e09f8:	9101a3a5 	add	x5, x29, #0x68
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e09fc:	52800ae8 	mov	w8, #0x57                  	// #87
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0a00:	7a400840 	ccmp	w2, #0x0, #0x0, eq  // eq = none
        d /= base;
ffff0000000e0a04:	d344fc00 	lsr	x0, x0, #4
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0a08:	5400014c 	b.gt	ffff0000000e0a30 <format+0x380>
ffff0000000e0a0c:	d503201f 	nop
ffff0000000e0a10:	b40005c0 	cbz	x0, ffff0000000e0ac8 <format+0x418>
ffff0000000e0a14:	52800004 	mov	w4, #0x0                   	// #0
ffff0000000e0a18:	9ac00862 	udiv	x2, x3, x0
ffff0000000e0a1c:	7100009f 	cmp	w4, #0x0
        num %= d;
ffff0000000e0a20:	9b008c43 	msub	x3, x2, x0, x3
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0a24:	7a400840 	ccmp	w2, #0x0, #0x0, eq  // eq = none
        d /= base;
ffff0000000e0a28:	d344fc00 	lsr	x0, x0, #4
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0a2c:	54ffff2d 	b.le	ffff0000000e0a10 <format+0x360>
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0a30:	7100285f 	cmp	w2, #0xa
ffff0000000e0a34:	910004a7 	add	x7, x5, #0x1
ffff0000000e0a38:	1a88b2a6 	csel	w6, w21, w8, lt  // lt = tstop
            ++n;
ffff0000000e0a3c:	11000484 	add	w4, w4, #0x1
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0a40:	0b0200c2 	add	w2, w6, w2
ffff0000000e0a44:	390000a2 	strb	w2, [x5]
ffff0000000e0a48:	aa0703e5 	mov	x5, x7
    while( d != 0 ) {
ffff0000000e0a4c:	b5fffe60 	cbnz	x0, ffff0000000e0a18 <format+0x368>
    *bf = 0;
ffff0000000e0a50:	390000ff 	strb	wzr, [x7]
    while( *p++ && n > 0 ) n--;
ffff0000000e0a54:	3941a3ba 	ldrb	w26, [x29, #104]
ffff0000000e0a58:	3400061a 	cbz	w26, ffff0000000e0b18 <format+0x468>
ffff0000000e0a5c:	34000241 	cbz	w1, ffff0000000e0aa4 <format+0x3f4>
ffff0000000e0a60:	9101a7a0 	add	x0, x29, #0x69
ffff0000000e0a64:	14000003 	b	ffff0000000e0a70 <format+0x3c0>
ffff0000000e0a68:	2a0303e1 	mov	w1, w3
ffff0000000e0a6c:	340001c3 	cbz	w3, ffff0000000e0aa4 <format+0x3f4>
ffff0000000e0a70:	39400002 	ldrb	w2, [x0]
ffff0000000e0a74:	51000423 	sub	w3, w1, #0x1
ffff0000000e0a78:	91000400 	add	x0, x0, #0x1
ffff0000000e0a7c:	35ffff62 	cbnz	w2, ffff0000000e0a68 <format+0x3b8>
    while( n-- > 0 ) putc( fc );
ffff0000000e0a80:	5100083b 	sub	w27, w1, #0x2
ffff0000000e0a84:	34000103 	cbz	w3, ffff0000000e0aa4 <format+0x3f4>
    uart_output(c);
ffff0000000e0a88:	2a1303e0 	mov	w0, w19
    while( n-- > 0 ) putc( fc );
ffff0000000e0a8c:	5100077b 	sub	w27, w27, #0x1
    uart_output(c);
ffff0000000e0a90:	94000314 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0a94:	11000760 	add	w0, w27, #0x1
    while( n-- > 0 ) putc( fc );
ffff0000000e0a98:	7100001f 	cmp	w0, #0x0
ffff0000000e0a9c:	54ffff6c 	b.gt	ffff0000000e0a88 <format+0x3d8>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0aa0:	3400011a 	cbz	w26, ffff0000000e0ac0 <format+0x410>
    while( d != 0 ) {
ffff0000000e0aa4:	9101a7b3 	add	x19, x29, #0x69
    uart_output(c);
ffff0000000e0aa8:	2a1a03e0 	mov	w0, w26
    if (c == '\n') {
ffff0000000e0aac:	71002b5f 	cmp	w26, #0xa
ffff0000000e0ab0:	54000140 	b.eq	ffff0000000e0ad8 <format+0x428>  // b.none
    uart_output(c);
ffff0000000e0ab4:	9400030b 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0ab8:	3840167a 	ldrb	w26, [x19], #1
ffff0000000e0abc:	35ffff7a 	cbnz	w26, ffff0000000e0aa8 <format+0x3f8>
ffff0000000e0ac0:	a944efba 	ldp	x26, x27, [x29, #72]
ffff0000000e0ac4:	17ffff07 	b	ffff0000000e06e0 <format+0x30>
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0ac8:	1100c042 	add	w2, w2, #0x30
ffff0000000e0acc:	910004a7 	add	x7, x5, #0x1
ffff0000000e0ad0:	390000a2 	strb	w2, [x5]
ffff0000000e0ad4:	17ffffdf 	b	ffff0000000e0a50 <format+0x3a0>
        uart_output('\r');
ffff0000000e0ad8:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e0adc:	94000301 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e0ae0:	2a1a03e0 	mov	w0, w26
ffff0000000e0ae4:	940002ff 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0ae8:	3840167a 	ldrb	w26, [x19], #1
ffff0000000e0aec:	35fffdfa 	cbnz	w26, ffff0000000e0aa8 <format+0x3f8>
ffff0000000e0af0:	a944efba 	ldp	x26, x27, [x29, #72]
ffff0000000e0af4:	17fffefb 	b	ffff0000000e06e0 <format+0x30>
        uart_output('\r');
ffff0000000e0af8:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e0afc:	940002f9 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0b00:	17ffffa9 	b	ffff0000000e09a4 <format+0x2f4>
    while( d != 0 ) {
ffff0000000e0b04:	9101a3a7 	add	x7, x29, #0x68
ffff0000000e0b08:	17ffffd2 	b	ffff0000000e0a50 <format+0x3a0>
ffff0000000e0b0c:	aa0303e2 	mov	x2, x3
    uint64_t d = 1;
ffff0000000e0b10:	d2800020 	mov	x0, #0x1                   	// #1
ffff0000000e0b14:	17ffffb6 	b	ffff0000000e09ec <format+0x33c>
    while( n-- > 0 ) putc( fc );
ffff0000000e0b18:	5100043b 	sub	w27, w1, #0x1
ffff0000000e0b1c:	35fffb61 	cbnz	w1, ffff0000000e0a88 <format+0x3d8>
ffff0000000e0b20:	a944efba 	ldp	x26, x27, [x29, #72]
ffff0000000e0b24:	17fffeef 	b	ffff0000000e06e0 <format+0x30>
ffff0000000e0b28:	5100043c 	sub	w28, w1, #0x1
ffff0000000e0b2c:	34fff0a1 	cbz	w1, ffff0000000e0940 <format+0x290>
ffff0000000e0b30:	17ffff76 	b	ffff0000000e0908 <format+0x258>
ffff0000000e0b34:	a904efba 	stp	x26, x27, [x29, #72]
                    ui2a(va_arg(va, uint64_t), 10, bf);
ffff0000000e0b38:	37f80ad7 	tbnz	w23, #31, ffff0000000e0c90 <format+0x5e0>
ffff0000000e0b3c:	91003ec2 	add	x2, x22, #0xf
ffff0000000e0b40:	aa1603e0 	mov	x0, x22
ffff0000000e0b44:	927df056 	and	x22, x2, #0xfffffffffffffff8
ffff0000000e0b48:	f9400003 	ldr	x3, [x0]
    uint64_t d = 1;
ffff0000000e0b4c:	d2800020 	mov	x0, #0x1                   	// #1
    while( (num / d) >= base ) d *= base;
ffff0000000e0b50:	f100247f 	cmp	x3, #0x9
ffff0000000e0b54:	540000e9 	b.ls	ffff0000000e0b70 <format+0x4c0>  // b.plast
ffff0000000e0b58:	8b000800 	add	x0, x0, x0, lsl #2
ffff0000000e0b5c:	8b000000 	add	x0, x0, x0
ffff0000000e0b60:	9ac00862 	udiv	x2, x3, x0
ffff0000000e0b64:	f100245f 	cmp	x2, #0x9
ffff0000000e0b68:	54ffff88 	b.hi	ffff0000000e0b58 <format+0x4a8>  // b.pmore
    while( d != 0 ) {
ffff0000000e0b6c:	b4000860 	cbz	x0, ffff0000000e0c78 <format+0x5c8>
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0b70:	9101a3a5 	add	x5, x29, #0x68
ffff0000000e0b74:	52800004 	mov	w4, #0x0                   	// #0
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0b78:	52800ae8 	mov	w8, #0x57                  	// #87
ffff0000000e0b7c:	d503201f 	nop
        dgt = num / d;
ffff0000000e0b80:	9ac00862 	udiv	x2, x3, x0
        d /= base;
ffff0000000e0b84:	9bd47c06 	umulh	x6, x0, x20
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0b88:	7100009f 	cmp	w4, #0x0
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0b8c:	910004a7 	add	x7, x5, #0x1
            ++n;
ffff0000000e0b90:	11000484 	add	w4, w4, #0x1
        num %= d;
ffff0000000e0b94:	9b008c43 	msub	x3, x2, x0, x3
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0b98:	7a400840 	ccmp	w2, #0x0, #0x0, eq  // eq = none
        d /= base;
ffff0000000e0b9c:	d343fcc0 	lsr	x0, x6, #3
        if( n || dgt > 0 || d == 0 ) {
ffff0000000e0ba0:	5400008c 	b.gt	ffff0000000e0bb0 <format+0x500>
ffff0000000e0ba4:	b4000620 	cbz	x0, ffff0000000e0c68 <format+0x5b8>
ffff0000000e0ba8:	52800004 	mov	w4, #0x0                   	// #0
ffff0000000e0bac:	17fffff5 	b	ffff0000000e0b80 <format+0x4d0>
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0bb0:	7100285f 	cmp	w2, #0xa
ffff0000000e0bb4:	1a88b2a6 	csel	w6, w21, w8, lt  // lt = tstop
ffff0000000e0bb8:	0b0200c2 	add	w2, w6, w2
ffff0000000e0bbc:	390000a2 	strb	w2, [x5]
ffff0000000e0bc0:	aa0703e5 	mov	x5, x7
    while( d != 0 ) {
ffff0000000e0bc4:	b5fffde0 	cbnz	x0, ffff0000000e0b80 <format+0x4d0>
    *bf = 0;
ffff0000000e0bc8:	390000ff 	strb	wzr, [x7]
    while( *p++ && n > 0 ) n--;
ffff0000000e0bcc:	3941a3ba 	ldrb	w26, [x29, #104]
ffff0000000e0bd0:	3400059a 	cbz	w26, ffff0000000e0c80 <format+0x5d0>
ffff0000000e0bd4:	34000241 	cbz	w1, ffff0000000e0c1c <format+0x56c>
ffff0000000e0bd8:	9101a7a0 	add	x0, x29, #0x69
ffff0000000e0bdc:	14000003 	b	ffff0000000e0be8 <format+0x538>
ffff0000000e0be0:	2a0303e1 	mov	w1, w3
ffff0000000e0be4:	340001c3 	cbz	w3, ffff0000000e0c1c <format+0x56c>
ffff0000000e0be8:	39400002 	ldrb	w2, [x0]
ffff0000000e0bec:	51000423 	sub	w3, w1, #0x1
ffff0000000e0bf0:	91000400 	add	x0, x0, #0x1
ffff0000000e0bf4:	35ffff62 	cbnz	w2, ffff0000000e0be0 <format+0x530>
    while( n-- > 0 ) putc( fc );
ffff0000000e0bf8:	5100083b 	sub	w27, w1, #0x2
ffff0000000e0bfc:	34000103 	cbz	w3, ffff0000000e0c1c <format+0x56c>
    uart_output(c);
ffff0000000e0c00:	2a1303e0 	mov	w0, w19
    while( n-- > 0 ) putc( fc );
ffff0000000e0c04:	5100077b 	sub	w27, w27, #0x1
    uart_output(c);
ffff0000000e0c08:	940002b6 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0c0c:	11000760 	add	w0, w27, #0x1
    while( n-- > 0 ) putc( fc );
ffff0000000e0c10:	7100001f 	cmp	w0, #0x0
ffff0000000e0c14:	54ffff6c 	b.gt	ffff0000000e0c00 <format+0x550>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0c18:	34fff55a 	cbz	w26, ffff0000000e0ac0 <format+0x410>
    while( d != 0 ) {
ffff0000000e0c1c:	9101a7b3 	add	x19, x29, #0x69
    uart_output(c);
ffff0000000e0c20:	2a1a03e0 	mov	w0, w26
    if (c == '\n') {
ffff0000000e0c24:	71002b5f 	cmp	w26, #0xa
ffff0000000e0c28:	540000e0 	b.eq	ffff0000000e0c44 <format+0x594>  // b.none
    uart_output(c);
ffff0000000e0c2c:	940002ad 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0c30:	3840167a 	ldrb	w26, [x19], #1
ffff0000000e0c34:	34fff47a 	cbz	w26, ffff0000000e0ac0 <format+0x410>
    uart_output(c);
ffff0000000e0c38:	2a1a03e0 	mov	w0, w26
    if (c == '\n') {
ffff0000000e0c3c:	71002b5f 	cmp	w26, #0xa
ffff0000000e0c40:	54ffff61 	b.ne	ffff0000000e0c2c <format+0x57c>  // b.any
        uart_output('\r');
ffff0000000e0c44:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e0c48:	940002a6 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e0c4c:	2a1a03e0 	mov	w0, w26
ffff0000000e0c50:	940002a4 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0c54:	3840167a 	ldrb	w26, [x19], #1
ffff0000000e0c58:	35fffe5a 	cbnz	w26, ffff0000000e0c20 <format+0x570>
ffff0000000e0c5c:	a944efba 	ldp	x26, x27, [x29, #72]
ffff0000000e0c60:	17fffea0 	b	ffff0000000e06e0 <format+0x30>
ffff0000000e0c64:	d503201f 	nop
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0c68:	1100c042 	add	w2, w2, #0x30
ffff0000000e0c6c:	910004a7 	add	x7, x5, #0x1
ffff0000000e0c70:	390000a2 	strb	w2, [x5]
ffff0000000e0c74:	17ffffd5 	b	ffff0000000e0bc8 <format+0x518>
    while( d != 0 ) {
ffff0000000e0c78:	9101a3a7 	add	x7, x29, #0x68
ffff0000000e0c7c:	17ffffd3 	b	ffff0000000e0bc8 <format+0x518>
    while( n-- > 0 ) putc( fc );
ffff0000000e0c80:	5100043b 	sub	w27, w1, #0x1
ffff0000000e0c84:	35fffbe1 	cbnz	w1, ffff0000000e0c00 <format+0x550>
ffff0000000e0c88:	a944efba 	ldp	x26, x27, [x29, #72]
ffff0000000e0c8c:	17fffe95 	b	ffff0000000e06e0 <format+0x30>
                    ui2a(va_arg(va, uint64_t), 10, bf);
ffff0000000e0c90:	110022e2 	add	w2, w23, #0x8
ffff0000000e0c94:	7100005f 	cmp	w2, #0x0
ffff0000000e0c98:	54000bcd 	b.le	ffff0000000e0e10 <format+0x760>
ffff0000000e0c9c:	91003ec3 	add	x3, x22, #0xf
ffff0000000e0ca0:	aa1603e0 	mov	x0, x22
ffff0000000e0ca4:	2a0203f7 	mov	w23, w2
ffff0000000e0ca8:	927df076 	and	x22, x3, #0xfffffffffffffff8
ffff0000000e0cac:	17ffffa7 	b	ffff0000000e0b48 <format+0x498>
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0cb0:	7100285f 	cmp	w2, #0xa
ffff0000000e0cb4:	1a88b2a6 	csel	w6, w21, w8, lt  // lt = tstop
ffff0000000e0cb8:	0b0200c2 	add	w2, w6, w2
ffff0000000e0cbc:	390000a2 	strb	w2, [x5]
ffff0000000e0cc0:	aa0703e5 	mov	x5, x7
    while( d != 0 ) {
ffff0000000e0cc4:	b5ffda60 	cbnz	x0, ffff0000000e0810 <format+0x160>
    *bf = 0;
ffff0000000e0cc8:	390000ff 	strb	wzr, [x7]
    while( *p++ && n > 0 ) n--;
ffff0000000e0ccc:	3941a3ba 	ldrb	w26, [x29, #104]
ffff0000000e0cd0:	3400059a 	cbz	w26, ffff0000000e0d80 <format+0x6d0>
ffff0000000e0cd4:	34000241 	cbz	w1, ffff0000000e0d1c <format+0x66c>
ffff0000000e0cd8:	9101a7a0 	add	x0, x29, #0x69
ffff0000000e0cdc:	14000003 	b	ffff0000000e0ce8 <format+0x638>
ffff0000000e0ce0:	2a0303e1 	mov	w1, w3
ffff0000000e0ce4:	340001c3 	cbz	w3, ffff0000000e0d1c <format+0x66c>
ffff0000000e0ce8:	39400002 	ldrb	w2, [x0]
ffff0000000e0cec:	51000423 	sub	w3, w1, #0x1
ffff0000000e0cf0:	91000400 	add	x0, x0, #0x1
ffff0000000e0cf4:	35ffff62 	cbnz	w2, ffff0000000e0ce0 <format+0x630>
    while( n-- > 0 ) putc( fc );
ffff0000000e0cf8:	5100083b 	sub	w27, w1, #0x2
ffff0000000e0cfc:	34000103 	cbz	w3, ffff0000000e0d1c <format+0x66c>
    uart_output(c);
ffff0000000e0d00:	2a1303e0 	mov	w0, w19
    while( n-- > 0 ) putc( fc );
ffff0000000e0d04:	5100077b 	sub	w27, w27, #0x1
    uart_output(c);
ffff0000000e0d08:	94000276 	bl	ffff0000000e16e0 <uart_output>
ffff0000000e0d0c:	11000760 	add	w0, w27, #0x1
    while( n-- > 0 ) putc( fc );
ffff0000000e0d10:	7100001f 	cmp	w0, #0x0
ffff0000000e0d14:	54ffff6c 	b.gt	ffff0000000e0d00 <format+0x650>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0d18:	34ffed5a 	cbz	w26, ffff0000000e0ac0 <format+0x410>
    while( d != 0 ) {
ffff0000000e0d1c:	9101a7b3 	add	x19, x29, #0x69
    uart_output(c);
ffff0000000e0d20:	2a1a03e0 	mov	w0, w26
    if (c == '\n') {
ffff0000000e0d24:	71002b5f 	cmp	w26, #0xa
ffff0000000e0d28:	540000e0 	b.eq	ffff0000000e0d44 <format+0x694>  // b.none
    uart_output(c);
ffff0000000e0d2c:	9400026d 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0d30:	3840167a 	ldrb	w26, [x19], #1
ffff0000000e0d34:	34ffec7a 	cbz	w26, ffff0000000e0ac0 <format+0x410>
    uart_output(c);
ffff0000000e0d38:	2a1a03e0 	mov	w0, w26
    if (c == '\n') {
ffff0000000e0d3c:	71002b5f 	cmp	w26, #0xa
ffff0000000e0d40:	54ffff61 	b.ne	ffff0000000e0d2c <format+0x67c>  // b.any
        uart_output('\r');
ffff0000000e0d44:	528001a0 	mov	w0, #0xd                   	// #13
ffff0000000e0d48:	94000266 	bl	ffff0000000e16e0 <uart_output>
    uart_output(c);
ffff0000000e0d4c:	2a1a03e0 	mov	w0, w26
ffff0000000e0d50:	94000264 	bl	ffff0000000e16e0 <uart_output>
    while( ( ch = *bf++ ) ) putc( ch );
ffff0000000e0d54:	3840167a 	ldrb	w26, [x19], #1
ffff0000000e0d58:	35fffe5a 	cbnz	w26, ffff0000000e0d20 <format+0x670>
ffff0000000e0d5c:	a944efba 	ldp	x26, x27, [x29, #72]
ffff0000000e0d60:	17fffe60 	b	ffff0000000e06e0 <format+0x30>
ffff0000000e0d64:	d503201f 	nop
            *bf++ = dgt + ( dgt < 10 ? '0' : 'a' - 10 );
ffff0000000e0d68:	1100c042 	add	w2, w2, #0x30
ffff0000000e0d6c:	910004a7 	add	x7, x5, #0x1
ffff0000000e0d70:	390000a2 	strb	w2, [x5]
ffff0000000e0d74:	17ffffd5 	b	ffff0000000e0cc8 <format+0x618>
    while( d != 0 ) {
ffff0000000e0d78:	aa0503e7 	mov	x7, x5
ffff0000000e0d7c:	17ffffd3 	b	ffff0000000e0cc8 <format+0x618>
    while( n-- > 0 ) putc( fc );
ffff0000000e0d80:	5100043b 	sub	w27, w1, #0x1
ffff0000000e0d84:	35fffbe1 	cbnz	w1, ffff0000000e0d00 <format+0x650>
ffff0000000e0d88:	a944efba 	ldp	x26, x27, [x29, #72]
ffff0000000e0d8c:	17fffe55 	b	ffff0000000e06e0 <format+0x30>
                    i2a(va_arg(va, int64_t), bf);
ffff0000000e0d90:	110022e2 	add	w2, w23, #0x8
ffff0000000e0d94:	7100005f 	cmp	w2, #0x0
ffff0000000e0d98:	5400042d 	b.le	ffff0000000e0e1c <format+0x76c>
ffff0000000e0d9c:	91003ec3 	add	x3, x22, #0xf
ffff0000000e0da0:	aa1603e0 	mov	x0, x22
ffff0000000e0da4:	2a0203f7 	mov	w23, w2
ffff0000000e0da8:	927df076 	and	x22, x3, #0xfffffffffffffff8
ffff0000000e0dac:	17fffe86 	b	ffff0000000e07c4 <format+0x114>
                    ui2a(va_arg(va, uint64_t), 16, bf);
ffff0000000e0db0:	110022e2 	add	w2, w23, #0x8
ffff0000000e0db4:	7100005f 	cmp	w2, #0x0
ffff0000000e0db8:	540003ed 	b.le	ffff0000000e0e34 <format+0x784>
ffff0000000e0dbc:	91003ec3 	add	x3, x22, #0xf
ffff0000000e0dc0:	aa1603e0 	mov	x0, x22
ffff0000000e0dc4:	2a0203f7 	mov	w23, w2
ffff0000000e0dc8:	927df076 	and	x22, x3, #0xfffffffffffffff8
ffff0000000e0dcc:	17fffefe 	b	ffff0000000e09c4 <format+0x314>
                    putw(w, 0, va_arg(va, char*));
ffff0000000e0dd0:	110022e2 	add	w2, w23, #0x8
ffff0000000e0dd4:	7100005f 	cmp	w2, #0x0
ffff0000000e0dd8:	5400028d 	b.le	ffff0000000e0e28 <format+0x778>
ffff0000000e0ddc:	91003ec3 	add	x3, x22, #0xf
ffff0000000e0de0:	aa1603e0 	mov	x0, x22
ffff0000000e0de4:	2a0203f7 	mov	w23, w2
ffff0000000e0de8:	927df076 	and	x22, x3, #0xfffffffffffffff8
ffff0000000e0dec:	17fffeb7 	b	ffff0000000e08c8 <format+0x218>
                    putc( va_arg( va, int ) );
ffff0000000e0df0:	110022e1 	add	w1, w23, #0x8
ffff0000000e0df4:	7100003f 	cmp	w1, #0x0
ffff0000000e0df8:	5400024d 	b.le	ffff0000000e0e40 <format+0x790>
ffff0000000e0dfc:	91002ec2 	add	x2, x22, #0xb
ffff0000000e0e00:	aa1603e0 	mov	x0, x22
ffff0000000e0e04:	2a0103f7 	mov	w23, w1
ffff0000000e0e08:	927df056 	and	x22, x2, #0xfffffffffffffff8
ffff0000000e0e0c:	17fffee2 	b	ffff0000000e0994 <format+0x2e4>
                    ui2a(va_arg(va, uint64_t), 10, bf);
ffff0000000e0e10:	8b37c300 	add	x0, x24, w23, sxtw
ffff0000000e0e14:	2a0203f7 	mov	w23, w2
ffff0000000e0e18:	17ffff4c 	b	ffff0000000e0b48 <format+0x498>
                    i2a(va_arg(va, int64_t), bf);
ffff0000000e0e1c:	8b37c300 	add	x0, x24, w23, sxtw
ffff0000000e0e20:	2a0203f7 	mov	w23, w2
ffff0000000e0e24:	17fffe68 	b	ffff0000000e07c4 <format+0x114>
                    putw(w, 0, va_arg(va, char*));
ffff0000000e0e28:	8b37c300 	add	x0, x24, w23, sxtw
ffff0000000e0e2c:	2a0203f7 	mov	w23, w2
ffff0000000e0e30:	17fffea6 	b	ffff0000000e08c8 <format+0x218>
                    ui2a(va_arg(va, uint64_t), 16, bf);
ffff0000000e0e34:	8b37c300 	add	x0, x24, w23, sxtw
ffff0000000e0e38:	2a0203f7 	mov	w23, w2
ffff0000000e0e3c:	17fffee2 	b	ffff0000000e09c4 <format+0x314>
                    putc( va_arg( va, int ) );
ffff0000000e0e40:	8b37c300 	add	x0, x24, w23, sxtw
ffff0000000e0e44:	2a0103f7 	mov	w23, w1
ffff0000000e0e48:	17fffed3 	b	ffff0000000e0994 <format+0x2e4>
ffff0000000e0e4c:	d503201f 	nop

ffff0000000e0e50 <printf>:

void printf(char *fmt, ...) {
ffff0000000e0e50:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
ffff0000000e0e54:	910003fd 	mov	x29, sp
    va_list va;
    va_start(va,fmt);
ffff0000000e0e58:	910243a8 	add	x8, x29, #0x90
ffff0000000e0e5c:	910143a9 	add	x9, x29, #0x50
ffff0000000e0e60:	a90323a8 	stp	x8, x8, [x29, #48]
ffff0000000e0e64:	128006e8 	mov	w8, #0xffffffc8            	// #-56
ffff0000000e0e68:	f90023a9 	str	x9, [x29, #64]
ffff0000000e0e6c:	b9004ba8 	str	w8, [x29, #72]
ffff0000000e0e70:	b9004fbf 	str	wzr, [x29, #76]

    format(fmt, va);
ffff0000000e0e74:	a9432faa 	ldp	x10, x11, [x29, #48]
ffff0000000e0e78:	a9012faa 	stp	x10, x11, [x29, #16]
ffff0000000e0e7c:	a94427a8 	ldp	x8, x9, [x29, #64]
ffff0000000e0e80:	a90227a8 	stp	x8, x9, [x29, #32]
void printf(char *fmt, ...) {
ffff0000000e0e84:	a9058ba1 	stp	x1, x2, [x29, #88]
    format(fmt, va);
ffff0000000e0e88:	910043a1 	add	x1, x29, #0x10
void printf(char *fmt, ...) {
ffff0000000e0e8c:	a90693a3 	stp	x3, x4, [x29, #104]
ffff0000000e0e90:	a9079ba5 	stp	x5, x6, [x29, #120]
ffff0000000e0e94:	f90047a7 	str	x7, [x29, #136]
    format(fmt, va);
ffff0000000e0e98:	97fffe06 	bl	ffff0000000e06b0 <format>
    va_end(va);
}
ffff0000000e0e9c:	a8c97bfd 	ldp	x29, x30, [sp], #144
ffff0000000e0ea0:	d65f03c0 	ret
	...

ffff0000000e0eb0 <force_exception>:
#include "FrameBuffer.h"
#include "FrameBufferGraphics.h"
#include "Menu.h"
#include "Threading.h"

void force_exception(){
ffff0000000e0eb0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
	println("Forcing unaligned data access...");
ffff0000000e0eb4:	90000020 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e0eb8:	912fe000 	add	x0, x0, #0xbf8
void force_exception(){
ffff0000000e0ebc:	910003fd 	mov	x29, sp
	println("Forcing unaligned data access...");
ffff0000000e0ec0:	97fffd84 	bl	ffff0000000e04d0 <println>
	*((volatile uint32_t*)0x3);
ffff0000000e0ec4:	d2800061 	mov	x1, #0x3                   	// #3
	println("Return from exception");
ffff0000000e0ec8:	90000020 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e0ecc:	91308000 	add	x0, x0, #0xc20
}
ffff0000000e0ed0:	a8c17bfd 	ldp	x29, x30, [sp], #16
	*((volatile uint32_t*)0x3);
ffff0000000e0ed4:	b9400021 	ldr	w1, [x1]
	println("Return from exception");
ffff0000000e0ed8:	17fffd7e 	b	ffff0000000e04d0 <println>
ffff0000000e0edc:	d503201f 	nop

ffff0000000e0ee0 <get_edid_blocks>:

void get_edid_blocks(){
ffff0000000e0ee0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
ffff0000000e0ee4:	910003fd 	mov	x29, sp
ffff0000000e0ee8:	f9000bf3 	str	x19, [sp, #16]
	uint8_t block_num = 0;
ffff0000000e0eec:	52800013 	mov	w19, #0x0                   	// #0
	while (frame_buffer_get_edid_block(block_num)) {
ffff0000000e0ef0:	14000005 	b	ffff0000000e0f04 <get_edid_blocks+0x24>
ffff0000000e0ef4:	d503201f 	nop
		newline();
		block_num += 1;
ffff0000000e0ef8:	11000673 	add	w19, w19, #0x1
		newline();
ffff0000000e0efc:	97fffd69 	bl	ffff0000000e04a0 <newline>
		block_num += 1;
ffff0000000e0f00:	12001e73 	and	w19, w19, #0xff
	while (frame_buffer_get_edid_block(block_num)) {
ffff0000000e0f04:	2a1303e0 	mov	w0, w19
ffff0000000e0f08:	940002e2 	bl	ffff0000000e1a90 <frame_buffer_get_edid_block>
ffff0000000e0f0c:	35ffff60 	cbnz	w0, ffff0000000e0ef8 <get_edid_blocks+0x18>
	}
}
ffff0000000e0f10:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e0f14:	a8c27bfd 	ldp	x29, x30, [sp], #32
ffff0000000e0f18:	d65f03c0 	ret
ffff0000000e0f1c:	d503201f 	nop

ffff0000000e0f20 <typewriter_mode>:

void typewriter_mode(){
ffff0000000e0f20:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
	println("Typewriter Mode On");
ffff0000000e0f24:	90000020 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e0f28:	9130e000 	add	x0, x0, #0xc38
void typewriter_mode(){
ffff0000000e0f2c:	910003fd 	mov	x29, sp
	println("Typewriter Mode On");
ffff0000000e0f30:	97fffd68 	bl	ffff0000000e04d0 <println>
ffff0000000e0f34:	14000002 	b	ffff0000000e0f3c <typewriter_mode+0x1c>
			case 3: {
				newline();
				return;
			}
			default: {
				putc(input);
ffff0000000e0f38:	97fffc62 	bl	ffff0000000e00c0 <putc>
		char input = getc();
ffff0000000e0f3c:	97fffc99 	bl	ffff0000000e01a0 <getc>
ffff0000000e0f40:	12001c01 	and	w1, w0, #0xff
		switch (input) {
ffff0000000e0f44:	71000c3f 	cmp	w1, #0x3
ffff0000000e0f48:	54ffff81 	b.ne	ffff0000000e0f38 <typewriter_mode+0x18>  // b.any
			}
		}
	}
}
ffff0000000e0f4c:	a8c17bfd 	ldp	x29, x30, [sp], #16
				newline();
ffff0000000e0f50:	17fffd54 	b	ffff0000000e04a0 <newline>
ffff0000000e0f54:	d503201f 	nop
ffff0000000e0f58:	d503201f 	nop
ffff0000000e0f5c:	d503201f 	nop

ffff0000000e0f60 <print_all_ascii_chars>:

void print_all_ascii_chars() {
ffff0000000e0f60:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
ffff0000000e0f64:	910003fd 	mov	x29, sp
ffff0000000e0f68:	f9000bf3 	str	x19, [sp, #16]
ffff0000000e0f6c:	52800013 	mov	w19, #0x0                   	// #0
	char c = 0;
	do {
		putc(c);
ffff0000000e0f70:	2a1303e0 	mov	w0, w19
ffff0000000e0f74:	11000673 	add	w19, w19, #0x1
ffff0000000e0f78:	97fffc52 	bl	ffff0000000e00c0 <putc>
		c++;
	} while(c != 0);
ffff0000000e0f7c:	7104027f 	cmp	w19, #0x100
ffff0000000e0f80:	54ffff81 	b.ne	ffff0000000e0f70 <print_all_ascii_chars+0x10>  // b.any
	newline();
}
ffff0000000e0f84:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e0f88:	a8c27bfd 	ldp	x29, x30, [sp], #32
	newline();
ffff0000000e0f8c:	17fffd45 	b	ffff0000000e04a0 <newline>

ffff0000000e0f90 <test_stack_explode>:

void test_stack_explode(uint64_t x, uint64_t y) {
ffff0000000e0f90:	14000000 	b	ffff0000000e0f90 <test_stack_explode>
ffff0000000e0f94:	d503201f 	nop
ffff0000000e0f98:	d503201f 	nop
ffff0000000e0f9c:	d503201f 	nop

ffff0000000e0fa0 <main_menu_choice>:
    test_stack_explode(++x, --y);
}

void main_menu_choice(char c){
ffff0000000e0fa0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
ffff0000000e0fa4:	12001c00 	and	w0, w0, #0xff
	switch(c) {
ffff0000000e0fa8:	7101c01f 	cmp	w0, #0x70
void main_menu_choice(char c){
ffff0000000e0fac:	910003fd 	mov	x29, sp
	switch(c) {
ffff0000000e0fb0:	54000540 	b.eq	ffff0000000e1058 <main_menu_choice+0xb8>  // b.none
ffff0000000e0fb4:	54000169 	b.ls	ffff0000000e0fe0 <main_menu_choice+0x40>  // b.plast
ffff0000000e0fb8:	7101d01f 	cmp	w0, #0x74
ffff0000000e0fbc:	540002c0 	b.eq	ffff0000000e1014 <main_menu_choice+0x74>  // b.none
ffff0000000e0fc0:	7101e01f 	cmp	w0, #0x78
ffff0000000e0fc4:	54000440 	b.eq	ffff0000000e104c <main_menu_choice+0xac>  // b.none
ffff0000000e0fc8:	7101c41f 	cmp	w0, #0x71
ffff0000000e0fcc:	540005a0 	b.eq	ffff0000000e1080 <main_menu_choice+0xe0>  // b.none
		}
		default: {
			println("Unknown command");
		}
	}
}
ffff0000000e0fd0:	a8c27bfd 	ldp	x29, x30, [sp], #32
			println("Unknown command");
ffff0000000e0fd4:	90000020 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e0fd8:	91314000 	add	x0, x0, #0xc50
ffff0000000e0fdc:	17fffd3d 	b	ffff0000000e04d0 <println>
	switch(c) {
ffff0000000e0fe0:	71018c1f 	cmp	w0, #0x63
ffff0000000e0fe4:	54000300 	b.eq	ffff0000000e1044 <main_menu_choice+0xa4>  // b.none
ffff0000000e0fe8:	7101941f 	cmp	w0, #0x65
ffff0000000e0fec:	54ffff21 	b.ne	ffff0000000e0fd0 <main_menu_choice+0x30>  // b.any
	println("Forcing unaligned data access...");
ffff0000000e0ff0:	90000020 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e0ff4:	912fe000 	add	x0, x0, #0xbf8
ffff0000000e0ff8:	97fffd36 	bl	ffff0000000e04d0 <println>
	*((volatile uint32_t*)0x3);
ffff0000000e0ffc:	d2800061 	mov	x1, #0x3                   	// #3
	println("Return from exception");
ffff0000000e1000:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1004:	91308000 	add	x0, x0, #0xc20
}
ffff0000000e1008:	a8c27bfd 	ldp	x29, x30, [sp], #32
	*((volatile uint32_t*)0x3);
ffff0000000e100c:	b9400021 	ldr	w1, [x1]
	println("Return from exception");
ffff0000000e1010:	17fffd30 	b	ffff0000000e04d0 <println>
	println("Typewriter Mode On");
ffff0000000e1014:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1018:	9130e000 	add	x0, x0, #0xc38
ffff0000000e101c:	97fffd2d 	bl	ffff0000000e04d0 <println>
ffff0000000e1020:	14000003 	b	ffff0000000e102c <main_menu_choice+0x8c>
ffff0000000e1024:	d503201f 	nop
				putc(input);
ffff0000000e1028:	97fffc26 	bl	ffff0000000e00c0 <putc>
		char input = getc();
ffff0000000e102c:	97fffc5d 	bl	ffff0000000e01a0 <getc>
ffff0000000e1030:	12001c01 	and	w1, w0, #0xff
		switch (input) {
ffff0000000e1034:	71000c3f 	cmp	w1, #0x3
ffff0000000e1038:	54ffff81 	b.ne	ffff0000000e1028 <main_menu_choice+0x88>  // b.any
}
ffff0000000e103c:	a8c27bfd 	ldp	x29, x30, [sp], #32
				newline();
ffff0000000e1040:	17fffd18 	b	ffff0000000e04a0 <newline>
}
ffff0000000e1044:	a8c27bfd 	ldp	x29, x30, [sp], #32
			frame_buffer_clear();
ffff0000000e1048:	140003de 	b	ffff0000000e1fc0 <frame_buffer_clear>
}
ffff0000000e104c:	a8c27bfd 	ldp	x29, x30, [sp], #32
			frame_buffer_draw_square_corner(0xFFFFFF);
ffff0000000e1050:	12bfe000 	mov	w0, #0xffffff              	// #16777215
ffff0000000e1054:	14000393 	b	ffff0000000e1ea0 <frame_buffer_draw_square_corner>
ffff0000000e1058:	f9000bb3 	str	x19, [x29, #16]
	switch(c) {
ffff0000000e105c:	52800013 	mov	w19, #0x0                   	// #0
		putc(c);
ffff0000000e1060:	2a1303e0 	mov	w0, w19
ffff0000000e1064:	11000673 	add	w19, w19, #0x1
ffff0000000e1068:	97fffc16 	bl	ffff0000000e00c0 <putc>
	} while(c != 0);
ffff0000000e106c:	7104027f 	cmp	w19, #0x100
ffff0000000e1070:	54ffff81 	b.ne	ffff0000000e1060 <main_menu_choice+0xc0>  // b.any
	newline();
ffff0000000e1074:	f9400bb3 	ldr	x19, [x29, #16]
}
ffff0000000e1078:	a8c27bfd 	ldp	x29, x30, [sp], #32
	newline();
ffff0000000e107c:	17fffd09 	b	ffff0000000e04a0 <newline>
ffff0000000e1080:	14000000 	b	ffff0000000e1080 <main_menu_choice+0xe0>
ffff0000000e1084:	d503201f 	nop
ffff0000000e1088:	d503201f 	nop
ffff0000000e108c:	d503201f 	nop

ffff0000000e1090 <main_menu>:

_Noreturn void main_menu() {
ffff0000000e1090:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
	println("## Welcome to XyOS");
ffff0000000e1094:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1098:	91318000 	add	x0, x0, #0xc60
_Noreturn void main_menu() {
ffff0000000e109c:	910003fd 	mov	x29, sp
ffff0000000e10a0:	a90153f3 	stp	x19, x20, [sp, #16]
ffff0000000e10a4:	f0000014 	adrp	x20, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e10a8:	a9025bf5 	stp	x21, x22, [sp, #32]
	println("Forcing unaligned data access...");
ffff0000000e10ac:	912fe294 	add	x20, x20, #0xbf8
_Noreturn void main_menu() {
ffff0000000e10b0:	a90363f7 	stp	x23, x24, [sp, #48]
ffff0000000e10b4:	f0000015 	adrp	x21, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e10b8:	f0000017 	adrp	x23, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e10bc:	f0000016 	adrp	x22, ffff0000000e4000 <synchronous_curr_sp0>
	newline();
	println("MAIN MENU");
	while(1) {
		// Wait for input!
		putstr("> ");
ffff0000000e10c0:	913222f7 	add	x23, x23, #0xc88
			println("Unknown command");
ffff0000000e10c4:	913142d6 	add	x22, x22, #0xc50
	println("Typewriter Mode On");
ffff0000000e10c8:	9130e2b5 	add	x21, x21, #0xc38
ffff0000000e10cc:	f0000018 	adrp	x24, ffff0000000e4000 <synchronous_curr_sp0>
	println("## Welcome to XyOS");
ffff0000000e10d0:	97fffd00 	bl	ffff0000000e04d0 <println>
	newline();
ffff0000000e10d4:	97fffcf3 	bl	ffff0000000e04a0 <newline>
	println("MAIN MENU");
ffff0000000e10d8:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e10dc:	9131e000 	add	x0, x0, #0xc78
ffff0000000e10e0:	97fffcfc 	bl	ffff0000000e04d0 <println>
ffff0000000e10e4:	d503201f 	nop
		putstr("> ");
ffff0000000e10e8:	aa1703e0 	mov	x0, x23
ffff0000000e10ec:	97fffcd1 	bl	ffff0000000e0430 <putstr>

		// Get character
		char input = getc();
ffff0000000e10f0:	97fffc2c 	bl	ffff0000000e01a0 <getc>
ffff0000000e10f4:	12001c13 	and	w19, w0, #0xff
		putc(input);
ffff0000000e10f8:	97fffbf2 	bl	ffff0000000e00c0 <putc>
		newline();
ffff0000000e10fc:	97fffce9 	bl	ffff0000000e04a0 <newline>
	switch(c) {
ffff0000000e1100:	7101c27f 	cmp	w19, #0x70
ffff0000000e1104:	54000240 	b.eq	ffff0000000e114c <main_menu+0xbc>  // b.none
ffff0000000e1108:	54000349 	b.ls	ffff0000000e1170 <main_menu+0xe0>  // b.plast
ffff0000000e110c:	7101d27f 	cmp	w19, #0x74
ffff0000000e1110:	540004c0 	b.eq	ffff0000000e11a8 <main_menu+0x118>  // b.none
ffff0000000e1114:	7101e27f 	cmp	w19, #0x78
ffff0000000e1118:	54000420 	b.eq	ffff0000000e119c <main_menu+0x10c>  // b.none
ffff0000000e111c:	7101c67f 	cmp	w19, #0x71
ffff0000000e1120:	540005e0 	b.eq	ffff0000000e11dc <main_menu+0x14c>  // b.none
			println("Unknown command");
ffff0000000e1124:	aa1603e0 	mov	x0, x22
ffff0000000e1128:	97fffcea 	bl	ffff0000000e04d0 <println>
		putstr("> ");
ffff0000000e112c:	aa1703e0 	mov	x0, x23
ffff0000000e1130:	97fffcc0 	bl	ffff0000000e0430 <putstr>
		char input = getc();
ffff0000000e1134:	97fffc1b 	bl	ffff0000000e01a0 <getc>
ffff0000000e1138:	12001c13 	and	w19, w0, #0xff
		putc(input);
ffff0000000e113c:	97fffbe1 	bl	ffff0000000e00c0 <putc>
		newline();
ffff0000000e1140:	97fffcd8 	bl	ffff0000000e04a0 <newline>
	switch(c) {
ffff0000000e1144:	7101c27f 	cmp	w19, #0x70
ffff0000000e1148:	54fffe01 	b.ne	ffff0000000e1108 <main_menu+0x78>  // b.any
ffff0000000e114c:	52800013 	mov	w19, #0x0                   	// #0
		putc(c);
ffff0000000e1150:	2a1303e0 	mov	w0, w19
ffff0000000e1154:	11000673 	add	w19, w19, #0x1
ffff0000000e1158:	97fffbda 	bl	ffff0000000e00c0 <putc>
	} while(c != 0);
ffff0000000e115c:	7104027f 	cmp	w19, #0x100
ffff0000000e1160:	54ffff81 	b.ne	ffff0000000e1150 <main_menu+0xc0>  // b.any
				newline();
ffff0000000e1164:	97fffccf 	bl	ffff0000000e04a0 <newline>
ffff0000000e1168:	17ffffe0 	b	ffff0000000e10e8 <main_menu+0x58>
ffff0000000e116c:	d503201f 	nop
	switch(c) {
ffff0000000e1170:	71018e7f 	cmp	w19, #0x63
ffff0000000e1174:	54000300 	b.eq	ffff0000000e11d4 <main_menu+0x144>  // b.none
ffff0000000e1178:	7101967f 	cmp	w19, #0x65
ffff0000000e117c:	54fffd41 	b.ne	ffff0000000e1124 <main_menu+0x94>  // b.any
	println("Forcing unaligned data access...");
ffff0000000e1180:	aa1403e0 	mov	x0, x20
ffff0000000e1184:	97fffcd3 	bl	ffff0000000e04d0 <println>
	*((volatile uint32_t*)0x3);
ffff0000000e1188:	d2800061 	mov	x1, #0x3                   	// #3
	println("Return from exception");
ffff0000000e118c:	91308300 	add	x0, x24, #0xc20
	*((volatile uint32_t*)0x3);
ffff0000000e1190:	b9400021 	ldr	w1, [x1]
	println("Return from exception");
ffff0000000e1194:	97fffccf 	bl	ffff0000000e04d0 <println>
ffff0000000e1198:	17ffffd4 	b	ffff0000000e10e8 <main_menu+0x58>
			frame_buffer_draw_square_corner(0xFFFFFF);
ffff0000000e119c:	12bfe000 	mov	w0, #0xffffff              	// #16777215
ffff0000000e11a0:	94000340 	bl	ffff0000000e1ea0 <frame_buffer_draw_square_corner>
ffff0000000e11a4:	17ffffd1 	b	ffff0000000e10e8 <main_menu+0x58>
	println("Typewriter Mode On");
ffff0000000e11a8:	aa1503e0 	mov	x0, x21
ffff0000000e11ac:	97fffcc9 	bl	ffff0000000e04d0 <println>
ffff0000000e11b0:	14000003 	b	ffff0000000e11bc <main_menu+0x12c>
ffff0000000e11b4:	d503201f 	nop
				putc(input);
ffff0000000e11b8:	97fffbc2 	bl	ffff0000000e00c0 <putc>
		char input = getc();
ffff0000000e11bc:	97fffbf9 	bl	ffff0000000e01a0 <getc>
ffff0000000e11c0:	12001c01 	and	w1, w0, #0xff
		switch (input) {
ffff0000000e11c4:	71000c3f 	cmp	w1, #0x3
ffff0000000e11c8:	54ffff81 	b.ne	ffff0000000e11b8 <main_menu+0x128>  // b.any
				newline();
ffff0000000e11cc:	97fffcb5 	bl	ffff0000000e04a0 <newline>
ffff0000000e11d0:	17ffffc6 	b	ffff0000000e10e8 <main_menu+0x58>
			frame_buffer_clear();
ffff0000000e11d4:	9400037b 	bl	ffff0000000e1fc0 <frame_buffer_clear>
ffff0000000e11d8:	17ffffc4 	b	ffff0000000e10e8 <main_menu+0x58>
ffff0000000e11dc:	14000000 	b	ffff0000000e11dc <main_menu+0x14c>

ffff0000000e11e0 <exception_details_1>:
extern uint64_t exception_syndrome_1();
extern uint64_t exception_link_1();
extern uint64_t saved_program_state_1();
extern uint64_t interrupt_status_1();

void exception_details_1() {
ffff0000000e11e0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
	// Print exception details
	println("######### EXCEPTION #########");
ffff0000000e11e4:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e11e8:	91324000 	add	x0, x0, #0xc90
void exception_details_1() {
ffff0000000e11ec:	910003fd 	mov	x29, sp
	println("######### EXCEPTION #########");
ffff0000000e11f0:	97fffcb8 	bl	ffff0000000e04d0 <println>
	println("Exception Level: 1");
ffff0000000e11f4:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e11f8:	9132c000 	add	x0, x0, #0xcb0
ffff0000000e11fc:	97fffcb5 	bl	ffff0000000e04d0 <println>
	printf("Interrupt Status: %x\n", interrupt_status_1());
ffff0000000e1200:	94000912 	bl	ffff0000000e3648 <interrupt_status_1>
ffff0000000e1204:	aa0003e1 	mov	x1, x0
ffff0000000e1208:	f0000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e120c:	91332040 	add	x0, x2, #0xcc8
ffff0000000e1210:	97ffff10 	bl	ffff0000000e0e50 <printf>
	printf("Exception Syndrome: %x\n", exception_syndrome_1());
ffff0000000e1214:	94000915 	bl	ffff0000000e3668 <exception_syndrome_1>
ffff0000000e1218:	aa0003e1 	mov	x1, x0
ffff0000000e121c:	f0000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1220:	91338040 	add	x0, x2, #0xce0
ffff0000000e1224:	97ffff0b 	bl	ffff0000000e0e50 <printf>
	printf("Exception Link: %x\n", exception_link_1());
ffff0000000e1228:	94000912 	bl	ffff0000000e3670 <exception_link_1>
ffff0000000e122c:	aa0003e1 	mov	x1, x0
ffff0000000e1230:	f0000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1234:	9133e040 	add	x0, x2, #0xcf8
ffff0000000e1238:	97ffff06 	bl	ffff0000000e0e50 <printf>
	printf("Saved Program State: %x\n", saved_program_state_1());
ffff0000000e123c:	9400090f 	bl	ffff0000000e3678 <saved_program_state_1>
ffff0000000e1240:	aa0003e1 	mov	x1, x0
ffff0000000e1244:	f0000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1248:	91344040 	add	x0, x2, #0xd10
ffff0000000e124c:	97ffff01 	bl	ffff0000000e0e50 <printf>
	println("#############################");
}
ffff0000000e1250:	a8c17bfd 	ldp	x29, x30, [sp], #16
	println("#############################");
ffff0000000e1254:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1258:	9134c000 	add	x0, x0, #0xd30
ffff0000000e125c:	17fffc9d 	b	ffff0000000e04d0 <println>

ffff0000000e1260 <error>:
		error("Unknown S/W exception");
	}
}

// Unrecoverable error has occurred
_Noreturn void error(char* msg) {
ffff0000000e1260:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
ffff0000000e1264:	910003fd 	mov	x29, sp
ffff0000000e1268:	f9000bf3 	str	x19, [sp, #16]
ffff0000000e126c:	aa0003f3 	mov	x19, x0
	println("########### ERROR ###########");
ffff0000000e1270:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1274:	91354000 	add	x0, x0, #0xd50
ffff0000000e1278:	97fffc96 	bl	ffff0000000e04d0 <println>
	println(msg);
ffff0000000e127c:	aa1303e0 	mov	x0, x19
ffff0000000e1280:	97fffc94 	bl	ffff0000000e04d0 <println>
	println("#############################");
ffff0000000e1284:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1288:	9134c000 	add	x0, x0, #0xd30
ffff0000000e128c:	97fffc91 	bl	ffff0000000e04d0 <println>
ffff0000000e1290:	14000000 	b	ffff0000000e1290 <error+0x30>
ffff0000000e1294:	d503201f 	nop
ffff0000000e1298:	d503201f 	nop
ffff0000000e129c:	d503201f 	nop

ffff0000000e12a0 <exception_handler_1>:
void exception_handler_1() {
ffff0000000e12a0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
ffff0000000e12a4:	910003fd 	mov	x29, sp
	if (interrupt_status_1()) {
ffff0000000e12a8:	940008e8 	bl	ffff0000000e3648 <interrupt_status_1>
ffff0000000e12ac:	b40000c0 	cbz	x0, ffff0000000e12c4 <exception_handler_1+0x24>
		if (arm_timer_was_interrupted()) {
ffff0000000e12b0:	94000030 	bl	ffff0000000e1370 <arm_timer_was_interrupted>
ffff0000000e12b4:	34000100 	cbz	w0, ffff0000000e12d4 <exception_handler_1+0x34>
			thread_switch();
ffff0000000e12b8:	94000782 	bl	ffff0000000e30c0 <thread_switch>
}
ffff0000000e12bc:	a8c17bfd 	ldp	x29, x30, [sp], #16
    		arm_timer_ack_interrupt();
ffff0000000e12c0:	14000030 	b	ffff0000000e1380 <arm_timer_ack_interrupt>
		exception_details_1();
ffff0000000e12c4:	97ffffc7 	bl	ffff0000000e11e0 <exception_details_1>
		error("Unknown S/W exception");
ffff0000000e12c8:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e12cc:	91362000 	add	x0, x0, #0xd88
ffff0000000e12d0:	97ffffe4 	bl	ffff0000000e1260 <error>
			exception_details_1();
ffff0000000e12d4:	97ffffc3 	bl	ffff0000000e11e0 <exception_details_1>
			error("Unknown H/W exception");
ffff0000000e12d8:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e12dc:	9135c000 	add	x0, x0, #0xd70
ffff0000000e12e0:	97ffffe0 	bl	ffff0000000e1260 <error>
ffff0000000e12e4:	d503201f 	nop
ffff0000000e12e8:	d503201f 	nop
ffff0000000e12ec:	d503201f 	nop

ffff0000000e12f0 <generic_error>:
	while(1) {}
}

void generic_error() {
ffff0000000e12f0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
	error("A generic error occurred");
ffff0000000e12f4:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e12f8:	91368000 	add	x0, x0, #0xda0
void generic_error() {
ffff0000000e12fc:	910003fd 	mov	x29, sp
	error("A generic error occurred");
ffff0000000e1300:	97ffffd8 	bl	ffff0000000e1260 <error>
ffff0000000e1304:	d503201f 	nop
ffff0000000e1308:	d503201f 	nop
ffff0000000e130c:	d503201f 	nop

ffff0000000e1310 <marker>:
}

// Convenience function for Assembly
void marker() {
ffff0000000e1310:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
	error("Marker was triggered!");
ffff0000000e1314:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1318:	91370000 	add	x0, x0, #0xdc0
void marker() {
ffff0000000e131c:	910003fd 	mov	x29, sp
	error("Marker was triggered!");
ffff0000000e1320:	97ffffd0 	bl	ffff0000000e1260 <error>
	...

ffff0000000e1330 <arm_timer_enable>:
#include "ARMTimer.h"

void arm_timer_enable() {
	*ARM_TIMER_CONTROL = 0xAA;
ffff0000000e1330:	92897ee1 	mov	x1, #0xffffffffffffb408    	// #-19448
ffff0000000e1334:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*ARM_TIMER_IRQ_ACK = 0;
ffff0000000e1338:	92897e60 	mov	x0, #0xffffffffffffb40c    	// #-19444
ffff0000000e133c:	f2bfe000 	movk	x0, #0xff00, lsl #16
	*ARM_TIMER_CONTROL = 0xAA;
ffff0000000e1340:	52801542 	mov	w2, #0xaa                  	// #170
ffff0000000e1344:	b9000022 	str	w2, [x1]
	*ARM_TIMER_IRQ_ACK = 0;
ffff0000000e1348:	b900001f 	str	wzr, [x0]
}
ffff0000000e134c:	d65f03c0 	ret

ffff0000000e1350 <arm_timer_is_enabled>:

uint32_t arm_timer_is_enabled() {
	if (*ARM_TIMER_CONTROL & 0xA0) {
ffff0000000e1350:	92897ee1 	mov	x1, #0xffffffffffffb408    	// #-19448
ffff0000000e1354:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e1358:	52801400 	mov	w0, #0xa0                  	// #160
ffff0000000e135c:	b9400021 	ldr	w1, [x1]
ffff0000000e1360:	6a00003f 	tst	w1, w0
		return 1;
	} else {
		return 0;
	}
}
ffff0000000e1364:	1a9f07e0 	cset	w0, ne  // ne = any
ffff0000000e1368:	d65f03c0 	ret
ffff0000000e136c:	d503201f 	nop

ffff0000000e1370 <arm_timer_was_interrupted>:

uint32_t arm_timer_was_interrupted() {
	return *ARM_TIMER_MASK_IRQ;
ffff0000000e1370:	92897d60 	mov	x0, #0xffffffffffffb414    	// #-19436
ffff0000000e1374:	f2bfe000 	movk	x0, #0xff00, lsl #16
ffff0000000e1378:	b9400000 	ldr	w0, [x0]
}
ffff0000000e137c:	d65f03c0 	ret

ffff0000000e1380 <arm_timer_ack_interrupt>:

void arm_timer_ack_interrupt() {
	*ARM_TIMER_IRQ_ACK = 0;
ffff0000000e1380:	92897e60 	mov	x0, #0xffffffffffffb40c    	// #-19444
ffff0000000e1384:	f2bfe000 	movk	x0, #0xff00, lsl #16
ffff0000000e1388:	b900001f 	str	wzr, [x0]
}
ffff0000000e138c:	d65f03c0 	ret

ffff0000000e1390 <arm_timer_disable>:

void arm_timer_disable() {
	*ARM_TIMER_CONTROL = 0;
ffff0000000e1390:	92897ee0 	mov	x0, #0xffffffffffffb408    	// #-19448
ffff0000000e1394:	f2bfe000 	movk	x0, #0xff00, lsl #16
ffff0000000e1398:	b900001f 	str	wzr, [x0]
}
ffff0000000e139c:	d65f03c0 	ret

ffff0000000e13a0 <arm_timer_countdown>:

void arm_timer_countdown(uint32_t miliseconds) {
	// This multiplier is completely arbitrary
	// The clock speed for this timer changes dynamically
	*ARM_TIMER_LOAD = miliseconds * 4;
ffff0000000e13a0:	92897fe1 	mov	x1, #0xffffffffffffb400    	// #-19456
ffff0000000e13a4:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e13a8:	531e7400 	lsl	w0, w0, #2
ffff0000000e13ac:	b9000020 	str	w0, [x1]
}
ffff0000000e13b0:	d65f03c0 	ret
	...

ffff0000000e13c0 <gpio_mode>:

void gpio_mode(int pin, int mode) {
  volatile uint32_t* addr;
  int current_mode = 0;
  int offset = 0;
  if (pin >= 0 && pin <= 9) {
ffff0000000e13c0:	7100241f 	cmp	w0, #0x9
ffff0000000e13c4:	54000369 	b.ls	ffff0000000e1430 <gpio_mode+0x70>  // b.plast
    addr = GPIO_SEL0;
    offset = 0;
  } else if (pin >= 10 && pin <= 19) {
ffff0000000e13c8:	51002802 	sub	w2, w0, #0xa
ffff0000000e13cc:	7100245f 	cmp	w2, #0x9
ffff0000000e13d0:	540001c9 	b.ls	ffff0000000e1408 <gpio_mode+0x48>  // b.plast
  	addr = GPIO_SEL1;
	  offset = 10;
  } else if (pin >= 20 && pin <= 29) {
ffff0000000e13d4:	51005002 	sub	w2, w0, #0x14
ffff0000000e13d8:	7100245f 	cmp	w2, #0x9
ffff0000000e13dc:	540003a9 	b.ls	ffff0000000e1450 <gpio_mode+0x90>  // b.plast
  	addr = GPIO_SEL2;
	  offset = 20;
  } else if (pin >= 30 && pin <= 39) {
ffff0000000e13e0:	51007802 	sub	w2, w0, #0x1e
ffff0000000e13e4:	7100245f 	cmp	w2, #0x9
ffff0000000e13e8:	54000489 	b.ls	ffff0000000e1478 <gpio_mode+0xb8>  // b.plast
  	addr = GPIO_SEL3;
	  offset = 30;
  } else if (pin >= 40 && pin <= 49) {
ffff0000000e13ec:	5100a002 	sub	w2, w0, #0x28
ffff0000000e13f0:	7100245f 	cmp	w2, #0x9
ffff0000000e13f4:	540004a9 	b.ls	ffff0000000e1488 <gpio_mode+0xc8>  // b.plast
  	addr = GPIO_SEL4;
	  offset = 40;
  } else {
  	addr = GPIO_SEL5;
ffff0000000e13f8:	929ffd62 	mov	x2, #0xffffffffffff0014    	// #-65516
ffff0000000e13fc:	f2bfe402 	movk	x2, #0xff20, lsl #16
ffff0000000e1400:	5100c800 	sub	w0, w0, #0x32
ffff0000000e1404:	14000004 	b	ffff0000000e1414 <gpio_mode+0x54>
ffff0000000e1408:	2a0203e0 	mov	w0, w2
  	addr = GPIO_SEL1;
ffff0000000e140c:	929fff62 	mov	x2, #0xffffffffffff0004    	// #-65532
ffff0000000e1410:	f2bfe402 	movk	x2, #0xff20, lsl #16
	  offset = 50;
  }
  current_mode = *addr;
ffff0000000e1414:	b9400043 	ldr	w3, [x2]
  current_mode |= mode << ((pin-offset)*3);
ffff0000000e1418:	0b000400 	add	w0, w0, w0, lsl #1
ffff0000000e141c:	1ac02020 	lsl	w0, w1, w0
ffff0000000e1420:	2a030000 	orr	w0, w0, w3
  *addr = current_mode;
ffff0000000e1424:	b9000040 	str	w0, [x2]
}
ffff0000000e1428:	d65f03c0 	ret
ffff0000000e142c:	d503201f 	nop
    addr = GPIO_SEL0;
ffff0000000e1430:	929fffe2 	mov	x2, #0xffffffffffff0000    	// #-65536
ffff0000000e1434:	f2bfe402 	movk	x2, #0xff20, lsl #16
  current_mode |= mode << ((pin-offset)*3);
ffff0000000e1438:	0b000400 	add	w0, w0, w0, lsl #1
  current_mode = *addr;
ffff0000000e143c:	b9400043 	ldr	w3, [x2]
  current_mode |= mode << ((pin-offset)*3);
ffff0000000e1440:	1ac02020 	lsl	w0, w1, w0
ffff0000000e1444:	2a030000 	orr	w0, w0, w3
  *addr = current_mode;
ffff0000000e1448:	b9000040 	str	w0, [x2]
}
ffff0000000e144c:	d65f03c0 	ret
ffff0000000e1450:	2a0203e0 	mov	w0, w2
  	addr = GPIO_SEL2;
ffff0000000e1454:	929ffee2 	mov	x2, #0xffffffffffff0008    	// #-65528
ffff0000000e1458:	f2bfe402 	movk	x2, #0xff20, lsl #16
  current_mode |= mode << ((pin-offset)*3);
ffff0000000e145c:	0b000400 	add	w0, w0, w0, lsl #1
  current_mode = *addr;
ffff0000000e1460:	b9400043 	ldr	w3, [x2]
  current_mode |= mode << ((pin-offset)*3);
ffff0000000e1464:	1ac02020 	lsl	w0, w1, w0
ffff0000000e1468:	2a030000 	orr	w0, w0, w3
  *addr = current_mode;
ffff0000000e146c:	b9000040 	str	w0, [x2]
}
ffff0000000e1470:	d65f03c0 	ret
ffff0000000e1474:	d503201f 	nop
ffff0000000e1478:	2a0203e0 	mov	w0, w2
  	addr = GPIO_SEL3;
ffff0000000e147c:	929ffe62 	mov	x2, #0xffffffffffff000c    	// #-65524
ffff0000000e1480:	f2bfe402 	movk	x2, #0xff20, lsl #16
ffff0000000e1484:	17ffffe4 	b	ffff0000000e1414 <gpio_mode+0x54>
ffff0000000e1488:	2a0203e0 	mov	w0, w2
  	addr = GPIO_SEL4;
ffff0000000e148c:	929ffde2 	mov	x2, #0xffffffffffff0010    	// #-65520
ffff0000000e1490:	f2bfe402 	movk	x2, #0xff20, lsl #16
ffff0000000e1494:	17ffffe0 	b	ffff0000000e1414 <gpio_mode+0x54>
ffff0000000e1498:	d503201f 	nop
ffff0000000e149c:	d503201f 	nop

ffff0000000e14a0 <gpio_start_set>:

void gpio_start_set(int pin) {
  if (pin >= 0 && pin <= 31) {
ffff0000000e14a0:	71007c1f 	cmp	w0, #0x1f
ffff0000000e14a4:	540000e9 	b.ls	ffff0000000e14c0 <gpio_start_set+0x20>  // b.plast
  	*GPIO_SET0 = 1 << pin;
  } else {
  	*GPIO_SET1 = 1 << (pin-32);
ffff0000000e14a8:	929ffbe2 	mov	x2, #0xffffffffffff0020    	// #-65504
ffff0000000e14ac:	f2bfe402 	movk	x2, #0xff20, lsl #16
ffff0000000e14b0:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e14b4:	1ac02020 	lsl	w0, w1, w0
ffff0000000e14b8:	b9000040 	str	w0, [x2]
  }
}
ffff0000000e14bc:	d65f03c0 	ret
  	*GPIO_SET0 = 1 << pin;
ffff0000000e14c0:	929ffc62 	mov	x2, #0xffffffffffff001c    	// #-65508
ffff0000000e14c4:	f2bfe402 	movk	x2, #0xff20, lsl #16
ffff0000000e14c8:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e14cc:	1ac02020 	lsl	w0, w1, w0
ffff0000000e14d0:	b9000040 	str	w0, [x2]
}
ffff0000000e14d4:	d65f03c0 	ret
ffff0000000e14d8:	d503201f 	nop
ffff0000000e14dc:	d503201f 	nop

ffff0000000e14e0 <gpio_clear>:

void gpio_clear(int pin) {
  if (pin >= 0 && pin <= 31) {
ffff0000000e14e0:	71007c1f 	cmp	w0, #0x1f
ffff0000000e14e4:	540000e9 	b.ls	ffff0000000e1500 <gpio_clear+0x20>  // b.plast
  	*GPIO_CLR0 = 1 << pin;
  } else {
  	*GPIO_CLR1 = 1 << (pin-32);
ffff0000000e14e8:	929ffa62 	mov	x2, #0xffffffffffff002c    	// #-65492
ffff0000000e14ec:	f2bfe402 	movk	x2, #0xff20, lsl #16
ffff0000000e14f0:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e14f4:	1ac02020 	lsl	w0, w1, w0
ffff0000000e14f8:	b9000040 	str	w0, [x2]
  }
}
ffff0000000e14fc:	d65f03c0 	ret
  	*GPIO_CLR0 = 1 << pin;
ffff0000000e1500:	929ffae2 	mov	x2, #0xffffffffffff0028    	// #-65496
ffff0000000e1504:	f2bfe402 	movk	x2, #0xff20, lsl #16
ffff0000000e1508:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e150c:	1ac02020 	lsl	w0, w1, w0
ffff0000000e1510:	b9000040 	str	w0, [x2]
}
ffff0000000e1514:	d65f03c0 	ret
ffff0000000e1518:	d503201f 	nop
ffff0000000e151c:	d503201f 	nop

ffff0000000e1520 <gpio_set>:
  if (pin >= 0 && pin <= 31) {
ffff0000000e1520:	71007c1f 	cmp	w0, #0x1f
ffff0000000e1524:	54000168 	b.hi	ffff0000000e1550 <gpio_set+0x30>  // b.pmore
  	*GPIO_SET0 = 1 << pin;
ffff0000000e1528:	929ffc64 	mov	x4, #0xffffffffffff001c    	// #-65508
ffff0000000e152c:	f2bfe404 	movk	x4, #0xff20, lsl #16
ffff0000000e1530:	52800022 	mov	w2, #0x1                   	// #1

void gpio_set(int pin, int level) {
  gpio_start_set(pin);
  if (pin >= 0 && pin <= 31) {
  	*GPIO_LEV0 = level << pin;
ffff0000000e1534:	929ff963 	mov	x3, #0xffffffffffff0034    	// #-65484
  } else {
  	*GPIO_LEV1 = level << (pin-32);
ffff0000000e1538:	f2bfe403 	movk	x3, #0xff20, lsl #16
  	*GPIO_SET1 = 1 << (pin-32);
ffff0000000e153c:	1ac02042 	lsl	w2, w2, w0
ffff0000000e1540:	b9000082 	str	w2, [x4]
  	*GPIO_LEV1 = level << (pin-32);
ffff0000000e1544:	1ac02020 	lsl	w0, w1, w0
ffff0000000e1548:	b9000060 	str	w0, [x3]
  }
}
ffff0000000e154c:	d65f03c0 	ret
  	*GPIO_SET1 = 1 << (pin-32);
ffff0000000e1550:	51008000 	sub	w0, w0, #0x20
ffff0000000e1554:	929ffbe4 	mov	x4, #0xffffffffffff0020    	// #-65504
ffff0000000e1558:	f2bfe404 	movk	x4, #0xff20, lsl #16
ffff0000000e155c:	52800022 	mov	w2, #0x1                   	// #1
  	*GPIO_LEV1 = level << (pin-32);
ffff0000000e1560:	929ff8e3 	mov	x3, #0xffffffffffff0038    	// #-65480
ffff0000000e1564:	f2bfe403 	movk	x3, #0xff20, lsl #16
  	*GPIO_SET1 = 1 << (pin-32);
ffff0000000e1568:	1ac02042 	lsl	w2, w2, w0
ffff0000000e156c:	b9000082 	str	w2, [x4]
  	*GPIO_LEV1 = level << (pin-32);
ffff0000000e1570:	1ac02020 	lsl	w0, w1, w0
ffff0000000e1574:	b9000060 	str	w0, [x3]
}
ffff0000000e1578:	d65f03c0 	ret
ffff0000000e157c:	00000000 	.inst	0x00000000 ; undefined

ffff0000000e1580 <traffic_lights_init>:
#include "TrafficLights.h"
#include "GPIO.h"

void traffic_lights_init() {
ffff0000000e1580:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    gpio_mode(9, GPIO_MODE_OUTPUT);
ffff0000000e1584:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e1588:	52800120 	mov	w0, #0x9                   	// #9
void traffic_lights_init() {
ffff0000000e158c:	910003fd 	mov	x29, sp
    gpio_mode(9, GPIO_MODE_OUTPUT);
ffff0000000e1590:	97ffff8c 	bl	ffff0000000e13c0 <gpio_mode>
    gpio_mode(10, GPIO_MODE_OUTPUT);
ffff0000000e1594:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e1598:	52800140 	mov	w0, #0xa                   	// #10
ffff0000000e159c:	97ffff89 	bl	ffff0000000e13c0 <gpio_mode>
    gpio_mode(11, GPIO_MODE_OUTPUT);
}
ffff0000000e15a0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    gpio_mode(11, GPIO_MODE_OUTPUT);
ffff0000000e15a4:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e15a8:	52800160 	mov	w0, #0xb                   	// #11
ffff0000000e15ac:	17ffff85 	b	ffff0000000e13c0 <gpio_mode>

ffff0000000e15b0 <traffic_light_red_on>:

void traffic_light_red_on() {
    gpio_set(9, GPIO_LEVEL_HIGH);
ffff0000000e15b0:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e15b4:	52800120 	mov	w0, #0x9                   	// #9
ffff0000000e15b8:	17ffffda 	b	ffff0000000e1520 <gpio_set>
ffff0000000e15bc:	d503201f 	nop

ffff0000000e15c0 <traffic_light_yellow_on>:
}

void traffic_light_yellow_on() {
    gpio_set(10, GPIO_LEVEL_HIGH);
ffff0000000e15c0:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e15c4:	52800140 	mov	w0, #0xa                   	// #10
ffff0000000e15c8:	17ffffd6 	b	ffff0000000e1520 <gpio_set>
ffff0000000e15cc:	d503201f 	nop

ffff0000000e15d0 <traffic_light_green_on>:
}

void traffic_light_green_on() {
    gpio_set(11, GPIO_LEVEL_HIGH);
ffff0000000e15d0:	52800021 	mov	w1, #0x1                   	// #1
ffff0000000e15d4:	52800160 	mov	w0, #0xb                   	// #11
ffff0000000e15d8:	17ffffd2 	b	ffff0000000e1520 <gpio_set>
ffff0000000e15dc:	00000000 	.inst	0x00000000 ; undefined

ffff0000000e15e0 <uart_setup>:
#include "GPIO.h"
#include "UART.h"

volatile void uart_setup() {
ffff0000000e15e0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
  register uint32_t r;

  // Enable UART
  *AUX_STATE |= 1;
ffff0000000e15e4:	9295ff61 	mov	x1, #0xffffffffffff5004    	// #-45052
ffff0000000e15e8:	f2bfe421 	movk	x1, #0xff21, lsl #16
volatile void uart_setup() {
ffff0000000e15ec:	910003fd 	mov	x29, sp
  *AUX_STATE |= 1;
ffff0000000e15f0:	b9400020 	ldr	w0, [x1]

  // Disable interrupts for RX and TX.
  // Disable access to the MS 8 bits of baud rate.
  *AUX_MU_IER_REG = 0;
ffff0000000e15f4:	9295f762 	mov	x2, #0xffffffffffff5044    	// #-44988
ffff0000000e15f8:	f2bfe422 	movk	x2, #0xff21, lsl #16
  *AUX_STATE |= 1;
ffff0000000e15fc:	32000000 	orr	w0, w0, #0x1

  // Disable the UART transmitter + receiver
  // This is probably to prevent data flow while changing settings.
  *AUX_MU_CNTL_REG = 0;
ffff0000000e1600:	9295f3e7 	mov	x7, #0xffffffffffff5060    	// #-44960
ffff0000000e1604:	f2bfe427 	movk	x7, #0xff21, lsl #16
  *AUX_STATE |= 1;
ffff0000000e1608:	b9000020 	str	w0, [x1]

  // Enable 8-bit mode on UART
  *AUX_MU_LCR_REG = 0x3;
ffff0000000e160c:	9295f663 	mov	x3, #0xffffffffffff504c    	// #-44980
ffff0000000e1610:	f2bfe423 	movk	x3, #0xff21, lsl #16
  *AUX_MU_IER_REG = 0;
ffff0000000e1614:	b900005f 	str	wzr, [x2]

  // Set RTS line to low
  *AUX_MU_MCR_REG = 0x0;
ffff0000000e1618:	9295f5e5 	mov	x5, #0xffffffffffff5050    	// #-44976
ffff0000000e161c:	f2bfe425 	movk	x5, #0xff21, lsl #16
  *AUX_MU_CNTL_REG = 0;
ffff0000000e1620:	b90000ff 	str	wzr, [x7]
  *AUX_MU_LCR_REG = 0x3;
ffff0000000e1624:	52800066 	mov	w6, #0x3                   	// #3

  // Clear the FIFO
  *AUX_MU_IIR_REG = 0xc6;
ffff0000000e1628:	9295f6e4 	mov	x4, #0xffffffffffff5048    	// #-44984
ffff0000000e162c:	f2bfe424 	movk	x4, #0xff21, lsl #16
  *AUX_MU_LCR_REG = 0x3;
ffff0000000e1630:	b9000066 	str	w6, [x3]
  *AUX_MU_IIR_REG = 0xc6;
ffff0000000e1634:	528018c0 	mov	w0, #0xc6                  	// #198
  *AUX_MU_MCR_REG = 0x0;
ffff0000000e1638:	b90000bf 	str	wzr, [x5]
  // UART is oversampled 8x
  // Baudrate = (System Clock Speed/(8*(Baud + 1))
  // We want Baudrate = 115200
  // We know System Clock Speed = 250,000,000
  // From the formula, we get Baud = 270
  *AUX_MU_BAUD = 270;
ffff0000000e163c:	528021c3 	mov	w3, #0x10e                 	// #270
  *AUX_MU_IIR_REG = 0xc6;
ffff0000000e1640:	b9000080 	str	w0, [x4]

  // Enable TXD1 on pin 14 of GPIO
  gpio_mode(14, GPIO_MODE_ALT5);
ffff0000000e1644:	52800041 	mov	w1, #0x2                   	// #2
  *AUX_MU_BAUD = 270;
ffff0000000e1648:	b9002443 	str	w3, [x2, #36]
  gpio_mode(14, GPIO_MODE_ALT5);
ffff0000000e164c:	528001c0 	mov	w0, #0xe                   	// #14
ffff0000000e1650:	97ffff5c 	bl	ffff0000000e13c0 <gpio_mode>

  // Enable RXD1 on pin 15 of GPIO
  gpio_mode(15, GPIO_MODE_ALT5);
ffff0000000e1654:	52800041 	mov	w1, #0x2                   	// #2
ffff0000000e1658:	528001e0 	mov	w0, #0xf                   	// #15
ffff0000000e165c:	97ffff59 	bl	ffff0000000e13c0 <gpio_mode>

  // Control the actuation of both pins
  *GPIO_PUD = 0;
ffff0000000e1660:	929fed61 	mov	x1, #0xffffffffffff0094    	// #-65388
ffff0000000e1664:	f2bfe401 	movk	x1, #0xff20, lsl #16
ffff0000000e1668:	528012c0 	mov	w0, #0x96                  	// #150
ffff0000000e166c:	b900003f 	str	wzr, [x1]

  // Run some clock cycles
  r=150; while(r--) { asm volatile("nop"); }
ffff0000000e1670:	d503201f 	nop
ffff0000000e1674:	71000400 	subs	w0, w0, #0x1
ffff0000000e1678:	54ffffc1 	b.ne	ffff0000000e1670 <uart_setup+0x90>  // b.any

  *GPIO_PUD_CLK0 = (1<<14)|(1<<15);
ffff0000000e167c:	929fece1 	mov	x1, #0xffffffffffff0098    	// #-65384
ffff0000000e1680:	f2bfe401 	movk	x1, #0xff20, lsl #16
ffff0000000e1684:	52980002 	mov	w2, #0xc000                	// #49152
ffff0000000e1688:	528012c0 	mov	w0, #0x96                  	// #150
ffff0000000e168c:	b9000022 	str	w2, [x1]

  // Run some clock cycles
  r=150; while(r--) { asm volatile("nop"); }
ffff0000000e1690:	d503201f 	nop
ffff0000000e1694:	71000400 	subs	w0, w0, #0x1
ffff0000000e1698:	54ffffc1 	b.ne	ffff0000000e1690 <uart_setup+0xb0>  // b.any

  *GPIO_PUD_CLK0 = 0;
ffff0000000e169c:	929fece2 	mov	x2, #0xffffffffffff0098    	// #-65384
ffff0000000e16a0:	f2bfe402 	movk	x2, #0xff20, lsl #16

  // Enable the UART transmitter + receiver. We should be good to go at this point.
  *AUX_MU_CNTL_REG = 3;
ffff0000000e16a4:	9295f3e0 	mov	x0, #0xffffffffffff5060    	// #-44960
ffff0000000e16a8:	f2bfe420 	movk	x0, #0xff21, lsl #16
  *GPIO_PUD_CLK0 = 0;
ffff0000000e16ac:	b900005f 	str	wzr, [x2]
  *AUX_MU_CNTL_REG = 3;
ffff0000000e16b0:	52800061 	mov	w1, #0x3                   	// #3
ffff0000000e16b4:	b9000001 	str	w1, [x0]
}
ffff0000000e16b8:	a8c17bfd 	ldp	x29, x30, [sp], #16
ffff0000000e16bc:	d65f03c0 	ret

ffff0000000e16c0 <uart_output_flush>:

volatile void uart_output_flush() {
  // Busy wait until transmitter is idle
  do {asm volatile("nop");} while (!(*AUX_MU_LSR_REG & 0x20));
ffff0000000e16c0:	9295f561 	mov	x1, #0xffffffffffff5054    	// #-44972
ffff0000000e16c4:	f2bfe421 	movk	x1, #0xff21, lsl #16
ffff0000000e16c8:	d503201f 	nop
ffff0000000e16cc:	b9400020 	ldr	w0, [x1]
ffff0000000e16d0:	362fffc0 	tbz	w0, #5, ffff0000000e16c8 <uart_output_flush+0x8>
}
ffff0000000e16d4:	d65f03c0 	ret
ffff0000000e16d8:	d503201f 	nop
ffff0000000e16dc:	d503201f 	nop

ffff0000000e16e0 <uart_output>:
  do {asm volatile("nop");} while (!(*AUX_MU_LSR_REG & 0x20));
ffff0000000e16e0:	9295f562 	mov	x2, #0xffffffffffff5054    	// #-44972
ffff0000000e16e4:	f2bfe422 	movk	x2, #0xff21, lsl #16
ffff0000000e16e8:	d503201f 	nop
ffff0000000e16ec:	b9400041 	ldr	w1, [x2]
ffff0000000e16f0:	362fffc1 	tbz	w1, #5, ffff0000000e16e8 <uart_output+0x8>

volatile void uart_output(uint32_t letter) {
  uart_output_flush();
  *AUX_MU_IO_REG = letter;
ffff0000000e16f4:	9295f7e1 	mov	x1, #0xffffffffffff5040    	// #-44992
ffff0000000e16f8:	f2bfe421 	movk	x1, #0xff21, lsl #16
ffff0000000e16fc:	b9000020 	str	w0, [x1]
}
ffff0000000e1700:	d65f03c0 	ret
ffff0000000e1704:	d503201f 	nop
ffff0000000e1708:	d503201f 	nop
ffff0000000e170c:	d503201f 	nop

ffff0000000e1710 <uart_input_flush>:

volatile void uart_input_flush() {
  // Busy wait until FIFO holds at least 1 symbol
  do {asm volatile("nop");} while (!(*AUX_MU_LSR_REG & 0x1));
ffff0000000e1710:	9295f561 	mov	x1, #0xffffffffffff5054    	// #-44972
ffff0000000e1714:	f2bfe421 	movk	x1, #0xff21, lsl #16
ffff0000000e1718:	d503201f 	nop
ffff0000000e171c:	b9400020 	ldr	w0, [x1]
ffff0000000e1720:	3607ffc0 	tbz	w0, #0, ffff0000000e1718 <uart_input_flush+0x8>
}
ffff0000000e1724:	d65f03c0 	ret
ffff0000000e1728:	d503201f 	nop
ffff0000000e172c:	d503201f 	nop

ffff0000000e1730 <uart_input>:
  do {asm volatile("nop");} while (!(*AUX_MU_LSR_REG & 0x1));
ffff0000000e1730:	9295f561 	mov	x1, #0xffffffffffff5054    	// #-44972
ffff0000000e1734:	f2bfe421 	movk	x1, #0xff21, lsl #16
ffff0000000e1738:	d503201f 	nop
ffff0000000e173c:	b9400020 	ldr	w0, [x1]
ffff0000000e1740:	3607ffc0 	tbz	w0, #0, ffff0000000e1738 <uart_input+0x8>

volatile uint32_t uart_input() {
  uart_input_flush();
  return *AUX_MU_IO_REG;
ffff0000000e1744:	9295f7e0 	mov	x0, #0xffffffffffff5040    	// #-44992
ffff0000000e1748:	f2bfe420 	movk	x0, #0xff21, lsl #16
ffff0000000e174c:	b9400000 	ldr	w0, [x0]
}
ffff0000000e1750:	d65f03c0 	ret
	...

ffff0000000e1760 <frame_buffer_init>:
#include "Exceptions.h"
#include "VirtualMemory.h"

extern uint64_t test_translation(uint64_t value);

void frame_buffer_init(uint32_t desired_width, uint32_t desired_height) {
ffff0000000e1760:	a9b37bfd 	stp	x29, x30, [sp, #-208]!
	uint32_t desired_x_offset = 0;
	uint32_t desired_y_offset = 0;

	uint32_t __attribute__((aligned(16))) message[31];
	// message header
	message[0] = sizeof(message);
ffff0000000e1764:	d2800f82 	mov	x2, #0x7c                  	// #124
void frame_buffer_init(uint32_t desired_width, uint32_t desired_height) {
ffff0000000e1768:	910003fd 	mov	x29, sp
ffff0000000e176c:	f9000bf3 	str	x19, [sp, #16]
ffff0000000e1770:	2a0103f3 	mov	w19, w1
	message[0] = sizeof(message);
ffff0000000e1774:	d2900061 	mov	x1, #0x8003                	// #32771
ffff0000000e1778:	f2a00081 	movk	x1, #0x4, lsl #16
ffff0000000e177c:	f2c00101 	movk	x1, #0x8, lsl #32
ffff0000000e1780:	f9002fa1 	str	x1, [x29, #88]
	message[5] = desired_width;
	message[6] = desired_height;

	// SET VIRTUAL WIDTH/HEIGHT
	// header
	message[7] = 0x00048004;
ffff0000000e1784:	91000421 	add	x1, x1, #0x1
	message[0] = sizeof(message);
ffff0000000e1788:	f9002ba2 	str	x2, [x29, #80]
	message[7] = 0x00048004;
ffff0000000e178c:	f806c3a1 	stur	x1, [x29, #108]
	message[12] = 0x00048009;
	message[13] = 8;
	message[14] = 0;

	// data
	message[15] = desired_x_offset;
ffff0000000e1790:	d2d000a2 	mov	x2, #0x800500000000        	// #140758963191808
	message[12] = 0x00048009;
ffff0000000e1794:	91001421 	add	x1, x1, #0x5
	message[15] = desired_x_offset;
ffff0000000e1798:	f2e00082 	movk	x2, #0x4, lsl #48
	message[12] = 0x00048009;
ffff0000000e179c:	f90043a1 	str	x1, [x29, #128]
	message[16] = desired_y_offset;

	// SET DEPTH
	// header
	message[17] = 0x00048005;
ffff0000000e17a0:	d2800081 	mov	x1, #0x4                   	// #4
	message[15] = desired_x_offset;
ffff0000000e17a4:	f9004ba2 	str	x2, [x29, #144]
	message[18] = 4;
	message[19] = 0;
ffff0000000e17a8:	d2800402 	mov	x2, #0x20                  	// #32
	message[17] = 0x00048005;
ffff0000000e17ac:	f9004fa1 	str	x1, [x29, #152]
	// data
	message[20] = desired_depth;	// bits per pixel

	// ALLOCATE THE BUFFER
	// header
	message[21] = 0x00040001;
ffff0000000e17b0:	d2800101 	mov	x1, #0x8                   	// #8
void frame_buffer_init(uint32_t desired_width, uint32_t desired_height) {
ffff0000000e17b4:	f90013f5 	str	x21, [sp, #32]
	message[19] = 0;
ffff0000000e17b8:	f2c00022 	movk	x2, #0x1, lsl #32
ffff0000000e17bc:	f2e00082 	movk	x2, #0x4, lsl #48
ffff0000000e17c0:	f90053a2 	str	x2, [x29, #160]
void frame_buffer_init(uint32_t desired_width, uint32_t desired_height) {
ffff0000000e17c4:	2a0003f5 	mov	w21, w0
	message[21] = 0x00040001;
ffff0000000e17c8:	f90057a1 	str	x1, [x29, #168]

	// end tag
	message[30] = 0;

	// write to mailbox
	mailbox_write(&message[0]);
ffff0000000e17cc:	910143a0 	add	x0, x29, #0x50
	message[25] = 0;			// frame buffer size in bytes
ffff0000000e17d0:	d2800101 	mov	x1, #0x8                   	// #8
ffff0000000e17d4:	f2a00081 	movk	x1, #0x4, lsl #16
ffff0000000e17d8:	f2c00081 	movk	x1, #0x4, lsl #32
	message[23] = 0;
ffff0000000e17dc:	d2a00022 	mov	x2, #0x10000               	// #65536
	message[4] = 0;
ffff0000000e17e0:	b90063bf 	str	wzr, [x29, #96]
	message[6] = desired_height;
ffff0000000e17e4:	290ccfb5 	stp	w21, w19, [x29, #100]
	message[8] = 8;
ffff0000000e17e8:	b90077bf 	str	wzr, [x29, #116]
	message[11] = desired_height;
ffff0000000e17ec:	290f4fb5 	stp	w21, w19, [x29, #120]
	message[13] = 8;
ffff0000000e17f0:	f90047bf 	str	xzr, [x29, #136]
	message[23] = 0;
ffff0000000e17f4:	f9005ba2 	str	x2, [x29, #176]
	message[25] = 0;			// frame buffer size in bytes
ffff0000000e17f8:	f9005fa1 	str	x1, [x29, #184]
	message[27] = 4;
ffff0000000e17fc:	f90063bf 	str	xzr, [x29, #192]
	message[29] = 0;		// pitch
ffff0000000e1800:	b900cbbf 	str	wzr, [x29, #200]
	mailbox_write(&message[0]);
ffff0000000e1804:	94000343 	bl	ffff0000000e2510 <mailbox_write>

	// wait until read is possible
	mailbox_wait_read();
ffff0000000e1808:	94000352 	bl	ffff0000000e2550 <mailbox_wait_read>
ffff0000000e180c:	f9000fb4 	str	x20, [x29, #24]

	// Make sure no errors occurred!
	if (message[1] != 0x80000000) {
ffff0000000e1810:	b94057a1 	ldr	w1, [x29, #84]
ffff0000000e1814:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e1818:	6b00003f 	cmp	w1, w0
ffff0000000e181c:	54000f81 	b.ne	ffff0000000e1a0c <frame_buffer_init+0x2ac>  // b.any
ffff0000000e1820:	f90023b9 	str	x25, [x29, #64]
		error("Errors found!");
	}

	// Set up the globals
	frame_buffer_width = message[10];
ffff0000000e1824:	b0000039 	adrp	x25, ffff0000000e6000 <FONT+0x790>
	frame_buffer_height = message[11];
ffff0000000e1828:	294f07a0 	ldp	w0, w1, [x29, #120]
ffff0000000e182c:	a90363b7 	stp	x23, x24, [x29, #48]
ffff0000000e1830:	b0000038 	adrp	x24, ffff0000000e6000 <FONT+0x790>
	frame_buffer_width = message[10];
ffff0000000e1834:	b908bb20 	str	w0, [x25, #2232]
	frame_buffer_physical_base_address = message[24] & FRAME_BUFFER_PADDR_MASK;
ffff0000000e1838:	b0000037 	adrp	x23, ffff0000000e6000 <FONT+0x790>
	frame_buffer_size = message[25];
	frame_buffer_pitch = message[29];
ffff0000000e183c:	b0000024 	adrp	x4, ffff0000000e6000 <FONT+0x790>
	frame_buffer_height = message[11];
ffff0000000e1840:	b908c301 	str	w1, [x24, #2240]
	frame_buffer_size = message[25];
ffff0000000e1844:	b0000034 	adrp	x20, ffff0000000e6000 <FONT+0x790>
ffff0000000e1848:	295607a0 	ldp	w0, w1, [x29, #176]
ffff0000000e184c:	b908c681 	str	w1, [x20, #2244]
	frame_buffer_pitch = message[29];
ffff0000000e1850:	b940c7a5 	ldr	w5, [x29, #196]
	frame_buffer_physical_base_address = message[24] & FRAME_BUFFER_PADDR_MASK;
ffff0000000e1854:	12007400 	and	w0, w0, #0x3fffffff
ffff0000000e1858:	b908cae0 	str	w0, [x23, #2248]
	frame_buffer_depth = message[20];
ffff0000000e185c:	b0000020 	adrp	x0, ffff0000000e6000 <FONT+0x790>
ffff0000000e1860:	b940a3a2 	ldr	w2, [x29, #160]
	uint32_t physical_width = message[5];
	uint32_t physical_height = message[6];
	uint32_t actual_x_offset = message[15];
	uint32_t actual_y_offset = message[16];

	if (desired_width != frame_buffer_width || desired_height != frame_buffer_height) {
ffff0000000e1864:	b948bb23 	ldr	w3, [x25, #2232]
	frame_buffer_pitch = message[29];
ffff0000000e1868:	b908cc85 	str	w5, [x4, #2252]
	frame_buffer_depth = message[20];
ffff0000000e186c:	b908bc02 	str	w2, [x0, #2236]
	if (desired_width != frame_buffer_width || desired_height != frame_buffer_height) {
ffff0000000e1870:	6b15007f 	cmp	w3, w21
	uint32_t actual_y_offset = message[16];
ffff0000000e1874:	b94093a6 	ldr	w6, [x29, #144]
	uint32_t physical_height = message[6];
ffff0000000e1878:	294c93a5 	ldp	w5, w4, [x29, #100]
	uint32_t actual_x_offset = message[15];
ffff0000000e187c:	b9408fa0 	ldr	w0, [x29, #140]
	if (desired_width != frame_buffer_width || desired_height != frame_buffer_height) {
ffff0000000e1880:	54000a01 	b.ne	ffff0000000e19c0 <frame_buffer_init+0x260>  // b.any
ffff0000000e1884:	b948c303 	ldr	w3, [x24, #2240]
ffff0000000e1888:	6b13007f 	cmp	w3, w19
ffff0000000e188c:	540009a1 	b.ne	ffff0000000e19c0 <frame_buffer_init+0x260>  // b.any
		error("Width/Height are not what was desired");
	}

	// For now, physical and virtual dimensions are the same.
	if (physical_width != frame_buffer_width || physical_height != frame_buffer_height) {
ffff0000000e1890:	b948bb23 	ldr	w3, [x25, #2232]
ffff0000000e1894:	6b05007f 	cmp	w3, w5
ffff0000000e1898:	540009c1 	b.ne	ffff0000000e19d0 <frame_buffer_init+0x270>  // b.any
ffff0000000e189c:	b948c303 	ldr	w3, [x24, #2240]
ffff0000000e18a0:	6b04007f 	cmp	w3, w4
ffff0000000e18a4:	54000961 	b.ne	ffff0000000e19d0 <frame_buffer_init+0x270>  // b.any
		error("Physical and virtual dimensions are not the same!");
	}

	if (desired_depth != frame_buffer_depth) {
ffff0000000e18a8:	7100805f 	cmp	w2, #0x20
ffff0000000e18ac:	540009a1 	b.ne	ffff0000000e19e0 <frame_buffer_init+0x280>  // b.any
		error("Depth is not what was desired");
	}

	if (desired_x_offset != actual_x_offset || desired_y_offset != actual_y_offset) {
ffff0000000e18b0:	2a060000 	orr	w0, w0, w6
ffff0000000e18b4:	350009e0 	cbnz	w0, ffff0000000e19f0 <frame_buffer_init+0x290>
		error("Offsets are not what was desired");
	}

	if (frame_buffer_physical_base_address & 0xFFFF) {
ffff0000000e18b8:	b948cae0 	ldr	w0, [x23, #2248]
ffff0000000e18bc:	f90017b6 	str	x22, [x29, #40]
ffff0000000e18c0:	12003c00 	and	w0, w0, #0xffff
ffff0000000e18c4:	350009e0 	cbnz	w0, ffff0000000e1a00 <frame_buffer_init+0x2a0>
		error("Frame buffer physical address misaligned");
	}

	uintptr_t base_address = allocate_from_lower_l3(frame_buffer_physical_base_address, frame_buffer_size);
ffff0000000e18c8:	b948cae0 	ldr	w0, [x23, #2248]
	uintptr_t end_address = base_address + frame_buffer_size - 1;
	frame_buffer_virtual_base_address = (unsigned char*) base_address;


	println("   ################################################################");
ffff0000000e18cc:	f0000015 	adrp	x21, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e18d0:	913b02b5 	add	x21, x21, #0xec0
	uintptr_t base_address = allocate_from_lower_l3(frame_buffer_physical_base_address, frame_buffer_size);
ffff0000000e18d4:	2a0003e0 	mov	w0, w0
ffff0000000e18d8:	940006da 	bl	ffff0000000e3440 <allocate_from_lower_l3>
	frame_buffer_virtual_base_address = (unsigned char*) base_address;
ffff0000000e18dc:	b0000021 	adrp	x1, ffff0000000e6000 <FONT+0x790>
	uintptr_t base_address = allocate_from_lower_l3(frame_buffer_physical_base_address, frame_buffer_size);
ffff0000000e18e0:	aa0003f6 	mov	x22, x0
	uintptr_t end_address = base_address + frame_buffer_size - 1;
ffff0000000e18e4:	b948c693 	ldr	w19, [x20, #2244]
	println("   ################################################################");
ffff0000000e18e8:	aa1503e0 	mov	x0, x21
	frame_buffer_virtual_base_address = (unsigned char*) base_address;
ffff0000000e18ec:	f9045836 	str	x22, [x1, #2224]
	println("   ################################################################");
ffff0000000e18f0:	97fffaf8 	bl	ffff0000000e04d0 <println>
	printf("   # Frame Buffer Resolution                 = %u x %u\n", frame_buffer_width, frame_buffer_height);
ffff0000000e18f4:	b948bb21 	ldr	w1, [x25, #2232]
ffff0000000e18f8:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e18fc:	913c2000 	add	x0, x0, #0xf08
ffff0000000e1900:	b948c302 	ldr	w2, [x24, #2240]
	uintptr_t end_address = base_address + frame_buffer_size - 1;
ffff0000000e1904:	d1000673 	sub	x19, x19, #0x1
ffff0000000e1908:	8b160273 	add	x19, x19, x22
	printf("   # Frame Buffer Resolution                 = %u x %u\n", frame_buffer_width, frame_buffer_height);
ffff0000000e190c:	97fffd51 	bl	ffff0000000e0e50 <printf>
	printf("   # Frame Buffer Size                       = %u\n", frame_buffer_size);
ffff0000000e1910:	b948c681 	ldr	w1, [x20, #2244]
ffff0000000e1914:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1918:	913d0000 	add	x0, x0, #0xf40
ffff0000000e191c:	97fffd4d 	bl	ffff0000000e0e50 <printf>
	printf("   # Frame Buffer Physical Base Address      = %u\n", frame_buffer_physical_base_address);
ffff0000000e1920:	b948cae1 	ldr	w1, [x23, #2248]
ffff0000000e1924:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1928:	913de000 	add	x0, x0, #0xf78
ffff0000000e192c:	97fffd49 	bl	ffff0000000e0e50 <printf>
	printf("   # Frame Buffer Physical End Address       = %u\n", frame_buffer_physical_base_address + frame_buffer_size - 1);
ffff0000000e1930:	b948c682 	ldr	w2, [x20, #2244]
ffff0000000e1934:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1938:	913ec000 	add	x0, x0, #0xfb0
ffff0000000e193c:	b948cae1 	ldr	w1, [x23, #2248]
ffff0000000e1940:	0b020021 	add	w1, w1, w2
ffff0000000e1944:	51000421 	sub	w1, w1, #0x1
ffff0000000e1948:	97fffd42 	bl	ffff0000000e0e50 <printf>
	printf("   # Frame Buffer Virtual Base Address       = %u\n", base_address);
ffff0000000e194c:	aa1603e1 	mov	x1, x22
ffff0000000e1950:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1954:	913fa000 	add	x0, x0, #0xfe8
ffff0000000e1958:	97fffd3e 	bl	ffff0000000e0e50 <printf>
	printf("   # Frame Buffer Virtual End Address        = %u\n", end_address);
ffff0000000e195c:	aa1303e1 	mov	x1, x19
ffff0000000e1960:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1964:	91008000 	add	x0, x0, #0x20
ffff0000000e1968:	97fffd3a 	bl	ffff0000000e0e50 <printf>
	printf("   # Test Translation (Virtual Base Address) = %u\n", test_translation(base_address));
ffff0000000e196c:	aa1603e0 	mov	x0, x22
ffff0000000e1970:	94000bac 	bl	ffff0000000e4820 <test_translation>
ffff0000000e1974:	aa0003e1 	mov	x1, x0
ffff0000000e1978:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e197c:	91016000 	add	x0, x0, #0x58
ffff0000000e1980:	97fffd34 	bl	ffff0000000e0e50 <printf>
	printf("   # Test Translation (Virtual End Address)  = %u\n", test_translation(end_address));
ffff0000000e1984:	aa1303e0 	mov	x0, x19
ffff0000000e1988:	94000ba6 	bl	ffff0000000e4820 <test_translation>
ffff0000000e198c:	aa0003e1 	mov	x1, x0
ffff0000000e1990:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1994:	91024000 	add	x0, x0, #0x90
ffff0000000e1998:	97fffd2e 	bl	ffff0000000e0e50 <printf>
	println("   ################################################################");
ffff0000000e199c:	aa1503e0 	mov	x0, x21
ffff0000000e19a0:	97fffacc 	bl	ffff0000000e04d0 <println>
ffff0000000e19a4:	f9400fb4 	ldr	x20, [x29, #24]
ffff0000000e19a8:	a942dfb6 	ldp	x22, x23, [x29, #40]
ffff0000000e19ac:	a943e7b8 	ldp	x24, x25, [x29, #56]
}
ffff0000000e19b0:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e19b4:	f94013f5 	ldr	x21, [sp, #32]
ffff0000000e19b8:	a8cd7bfd 	ldp	x29, x30, [sp], #208
ffff0000000e19bc:	d65f03c0 	ret
		error("Width/Height are not what was desired");
ffff0000000e19c0:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e19c4:	9137a000 	add	x0, x0, #0xde8
ffff0000000e19c8:	f90017b6 	str	x22, [x29, #40]
ffff0000000e19cc:	97fffe25 	bl	ffff0000000e1260 <error>
		error("Physical and virtual dimensions are not the same!");
ffff0000000e19d0:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e19d4:	91384000 	add	x0, x0, #0xe10
ffff0000000e19d8:	f90017b6 	str	x22, [x29, #40]
ffff0000000e19dc:	97fffe21 	bl	ffff0000000e1260 <error>
		error("Depth is not what was desired");
ffff0000000e19e0:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e19e4:	91392000 	add	x0, x0, #0xe48
ffff0000000e19e8:	f90017b6 	str	x22, [x29, #40]
ffff0000000e19ec:	97fffe1d 	bl	ffff0000000e1260 <error>
		error("Offsets are not what was desired");
ffff0000000e19f0:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e19f4:	9139a000 	add	x0, x0, #0xe68
ffff0000000e19f8:	f90017b6 	str	x22, [x29, #40]
ffff0000000e19fc:	97fffe19 	bl	ffff0000000e1260 <error>
		error("Frame buffer physical address misaligned");
ffff0000000e1a00:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1a04:	913a4000 	add	x0, x0, #0xe90
ffff0000000e1a08:	97fffe16 	bl	ffff0000000e1260 <error>
		error("Errors found!");
ffff0000000e1a0c:	f0000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e1a10:	91376000 	add	x0, x0, #0xdd8
ffff0000000e1a14:	a902dfb6 	stp	x22, x23, [x29, #40]
ffff0000000e1a18:	a903e7b8 	stp	x24, x25, [x29, #56]
ffff0000000e1a1c:	97fffe11 	bl	ffff0000000e1260 <error>

ffff0000000e1a20 <print_hex_8>:

void print_hex_8(char value) {
ffff0000000e1a20:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
ffff0000000e1a24:	910003fd 	mov	x29, sp
ffff0000000e1a28:	f9000bf3 	str	x19, [sp, #16]
ffff0000000e1a2c:	12001c13 	and	w19, w0, #0xff
	uint32_t hex1 = value >> 4;
ffff0000000e1a30:	53047e60 	lsr	w0, w19, #4
	if (hex1 >= 10) {
ffff0000000e1a34:	7100241f 	cmp	w0, #0x9
ffff0000000e1a38:	54000149 	b.ls	ffff0000000e1a60 <print_hex_8+0x40>  // b.plast
		putc(hex1 - 10 + 'a');
ffff0000000e1a3c:	11015c00 	add	w0, w0, #0x57
ffff0000000e1a40:	12000e73 	and	w19, w19, #0xf
ffff0000000e1a44:	97fff99f 	bl	ffff0000000e00c0 <putc>
	} else {
		putc(hex1 + '0');
	}
	uint32_t hex2 = value & 0xf;
	if (hex2 >= 10) {
ffff0000000e1a48:	7100267f 	cmp	w19, #0x9
ffff0000000e1a4c:	54000148 	b.hi	ffff0000000e1a74 <print_hex_8+0x54>  // b.pmore
		putc(hex2 - 10 + 'a');
	} else {
		putc(hex2 + '0');
ffff0000000e1a50:	1100c260 	add	w0, w19, #0x30
	}
}
ffff0000000e1a54:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e1a58:	a8c27bfd 	ldp	x29, x30, [sp], #32
		putc(hex2 + '0');
ffff0000000e1a5c:	17fff999 	b	ffff0000000e00c0 <putc>
		putc(hex1 + '0');
ffff0000000e1a60:	1100c000 	add	w0, w0, #0x30
ffff0000000e1a64:	12000e73 	and	w19, w19, #0xf
ffff0000000e1a68:	97fff996 	bl	ffff0000000e00c0 <putc>
	if (hex2 >= 10) {
ffff0000000e1a6c:	7100267f 	cmp	w19, #0x9
ffff0000000e1a70:	54ffff09 	b.ls	ffff0000000e1a50 <print_hex_8+0x30>  // b.plast
		putc(hex2 - 10 + 'a');
ffff0000000e1a74:	11015e60 	add	w0, w19, #0x57
}
ffff0000000e1a78:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e1a7c:	a8c27bfd 	ldp	x29, x30, [sp], #32
		putc(hex2 - 10 + 'a');
ffff0000000e1a80:	17fff990 	b	ffff0000000e00c0 <putc>
ffff0000000e1a84:	d503201f 	nop
ffff0000000e1a88:	d503201f 	nop
ffff0000000e1a8c:	d503201f 	nop

ffff0000000e1a90 <frame_buffer_get_edid_block>:

uint32_t frame_buffer_get_edid_block(uint32_t block_num) {
ffff0000000e1a90:	a9b37bfd 	stp	x29, x30, [sp, #-208]!
	uint32_t __attribute__((aligned(16))) message[40];
	// message header
	message[0] = sizeof(message);
ffff0000000e1a94:	d2800401 	mov	x1, #0x20                  	// #32
ffff0000000e1a98:	f2a00061 	movk	x1, #0x3, lsl #16
uint32_t frame_buffer_get_edid_block(uint32_t block_num) {
ffff0000000e1a9c:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);
ffff0000000e1aa0:	f2c01101 	movk	x1, #0x88, lsl #32
ffff0000000e1aa4:	d2801402 	mov	x2, #0xa0                  	// #160
	message[2] = 0x00030020;
	message[3] = 136;
	message[4] = 0;

	// tag 1 data
	message[5] = block_num;		// block number
ffff0000000e1aa8:	290803bf 	stp	wzr, w0, [x29, #64]

	// end tag
	message[39] = 0;

	// write to mailbox
	mailbox_write(&message[0]);
ffff0000000e1aac:	9100c3a0 	add	x0, x29, #0x30
	message[0] = sizeof(message);
ffff0000000e1ab0:	a90307a2 	stp	x2, x1, [x29, #48]
	message[6] = 0;		        // status
ffff0000000e1ab4:	b9004bbf 	str	wzr, [x29, #72]
	message[39] = 0;
ffff0000000e1ab8:	b900cfbf 	str	wzr, [x29, #204]
	mailbox_write(&message[0]);
ffff0000000e1abc:	94000295 	bl	ffff0000000e2510 <mailbox_write>

	// wait until read is possible
	mailbox_wait_read();
ffff0000000e1ac0:	940002a4 	bl	ffff0000000e2550 <mailbox_wait_read>

	if (message[1] != 0x80000000) {
ffff0000000e1ac4:	b94037a1 	ldr	w1, [x29, #52]
ffff0000000e1ac8:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e1acc:	6b00003f 	cmp	w1, w0
ffff0000000e1ad0:	540006c1 	b.ne	ffff0000000e1ba8 <frame_buffer_get_edid_block+0x118>  // b.any
		error("Could not get EDID block.");
	}

	printf("EDID Block Status = %u\n", message[6]);
ffff0000000e1ad4:	b9404ba1 	ldr	w1, [x29, #72]
ffff0000000e1ad8:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1adc:	9103a000 	add	x0, x0, #0xe8
ffff0000000e1ae0:	97fffcdc 	bl	ffff0000000e0e50 <printf>

	if (message[6] > 0) {
ffff0000000e1ae4:	b9404ba1 	ldr	w1, [x29, #72]
		return 0;
ffff0000000e1ae8:	52800000 	mov	w0, #0x0                   	// #0
	if (message[6] > 0) {
ffff0000000e1aec:	350005a1 	cbnz	w1, ffff0000000e1ba0 <frame_buffer_get_edid_block+0x110>
ffff0000000e1af0:	a90153b3 	stp	x19, x20, [x29, #16]
	}

	char* edid = (char*) &message[7];
	for (uint32_t i = 1; i <= 128; i++) {
ffff0000000e1af4:	52800034 	mov	w20, #0x1                   	// #1
ffff0000000e1af8:	f90013b5 	str	x21, [x29, #32]
	char* edid = (char*) &message[7];
ffff0000000e1afc:	910133b5 	add	x21, x29, #0x4c
ffff0000000e1b00:	14000011 	b	ffff0000000e1b44 <frame_buffer_get_edid_block+0xb4>
ffff0000000e1b04:	d503201f 	nop
		putc(hex1 - 10 + 'a');
ffff0000000e1b08:	11015c00 	add	w0, w0, #0x57
ffff0000000e1b0c:	12000e73 	and	w19, w19, #0xf
ffff0000000e1b10:	97fff96c 	bl	ffff0000000e00c0 <putc>
	if (hex2 >= 10) {
ffff0000000e1b14:	7100267f 	cmp	w19, #0x9
ffff0000000e1b18:	54000288 	b.hi	ffff0000000e1b68 <frame_buffer_get_edid_block+0xd8>  // b.pmore
		putc(hex2 + '0');
ffff0000000e1b1c:	1100c260 	add	w0, w19, #0x30
ffff0000000e1b20:	97fff968 	bl	ffff0000000e00c0 <putc>
		print_hex_8(*edid);
		putc(' ');
ffff0000000e1b24:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e1b28:	97fff966 	bl	ffff0000000e00c0 <putc>
		if (i % 32 == 0) {
ffff0000000e1b2c:	f240129f 	tst	x20, #0x1f
ffff0000000e1b30:	54000280 	b.eq	ffff0000000e1b80 <frame_buffer_get_edid_block+0xf0>  // b.none
	for (uint32_t i = 1; i <= 128; i++) {
ffff0000000e1b34:	11000694 	add	w20, w20, #0x1
			newline();
		}
		edid += 1;
ffff0000000e1b38:	910006b5 	add	x21, x21, #0x1
	for (uint32_t i = 1; i <= 128; i++) {
ffff0000000e1b3c:	7102069f 	cmp	w20, #0x81
ffff0000000e1b40:	540002a0 	b.eq	ffff0000000e1b94 <frame_buffer_get_edid_block+0x104>  // b.none
		print_hex_8(*edid);
ffff0000000e1b44:	394002b3 	ldrb	w19, [x21]
	uint32_t hex1 = value >> 4;
ffff0000000e1b48:	53047e60 	lsr	w0, w19, #4
	if (hex1 >= 10) {
ffff0000000e1b4c:	7100241f 	cmp	w0, #0x9
ffff0000000e1b50:	54fffdc8 	b.hi	ffff0000000e1b08 <frame_buffer_get_edid_block+0x78>  // b.pmore
		putc(hex1 + '0');
ffff0000000e1b54:	1100c000 	add	w0, w0, #0x30
ffff0000000e1b58:	12000e73 	and	w19, w19, #0xf
ffff0000000e1b5c:	97fff959 	bl	ffff0000000e00c0 <putc>
	if (hex2 >= 10) {
ffff0000000e1b60:	7100267f 	cmp	w19, #0x9
ffff0000000e1b64:	54fffdc9 	b.ls	ffff0000000e1b1c <frame_buffer_get_edid_block+0x8c>  // b.plast
		putc(hex2 - 10 + 'a');
ffff0000000e1b68:	11015e60 	add	w0, w19, #0x57
ffff0000000e1b6c:	97fff955 	bl	ffff0000000e00c0 <putc>
		putc(' ');
ffff0000000e1b70:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e1b74:	97fff953 	bl	ffff0000000e00c0 <putc>
		if (i % 32 == 0) {
ffff0000000e1b78:	f240129f 	tst	x20, #0x1f
ffff0000000e1b7c:	54fffdc1 	b.ne	ffff0000000e1b34 <frame_buffer_get_edid_block+0xa4>  // b.any
			newline();
ffff0000000e1b80:	97fffa48 	bl	ffff0000000e04a0 <newline>
	for (uint32_t i = 1; i <= 128; i++) {
ffff0000000e1b84:	11000694 	add	w20, w20, #0x1
		edid += 1;
ffff0000000e1b88:	910006b5 	add	x21, x21, #0x1
	for (uint32_t i = 1; i <= 128; i++) {
ffff0000000e1b8c:	7102069f 	cmp	w20, #0x81
ffff0000000e1b90:	54fffda1 	b.ne	ffff0000000e1b44 <frame_buffer_get_edid_block+0xb4>  // b.any
	}
	return 1;
ffff0000000e1b94:	a94153b3 	ldp	x19, x20, [x29, #16]
ffff0000000e1b98:	52800020 	mov	w0, #0x1                   	// #1
ffff0000000e1b9c:	f94013b5 	ldr	x21, [x29, #32]
}
ffff0000000e1ba0:	a8cd7bfd 	ldp	x29, x30, [sp], #208
ffff0000000e1ba4:	d65f03c0 	ret
		error("Could not get EDID block.");
ffff0000000e1ba8:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1bac:	91032000 	add	x0, x0, #0xc8
ffff0000000e1bb0:	a90153b3 	stp	x19, x20, [x29, #16]
ffff0000000e1bb4:	f90013b5 	str	x21, [x29, #32]
ffff0000000e1bb8:	97fffdaa 	bl	ffff0000000e1260 <error>
ffff0000000e1bbc:	d503201f 	nop

ffff0000000e1bc0 <frame_buffer_draw>:

volatile void frame_buffer_draw(uint32_t x, uint32_t y, uint32_t color) {
ffff0000000e1bc0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
ffff0000000e1bc4:	910003fd 	mov	x29, sp
ffff0000000e1bc8:	f9000bf3 	str	x19, [sp, #16]
	// TODO: Figure out why the math here is wrong...
	//       Something involving floating point operations failing.
	//       WTF? There are no floating point ops here.
	if (x >= frame_buffer_width) {
ffff0000000e1bcc:	b0000033 	adrp	x19, ffff0000000e6000 <FONT+0x790>
ffff0000000e1bd0:	b948ba63 	ldr	w3, [x19, #2232]
ffff0000000e1bd4:	6b00007f 	cmp	w3, w0
ffff0000000e1bd8:	540003e9 	b.ls	ffff0000000e1c54 <frame_buffer_draw+0x94>  // b.plast
		printf("Asked to draw (x) = %u\n", x);
		printf("Frame Buffer Width = %u\n", frame_buffer_width);
		error("x failed");
	}
	if (y >= frame_buffer_height) {
ffff0000000e1bdc:	b0000033 	adrp	x19, ffff0000000e6000 <FONT+0x790>
ffff0000000e1be0:	b948c263 	ldr	w3, [x19, #2240]
ffff0000000e1be4:	2a0103e4 	mov	w4, w1
ffff0000000e1be8:	6b01007f 	cmp	w3, w1
ffff0000000e1bec:	540004a9 	b.ls	ffff0000000e1c80 <frame_buffer_draw+0xc0>  // b.plast
		printf("Asked to draw (y) = %u\n", y);
		printf("Frame Buffer Height = %u\n", frame_buffer_height);
		error("y failed");
	}
	uint32_t pixel_offset = ( x * (frame_buffer_depth >> 3) ) + ( y * frame_buffer_pitch );
ffff0000000e1bf0:	b0000021 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e1bf4:	b948bc23 	ldr	w3, [x1, #2236]
ffff0000000e1bf8:	b0000021 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e1bfc:	b948cc27 	ldr	w7, [x1, #2252]

	unsigned char R = color & 0xFF;
	unsigned char G = color >> 8 & 0xFF;
	unsigned char B = color >> 16 & 0xFF;
	unsigned char A = 0xFF;
	frame_buffer_virtual_base_address[pixel_offset]   = R;
ffff0000000e1c00:	b0000021 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e1c04:	f9445829 	ldr	x9, [x1, #2224]
	uint32_t pixel_offset = ( x * (frame_buffer_depth >> 3) ) + ( y * frame_buffer_pitch );
ffff0000000e1c08:	53037c63 	lsr	w3, w3, #3
	unsigned char G = color >> 8 & 0xFF;
ffff0000000e1c0c:	53087c48 	lsr	w8, w2, #8
	unsigned char B = color >> 16 & 0xFF;
ffff0000000e1c10:	53107c46 	lsr	w6, w2, #16
	frame_buffer_virtual_base_address[pixel_offset+1] = G;
	frame_buffer_virtual_base_address[pixel_offset+2] = B;
	frame_buffer_virtual_base_address[pixel_offset+3] = A;
ffff0000000e1c14:	12800005 	mov	w5, #0xffffffff            	// #-1
	uint32_t pixel_offset = ( x * (frame_buffer_depth >> 3) ) + ( y * frame_buffer_pitch );
ffff0000000e1c18:	1b077c84 	mul	w4, w4, w7
ffff0000000e1c1c:	1b001060 	madd	w0, w3, w0, w4
	frame_buffer_virtual_base_address[pixel_offset+1] = G;
ffff0000000e1c20:	11000407 	add	w7, w0, #0x1
	frame_buffer_virtual_base_address[pixel_offset+2] = B;
ffff0000000e1c24:	11000804 	add	w4, w0, #0x2
	frame_buffer_virtual_base_address[pixel_offset+3] = A;
ffff0000000e1c28:	11000c03 	add	w3, w0, #0x3
	unsigned char R = color & 0xFF;
ffff0000000e1c2c:	38204922 	strb	w2, [x9, w0, uxtw]
	frame_buffer_virtual_base_address[pixel_offset+1] = G;
ffff0000000e1c30:	f9445820 	ldr	x0, [x1, #2224]
	unsigned char G = color >> 8 & 0xFF;
ffff0000000e1c34:	38274808 	strb	w8, [x0, w7, uxtw]
	frame_buffer_virtual_base_address[pixel_offset+2] = B;
ffff0000000e1c38:	f9445820 	ldr	x0, [x1, #2224]
	unsigned char B = color >> 16 & 0xFF;
ffff0000000e1c3c:	38244806 	strb	w6, [x0, w4, uxtw]
	frame_buffer_virtual_base_address[pixel_offset+3] = A;
ffff0000000e1c40:	f9445820 	ldr	x0, [x1, #2224]
ffff0000000e1c44:	38234805 	strb	w5, [x0, w3, uxtw]
ffff0000000e1c48:	f9400bf3 	ldr	x19, [sp, #16]
ffff0000000e1c4c:	a8c27bfd 	ldp	x29, x30, [sp], #32
ffff0000000e1c50:	d65f03c0 	ret
		printf("Asked to draw (x) = %u\n", x);
ffff0000000e1c54:	2a0003e1 	mov	w1, w0
ffff0000000e1c58:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1c5c:	91040000 	add	x0, x0, #0x100
ffff0000000e1c60:	97fffc7c 	bl	ffff0000000e0e50 <printf>
		printf("Frame Buffer Width = %u\n", frame_buffer_width);
ffff0000000e1c64:	b948ba61 	ldr	w1, [x19, #2232]
ffff0000000e1c68:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1c6c:	91046000 	add	x0, x0, #0x118
ffff0000000e1c70:	97fffc78 	bl	ffff0000000e0e50 <printf>
		error("x failed");
ffff0000000e1c74:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1c78:	9104e000 	add	x0, x0, #0x138
ffff0000000e1c7c:	97fffd79 	bl	ffff0000000e1260 <error>
		printf("Asked to draw (y) = %u\n", y);
ffff0000000e1c80:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1c84:	91052000 	add	x0, x0, #0x148
ffff0000000e1c88:	97fffc72 	bl	ffff0000000e0e50 <printf>
		printf("Frame Buffer Height = %u\n", frame_buffer_height);
ffff0000000e1c8c:	b948c261 	ldr	w1, [x19, #2240]
ffff0000000e1c90:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1c94:	91058000 	add	x0, x0, #0x160
ffff0000000e1c98:	97fffc6e 	bl	ffff0000000e0e50 <printf>
		error("y failed");
ffff0000000e1c9c:	90000020 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e1ca0:	91060000 	add	x0, x0, #0x180
ffff0000000e1ca4:	97fffd6f 	bl	ffff0000000e1260 <error>
	...

ffff0000000e1cb0 <frame_buffer_draw_cross>:

uint32_t current_x = 0;
uint32_t current_y = 0;

// This formula is flawed.
void frame_buffer_draw_cross(uint32_t x_offset, uint32_t y_offset, uint32_t size, uint32_t line_thickness, uint32_t color) {
ffff0000000e1cb0:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
ffff0000000e1cb4:	910003fd 	mov	x29, sp
ffff0000000e1cb8:	f9002ffc 	str	x28, [sp, #88]
ffff0000000e1cbc:	0b00005c 	add	w28, w2, w0
	for (uint32_t y = 0; y < size; y++) {
ffff0000000e1cc0:	340004a2 	cbz	w2, ffff0000000e1d54 <frame_buffer_draw_cross+0xa4>
ffff0000000e1cc4:	34000483 	cbz	w3, ffff0000000e1d54 <frame_buffer_draw_cross+0xa4>
ffff0000000e1cc8:	a9025bb5 	stp	x21, x22, [x29, #32]
ffff0000000e1ccc:	2a0403f6 	mov	w22, w4
ffff0000000e1cd0:	a90363b7 	stp	x23, x24, [x29, #48]
ffff0000000e1cd4:	2a0003f8 	mov	w24, w0
ffff0000000e1cd8:	a9046bb9 	stp	x25, x26, [x29, #64]
ffff0000000e1cdc:	2a1c03f9 	mov	w25, w28
ffff0000000e1ce0:	f9002bbb 	str	x27, [x29, #80]
ffff0000000e1ce4:	4b00003a 	sub	w26, w1, w0
ffff0000000e1ce8:	2a0303fb 	mov	w27, w3
ffff0000000e1cec:	a90153b3 	stp	x19, x20, [x29, #16]
ffff0000000e1cf0:	0b180355 	add	w21, w26, w24
ffff0000000e1cf4:	0b1b0317 	add	w23, w24, w27
void frame_buffer_draw_cross(uint32_t x_offset, uint32_t y_offset, uint32_t size, uint32_t line_thickness, uint32_t color) {
ffff0000000e1cf8:	2a1903f4 	mov	w20, w25
ffff0000000e1cfc:	2a1803f3 	mov	w19, w24
		for (uint32_t x = 0; x < line_thickness; x++) {
			frame_buffer_draw(x_offset + x + y, y_offset + y, color);
ffff0000000e1d00:	2a1303e0 	mov	w0, w19
ffff0000000e1d04:	2a1603e2 	mov	w2, w22
ffff0000000e1d08:	2a1503e1 	mov	w1, w21
ffff0000000e1d0c:	97ffffad 	bl	ffff0000000e1bc0 <frame_buffer_draw>
			frame_buffer_draw(x_offset + size - x - y, y_offset + y, color);
ffff0000000e1d10:	2a1403e0 	mov	w0, w20
ffff0000000e1d14:	11000673 	add	w19, w19, #0x1
ffff0000000e1d18:	2a1603e2 	mov	w2, w22
ffff0000000e1d1c:	2a1503e1 	mov	w1, w21
ffff0000000e1d20:	97ffffa8 	bl	ffff0000000e1bc0 <frame_buffer_draw>
ffff0000000e1d24:	51000694 	sub	w20, w20, #0x1
		for (uint32_t x = 0; x < line_thickness; x++) {
ffff0000000e1d28:	6b17027f 	cmp	w19, w23
ffff0000000e1d2c:	54fffea1 	b.ne	ffff0000000e1d00 <frame_buffer_draw_cross+0x50>  // b.any
ffff0000000e1d30:	11000718 	add	w24, w24, #0x1
ffff0000000e1d34:	51000739 	sub	w25, w25, #0x1
	for (uint32_t y = 0; y < size; y++) {
ffff0000000e1d38:	6b1c031f 	cmp	w24, w28
ffff0000000e1d3c:	54fffda1 	b.ne	ffff0000000e1cf0 <frame_buffer_draw_cross+0x40>  // b.any
ffff0000000e1d40:	a94153b3 	ldp	x19, x20, [x29, #16]
ffff0000000e1d44:	a9425bb5 	ldp	x21, x22, [x29, #32]
ffff0000000e1d48:	a94363b7 	ldp	x23, x24, [x29, #48]
ffff0000000e1d4c:	a9446bb9 	ldp	x25, x26, [x29, #64]
ffff0000000e1d50:	f9402bbb 	ldr	x27, [x29, #80]
		}
	}
}
ffff0000000e1d54:	f9402ffc 	ldr	x28, [sp, #88]
ffff0000000e1d58:	a8c67bfd 	ldp	x29, x30, [sp], #96
ffff0000000e1d5c:	d65f03c0 	ret

ffff0000000e1d60 <frame_buffer_draw_cross_full_screen>:

void frame_buffer_draw_cross_full_screen(uint32_t color) {
ffff0000000e1d60:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
ffff0000000e1d64:	910003fd 	mov	x29, sp
ffff0000000e1d68:	a903e7f8 	stp	x24, x25, [sp, #56]
	uint64_t x_offset = (frame_buffer_width - frame_buffer_height) / 2;
ffff0000000e1d6c:	b0000021 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e1d70:	b948b821 	ldr	w1, [x1, #2232]
ffff0000000e1d74:	b0000022 	adrp	x2, ffff0000000e6000 <FONT+0x790>
ffff0000000e1d78:	b948c058 	ldr	w24, [x2, #2240]
	frame_buffer_draw_cross(
ffff0000000e1d7c:	b948c059 	ldr	w25, [x2, #2240]
	uint64_t x_offset = (frame_buffer_width - frame_buffer_height) / 2;
ffff0000000e1d80:	4b180021 	sub	w1, w1, w24
void frame_buffer_draw_cross_full_screen(uint32_t color) {
ffff0000000e1d84:	f90027fa 	str	x26, [sp, #72]
	uint64_t x_offset = (frame_buffer_width - frame_buffer_height) / 2;
ffff0000000e1d88:	53017c38 	lsr	w24, w1, #1
ffff0000000e1d8c:	0b19031a 	add	w26, w24, w25
	for (uint32_t y = 0; y < size; y++) {
ffff0000000e1d90:	340003f9 	cbz	w25, ffff0000000e1e0c <frame_buffer_draw_cross_full_screen+0xac>
ffff0000000e1d94:	a9025bb5 	stp	x21, x22, [x29, #32]
ffff0000000e1d98:	2a0003f6 	mov	w22, w0
ffff0000000e1d9c:	f9002bbb 	str	x27, [x29, #80]
ffff0000000e1da0:	1100531b 	add	w27, w24, #0x14
ffff0000000e1da4:	a90153b3 	stp	x19, x20, [x29, #16]
ffff0000000e1da8:	52800015 	mov	w21, #0x0                   	// #0
ffff0000000e1dac:	f9001bb7 	str	x23, [x29, #48]
ffff0000000e1db0:	0b150313 	add	w19, w24, w21
ffff0000000e1db4:	4b150354 	sub	w20, w26, w21
ffff0000000e1db8:	0b150377 	add	w23, w27, w21
ffff0000000e1dbc:	d503201f 	nop
			frame_buffer_draw(x_offset + x + y, y_offset + y, color);
ffff0000000e1dc0:	2a1303e0 	mov	w0, w19
ffff0000000e1dc4:	2a1603e2 	mov	w2, w22
ffff0000000e1dc8:	2a1503e1 	mov	w1, w21
ffff0000000e1dcc:	97ffff7d 	bl	ffff0000000e1bc0 <frame_buffer_draw>
			frame_buffer_draw(x_offset + size - x - y, y_offset + y, color);
ffff0000000e1dd0:	2a1403e0 	mov	w0, w20
ffff0000000e1dd4:	11000673 	add	w19, w19, #0x1
ffff0000000e1dd8:	2a1603e2 	mov	w2, w22
ffff0000000e1ddc:	2a1503e1 	mov	w1, w21
ffff0000000e1de0:	97ffff78 	bl	ffff0000000e1bc0 <frame_buffer_draw>
ffff0000000e1de4:	51000694 	sub	w20, w20, #0x1
		for (uint32_t x = 0; x < line_thickness; x++) {
ffff0000000e1de8:	6b17027f 	cmp	w19, w23
ffff0000000e1dec:	54fffea1 	b.ne	ffff0000000e1dc0 <frame_buffer_draw_cross_full_screen+0x60>  // b.any
	for (uint32_t y = 0; y < size; y++) {
ffff0000000e1df0:	110006b5 	add	w21, w21, #0x1
ffff0000000e1df4:	6b15033f 	cmp	w25, w21
ffff0000000e1df8:	54fffdc1 	b.ne	ffff0000000e1db0 <frame_buffer_draw_cross_full_screen+0x50>  // b.any
ffff0000000e1dfc:	a94153b3 	ldp	x19, x20, [x29, #16]
ffff0000000e1e00:	a9425bb5 	ldp	x21, x22, [x29, #32]
ffff0000000e1e04:	f9401bb7 	ldr	x23, [x29, #48]
ffff0000000e1e08:	f9402bbb 	ldr	x27, [x29, #80]
		0,
		frame_buffer_height,
		20,
		color
	);
}
ffff0000000e1e0c:	a943e7f8 	ldp	x24, x25, [sp, #56]
ffff0000000e1e10:	f94027fa 	ldr	x26, [sp, #72]
ffff0000000e1e14:	a8c67bfd 	ldp	x29, x30, [sp], #96
ffff0000000e1e18:	d65f03c0 	ret
ffff0000000e1e1c:	d503201f 	nop

ffff0000000e1e20 <frame_buffer_draw_cross_corner>:

void frame_buffer_draw_cross_corner(uint32_t color) {
ffff0000000e1e20:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
ffff0000000e1e24:	910003fd 	mov	x29, sp
ffff0000000e1e28:	a9025bf5 	stp	x21, x22, [sp, #32]
ffff0000000e1e2c:	2a0003f6 	mov	w22, w0
ffff0000000e1e30:	a90153f3 	stp	x19, x20, [sp, #16]
	for (uint32_t y = 0; y < size; y++) {
ffff0000000e1e34:	52800015 	mov	w21, #0x0                   	// #0
void frame_buffer_draw_cross_corner(uint32_t color) {
ffff0000000e1e38:	a90363f7 	stp	x23, x24, [sp, #48]
ffff0000000e1e3c:	52800c98 	mov	w24, #0x64                  	// #100
ffff0000000e1e40:	4b150314 	sub	w20, w24, w21
ffff0000000e1e44:	110052b7 	add	w23, w21, #0x14
ffff0000000e1e48:	2a1503f3 	mov	w19, w21
ffff0000000e1e4c:	d503201f 	nop
			frame_buffer_draw(x_offset + x + y, y_offset + y, color);
ffff0000000e1e50:	2a1303e0 	mov	w0, w19
ffff0000000e1e54:	2a1603e2 	mov	w2, w22
ffff0000000e1e58:	2a1503e1 	mov	w1, w21
ffff0000000e1e5c:	97ffff59 	bl	ffff0000000e1bc0 <frame_buffer_draw>
			frame_buffer_draw(x_offset + size - x - y, y_offset + y, color);
ffff0000000e1e60:	2a1403e0 	mov	w0, w20
ffff0000000e1e64:	11000673 	add	w19, w19, #0x1
ffff0000000e1e68:	2a1603e2 	mov	w2, w22
ffff0000000e1e6c:	2a1503e1 	mov	w1, w21
ffff0000000e1e70:	97ffff54 	bl	ffff0000000e1bc0 <frame_buffer_draw>
ffff0000000e1e74:	51000694 	sub	w20, w20, #0x1
		for (uint32_t x = 0; x < line_thickness; x++) {
ffff0000000e1e78:	6b17027f 	cmp	w19, w23
ffff0000000e1e7c:	54fffea1 	b.ne	ffff0000000e1e50 <frame_buffer_draw_cross_corner+0x30>  // b.any
	for (uint32_t y = 0; y < size; y++) {
ffff0000000e1e80:	110006b5 	add	w21, w21, #0x1
ffff0000000e1e84:	710192bf 	cmp	w21, #0x64
ffff0000000e1e88:	54fffdc1 	b.ne	ffff0000000e1e40 <frame_buffer_draw_cross_corner+0x20>  // b.any
		0,
		100,
		20,
		color
	);
}
ffff0000000e1e8c:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e1e90:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e1e94:	a94363f7 	ldp	x23, x24, [sp, #48]
ffff0000000e1e98:	a8c47bfd 	ldp	x29, x30, [sp], #64
ffff0000000e1e9c:	d65f03c0 	ret

ffff0000000e1ea0 <frame_buffer_draw_square_corner>:

void frame_buffer_draw_square_corner(uint32_t color) {
ffff0000000e1ea0:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
ffff0000000e1ea4:	910003fd 	mov	x29, sp
ffff0000000e1ea8:	a9025bf5 	stp	x21, x22, [sp, #32]
ffff0000000e1eac:	b0000036 	adrp	x22, ffff0000000e6000 <FONT+0x790>
ffff0000000e1eb0:	a90363f7 	stp	x23, x24, [sp, #48]
ffff0000000e1eb4:	b0000035 	adrp	x21, ffff0000000e6000 <FONT+0x790>
ffff0000000e1eb8:	2a0003f7 	mov	w23, w0
	for (uint64_t y = 0; y < 100; y++) {
		for (uint64_t x = 0; x < 100; x++) {
			frame_buffer_draw(frame_buffer_width - 100 + x, frame_buffer_height - 100 + y, color);
ffff0000000e1ebc:	9122e2d6 	add	x22, x22, #0x8b8
ffff0000000e1ec0:	912302b5 	add	x21, x21, #0x8c0
void frame_buffer_draw_square_corner(uint32_t color) {
ffff0000000e1ec4:	a90153f3 	stp	x19, x20, [sp, #16]
	for (uint64_t y = 0; y < 100; y++) {
ffff0000000e1ec8:	d2800018 	mov	x24, #0x0                   	// #0
ffff0000000e1ecc:	d503201f 	nop
ffff0000000e1ed0:	2a1803f4 	mov	w20, w24
		for (uint64_t x = 0; x < 100; x++) {
ffff0000000e1ed4:	d2800013 	mov	x19, #0x0                   	// #0
			frame_buffer_draw(frame_buffer_width - 100 + x, frame_buffer_height - 100 + y, color);
ffff0000000e1ed8:	b94002c0 	ldr	w0, [x22]
ffff0000000e1edc:	2a1703e2 	mov	w2, w23
ffff0000000e1ee0:	b94002a1 	ldr	w1, [x21]
ffff0000000e1ee4:	51019000 	sub	w0, w0, #0x64
ffff0000000e1ee8:	51019021 	sub	w1, w1, #0x64
ffff0000000e1eec:	0b130000 	add	w0, w0, w19
ffff0000000e1ef0:	0b140021 	add	w1, w1, w20
		for (uint64_t x = 0; x < 100; x++) {
ffff0000000e1ef4:	91000673 	add	x19, x19, #0x1
			frame_buffer_draw(frame_buffer_width - 100 + x, frame_buffer_height - 100 + y, color);
ffff0000000e1ef8:	97ffff32 	bl	ffff0000000e1bc0 <frame_buffer_draw>
		for (uint64_t x = 0; x < 100; x++) {
ffff0000000e1efc:	f101927f 	cmp	x19, #0x64
ffff0000000e1f00:	54fffec1 	b.ne	ffff0000000e1ed8 <frame_buffer_draw_square_corner+0x38>  // b.any
	for (uint64_t y = 0; y < 100; y++) {
ffff0000000e1f04:	91000718 	add	x24, x24, #0x1
ffff0000000e1f08:	f101931f 	cmp	x24, #0x64
ffff0000000e1f0c:	54fffe21 	b.ne	ffff0000000e1ed0 <frame_buffer_draw_square_corner+0x30>  // b.any
		}
	}
}
ffff0000000e1f10:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e1f14:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e1f18:	a94363f7 	ldp	x23, x24, [sp, #48]
ffff0000000e1f1c:	a8c47bfd 	ldp	x29, x30, [sp], #64
ffff0000000e1f20:	d65f03c0 	ret
ffff0000000e1f24:	d503201f 	nop
ffff0000000e1f28:	d503201f 	nop
ffff0000000e1f2c:	d503201f 	nop

ffff0000000e1f30 <frame_buffer_paint>:

void frame_buffer_paint(uint32_t color) {
ffff0000000e1f30:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
ffff0000000e1f34:	910003fd 	mov	x29, sp
ffff0000000e1f38:	f9001ff8 	str	x24, [sp, #56]
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e1f3c:	b0000038 	adrp	x24, ffff0000000e6000 <FONT+0x790>
ffff0000000e1f40:	b948c301 	ldr	w1, [x24, #2240]
ffff0000000e1f44:	34000381 	cbz	w1, ffff0000000e1fb4 <frame_buffer_paint+0x84>
ffff0000000e1f48:	a90153b3 	stp	x19, x20, [x29, #16]
ffff0000000e1f4c:	91230318 	add	x24, x24, #0x8c0
ffff0000000e1f50:	a9025bb5 	stp	x21, x22, [x29, #32]
ffff0000000e1f54:	b0000034 	adrp	x20, ffff0000000e6000 <FONT+0x790>
ffff0000000e1f58:	9122e294 	add	x20, x20, #0x8b8
ffff0000000e1f5c:	2a0003f6 	mov	w22, w0
ffff0000000e1f60:	f9001bb7 	str	x23, [x29, #48]
ffff0000000e1f64:	d2800017 	mov	x23, #0x0                   	// #0
		for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e1f68:	b9400280 	ldr	w0, [x20]
ffff0000000e1f6c:	2a1703f5 	mov	w21, w23
ffff0000000e1f70:	d2800013 	mov	x19, #0x0                   	// #0
ffff0000000e1f74:	34000120 	cbz	w0, ffff0000000e1f98 <frame_buffer_paint+0x68>
			frame_buffer_draw(x, y, color);
ffff0000000e1f78:	2a1303e0 	mov	w0, w19
ffff0000000e1f7c:	2a1603e2 	mov	w2, w22
ffff0000000e1f80:	2a1503e1 	mov	w1, w21
ffff0000000e1f84:	97ffff0f 	bl	ffff0000000e1bc0 <frame_buffer_draw>
		for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e1f88:	b9400280 	ldr	w0, [x20]
ffff0000000e1f8c:	91000673 	add	x19, x19, #0x1
ffff0000000e1f90:	eb20427f 	cmp	x19, w0, uxtw
ffff0000000e1f94:	54ffff23 	b.cc	ffff0000000e1f78 <frame_buffer_paint+0x48>  // b.lo, b.ul, b.last
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e1f98:	b9400300 	ldr	w0, [x24]
ffff0000000e1f9c:	910006f7 	add	x23, x23, #0x1
ffff0000000e1fa0:	eb2042ff 	cmp	x23, w0, uxtw
ffff0000000e1fa4:	54fffe23 	b.cc	ffff0000000e1f68 <frame_buffer_paint+0x38>  // b.lo, b.ul, b.last
ffff0000000e1fa8:	a94153b3 	ldp	x19, x20, [x29, #16]
ffff0000000e1fac:	a9425bb5 	ldp	x21, x22, [x29, #32]
ffff0000000e1fb0:	f9401bb7 	ldr	x23, [x29, #48]
		}
	}
}
ffff0000000e1fb4:	f9401ff8 	ldr	x24, [sp, #56]
ffff0000000e1fb8:	a8c47bfd 	ldp	x29, x30, [sp], #64
ffff0000000e1fbc:	d65f03c0 	ret

ffff0000000e1fc0 <frame_buffer_clear>:

void frame_buffer_clear() {
ffff0000000e1fc0:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
ffff0000000e1fc4:	910003fd 	mov	x29, sp
ffff0000000e1fc8:	f9001bf7 	str	x23, [sp, #48]
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e1fcc:	b0000037 	adrp	x23, ffff0000000e6000 <FONT+0x790>
ffff0000000e1fd0:	b948c2e0 	ldr	w0, [x23, #2240]
ffff0000000e1fd4:	34000320 	cbz	w0, ffff0000000e2038 <frame_buffer_clear+0x78>
ffff0000000e1fd8:	a90153b3 	stp	x19, x20, [x29, #16]
ffff0000000e1fdc:	912302f7 	add	x23, x23, #0x8c0
ffff0000000e1fe0:	b0000034 	adrp	x20, ffff0000000e6000 <FONT+0x790>
ffff0000000e1fe4:	9122e294 	add	x20, x20, #0x8b8
ffff0000000e1fe8:	a9025bb5 	stp	x21, x22, [x29, #32]
ffff0000000e1fec:	d2800016 	mov	x22, #0x0                   	// #0
		for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e1ff0:	b9400280 	ldr	w0, [x20]
ffff0000000e1ff4:	2a1603f5 	mov	w21, w22
ffff0000000e1ff8:	d2800013 	mov	x19, #0x0                   	// #0
ffff0000000e1ffc:	34000120 	cbz	w0, ffff0000000e2020 <frame_buffer_clear+0x60>
			frame_buffer_draw(x, y, color);
ffff0000000e2000:	2a1303e0 	mov	w0, w19
ffff0000000e2004:	5284d942 	mov	w2, #0x26ca                	// #9930
ffff0000000e2008:	2a1503e1 	mov	w1, w21
ffff0000000e200c:	97fffeed 	bl	ffff0000000e1bc0 <frame_buffer_draw>
		for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e2010:	b9400280 	ldr	w0, [x20]
ffff0000000e2014:	91000673 	add	x19, x19, #0x1
ffff0000000e2018:	eb20427f 	cmp	x19, w0, uxtw
ffff0000000e201c:	54ffff23 	b.cc	ffff0000000e2000 <frame_buffer_clear+0x40>  // b.lo, b.ul, b.last
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e2020:	b94002e0 	ldr	w0, [x23]
ffff0000000e2024:	910006d6 	add	x22, x22, #0x1
ffff0000000e2028:	eb2042df 	cmp	x22, w0, uxtw
ffff0000000e202c:	54fffe23 	b.cc	ffff0000000e1ff0 <frame_buffer_clear+0x30>  // b.lo, b.ul, b.last
ffff0000000e2030:	a94153b3 	ldp	x19, x20, [x29, #16]
ffff0000000e2034:	a9425bb5 	ldp	x21, x22, [x29, #32]
	frame_buffer_paint(FRAME_BUFFER_BACKGROUND);
	current_x = 0;
ffff0000000e2038:	90000020 	adrp	x0, ffff0000000e6000 <FONT+0x790>
ffff0000000e203c:	91220001 	add	x1, x0, #0x880
	current_y = 0;
}
ffff0000000e2040:	f9401bf7 	ldr	x23, [sp, #48]
	current_x = 0;
ffff0000000e2044:	b908801f 	str	wzr, [x0, #2176]
	current_y = 0;
ffff0000000e2048:	b900043f 	str	wzr, [x1, #4]
}
ffff0000000e204c:	a8c47bfd 	ldp	x29, x30, [sp], #64
ffff0000000e2050:	d65f03c0 	ret
ffff0000000e2054:	d503201f 	nop
ffff0000000e2058:	d503201f 	nop
ffff0000000e205c:	d503201f 	nop

ffff0000000e2060 <frame_buffer_draw_char>:

void frame_buffer_draw_char(uint32_t x, uint32_t y, uint8_t c, uint32_t color) {
ffff0000000e2060:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
ffff0000000e2064:	d37c1c42 	ubfiz	x2, x2, #4, #8
ffff0000000e2068:	910003fd 	mov	x29, sp
ffff0000000e206c:	a9025bf5 	stp	x21, x22, [sp, #32]
ffff0000000e2070:	f0000016 	adrp	x22, ffff0000000e5000 <main+0x7b0>
ffff0000000e2074:	9121c2d6 	add	x22, x22, #0x870
ffff0000000e2078:	a90363f7 	stp	x23, x24, [sp, #48]
ffff0000000e207c:	8b160056 	add	x22, x2, x22
ffff0000000e2080:	f90023f9 	str	x25, [sp, #64]
ffff0000000e2084:	2a0103f8 	mov	w24, w1
ffff0000000e2088:	2a0303f7 	mov	w23, w3
ffff0000000e208c:	11001c19 	add	w25, w0, #0x7
ffff0000000e2090:	a90153f3 	stp	x19, x20, [sp, #16]
ffff0000000e2094:	d2800015 	mov	x21, #0x0                   	// #0
ffff0000000e2098:	0b150314 	add	w20, w24, w21
ffff0000000e209c:	528000f3 	mov	w19, #0x7                   	// #7
	for (uint32_t y_offset = 0; y_offset < 16; y_offset++) {
		for (uint32_t x_offset = 0; x_offset < 8; x_offset++) {
			if ((FONT[c][y_offset] >> (7 - x_offset)) & 0x1) {
ffff0000000e20a0:	38756ac3 	ldrb	w3, [x22, x21]
ffff0000000e20a4:	4b130324 	sub	w4, w25, w19
				frame_buffer_draw(x + x_offset, y + y_offset, color);
ffff0000000e20a8:	2a1703e2 	mov	w2, w23
ffff0000000e20ac:	2a1403e1 	mov	w1, w20
ffff0000000e20b0:	2a0403e0 	mov	w0, w4
			if ((FONT[c][y_offset] >> (7 - x_offset)) & 0x1) {
ffff0000000e20b4:	1ad32863 	asr	w3, w3, w19
ffff0000000e20b8:	37000043 	tbnz	w3, #0, ffff0000000e20c0 <frame_buffer_draw_char+0x60>
			} else {
				frame_buffer_draw(x + x_offset, y + y_offset, FRAME_BUFFER_BACKGROUND);
ffff0000000e20bc:	5284d942 	mov	w2, #0x26ca                	// #9930
ffff0000000e20c0:	97fffec0 	bl	ffff0000000e1bc0 <frame_buffer_draw>
ffff0000000e20c4:	51000673 	sub	w19, w19, #0x1
		for (uint32_t x_offset = 0; x_offset < 8; x_offset++) {
ffff0000000e20c8:	3100067f 	cmn	w19, #0x1
ffff0000000e20cc:	54fffea1 	b.ne	ffff0000000e20a0 <frame_buffer_draw_char+0x40>  // b.any
ffff0000000e20d0:	910006b5 	add	x21, x21, #0x1
	for (uint32_t y_offset = 0; y_offset < 16; y_offset++) {
ffff0000000e20d4:	f10042bf 	cmp	x21, #0x10
ffff0000000e20d8:	54fffe01 	b.ne	ffff0000000e2098 <frame_buffer_draw_char+0x38>  // b.any
			}
		}
	}
}
ffff0000000e20dc:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e20e0:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e20e4:	a94363f7 	ldp	x23, x24, [sp, #48]
ffff0000000e20e8:	f94023f9 	ldr	x25, [sp, #64]
ffff0000000e20ec:	a8c57bfd 	ldp	x29, x30, [sp], #80
ffff0000000e20f0:	d65f03c0 	ret
ffff0000000e20f4:	d503201f 	nop
ffff0000000e20f8:	d503201f 	nop
ffff0000000e20fc:	d503201f 	nop

ffff0000000e2100 <frame_buffer_draw_border>:

void frame_buffer_draw_border(uint32_t color) {
ffff0000000e2100:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
ffff0000000e2104:	910003fd 	mov	x29, sp
ffff0000000e2108:	a90153f3 	stp	x19, x20, [sp, #16]
	uint32_t line_width = 1;
	for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e210c:	90000034 	adrp	x20, ffff0000000e6000 <FONT+0x790>
ffff0000000e2110:	b948ba81 	ldr	w1, [x20, #2232]
void frame_buffer_draw_border(uint32_t color) {
ffff0000000e2114:	f90013f5 	str	x21, [sp, #32]
ffff0000000e2118:	90000033 	adrp	x19, ffff0000000e6000 <FONT+0x790>
ffff0000000e211c:	2a0003f5 	mov	w21, w0
	for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e2120:	35000101 	cbnz	w1, ffff0000000e2140 <frame_buffer_draw_border+0x40>
		for (uint64_t y = 0; y < line_width; y++) {
			frame_buffer_draw(x, y, color);
			frame_buffer_draw(x, frame_buffer_height - y - 1, color);	
		}
	}
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e2124:	b948c260 	ldr	w0, [x19, #2240]
ffff0000000e2128:	35000380 	cbnz	w0, ffff0000000e2198 <frame_buffer_draw_border+0x98>
		for (uint64_t x = 0; x < line_width; x++) {
			frame_buffer_draw(x, y, color);
			frame_buffer_draw(frame_buffer_width - x - 1, y, color);
		}
	}
}
ffff0000000e212c:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e2130:	f94013f5 	ldr	x21, [sp, #32]
ffff0000000e2134:	a8c47bfd 	ldp	x29, x30, [sp], #64
ffff0000000e2138:	d65f03c0 	ret
ffff0000000e213c:	d503201f 	nop
ffff0000000e2140:	a902dfb6 	stp	x22, x23, [x29, #40]
	for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e2144:	9122e297 	add	x23, x20, #0x8b8
ffff0000000e2148:	f9001fb8 	str	x24, [x29, #56]
			frame_buffer_draw(x, frame_buffer_height - y - 1, color);	
ffff0000000e214c:	91230278 	add	x24, x19, #0x8c0
	for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e2150:	d2800016 	mov	x22, #0x0                   	// #0
			frame_buffer_draw(x, y, color);
ffff0000000e2154:	2a1603e0 	mov	w0, w22
ffff0000000e2158:	2a1503e2 	mov	w2, w21
ffff0000000e215c:	52800001 	mov	w1, #0x0                   	// #0
ffff0000000e2160:	97fffe98 	bl	ffff0000000e1bc0 <frame_buffer_draw>
			frame_buffer_draw(x, frame_buffer_height - y - 1, color);	
ffff0000000e2164:	b9400301 	ldr	w1, [x24]
ffff0000000e2168:	2a1603e0 	mov	w0, w22
ffff0000000e216c:	2a1503e2 	mov	w2, w21
	for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e2170:	910006d6 	add	x22, x22, #0x1
			frame_buffer_draw(x, frame_buffer_height - y - 1, color);	
ffff0000000e2174:	51000421 	sub	w1, w1, #0x1
ffff0000000e2178:	97fffe92 	bl	ffff0000000e1bc0 <frame_buffer_draw>
	for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e217c:	b94002e0 	ldr	w0, [x23]
ffff0000000e2180:	eb2042df 	cmp	x22, w0, uxtw
ffff0000000e2184:	54fffe83 	b.cc	ffff0000000e2154 <frame_buffer_draw_border+0x54>  // b.lo, b.ul, b.last
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e2188:	b948c260 	ldr	w0, [x19, #2240]
ffff0000000e218c:	a942dfb6 	ldp	x22, x23, [x29, #40]
ffff0000000e2190:	f9401fb8 	ldr	x24, [x29, #56]
ffff0000000e2194:	34fffcc0 	cbz	w0, ffff0000000e212c <frame_buffer_draw_border+0x2c>
			frame_buffer_draw(frame_buffer_width - x - 1, y, color);
ffff0000000e2198:	9122e294 	add	x20, x20, #0x8b8
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e219c:	91230273 	add	x19, x19, #0x8c0
ffff0000000e21a0:	f90017b6 	str	x22, [x29, #40]
ffff0000000e21a4:	d2800016 	mov	x22, #0x0                   	// #0
			frame_buffer_draw(x, y, color);
ffff0000000e21a8:	2a1603e1 	mov	w1, w22
ffff0000000e21ac:	2a1503e2 	mov	w2, w21
ffff0000000e21b0:	52800000 	mov	w0, #0x0                   	// #0
ffff0000000e21b4:	97fffe83 	bl	ffff0000000e1bc0 <frame_buffer_draw>
			frame_buffer_draw(frame_buffer_width - x - 1, y, color);
ffff0000000e21b8:	b9400280 	ldr	w0, [x20]
ffff0000000e21bc:	2a1603e1 	mov	w1, w22
ffff0000000e21c0:	2a1503e2 	mov	w2, w21
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e21c4:	910006d6 	add	x22, x22, #0x1
			frame_buffer_draw(frame_buffer_width - x - 1, y, color);
ffff0000000e21c8:	51000400 	sub	w0, w0, #0x1
ffff0000000e21cc:	97fffe7d 	bl	ffff0000000e1bc0 <frame_buffer_draw>
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e21d0:	b9400260 	ldr	w0, [x19]
ffff0000000e21d4:	eb2042df 	cmp	x22, w0, uxtw
ffff0000000e21d8:	54fffe83 	b.cc	ffff0000000e21a8 <frame_buffer_draw_border+0xa8>  // b.lo, b.ul, b.last
ffff0000000e21dc:	f94017b6 	ldr	x22, [x29, #40]
}
ffff0000000e21e0:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e21e4:	f94013f5 	ldr	x21, [sp, #32]
ffff0000000e21e8:	a8c47bfd 	ldp	x29, x30, [sp], #64
ffff0000000e21ec:	d65f03c0 	ret

ffff0000000e21f0 <frame_buffer_puti_64>:

// Prints a number to the bottom right of the screen
void frame_buffer_puti_64(uint64_t num) {
ffff0000000e21f0:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
	// At most 20 digits
	unsigned char c[20];
	uint32_t i = 0;

	do {
		c[i] = (num % 10) + '0';
ffff0000000e21f4:	b202e7e5 	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
ffff0000000e21f8:	f29999a5 	movk	x5, #0xcccd
void frame_buffer_puti_64(uint64_t num) {
ffff0000000e21fc:	910003fd 	mov	x29, sp
ffff0000000e2200:	a9046bf9 	stp	x25, x26, [sp, #64]
ffff0000000e2204:	910163b9 	add	x25, x29, #0x58
ffff0000000e2208:	a90153f3 	stp	x19, x20, [sp, #16]
ffff0000000e220c:	aa1903e4 	mov	x4, x25
ffff0000000e2210:	a9025bf5 	stp	x21, x22, [sp, #32]
ffff0000000e2214:	a90363f7 	stp	x23, x24, [sp, #48]
	uint32_t i = 0;
ffff0000000e2218:	52800018 	mov	w24, #0x0                   	// #0
ffff0000000e221c:	14000002 	b	ffff0000000e2224 <frame_buffer_puti_64+0x34>
		i+=1;
ffff0000000e2220:	2a0303f8 	mov	w24, w3
		c[i] = (num % 10) + '0';
ffff0000000e2224:	9bc57c02 	umulh	x2, x0, x5
		i+=1;
ffff0000000e2228:	11000703 	add	w3, w24, #0x1
		c[i] = (num % 10) + '0';
ffff0000000e222c:	d343fc42 	lsr	x2, x2, #3
ffff0000000e2230:	8b020841 	add	x1, x2, x2, lsl #2
		num = num / 10;
	} while (num != 0 || i == 20);
ffff0000000e2234:	f100005f 	cmp	x2, #0x0
		c[i] = (num % 10) + '0';
ffff0000000e2238:	cb010401 	sub	x1, x0, x1, lsl #1
		num = num / 10;
ffff0000000e223c:	aa0203e0 	mov	x0, x2
		c[i] = (num % 10) + '0';
ffff0000000e2240:	1100c021 	add	w1, w1, #0x30
ffff0000000e2244:	38001481 	strb	w1, [x4], #1
	} while (num != 0 || i == 20);
ffff0000000e2248:	1a9f07e1 	cset	w1, ne  // ne = any
ffff0000000e224c:	7100507f 	cmp	w3, #0x14
ffff0000000e2250:	1a9f1421 	csinc	w1, w1, wzr, ne  // ne = any
ffff0000000e2254:	35fffe61 	cbnz	w1, ffff0000000e2220 <frame_buffer_puti_64+0x30>
ffff0000000e2258:	f000001a 	adrp	x26, ffff0000000e5000 <main+0x7b0>
ffff0000000e225c:	9121c35a 	add	x26, x26, #0x870
ffff0000000e2260:	531d7318 	lsl	w24, w24, #3
ffff0000000e2264:	39400336 	ldrb	w22, [x25]
ffff0000000e2268:	11001f17 	add	w23, w24, #0x7

	for (uint32_t j = 0; j < i; j++) {
		frame_buffer_draw_char((i - j - 1) * 8, 0, c[j], 0xFF0000);
ffff0000000e226c:	d2800015 	mov	x21, #0x0                   	// #0
ffff0000000e2270:	8b161356 	add	x22, x26, x22, lsl #4
ffff0000000e2274:	d503201f 	nop
ffff0000000e2278:	2a1503f4 	mov	w20, w21
		i+=1;
ffff0000000e227c:	528000f3 	mov	w19, #0x7                   	// #7
			if ((FONT[c][y_offset] >> (7 - x_offset)) & 0x1) {
ffff0000000e2280:	38756ac3 	ldrb	w3, [x22, x21]
ffff0000000e2284:	4b1302e4 	sub	w4, w23, w19
				frame_buffer_draw(x + x_offset, y + y_offset, color);
ffff0000000e2288:	52a01fe2 	mov	w2, #0xff0000              	// #16711680
ffff0000000e228c:	2a1403e1 	mov	w1, w20
ffff0000000e2290:	2a0403e0 	mov	w0, w4
			if ((FONT[c][y_offset] >> (7 - x_offset)) & 0x1) {
ffff0000000e2294:	1ad32863 	asr	w3, w3, w19
ffff0000000e2298:	37000043 	tbnz	w3, #0, ffff0000000e22a0 <frame_buffer_puti_64+0xb0>
				frame_buffer_draw(x + x_offset, y + y_offset, FRAME_BUFFER_BACKGROUND);
ffff0000000e229c:	5284d942 	mov	w2, #0x26ca                	// #9930
ffff0000000e22a0:	97fffe48 	bl	ffff0000000e1bc0 <frame_buffer_draw>
ffff0000000e22a4:	51000673 	sub	w19, w19, #0x1
		for (uint32_t x_offset = 0; x_offset < 8; x_offset++) {
ffff0000000e22a8:	3100067f 	cmn	w19, #0x1
ffff0000000e22ac:	54fffea1 	b.ne	ffff0000000e2280 <frame_buffer_puti_64+0x90>  // b.any
ffff0000000e22b0:	910006b5 	add	x21, x21, #0x1
	for (uint32_t y_offset = 0; y_offset < 16; y_offset++) {
ffff0000000e22b4:	f10042bf 	cmp	x21, #0x10
ffff0000000e22b8:	54fffe01 	b.ne	ffff0000000e2278 <frame_buffer_puti_64+0x88>  // b.any
ffff0000000e22bc:	51002318 	sub	w24, w24, #0x8
ffff0000000e22c0:	91000739 	add	x25, x25, #0x1
	for (uint32_t j = 0; j < i; j++) {
ffff0000000e22c4:	3100231f 	cmn	w24, #0x8
ffff0000000e22c8:	54fffce1 	b.ne	ffff0000000e2264 <frame_buffer_puti_64+0x74>  // b.any
	}
}
ffff0000000e22cc:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e22d0:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e22d4:	a94363f7 	ldp	x23, x24, [sp, #48]
ffff0000000e22d8:	a9446bf9 	ldp	x25, x26, [sp, #64]
ffff0000000e22dc:	a8c77bfd 	ldp	x29, x30, [sp], #112
ffff0000000e22e0:	d65f03c0 	ret
ffff0000000e22e4:	d503201f 	nop
ffff0000000e22e8:	d503201f 	nop
ffff0000000e22ec:	d503201f 	nop

ffff0000000e22f0 <frame_buffer_putc>:

void frame_buffer_putc(uint8_t c, uint32_t color){
ffff0000000e22f0:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
ffff0000000e22f4:	12001c00 	and	w0, w0, #0xff
	switch (c) {
ffff0000000e22f8:	7100281f 	cmp	w0, #0xa
void frame_buffer_putc(uint8_t c, uint32_t color){
ffff0000000e22fc:	910003fd 	mov	x29, sp
ffff0000000e2300:	f9000ff4 	str	x20, [sp, #24]
ffff0000000e2304:	f90023f9 	str	x25, [sp, #64]
	switch (c) {
ffff0000000e2308:	54000f00 	b.eq	ffff0000000e24e8 <frame_buffer_putc+0x1f8>  // b.none
ffff0000000e230c:	7100341f 	cmp	w0, #0xd
ffff0000000e2310:	54000e00 	b.eq	ffff0000000e24d0 <frame_buffer_putc+0x1e0>  // b.none
ffff0000000e2314:	7100241f 	cmp	w0, #0x9
ffff0000000e2318:	54000740 	b.eq	ffff0000000e2400 <frame_buffer_putc+0x110>  // b.none
ffff0000000e231c:	a90363b7 	stp	x23, x24, [x29, #48]
ffff0000000e2320:	2a0103f7 	mov	w23, w1
		case '\r': {
			current_x = 0;
			break;
		}
		default: {
			frame_buffer_draw_char(current_x, current_y, c, color);
ffff0000000e2324:	90000039 	adrp	x25, ffff0000000e6000 <FONT+0x790>
ffff0000000e2328:	91220321 	add	x1, x25, #0x880
ffff0000000e232c:	a9025bb5 	stp	x21, x22, [x29, #32]
ffff0000000e2330:	d37c1c00 	ubfiz	x0, x0, #4, #8
ffff0000000e2334:	b9488338 	ldr	w24, [x25, #2176]
ffff0000000e2338:	f0000016 	adrp	x22, ffff0000000e5000 <main+0x7b0>
ffff0000000e233c:	9121c2d6 	add	x22, x22, #0x870
ffff0000000e2340:	f90027ba 	str	x26, [x29, #72]
ffff0000000e2344:	8b160016 	add	x22, x0, x22
ffff0000000e2348:	b940043a 	ldr	w26, [x1, #4]
ffff0000000e234c:	11001f18 	add	w24, w24, #0x7
ffff0000000e2350:	d2800015 	mov	x21, #0x0                   	// #0
ffff0000000e2354:	f9000bb3 	str	x19, [x29, #16]
ffff0000000e2358:	0b150354 	add	w20, w26, w21
void frame_buffer_putc(uint8_t c, uint32_t color){
ffff0000000e235c:	528000f3 	mov	w19, #0x7                   	// #7
			if ((FONT[c][y_offset] >> (7 - x_offset)) & 0x1) {
ffff0000000e2360:	38756ac3 	ldrb	w3, [x22, x21]
ffff0000000e2364:	4b130304 	sub	w4, w24, w19
				frame_buffer_draw(x + x_offset, y + y_offset, color);
ffff0000000e2368:	2a1703e2 	mov	w2, w23
ffff0000000e236c:	2a1403e1 	mov	w1, w20
ffff0000000e2370:	2a0403e0 	mov	w0, w4
			if ((FONT[c][y_offset] >> (7 - x_offset)) & 0x1) {
ffff0000000e2374:	1ad32863 	asr	w3, w3, w19
ffff0000000e2378:	37000043 	tbnz	w3, #0, ffff0000000e2380 <frame_buffer_putc+0x90>
				frame_buffer_draw(x + x_offset, y + y_offset, FRAME_BUFFER_BACKGROUND);
ffff0000000e237c:	5284d942 	mov	w2, #0x26ca                	// #9930
ffff0000000e2380:	97fffe10 	bl	ffff0000000e1bc0 <frame_buffer_draw>
ffff0000000e2384:	51000673 	sub	w19, w19, #0x1
		for (uint32_t x_offset = 0; x_offset < 8; x_offset++) {
ffff0000000e2388:	3100067f 	cmn	w19, #0x1
ffff0000000e238c:	54fffea1 	b.ne	ffff0000000e2360 <frame_buffer_putc+0x70>  // b.any
ffff0000000e2390:	910006b5 	add	x21, x21, #0x1
	for (uint32_t y_offset = 0; y_offset < 16; y_offset++) {
ffff0000000e2394:	f10042bf 	cmp	x21, #0x10
ffff0000000e2398:	54fffe01 	b.ne	ffff0000000e2358 <frame_buffer_putc+0x68>  // b.any
			current_x += 8;
ffff0000000e239c:	91220321 	add	x1, x25, #0x880
ffff0000000e23a0:	b9488320 	ldr	w0, [x25, #2176]
ffff0000000e23a4:	f9400bb3 	ldr	x19, [x29, #16]
ffff0000000e23a8:	a9425bb5 	ldp	x21, x22, [x29, #32]
ffff0000000e23ac:	11002000 	add	w0, w0, #0x8
ffff0000000e23b0:	a94363b7 	ldp	x23, x24, [x29, #48]
ffff0000000e23b4:	b9088320 	str	w0, [x25, #2176]
ffff0000000e23b8:	b9400421 	ldr	w1, [x1, #4]
ffff0000000e23bc:	f94027ba 	ldr	x26, [x29, #72]
		}
	}
	// Overflow the screen horizontally
	// Move to the next line
	if (current_x >= frame_buffer_width) {
ffff0000000e23c0:	90000034 	adrp	x20, ffff0000000e6000 <FONT+0x790>
ffff0000000e23c4:	b948ba82 	ldr	w2, [x20, #2232]
ffff0000000e23c8:	6b00005f 	cmp	w2, w0
ffff0000000e23cc:	540000a8 	b.hi	ffff0000000e23e0 <frame_buffer_putc+0xf0>  // b.pmore
		current_x = 0;
ffff0000000e23d0:	91220320 	add	x0, x25, #0x880
		current_y += 16;
ffff0000000e23d4:	11004021 	add	w1, w1, #0x10
		current_x = 0;
ffff0000000e23d8:	b908833f 	str	wzr, [x25, #2176]
		current_y += 16;
ffff0000000e23dc:	b9000401 	str	w1, [x0, #4]
	}
	// Overflow the screen vertically
	// Clear the screen
	if (current_y >= frame_buffer_height) {
ffff0000000e23e0:	90000020 	adrp	x0, ffff0000000e6000 <FONT+0x790>
ffff0000000e23e4:	b948c002 	ldr	w2, [x0, #2240]
ffff0000000e23e8:	6b01005f 	cmp	w2, w1
ffff0000000e23ec:	540002e9 	b.ls	ffff0000000e2448 <frame_buffer_putc+0x158>  // b.plast
		frame_buffer_clear();
	}
ffff0000000e23f0:	f9400ff4 	ldr	x20, [sp, #24]
ffff0000000e23f4:	f94023f9 	ldr	x25, [sp, #64]
ffff0000000e23f8:	a8c57bfd 	ldp	x29, x30, [sp], #80
ffff0000000e23fc:	d65f03c0 	ret
			frame_buffer_putc(' ', 0xFFFFFF);
ffff0000000e2400:	12bfe001 	mov	w1, #0xffffff              	// #16777215
ffff0000000e2404:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2408:	97ffffba 	bl	ffff0000000e22f0 <frame_buffer_putc>
			frame_buffer_putc(' ', 0xFFFFFF);
ffff0000000e240c:	12bfe001 	mov	w1, #0xffffff              	// #16777215
ffff0000000e2410:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2414:	97ffffb7 	bl	ffff0000000e22f0 <frame_buffer_putc>
			frame_buffer_putc(' ', 0xFFFFFF);
ffff0000000e2418:	12bfe001 	mov	w1, #0xffffff              	// #16777215
ffff0000000e241c:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2420:	97ffffb4 	bl	ffff0000000e22f0 <frame_buffer_putc>
			frame_buffer_putc(' ', 0xFFFFFF);
ffff0000000e2424:	12bfe001 	mov	w1, #0xffffff              	// #16777215
ffff0000000e2428:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e242c:	97ffffb1 	bl	ffff0000000e22f0 <frame_buffer_putc>
ffff0000000e2430:	90000039 	adrp	x25, ffff0000000e6000 <FONT+0x790>
ffff0000000e2434:	91220321 	add	x1, x25, #0x880
ffff0000000e2438:	b9488320 	ldr	w0, [x25, #2176]
ffff0000000e243c:	b9400421 	ldr	w1, [x1, #4]
			break;
ffff0000000e2440:	17ffffe0 	b	ffff0000000e23c0 <frame_buffer_putc+0xd0>
ffff0000000e2444:	d503201f 	nop
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e2448:	b948c001 	ldr	w1, [x0, #2240]
		for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e244c:	9122e294 	add	x20, x20, #0x8b8
ffff0000000e2450:	a902dfb6 	stp	x22, x23, [x29, #40]
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e2454:	d2800016 	mov	x22, #0x0                   	// #0
ffff0000000e2458:	91230017 	add	x23, x0, #0x8c0
ffff0000000e245c:	340002a1 	cbz	w1, ffff0000000e24b0 <frame_buffer_putc+0x1c0>
ffff0000000e2460:	f9000bb3 	str	x19, [x29, #16]
ffff0000000e2464:	f90013b5 	str	x21, [x29, #32]
		for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e2468:	b9400280 	ldr	w0, [x20]
ffff0000000e246c:	2a1603f5 	mov	w21, w22
ffff0000000e2470:	d2800013 	mov	x19, #0x0                   	// #0
ffff0000000e2474:	34000120 	cbz	w0, ffff0000000e2498 <frame_buffer_putc+0x1a8>
			frame_buffer_draw(x, y, color);
ffff0000000e2478:	2a1303e0 	mov	w0, w19
ffff0000000e247c:	5284d942 	mov	w2, #0x26ca                	// #9930
ffff0000000e2480:	2a1503e1 	mov	w1, w21
ffff0000000e2484:	97fffdcf 	bl	ffff0000000e1bc0 <frame_buffer_draw>
		for (uint64_t x = 0; x < frame_buffer_width; x++) {
ffff0000000e2488:	b9400280 	ldr	w0, [x20]
ffff0000000e248c:	91000673 	add	x19, x19, #0x1
ffff0000000e2490:	eb20427f 	cmp	x19, w0, uxtw
ffff0000000e2494:	54ffff23 	b.cc	ffff0000000e2478 <frame_buffer_putc+0x188>  // b.lo, b.ul, b.last
	for (uint64_t y = 0; y < frame_buffer_height; y++) {
ffff0000000e2498:	b94002e0 	ldr	w0, [x23]
ffff0000000e249c:	910006d6 	add	x22, x22, #0x1
ffff0000000e24a0:	eb2042df 	cmp	x22, w0, uxtw
ffff0000000e24a4:	54fffe23 	b.cc	ffff0000000e2468 <frame_buffer_putc+0x178>  // b.lo, b.ul, b.last
ffff0000000e24a8:	f9400bb3 	ldr	x19, [x29, #16]
ffff0000000e24ac:	f94013b5 	ldr	x21, [x29, #32]
	current_x = 0;
ffff0000000e24b0:	91220320 	add	x0, x25, #0x880
ffff0000000e24b4:	b908833f 	str	wzr, [x25, #2176]
	current_y = 0;
ffff0000000e24b8:	a942dfb6 	ldp	x22, x23, [x29, #40]
ffff0000000e24bc:	b900041f 	str	wzr, [x0, #4]
ffff0000000e24c0:	f9400ff4 	ldr	x20, [sp, #24]
ffff0000000e24c4:	f94023f9 	ldr	x25, [sp, #64]
ffff0000000e24c8:	a8c57bfd 	ldp	x29, x30, [sp], #80
ffff0000000e24cc:	d65f03c0 	ret
			current_x = 0;
ffff0000000e24d0:	90000039 	adrp	x25, ffff0000000e6000 <FONT+0x790>
ffff0000000e24d4:	91220321 	add	x1, x25, #0x880
			break;
ffff0000000e24d8:	52800000 	mov	w0, #0x0                   	// #0
			current_x = 0;
ffff0000000e24dc:	b908833f 	str	wzr, [x25, #2176]
ffff0000000e24e0:	b9400421 	ldr	w1, [x1, #4]
			break;
ffff0000000e24e4:	17ffffb7 	b	ffff0000000e23c0 <frame_buffer_putc+0xd0>
			current_y += 16;
ffff0000000e24e8:	90000039 	adrp	x25, ffff0000000e6000 <FONT+0x790>
ffff0000000e24ec:	91220322 	add	x2, x25, #0x880
ffff0000000e24f0:	b9488320 	ldr	w0, [x25, #2176]
ffff0000000e24f4:	b9400441 	ldr	w1, [x2, #4]
ffff0000000e24f8:	11004021 	add	w1, w1, #0x10
ffff0000000e24fc:	b9000441 	str	w1, [x2, #4]
			break;
ffff0000000e2500:	17ffffb0 	b	ffff0000000e23c0 <frame_buffer_putc+0xd0>
	...

ffff0000000e2510 <mailbox_write>:
#include "ConsoleIO.h"
#include "Exceptions.h"

extern uintptr_t get_physical_address(uintptr_t address);

void mailbox_write(uint32_t* address) {
ffff0000000e2510:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
ffff0000000e2514:	910003fd 	mov	x29, sp
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2518:	940008ba 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e251c:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e2520:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e2524:	d503201f 	nop
ffff0000000e2528:	b9400041 	ldr	w1, [x2]
ffff0000000e252c:	37ffffe1 	tbnz	w1, #31, ffff0000000e2528 <mailbox_write+0x18>
	value |= 0x8;	// Channel 8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2530:	9288ebe1 	mov	x1, #0xffffffffffffb8a0    	// #-18272
ffff0000000e2534:	f2bfe001 	movk	x1, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e2538:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e253c:	52a80002 	mov	w2, #0x40000000            	// #1073741824
ffff0000000e2540:	0b020000 	add	w0, w0, w2
ffff0000000e2544:	b9000020 	str	w0, [x1]
}
ffff0000000e2548:	a8c17bfd 	ldp	x29, x30, [sp], #16
ffff0000000e254c:	d65f03c0 	ret

ffff0000000e2550 <mailbox_wait_read>:

void mailbox_wait_read() {
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2550:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e2554:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2558:	b9400020 	ldr	w0, [x1]
ffff0000000e255c:	37f7ffe0 	tbnz	w0, #30, ffff0000000e2558 <mailbox_wait_read+0x8>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e2560:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e2564:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2568:	b9400020 	ldr	w0, [x1]
ffff0000000e256c:	361fffe0 	tbz	w0, #3, ffff0000000e2568 <mailbox_wait_read+0x18>
}
ffff0000000e2570:	d65f03c0 	ret
ffff0000000e2574:	d503201f 	nop
ffff0000000e2578:	d503201f 	nop
ffff0000000e257c:	d503201f 	nop

ffff0000000e2580 <mailbox_turn_led_on>:

void mailbox_turn_led_on() {
ffff0000000e2580:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
	uint32_t __attribute__((aligned(16))) message[8];
	// message header
	message[0] = sizeof(message);
ffff0000000e2584:	d2800401 	mov	x1, #0x20                  	// #32
ffff0000000e2588:	d2900820 	mov	x0, #0x8041                	// #32833
ffff0000000e258c:	f2a00060 	movk	x0, #0x3, lsl #16
void mailbox_turn_led_on() {
ffff0000000e2590:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);
ffff0000000e2594:	f2c00100 	movk	x0, #0x8, lsl #32
ffff0000000e2598:	a90103a1 	stp	x1, x0, [x29, #16]
ffff0000000e259c:	d2c01041 	mov	x1, #0x8200000000          	// #558345748480
ffff0000000e25a0:	d2800020 	mov	x0, #0x1                   	// #1
ffff0000000e25a4:	a90203a1 	stp	x1, x0, [x29, #32]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e25a8:	910043a0 	add	x0, x29, #0x10
ffff0000000e25ac:	94000895 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e25b0:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e25b4:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e25b8:	b9400041 	ldr	w1, [x2]
ffff0000000e25bc:	37ffffe1 	tbnz	w1, #31, ffff0000000e25b8 <mailbox_turn_led_on+0x38>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e25c0:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e25c4:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e25c8:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e25cc:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e25d0:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e25d4:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e25d8:	0b030000 	add	w0, w0, w3
ffff0000000e25dc:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e25e0:	b9400020 	ldr	w0, [x1]
ffff0000000e25e4:	37f7ffe0 	tbnz	w0, #30, ffff0000000e25e0 <mailbox_turn_led_on+0x60>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e25e8:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e25ec:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e25f0:	b9400020 	ldr	w0, [x1]
ffff0000000e25f4:	361fffe0 	tbz	w0, #3, ffff0000000e25f0 <mailbox_turn_led_on+0x70>
	mailbox_write(&message[0]);

	// wait until read is possible (why?)
	mailbox_wait_read();

	if (message[1] != 0x80000000) {
ffff0000000e25f8:	b94017a1 	ldr	w1, [x29, #20]
ffff0000000e25fc:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e2600:	6b00003f 	cmp	w1, w0
ffff0000000e2604:	54000061 	b.ne	ffff0000000e2610 <mailbox_turn_led_on+0x90>  // b.any
		error("Could not turn LED on. Mailbox write failed.");
	}
}
ffff0000000e2608:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e260c:	d65f03c0 	ret
		error("Could not turn LED on. Mailbox write failed.");
ffff0000000e2610:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2614:	91064000 	add	x0, x0, #0x190
ffff0000000e2618:	97fffb12 	bl	ffff0000000e1260 <error>
ffff0000000e261c:	d503201f 	nop

ffff0000000e2620 <mailbox_get_arm_memory_size>:

uint64_t mailbox_get_arm_memory_size() {
ffff0000000e2620:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
	uint32_t __attribute__((aligned(16))) message[8];
	// message header
	message[0] = sizeof(message);	// Message Size
ffff0000000e2624:	d2800401 	mov	x1, #0x20                  	// #32
ffff0000000e2628:	d28000a0 	mov	x0, #0x5                   	// #5
ffff0000000e262c:	f2a00020 	movk	x0, #0x1, lsl #16
uint64_t mailbox_get_arm_memory_size() {
ffff0000000e2630:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);	// Message Size
ffff0000000e2634:	f2c00100 	movk	x0, #0x8, lsl #32
ffff0000000e2638:	a90103a1 	stp	x1, x0, [x29, #16]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e263c:	910043a0 	add	x0, x29, #0x10
	message[0] = sizeof(message);	// Message Size
ffff0000000e2640:	a9027fbf 	stp	xzr, xzr, [x29, #32]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2644:	9400086f 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e2648:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e264c:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e2650:	b9400041 	ldr	w1, [x2]
ffff0000000e2654:	37ffffe1 	tbnz	w1, #31, ffff0000000e2650 <mailbox_get_arm_memory_size+0x30>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2658:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e265c:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e2660:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2664:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2668:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e266c:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2670:	0b030000 	add	w0, w0, w3
ffff0000000e2674:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2678:	b9400020 	ldr	w0, [x1]
ffff0000000e267c:	37f7ffe0 	tbnz	w0, #30, ffff0000000e2678 <mailbox_get_arm_memory_size+0x58>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e2680:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e2684:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2688:	b9400020 	ldr	w0, [x1]
ffff0000000e268c:	361fffe0 	tbz	w0, #3, ffff0000000e2688 <mailbox_get_arm_memory_size+0x68>
	mailbox_write(&message[0]);

	// wait until read is possible
	mailbox_wait_read();

	if (message[1] != 0x80000000 || message[4] != 0x80000008) {
ffff0000000e2690:	b94017a1 	ldr	w1, [x29, #20]
ffff0000000e2694:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e2698:	6b00003f 	cmp	w1, w0
ffff0000000e269c:	54000141 	b.ne	ffff0000000e26c4 <mailbox_get_arm_memory_size+0xa4>  // b.any
ffff0000000e26a0:	b94023a1 	ldr	w1, [x29, #32]
ffff0000000e26a4:	11002000 	add	w0, w0, #0x8
ffff0000000e26a8:	6b00003f 	cmp	w1, w0
ffff0000000e26ac:	540000c1 	b.ne	ffff0000000e26c4 <mailbox_get_arm_memory_size+0xa4>  // b.any
		error("Could not get ARM RAM. Mailbox write failed.");
	}

	if (message[5] != 0) {
ffff0000000e26b0:	b94027a0 	ldr	w0, [x29, #36]
ffff0000000e26b4:	350000e0 	cbnz	w0, ffff0000000e26d0 <mailbox_get_arm_memory_size+0xb0>
		error("ARM RAM offset is not 0.");
	}

	return message[6];
}
ffff0000000e26b8:	b9402ba0 	ldr	w0, [x29, #40]
ffff0000000e26bc:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e26c0:	d65f03c0 	ret
		error("Could not get ARM RAM. Mailbox write failed.");
ffff0000000e26c4:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e26c8:	91070000 	add	x0, x0, #0x1c0
ffff0000000e26cc:	97fffae5 	bl	ffff0000000e1260 <error>
		error("ARM RAM offset is not 0.");
ffff0000000e26d0:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e26d4:	9107c000 	add	x0, x0, #0x1f0
ffff0000000e26d8:	97fffae2 	bl	ffff0000000e1260 <error>
ffff0000000e26dc:	d503201f 	nop

ffff0000000e26e0 <mailbox_get_vc_memory_size>:

uint64_t mailbox_get_vc_memory_size() {
ffff0000000e26e0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
	uint32_t __attribute__((aligned(16))) message[8];
	// message header
	message[0] = sizeof(message);	// Message Size
ffff0000000e26e4:	d2800401 	mov	x1, #0x20                  	// #32
ffff0000000e26e8:	d28000c0 	mov	x0, #0x6                   	// #6
ffff0000000e26ec:	f2a00020 	movk	x0, #0x1, lsl #16
uint64_t mailbox_get_vc_memory_size() {
ffff0000000e26f0:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);	// Message Size
ffff0000000e26f4:	f2c00100 	movk	x0, #0x8, lsl #32
ffff0000000e26f8:	a90103a1 	stp	x1, x0, [x29, #16]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e26fc:	910043a0 	add	x0, x29, #0x10
	message[0] = sizeof(message);	// Message Size
ffff0000000e2700:	a9027fbf 	stp	xzr, xzr, [x29, #32]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2704:	9400083f 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e2708:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e270c:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e2710:	b9400041 	ldr	w1, [x2]
ffff0000000e2714:	37ffffe1 	tbnz	w1, #31, ffff0000000e2710 <mailbox_get_vc_memory_size+0x30>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2718:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e271c:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e2720:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2724:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2728:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e272c:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2730:	0b030000 	add	w0, w0, w3
ffff0000000e2734:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2738:	b9400020 	ldr	w0, [x1]
ffff0000000e273c:	37f7ffe0 	tbnz	w0, #30, ffff0000000e2738 <mailbox_get_vc_memory_size+0x58>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e2740:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e2744:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2748:	b9400020 	ldr	w0, [x1]
ffff0000000e274c:	361fffe0 	tbz	w0, #3, ffff0000000e2748 <mailbox_get_vc_memory_size+0x68>
	mailbox_write(&message[0]);

	// wait until read is possible
	mailbox_wait_read();

	if (message[1] != 0x80000000 || message[4] != 0x80000008) {
ffff0000000e2750:	b94017a1 	ldr	w1, [x29, #20]
ffff0000000e2754:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e2758:	6b00003f 	cmp	w1, w0
ffff0000000e275c:	54000101 	b.ne	ffff0000000e277c <mailbox_get_vc_memory_size+0x9c>  // b.any
ffff0000000e2760:	b94023a1 	ldr	w1, [x29, #32]
ffff0000000e2764:	11002000 	add	w0, w0, #0x8
ffff0000000e2768:	6b00003f 	cmp	w1, w0
ffff0000000e276c:	54000081 	b.ne	ffff0000000e277c <mailbox_get_vc_memory_size+0x9c>  // b.any
		error("Could not get VC RAM. Mailbox write failed.");
	}

	return message[6];
}
ffff0000000e2770:	b9402ba0 	ldr	w0, [x29, #40]
ffff0000000e2774:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e2778:	d65f03c0 	ret
		error("Could not get VC RAM. Mailbox write failed.");
ffff0000000e277c:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2780:	91084000 	add	x0, x0, #0x210
ffff0000000e2784:	97fffab7 	bl	ffff0000000e1260 <error>
ffff0000000e2788:	d503201f 	nop
ffff0000000e278c:	d503201f 	nop

ffff0000000e2790 <mailbox_get_firmware_revision>:

uint64_t mailbox_get_firmware_revision() {
ffff0000000e2790:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
	uint32_t __attribute__((aligned(16))) message[7];
	// message header
	message[0] = sizeof(message);	// Message Size
ffff0000000e2794:	d2800381 	mov	x1, #0x1c                  	// #28
ffff0000000e2798:	d2800020 	mov	x0, #0x1                   	// #1
uint64_t mailbox_get_firmware_revision() {
ffff0000000e279c:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);	// Message Size
ffff0000000e27a0:	f2c00080 	movk	x0, #0x4, lsl #32
ffff0000000e27a4:	a90103a1 	stp	x1, x0, [x29, #16]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e27a8:	910043a0 	add	x0, x29, #0x10
	message[0] = sizeof(message);	// Message Size
ffff0000000e27ac:	f90013bf 	str	xzr, [x29, #32]

	// tag 1 data
	message[5] = 0;			// Firmware revision

	// end tag
	message[6] = 0;
ffff0000000e27b0:	b9002bbf 	str	wzr, [x29, #40]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e27b4:	94000813 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e27b8:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e27bc:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e27c0:	b9400041 	ldr	w1, [x2]
ffff0000000e27c4:	37ffffe1 	tbnz	w1, #31, ffff0000000e27c0 <mailbox_get_firmware_revision+0x30>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e27c8:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e27cc:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e27d0:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e27d4:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e27d8:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e27dc:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e27e0:	0b030000 	add	w0, w0, w3
ffff0000000e27e4:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e27e8:	b9400020 	ldr	w0, [x1]
ffff0000000e27ec:	37f7ffe0 	tbnz	w0, #30, ffff0000000e27e8 <mailbox_get_firmware_revision+0x58>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e27f0:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e27f4:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e27f8:	b9400020 	ldr	w0, [x1]
ffff0000000e27fc:	361fffe0 	tbz	w0, #3, ffff0000000e27f8 <mailbox_get_firmware_revision+0x68>
	mailbox_write(&message[0]);

	// wait until read is possible
	mailbox_wait_read();

	if (message[1] != 0x80000000) {
ffff0000000e2800:	b94017a1 	ldr	w1, [x29, #20]
ffff0000000e2804:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e2808:	6b00003f 	cmp	w1, w0
ffff0000000e280c:	54000081 	b.ne	ffff0000000e281c <mailbox_get_firmware_revision+0x8c>  // b.any
		error("Could not get Firmware Revision. Mailbox write failed.");
	}

	return message[5];
}
ffff0000000e2810:	b94027a0 	ldr	w0, [x29, #36]
ffff0000000e2814:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e2818:	d65f03c0 	ret
		error("Could not get Firmware Revision. Mailbox write failed.");
ffff0000000e281c:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2820:	91090000 	add	x0, x0, #0x240
ffff0000000e2824:	97fffa8f 	bl	ffff0000000e1260 <error>
ffff0000000e2828:	d503201f 	nop
ffff0000000e282c:	d503201f 	nop

ffff0000000e2830 <mailbox_get_board_model>:

uint64_t mailbox_get_board_model() {
ffff0000000e2830:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
	uint32_t __attribute__((aligned(16))) message[7];
	// message header
	message[0] = sizeof(message);	// Message Size
ffff0000000e2834:	d2800381 	mov	x1, #0x1c                  	// #28
ffff0000000e2838:	d2800020 	mov	x0, #0x1                   	// #1
ffff0000000e283c:	f2a00020 	movk	x0, #0x1, lsl #16
uint64_t mailbox_get_board_model() {
ffff0000000e2840:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);	// Message Size
ffff0000000e2844:	f2c00080 	movk	x0, #0x4, lsl #32
ffff0000000e2848:	a90103a1 	stp	x1, x0, [x29, #16]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e284c:	910043a0 	add	x0, x29, #0x10
	message[0] = sizeof(message);	// Message Size
ffff0000000e2850:	f90013bf 	str	xzr, [x29, #32]

	// tag 1 data
	message[5] = 0;			// Board model

	// end tag
	message[6] = 0;
ffff0000000e2854:	b9002bbf 	str	wzr, [x29, #40]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2858:	940007ea 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e285c:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e2860:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e2864:	d503201f 	nop
ffff0000000e2868:	b9400041 	ldr	w1, [x2]
ffff0000000e286c:	37ffffe1 	tbnz	w1, #31, ffff0000000e2868 <mailbox_get_board_model+0x38>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2870:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e2874:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e2878:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e287c:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2880:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e2884:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2888:	0b030000 	add	w0, w0, w3
ffff0000000e288c:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2890:	b9400020 	ldr	w0, [x1]
ffff0000000e2894:	37f7ffe0 	tbnz	w0, #30, ffff0000000e2890 <mailbox_get_board_model+0x60>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e2898:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e289c:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e28a0:	b9400020 	ldr	w0, [x1]
ffff0000000e28a4:	361fffe0 	tbz	w0, #3, ffff0000000e28a0 <mailbox_get_board_model+0x70>
	mailbox_write(&message[0]);

	// wait until read is possible
	mailbox_wait_read();

	if (message[1] != 0x80000000) {
ffff0000000e28a8:	b94017a1 	ldr	w1, [x29, #20]
ffff0000000e28ac:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e28b0:	6b00003f 	cmp	w1, w0
ffff0000000e28b4:	54000081 	b.ne	ffff0000000e28c4 <mailbox_get_board_model+0x94>  // b.any
		error("Could not get Board Model. Mailbox write failed.");
	}

	return message[5];
}
ffff0000000e28b8:	b94027a0 	ldr	w0, [x29, #36]
ffff0000000e28bc:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e28c0:	d65f03c0 	ret
		error("Could not get Board Model. Mailbox write failed.");
ffff0000000e28c4:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e28c8:	9109e000 	add	x0, x0, #0x278
ffff0000000e28cc:	97fffa65 	bl	ffff0000000e1260 <error>

ffff0000000e28d0 <mailbox_get_board_revision>:

uint64_t mailbox_get_board_revision() {
ffff0000000e28d0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
	uint32_t __attribute__((aligned(16))) message[7];
	// message header
	message[0] = sizeof(message);	// Message Size
ffff0000000e28d4:	d2800381 	mov	x1, #0x1c                  	// #28
ffff0000000e28d8:	d2800040 	mov	x0, #0x2                   	// #2
ffff0000000e28dc:	f2a00020 	movk	x0, #0x1, lsl #16
uint64_t mailbox_get_board_revision() {
ffff0000000e28e0:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);	// Message Size
ffff0000000e28e4:	f2c00080 	movk	x0, #0x4, lsl #32
ffff0000000e28e8:	a90103a1 	stp	x1, x0, [x29, #16]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e28ec:	910043a0 	add	x0, x29, #0x10
	message[0] = sizeof(message);	// Message Size
ffff0000000e28f0:	f90013bf 	str	xzr, [x29, #32]

	// tag 1 data
	message[5] = 0;			// Board revision

	// end tag
	message[6] = 0;
ffff0000000e28f4:	b9002bbf 	str	wzr, [x29, #40]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e28f8:	940007c2 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e28fc:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e2900:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e2904:	d503201f 	nop
ffff0000000e2908:	b9400041 	ldr	w1, [x2]
ffff0000000e290c:	37ffffe1 	tbnz	w1, #31, ffff0000000e2908 <mailbox_get_board_revision+0x38>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2910:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e2914:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e2918:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e291c:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2920:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e2924:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2928:	0b030000 	add	w0, w0, w3
ffff0000000e292c:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2930:	b9400020 	ldr	w0, [x1]
ffff0000000e2934:	37f7ffe0 	tbnz	w0, #30, ffff0000000e2930 <mailbox_get_board_revision+0x60>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e2938:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e293c:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2940:	b9400020 	ldr	w0, [x1]
ffff0000000e2944:	361fffe0 	tbz	w0, #3, ffff0000000e2940 <mailbox_get_board_revision+0x70>
	mailbox_write(&message[0]);

	// wait until read is possible
	mailbox_wait_read();

	if (message[1] != 0x80000000) {
ffff0000000e2948:	b94017a1 	ldr	w1, [x29, #20]
ffff0000000e294c:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e2950:	6b00003f 	cmp	w1, w0
ffff0000000e2954:	54000081 	b.ne	ffff0000000e2964 <mailbox_get_board_revision+0x94>  // b.any
		error("Could not get Board Revision. Mailbox write failed.");
	}

	return message[5];
}
ffff0000000e2958:	b94027a0 	ldr	w0, [x29, #36]
ffff0000000e295c:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e2960:	d65f03c0 	ret
		error("Could not get Board Revision. Mailbox write failed.");
ffff0000000e2964:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2968:	910ac000 	add	x0, x0, #0x2b0
ffff0000000e296c:	97fffa3d 	bl	ffff0000000e1260 <error>

ffff0000000e2970 <mailbox_print_clock_current_frequency>:

void mailbox_print_clock_current_frequency(uint32_t id) {
ffff0000000e2970:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
	uint32_t __attribute__((aligned(16))) message[8];
	// message header
	message[0] = sizeof(message);	// Message Size
ffff0000000e2974:	d28000a1 	mov	x1, #0x5                   	// #5
ffff0000000e2978:	f2a00061 	movk	x1, #0x3, lsl #16
void mailbox_print_clock_current_frequency(uint32_t id) {
ffff0000000e297c:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);	// Message Size
ffff0000000e2980:	d2800402 	mov	x2, #0x20                  	// #32
ffff0000000e2984:	f2c00101 	movk	x1, #0x8, lsl #32
ffff0000000e2988:	a90107a2 	stp	x2, x1, [x29, #16]
	message[2] = 0x00030005;	// Get clock state
	message[3] = 8;			// 8 bytes in response
	message[4] = 0;			// Request Code

	// tag 1 data
	message[5] = id;		// Clock ID
ffff0000000e298c:	290403bf 	stp	wzr, w0, [x29, #32]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2990:	910043a0 	add	x0, x29, #0x10
	message[6] = 0;			// Clock frequency
ffff0000000e2994:	f90017bf 	str	xzr, [x29, #40]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2998:	9400079a 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e299c:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e29a0:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e29a4:	d503201f 	nop
ffff0000000e29a8:	b9400041 	ldr	w1, [x2]
ffff0000000e29ac:	37ffffe1 	tbnz	w1, #31, ffff0000000e29a8 <mailbox_print_clock_current_frequency+0x38>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e29b0:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e29b4:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e29b8:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e29bc:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e29c0:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e29c4:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e29c8:	0b030000 	add	w0, w0, w3
ffff0000000e29cc:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e29d0:	b9400020 	ldr	w0, [x1]
ffff0000000e29d4:	37f7ffe0 	tbnz	w0, #30, ffff0000000e29d0 <mailbox_print_clock_current_frequency+0x60>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e29d8:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e29dc:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e29e0:	b9400020 	ldr	w0, [x1]
ffff0000000e29e4:	361fffe0 	tbz	w0, #3, ffff0000000e29e0 <mailbox_print_clock_current_frequency+0x70>
	mailbox_write(&message[0]);

	// wait until read is possible
	mailbox_wait_read();

	if (message[1] != 0x80000000) {
ffff0000000e29e8:	b94017a1 	ldr	w1, [x29, #20]
ffff0000000e29ec:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e29f0:	6b00003f 	cmp	w1, w0
ffff0000000e29f4:	54000161 	b.ne	ffff0000000e2a20 <mailbox_print_clock_current_frequency+0xb0>  // b.any
		error("Could not get clock current frequency. Mailbox write failed.");
	}

	// Print clock frequency
	printf("(%u KHz) ", message[6]/1000);
ffff0000000e29f8:	b9402ba1 	ldr	w1, [x29, #40]
ffff0000000e29fc:	5289ba62 	mov	w2, #0x4dd3                	// #19923
ffff0000000e2a00:	72a20c42 	movk	w2, #0x1062, lsl #16
ffff0000000e2a04:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2a08:	910ca000 	add	x0, x0, #0x328
ffff0000000e2a0c:	9ba27c21 	umull	x1, w1, w2
ffff0000000e2a10:	d366fc21 	lsr	x1, x1, #38
ffff0000000e2a14:	97fff90f 	bl	ffff0000000e0e50 <printf>
}
ffff0000000e2a18:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e2a1c:	d65f03c0 	ret
		error("Could not get clock current frequency. Mailbox write failed.");
ffff0000000e2a20:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2a24:	910ba000 	add	x0, x0, #0x2e8
ffff0000000e2a28:	97fffa0e 	bl	ffff0000000e1260 <error>
ffff0000000e2a2c:	d503201f 	nop

ffff0000000e2a30 <mailbox_print_clock_state>:

void mailbox_print_clock_state(uint32_t id) {
ffff0000000e2a30:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
	uint32_t __attribute__((aligned(16))) message[8];
	// message header
	message[0] = sizeof(message);	// Message Size
ffff0000000e2a34:	d2800021 	mov	x1, #0x1                   	// #1
ffff0000000e2a38:	f2a00061 	movk	x1, #0x3, lsl #16
void mailbox_print_clock_state(uint32_t id) {
ffff0000000e2a3c:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);	// Message Size
ffff0000000e2a40:	d2800402 	mov	x2, #0x20                  	// #32
ffff0000000e2a44:	f2c00101 	movk	x1, #0x8, lsl #32
ffff0000000e2a48:	a90107a2 	stp	x2, x1, [x29, #16]
	message[2] = 0x00030001;	// Get clock state
	message[3] = 8;			// 8 bytes in response
	message[4] = 0;			// Request Code

	// tag 1 data
	message[5] = id;		// Clock ID
ffff0000000e2a4c:	290403bf 	stp	wzr, w0, [x29, #32]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2a50:	910043a0 	add	x0, x29, #0x10
	message[6] = 0;			// Clock state
ffff0000000e2a54:	f90017bf 	str	xzr, [x29, #40]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2a58:	9400076a 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e2a5c:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e2a60:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e2a64:	d503201f 	nop
ffff0000000e2a68:	b9400041 	ldr	w1, [x2]
ffff0000000e2a6c:	37ffffe1 	tbnz	w1, #31, ffff0000000e2a68 <mailbox_print_clock_state+0x38>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2a70:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e2a74:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e2a78:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2a7c:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2a80:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e2a84:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2a88:	0b030000 	add	w0, w0, w3
ffff0000000e2a8c:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2a90:	b9400020 	ldr	w0, [x1]
ffff0000000e2a94:	37f7ffe0 	tbnz	w0, #30, ffff0000000e2a90 <mailbox_print_clock_state+0x60>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e2a98:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e2a9c:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2aa0:	b9400020 	ldr	w0, [x1]
ffff0000000e2aa4:	361fffe0 	tbz	w0, #3, ffff0000000e2aa0 <mailbox_print_clock_state+0x70>
	mailbox_write(&message[0]);

	// wait until read is possible
	mailbox_wait_read();

	if (message[1] != 0x80000000) {
ffff0000000e2aa8:	b94017a1 	ldr	w1, [x29, #20]
ffff0000000e2aac:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e2ab0:	6b00003f 	cmp	w1, w0
ffff0000000e2ab4:	54000261 	b.ne	ffff0000000e2b00 <mailbox_print_clock_state+0xd0>  // b.any
		error("Could not get clock state. Mailbox write failed.");
	}

	// Print clock state
	uint32_t enabled = message[6] & 0x1;
ffff0000000e2ab8:	b9402ba0 	ldr	w0, [x29, #40]
ffff0000000e2abc:	12000001 	and	w1, w0, #0x1
	uint32_t does_not_exist = message[6] & 0x2;

	if (does_not_exist) {
ffff0000000e2ac0:	370801a0 	tbnz	w0, #1, ffff0000000e2af4 <mailbox_print_clock_state+0xc4>
		error("Retrieving clock state for clock that does not exist!");
	}

	if (enabled) {
ffff0000000e2ac4:	350000e1 	cbnz	w1, ffff0000000e2ae0 <mailbox_print_clock_state+0xb0>
		putstr("(On) ");
	} else {
		putstr("(Off) ");
ffff0000000e2ac8:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2acc:	910ec000 	add	x0, x0, #0x3b0
ffff0000000e2ad0:	97fff658 	bl	ffff0000000e0430 <putstr>
	}
}
ffff0000000e2ad4:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e2ad8:	d65f03c0 	ret
ffff0000000e2adc:	d503201f 	nop
		putstr("(On) ");
ffff0000000e2ae0:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2ae4:	910ea000 	add	x0, x0, #0x3a8
ffff0000000e2ae8:	97fff652 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2aec:	a8c37bfd 	ldp	x29, x30, [sp], #48
ffff0000000e2af0:	d65f03c0 	ret
		error("Retrieving clock state for clock that does not exist!");
ffff0000000e2af4:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2af8:	910dc000 	add	x0, x0, #0x370
ffff0000000e2afc:	97fff9d9 	bl	ffff0000000e1260 <error>
		error("Could not get clock state. Mailbox write failed.");
ffff0000000e2b00:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2b04:	910ce000 	add	x0, x0, #0x338
ffff0000000e2b08:	97fff9d6 	bl	ffff0000000e1260 <error>
ffff0000000e2b0c:	d503201f 	nop

ffff0000000e2b10 <mailbox_print_clock_name>:

void mailbox_print_clock_name(uint32_t id) {
ffff0000000e2b10:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
	switch(id) {
ffff0000000e2b14:	7100141f 	cmp	w0, #0x5
void mailbox_print_clock_name(uint32_t id) {
ffff0000000e2b18:	910003fd 	mov	x29, sp
	switch(id) {
ffff0000000e2b1c:	540008e0 	b.eq	ffff0000000e2c38 <mailbox_print_clock_name+0x128>  // b.none
ffff0000000e2b20:	540001c9 	b.ls	ffff0000000e2b58 <mailbox_print_clock_name+0x48>  // b.plast
ffff0000000e2b24:	7100201f 	cmp	w0, #0x8
ffff0000000e2b28:	54000540 	b.eq	ffff0000000e2bd0 <mailbox_print_clock_name+0xc0>  // b.none
ffff0000000e2b2c:	54000328 	b.hi	ffff0000000e2b90 <mailbox_print_clock_name+0x80>  // b.pmore
ffff0000000e2b30:	7100181f 	cmp	w0, #0x6
ffff0000000e2b34:	540005a0 	b.eq	ffff0000000e2be8 <mailbox_print_clock_name+0xd8>  // b.none
ffff0000000e2b38:	71001c1f 	cmp	w0, #0x7
ffff0000000e2b3c:	54000961 	b.ne	ffff0000000e2c68 <mailbox_print_clock_name+0x158>  // b.any
		case 2: putstr("(UART)"); break;
		case 3: putstr("(ARM)"); break;
		case 4: putstr("(CORE)"); break;
		case 5: putstr("(V3D)"); break;
		case 6: putstr("(H264)"); break;
		case 7: putstr("(ISP)"); break;
ffff0000000e2b40:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2b44:	910fa000 	add	x0, x0, #0x3e8
ffff0000000e2b48:	97fff63a 	bl	ffff0000000e0430 <putstr>
		case 9: putstr("(PIXEL)"); break;
		case 10: putstr("(PWM)"); break;
		default: error("Unknown clock. Cannot retrieve name.");
	}
	putc(' ');
}
ffff0000000e2b4c:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2b50:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2b54:	17fff55b 	b	ffff0000000e00c0 <putc>
	switch(id) {
ffff0000000e2b58:	7100081f 	cmp	w0, #0x2
ffff0000000e2b5c:	540007a0 	b.eq	ffff0000000e2c50 <mailbox_print_clock_name+0x140>  // b.none
ffff0000000e2b60:	540005c9 	b.ls	ffff0000000e2c18 <mailbox_print_clock_name+0x108>  // b.plast
ffff0000000e2b64:	71000c1f 	cmp	w0, #0x3
ffff0000000e2b68:	540004c0 	b.eq	ffff0000000e2c00 <mailbox_print_clock_name+0xf0>  // b.none
ffff0000000e2b6c:	7100101f 	cmp	w0, #0x4
ffff0000000e2b70:	540007c1 	b.ne	ffff0000000e2c68 <mailbox_print_clock_name+0x158>  // b.any
		case 4: putstr("(CORE)"); break;
ffff0000000e2b74:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2b78:	910f4000 	add	x0, x0, #0x3d0
ffff0000000e2b7c:	97fff62d 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2b80:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2b84:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2b88:	17fff54e 	b	ffff0000000e00c0 <putc>
ffff0000000e2b8c:	d503201f 	nop
	switch(id) {
ffff0000000e2b90:	7100241f 	cmp	w0, #0x9
ffff0000000e2b94:	54000120 	b.eq	ffff0000000e2bb8 <mailbox_print_clock_name+0xa8>  // b.none
ffff0000000e2b98:	7100281f 	cmp	w0, #0xa
ffff0000000e2b9c:	54000661 	b.ne	ffff0000000e2c68 <mailbox_print_clock_name+0x158>  // b.any
		case 10: putstr("(PWM)"); break;
ffff0000000e2ba0:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2ba4:	91100000 	add	x0, x0, #0x400
ffff0000000e2ba8:	97fff622 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2bac:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2bb0:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2bb4:	17fff543 	b	ffff0000000e00c0 <putc>
		case 9: putstr("(PIXEL)"); break;
ffff0000000e2bb8:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2bbc:	910fe000 	add	x0, x0, #0x3f8
ffff0000000e2bc0:	97fff61c 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2bc4:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2bc8:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2bcc:	17fff53d 	b	ffff0000000e00c0 <putc>
		case 8: putstr("(SDRAM)"); break;
ffff0000000e2bd0:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2bd4:	910fc000 	add	x0, x0, #0x3f0
ffff0000000e2bd8:	97fff616 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2bdc:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2be0:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2be4:	17fff537 	b	ffff0000000e00c0 <putc>
		case 6: putstr("(H264)"); break;
ffff0000000e2be8:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2bec:	910f8000 	add	x0, x0, #0x3e0
ffff0000000e2bf0:	97fff610 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2bf4:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2bf8:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2bfc:	17fff531 	b	ffff0000000e00c0 <putc>
		case 3: putstr("(ARM)"); break;
ffff0000000e2c00:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2c04:	910f2000 	add	x0, x0, #0x3c8
ffff0000000e2c08:	97fff60a 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2c0c:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2c10:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2c14:	17fff52b 	b	ffff0000000e00c0 <putc>
	switch(id) {
ffff0000000e2c18:	7100041f 	cmp	w0, #0x1
ffff0000000e2c1c:	54000261 	b.ne	ffff0000000e2c68 <mailbox_print_clock_name+0x158>  // b.any
		case 1: putstr("(EMMC)"); break;
ffff0000000e2c20:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2c24:	910ee000 	add	x0, x0, #0x3b8
ffff0000000e2c28:	97fff602 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2c2c:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2c30:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2c34:	17fff523 	b	ffff0000000e00c0 <putc>
		case 5: putstr("(V3D)"); break;
ffff0000000e2c38:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2c3c:	910f6000 	add	x0, x0, #0x3d8
ffff0000000e2c40:	97fff5fc 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2c44:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2c48:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2c4c:	17fff51d 	b	ffff0000000e00c0 <putc>
		case 2: putstr("(UART)"); break;
ffff0000000e2c50:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2c54:	910f0000 	add	x0, x0, #0x3c0
ffff0000000e2c58:	97fff5f6 	bl	ffff0000000e0430 <putstr>
}
ffff0000000e2c5c:	a8c17bfd 	ldp	x29, x30, [sp], #16
	putc(' ');
ffff0000000e2c60:	52800400 	mov	w0, #0x20                  	// #32
ffff0000000e2c64:	17fff517 	b	ffff0000000e00c0 <putc>
		default: error("Unknown clock. Cannot retrieve name.");
ffff0000000e2c68:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2c6c:	91102000 	add	x0, x0, #0x408
ffff0000000e2c70:	97fff97c 	bl	ffff0000000e1260 <error>
ffff0000000e2c74:	d503201f 	nop
ffff0000000e2c78:	d503201f 	nop
ffff0000000e2c7c:	d503201f 	nop

ffff0000000e2c80 <mailbox_print_all_clocks>:

void mailbox_print_all_clocks() {
ffff0000000e2c80:	a9b17bfd 	stp	x29, x30, [sp, #-240]!
	uint32_t __attribute__((aligned(16))) message[6 + (MAILBOX_NUM_CLOCKS * 2)];
	// message header
	message[0] = sizeof(message);	// Message Size
ffff0000000e2c84:	d2800d01 	mov	x1, #0x68                  	// #104
ffff0000000e2c88:	d28000e0 	mov	x0, #0x7                   	// #7
ffff0000000e2c8c:	f2a00020 	movk	x0, #0x1, lsl #16
void mailbox_print_all_clocks() {
ffff0000000e2c90:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);	// Message Size
ffff0000000e2c94:	f2c00a00 	movk	x0, #0x50, lsl #32
void mailbox_print_all_clocks() {
ffff0000000e2c98:	a90153f3 	stp	x19, x20, [sp, #16]
	message[0] = sizeof(message);	// Message Size
ffff0000000e2c9c:	a90803a1 	stp	x1, x0, [x29, #128]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2ca0:	910203a0 	add	x0, x29, #0x80
void mailbox_print_all_clocks() {
ffff0000000e2ca4:	a9025bf5 	stp	x21, x22, [sp, #32]
ffff0000000e2ca8:	a90363f7 	stp	x23, x24, [sp, #48]
ffff0000000e2cac:	a9046bf9 	stp	x25, x26, [sp, #64]
	message[1] = 0;			// Request Code

	// tag 1 header
	message[2] = 0x00010007;		// Get clocks
	message[3] = MAILBOX_NUM_CLOCKS * 8;	// Bytes in response (8 bytes per clock)
	message[4] = 0;				// Request Code
ffff0000000e2cb0:	b90093bf 	str	wzr, [x29, #144]

	// end tag
	message[6 + (MAILBOX_NUM_CLOCKS * 2) - 1] = 0;
ffff0000000e2cb4:	b900e7bf 	str	wzr, [x29, #228]
void mailbox_print_all_clocks() {
ffff0000000e2cb8:	f9002bfb 	str	x27, [sp, #80]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2cbc:	940006d1 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e2cc0:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e2cc4:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e2cc8:	b9400041 	ldr	w1, [x2]
ffff0000000e2ccc:	37ffffe1 	tbnz	w1, #31, ffff0000000e2cc8 <mailbox_print_all_clocks+0x48>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2cd0:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e2cd4:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e2cd8:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2cdc:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2ce0:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e2ce4:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2ce8:	0b030000 	add	w0, w0, w3
ffff0000000e2cec:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2cf0:	b9400020 	ldr	w0, [x1]
ffff0000000e2cf4:	37f7ffe0 	tbnz	w0, #30, ffff0000000e2cf0 <mailbox_print_all_clocks+0x70>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e2cf8:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e2cfc:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2d00:	b9400020 	ldr	w0, [x1]
ffff0000000e2d04:	361fffe0 	tbz	w0, #3, ffff0000000e2d00 <mailbox_print_all_clocks+0x80>
	mailbox_write(&message[0]);

	// wait until read is possible
	mailbox_wait_read();

	if (message[1] != 0x80000000) {
ffff0000000e2d08:	b94087a1 	ldr	w1, [x29, #132]
ffff0000000e2d0c:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e2d10:	6b00003f 	cmp	w1, w0
ffff0000000e2d14:	54000981 	b.ne	ffff0000000e2e44 <mailbox_print_all_clocks+0x1c4>  // b.any
ffff0000000e2d18:	910203a0 	add	x0, x29, #0x80
		mailbox_print_clock_name(id);

		if (parent_id == 0) {
			putstr("(Base) ");
		} else {
			printf("(Parent %u) ", parent_id);
ffff0000000e2d1c:	f0000019 	adrp	x25, ffff0000000e5000 <main+0x7b0>
ffff0000000e2d20:	9111e339 	add	x25, x25, #0x478
	message[0] = sizeof(message);	// Message Size
ffff0000000e2d24:	d28000b7 	mov	x23, #0x5                   	// #5
ffff0000000e2d28:	f2a00077 	movk	x23, #0x3, lsl #16
ffff0000000e2d2c:	910253b4 	add	x20, x29, #0x94
ffff0000000e2d30:	91019015 	add	x21, x0, #0x64
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e2d34:	9288ecf3 	mov	x19, #0xffffffffffffb898    	// #-18280
ffff0000000e2d38:	f2bfe013 	movk	x19, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2d3c:	9288ebf6 	mov	x22, #0xffffffffffffb8a0    	// #-18272
ffff0000000e2d40:	f2bfe016 	movk	x22, #0xff00, lsl #16
ffff0000000e2d44:	f0000018 	adrp	x24, ffff0000000e5000 <main+0x7b0>
	message[0] = sizeof(message);	// Message Size
ffff0000000e2d48:	f2c00117 	movk	x23, #0x8, lsl #32
ffff0000000e2d4c:	d503201f 	nop
		uint32_t id = message[5+(i*2)+1];
ffff0000000e2d50:	29406a9b 	ldp	w27, w26, [x20]
		printf("Clock %u -> ", id);
ffff0000000e2d54:	91118300 	add	x0, x24, #0x460
ffff0000000e2d58:	2a1a03e1 	mov	w1, w26
ffff0000000e2d5c:	97fff83d 	bl	ffff0000000e0e50 <printf>
		mailbox_print_clock_name(id);
ffff0000000e2d60:	2a1a03e0 	mov	w0, w26
ffff0000000e2d64:	97ffff6b 	bl	ffff0000000e2b10 <mailbox_print_clock_name>
		if (parent_id == 0) {
ffff0000000e2d68:	3500061b 	cbnz	w27, ffff0000000e2e28 <mailbox_print_all_clocks+0x1a8>
			putstr("(Base) ");
ffff0000000e2d6c:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2d70:	9111c000 	add	x0, x0, #0x470
ffff0000000e2d74:	97fff5af 	bl	ffff0000000e0430 <putstr>
		}

		mailbox_print_clock_state(id);
ffff0000000e2d78:	2a1a03e0 	mov	w0, w26
ffff0000000e2d7c:	97ffff2d 	bl	ffff0000000e2a30 <mailbox_print_clock_state>
	message[0] = sizeof(message);	// Message Size
ffff0000000e2d80:	d2800401 	mov	x1, #0x20                  	// #32
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2d84:	910183a0 	add	x0, x29, #0x60
	message[0] = sizeof(message);	// Message Size
ffff0000000e2d88:	a9065fa1 	stp	x1, x23, [x29, #96]
	message[5] = id;		// Clock ID
ffff0000000e2d8c:	290e6bbf 	stp	wzr, w26, [x29, #112]
	message[6] = 0;			// Clock frequency
ffff0000000e2d90:	f9003fbf 	str	xzr, [x29, #120]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2d94:	9400069b 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e2d98:	b9400261 	ldr	w1, [x19]
ffff0000000e2d9c:	37ffffe1 	tbnz	w1, #31, ffff0000000e2d98 <mailbox_print_all_clocks+0x118>
	value |= 0x8;	// Channel 8
ffff0000000e2da0:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2da4:	52a80001 	mov	w1, #0x40000000            	// #1073741824
ffff0000000e2da8:	0b010000 	add	w0, w0, w1
ffff0000000e2dac:	b90002c0 	str	w0, [x22]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2db0:	b9400260 	ldr	w0, [x19]
ffff0000000e2db4:	37f7ffe0 	tbnz	w0, #30, ffff0000000e2db0 <mailbox_print_all_clocks+0x130>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e2db8:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e2dbc:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2dc0:	b9400020 	ldr	w0, [x1]
ffff0000000e2dc4:	361fffe0 	tbz	w0, #3, ffff0000000e2dc0 <mailbox_print_all_clocks+0x140>
	if (message[1] != 0x80000000) {
ffff0000000e2dc8:	b94067a1 	ldr	w1, [x29, #100]
ffff0000000e2dcc:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e2dd0:	6b00003f 	cmp	w1, w0
ffff0000000e2dd4:	54000321 	b.ne	ffff0000000e2e38 <mailbox_print_all_clocks+0x1b8>  // b.any
	printf("(%u KHz) ", message[6]/1000);
ffff0000000e2dd8:	b9407ba1 	ldr	w1, [x29, #120]
ffff0000000e2ddc:	5289ba62 	mov	w2, #0x4dd3                	// #19923
ffff0000000e2de0:	72a20c42 	movk	w2, #0x1062, lsl #16
ffff0000000e2de4:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2de8:	910ca000 	add	x0, x0, #0x328
ffff0000000e2dec:	91002294 	add	x20, x20, #0x8
ffff0000000e2df0:	9ba27c21 	umull	x1, w1, w2
ffff0000000e2df4:	d366fc21 	lsr	x1, x1, #38
ffff0000000e2df8:	97fff816 	bl	ffff0000000e0e50 <printf>
		mailbox_print_clock_current_frequency(id);

		newline();
ffff0000000e2dfc:	97fff5a9 	bl	ffff0000000e04a0 <newline>
	for (int i = 0; i < MAILBOX_NUM_CLOCKS; i++) {
ffff0000000e2e00:	eb1402bf 	cmp	x21, x20
ffff0000000e2e04:	54fffa61 	b.ne	ffff0000000e2d50 <mailbox_print_all_clocks+0xd0>  // b.any
	}
}
ffff0000000e2e08:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e2e0c:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e2e10:	a94363f7 	ldp	x23, x24, [sp, #48]
ffff0000000e2e14:	a9446bf9 	ldp	x25, x26, [sp, #64]
ffff0000000e2e18:	f9402bfb 	ldr	x27, [sp, #80]
ffff0000000e2e1c:	a8cf7bfd 	ldp	x29, x30, [sp], #240
ffff0000000e2e20:	d65f03c0 	ret
ffff0000000e2e24:	d503201f 	nop
			printf("(Parent %u) ", parent_id);
ffff0000000e2e28:	2a1b03e1 	mov	w1, w27
ffff0000000e2e2c:	aa1903e0 	mov	x0, x25
ffff0000000e2e30:	97fff808 	bl	ffff0000000e0e50 <printf>
ffff0000000e2e34:	17ffffd1 	b	ffff0000000e2d78 <mailbox_print_all_clocks+0xf8>
		error("Could not get clock current frequency. Mailbox write failed.");
ffff0000000e2e38:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2e3c:	910ba000 	add	x0, x0, #0x2e8
ffff0000000e2e40:	97fff908 	bl	ffff0000000e1260 <error>
		error("Could not get clocks. Mailbox write failed.");
ffff0000000e2e44:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2e48:	9110c000 	add	x0, x0, #0x430
ffff0000000e2e4c:	97fff905 	bl	ffff0000000e1260 <error>

ffff0000000e2e50 <mailbox_get_system_temp>:

uint64_t mailbox_get_system_temp() {
ffff0000000e2e50:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
	uint32_t __attribute__((aligned(16))) message[8];
	// message header
	message[0] = sizeof(message);	// Message Size
ffff0000000e2e54:	d2800401 	mov	x1, #0x20                  	// #32
ffff0000000e2e58:	d28000c0 	mov	x0, #0x6                   	// #6
ffff0000000e2e5c:	f2a00060 	movk	x0, #0x3, lsl #16
uint64_t mailbox_get_system_temp() {
ffff0000000e2e60:	910003fd 	mov	x29, sp
	message[0] = sizeof(message);	// Message Size
ffff0000000e2e64:	f2c00100 	movk	x0, #0x8, lsl #32
ffff0000000e2e68:	a90103a1 	stp	x1, x0, [x29, #16]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2e6c:	910043a0 	add	x0, x29, #0x10
	message[0] = sizeof(message);	// Message Size
ffff0000000e2e70:	a9027fbf 	stp	xzr, xzr, [x29, #32]
	uintptr_t value = get_physical_address((uintptr_t) address);
ffff0000000e2e74:	94000663 	bl	ffff0000000e4800 <get_physical_address>
	while (*MAILBOX_STATUS & 0x80000000) {} // Wait while full flag set
ffff0000000e2e78:	9288ece2 	mov	x2, #0xffffffffffffb898    	// #-18280
ffff0000000e2e7c:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e2e80:	b9400041 	ldr	w1, [x2]
ffff0000000e2e84:	37ffffe1 	tbnz	w1, #31, ffff0000000e2e80 <mailbox_get_system_temp+0x30>
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2e88:	9288ebe2 	mov	x2, #0xffffffffffffb8a0    	// #-18272
ffff0000000e2e8c:	f2bfe002 	movk	x2, #0xff00, lsl #16
	value |= 0x8;	// Channel 8
ffff0000000e2e90:	b27d0000 	orr	x0, x0, #0x8
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2e94:	52a80003 	mov	w3, #0x40000000            	// #1073741824
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2e98:	9288ece1 	mov	x1, #0xffffffffffffb898    	// #-18280
ffff0000000e2e9c:	f2bfe001 	movk	x1, #0xff00, lsl #16
	*MAILBOX_WRITE = value + 0x40000000;
ffff0000000e2ea0:	0b030000 	add	w0, w0, w3
ffff0000000e2ea4:	b9000040 	str	w0, [x2]
	while (*MAILBOX_STATUS & 0x40000000) {} // Wait while empty flag set
ffff0000000e2ea8:	b9400020 	ldr	w0, [x1]
ffff0000000e2eac:	37f7ffe0 	tbnz	w0, #30, ffff0000000e2ea8 <mailbox_get_system_temp+0x58>
	while (!(*MAILBOX_READ & 0x8)) {} // Wait while not channel 8
ffff0000000e2eb0:	9288efe1 	mov	x1, #0xffffffffffffb880    	// #-18304
ffff0000000e2eb4:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2eb8:	b9400020 	ldr	w0, [x1]
ffff0000000e2ebc:	361fffe0 	tbz	w0, #3, ffff0000000e2eb8 <mailbox_get_system_temp+0x68>
	mailbox_write(&message[0]);

	// wait until read is possible
	mailbox_wait_read();

	if (message[1] != 0x80000000) {
ffff0000000e2ec0:	b94017a1 	ldr	w1, [x29, #20]
ffff0000000e2ec4:	52b00000 	mov	w0, #0x80000000            	// #-2147483648
ffff0000000e2ec8:	6b00003f 	cmp	w1, w0
ffff0000000e2ecc:	54000101 	b.ne	ffff0000000e2eec <mailbox_get_system_temp+0x9c>  // b.any
		error("Could not get system temperature. Mailbox write failed.");
	}

	return message[6]/1000;
ffff0000000e2ed0:	b9402ba0 	ldr	w0, [x29, #40]
ffff0000000e2ed4:	5289ba61 	mov	w1, #0x4dd3                	// #19923
ffff0000000e2ed8:	72a20c41 	movk	w1, #0x1062, lsl #16
}
ffff0000000e2edc:	a8c37bfd 	ldp	x29, x30, [sp], #48
	return message[6]/1000;
ffff0000000e2ee0:	9ba17c00 	umull	x0, w0, w1
}
ffff0000000e2ee4:	d366fc00 	lsr	x0, x0, #38
ffff0000000e2ee8:	d65f03c0 	ret
		error("Could not get system temperature. Mailbox write failed.");
ffff0000000e2eec:	f0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e2ef0:	91122000 	add	x0, x0, #0x488
ffff0000000e2ef4:	97fff8db 	bl	ffff0000000e1260 <error>
	...

ffff0000000e2f00 <ic_enable_arm_timer_irq>:
#include "InterruptController.h"

void ic_enable_arm_timer_irq() {
	*IC_ENABLE_BASIC_IRQ |= 1;
ffff0000000e2f00:	9289bce1 	mov	x1, #0xffffffffffffb218    	// #-19944
ffff0000000e2f04:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2f08:	b9400020 	ldr	w0, [x1]
ffff0000000e2f0c:	32000000 	orr	w0, w0, #0x1
ffff0000000e2f10:	b9000020 	str	w0, [x1]
}
ffff0000000e2f14:	d65f03c0 	ret
ffff0000000e2f18:	d503201f 	nop
ffff0000000e2f1c:	d503201f 	nop

ffff0000000e2f20 <ic_enable_system_timer_chan_1_irq>:

void ic_enable_system_timer_chan_1_irq() {
	*IC_ENABLE_IRQ_1 |= 2;
ffff0000000e2f20:	9289bde1 	mov	x1, #0xffffffffffffb210    	// #-19952
ffff0000000e2f24:	f2bfe001 	movk	x1, #0xff00, lsl #16
ffff0000000e2f28:	b9400020 	ldr	w0, [x1]
ffff0000000e2f2c:	321f0000 	orr	w0, w0, #0x2
ffff0000000e2f30:	b9000020 	str	w0, [x1]
}
ffff0000000e2f34:	d65f03c0 	ret
ffff0000000e2f38:	d503201f 	nop
ffff0000000e2f3c:	d503201f 	nop

ffff0000000e2f40 <ic_basic_irq_pending>:

uint32_t ic_basic_irq_pending() {
	return *IC_IRQ_BASIC_PENDING;
ffff0000000e2f40:	9289bfe0 	mov	x0, #0xffffffffffffb200    	// #-19968
ffff0000000e2f44:	f2bfe000 	movk	x0, #0xff00, lsl #16
ffff0000000e2f48:	b9400000 	ldr	w0, [x0]
}
ffff0000000e2f4c:	d65f03c0 	ret

ffff0000000e2f50 <system_timer_chan_1_countdown>:
#include "SystemTimer.h"

void system_timer_chan_1_countdown(uint32_t miliseconds) {
	*SYSTEM_TIMER_COMPARE_1 = ((*SYSTEM_TIMER_COUNTER_L32) + (1000 * miliseconds));
ffff0000000e2f50:	9299ff63 	mov	x3, #0xffffffffffff3004    	// #-53244
ffff0000000e2f54:	f2bfe003 	movk	x3, #0xff00, lsl #16
ffff0000000e2f58:	52807d01 	mov	w1, #0x3e8                 	// #1000
ffff0000000e2f5c:	9299fde2 	mov	x2, #0xffffffffffff3010    	// #-53232
ffff0000000e2f60:	f2bfe002 	movk	x2, #0xff00, lsl #16
ffff0000000e2f64:	b9400063 	ldr	w3, [x3]
ffff0000000e2f68:	1b010c00 	madd	w0, w0, w1, w3
ffff0000000e2f6c:	b9000040 	str	w0, [x2]
}
ffff0000000e2f70:	d65f03c0 	ret
ffff0000000e2f74:	d503201f 	nop
ffff0000000e2f78:	d503201f 	nop
ffff0000000e2f7c:	d503201f 	nop

ffff0000000e2f80 <system_timer_chan_1_ack_interrupt>:

void system_timer_chan_1_ack_interrupt() {
	*SYSTEM_TIMER_CONTROL_STATUS = 2;
ffff0000000e2f80:	9299ffe0 	mov	x0, #0xffffffffffff3000    	// #-53248
ffff0000000e2f84:	f2bfe000 	movk	x0, #0xff00, lsl #16
ffff0000000e2f88:	52800041 	mov	w1, #0x2                   	// #2
ffff0000000e2f8c:	b9000001 	str	w1, [x0]
}
ffff0000000e2f90:	d65f03c0 	ret
ffff0000000e2f94:	d503201f 	nop
ffff0000000e2f98:	d503201f 	nop
ffff0000000e2f9c:	d503201f 	nop

ffff0000000e2fa0 <system_timer_chan_1_was_interrupted>:

uint32_t system_timer_chan_1_was_interrupted() {
	return *SYSTEM_TIMER_CONTROL_STATUS & 2;
ffff0000000e2fa0:	9299ffe0 	mov	x0, #0xffffffffffff3000    	// #-53248
ffff0000000e2fa4:	f2bfe000 	movk	x0, #0xff00, lsl #16
ffff0000000e2fa8:	b9400000 	ldr	w0, [x0]
}
ffff0000000e2fac:	121f0000 	and	w0, w0, #0x2
ffff0000000e2fb0:	d65f03c0 	ret
	...

ffff0000000e2fc0 <thread_1>:

void thread_0() {
    main_menu();
}

void thread_1() {
ffff0000000e2fc0:	90000021 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e2fc4:	d503201f 	nop
    while(1) {
        counter+= 1;
ffff0000000e2fc8:	f9444420 	ldr	x0, [x1, #2184]
ffff0000000e2fcc:	91000400 	add	x0, x0, #0x1
ffff0000000e2fd0:	f9044420 	str	x0, [x1, #2184]
ffff0000000e2fd4:	17fffffd 	b	ffff0000000e2fc8 <thread_1+0x8>
ffff0000000e2fd8:	d503201f 	nop
ffff0000000e2fdc:	d503201f 	nop

ffff0000000e2fe0 <thread_0>:
void thread_0() {
ffff0000000e2fe0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
ffff0000000e2fe4:	910003fd 	mov	x29, sp
    main_menu();
ffff0000000e2fe8:	97fff82a 	bl	ffff0000000e1090 <main_menu>
ffff0000000e2fec:	d503201f 	nop

ffff0000000e2ff0 <thread_2>:
    }
}

void thread_2() {
ffff0000000e2ff0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
ffff0000000e2ff4:	910003fd 	mov	x29, sp
ffff0000000e2ff8:	f9000bf3 	str	x19, [sp, #16]
ffff0000000e2ffc:	90000033 	adrp	x19, ffff0000000e6000 <FONT+0x790>
    while(1) {
        volatile uint64_t counter_seen = counter;
ffff0000000e3000:	f9444660 	ldr	x0, [x19, #2184]
ffff0000000e3004:	f90017a0 	str	x0, [x29, #40]
        frame_buffer_puti_64(counter_seen);
ffff0000000e3008:	f94017a0 	ldr	x0, [x29, #40]
ffff0000000e300c:	97fffc79 	bl	ffff0000000e21f0 <frame_buffer_puti_64>
ffff0000000e3010:	17fffffc 	b	ffff0000000e3000 <thread_2+0x10>
ffff0000000e3014:	d503201f 	nop
ffff0000000e3018:	d503201f 	nop
ffff0000000e301c:	d503201f 	nop

ffff0000000e3020 <thread_3>:
    }
}

void thread_3() {
ffff0000000e3020:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
ffff0000000e3024:	910003fd 	mov	x29, sp
    while(1) {
        frame_buffer_draw_square_corner(0xFF0000);
ffff0000000e3028:	52a01fe0 	mov	w0, #0xff0000              	// #16711680
ffff0000000e302c:	97fffb9d 	bl	ffff0000000e1ea0 <frame_buffer_draw_square_corner>
        frame_buffer_draw_square_corner(0x00FF00);
ffff0000000e3030:	529fe000 	mov	w0, #0xff00                	// #65280
ffff0000000e3034:	97fffb9b 	bl	ffff0000000e1ea0 <frame_buffer_draw_square_corner>
        frame_buffer_draw_square_corner(0x0000FF);
ffff0000000e3038:	52801fe0 	mov	w0, #0xff                  	// #255
ffff0000000e303c:	97fffb99 	bl	ffff0000000e1ea0 <frame_buffer_draw_square_corner>
        frame_buffer_draw_square_corner(0xFFFFFF);
ffff0000000e3040:	12bfe000 	mov	w0, #0xffffff              	// #16777215
ffff0000000e3044:	97fffb97 	bl	ffff0000000e1ea0 <frame_buffer_draw_square_corner>
        frame_buffer_draw_square_corner(0x000000);
ffff0000000e3048:	52800000 	mov	w0, #0x0                   	// #0
ffff0000000e304c:	97fffb95 	bl	ffff0000000e1ea0 <frame_buffer_draw_square_corner>
ffff0000000e3050:	17fffff6 	b	ffff0000000e3028 <thread_3+0x8>
ffff0000000e3054:	d503201f 	nop
ffff0000000e3058:	d503201f 	nop
ffff0000000e305c:	d503201f 	nop

ffff0000000e3060 <threading_init>:
    }
}

void threading_init() {
ffff0000000e3060:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    // TODO: Figure out why starting the stack at the end of the page messes things up.
    // Allocate stack space for 3 threads
    threads[0].saved_program_counter = (uintptr_t) &thread_0;
ffff0000000e3064:	f0ffffe0 	adrp	x0, ffff0000000e2000 <frame_buffer_clear+0x40>
ffff0000000e3068:	913f8000 	add	x0, x0, #0xfe0
void threading_init() {
ffff0000000e306c:	910003fd 	mov	x29, sp
ffff0000000e3070:	a90153f3 	stp	x19, x20, [sp, #16]
    threads[0].saved_program_counter = (uintptr_t) &thread_0;
ffff0000000e3074:	f0000002 	adrp	x2, ffff0000000e6000 <FONT+0x790>
ffff0000000e3078:	91234054 	add	x20, x2, #0x8d0
ffff0000000e307c:	f9046840 	str	x0, [x2, #2256]
    threads[0].saved_stack_pointer = allocate_from_lower_l3(0x10000000, PAGE_SIZE) + 0x9ff0;
ffff0000000e3080:	52a00021 	mov	w1, #0x10000               	// #65536
ffff0000000e3084:	d2a20000 	mov	x0, #0x10000000            	// #268435456
ffff0000000e3088:	940000ee 	bl	ffff0000000e3440 <allocate_from_lower_l3>

    threads[1].saved_program_counter = (uintptr_t) &thread_1;
ffff0000000e308c:	f0ffffe2 	adrp	x2, ffff0000000e2000 <frame_buffer_clear+0x40>
ffff0000000e3090:	913f0042 	add	x2, x2, #0xfc0
    threads[0].saved_stack_pointer = allocate_from_lower_l3(0x10000000, PAGE_SIZE) + 0x9ff0;
ffff0000000e3094:	d293fe13 	mov	x19, #0x9ff0                	// #40944
    threads[1].saved_stack_pointer = allocate_from_lower_l3(0x10010000, PAGE_SIZE) + 0x9ff0;
ffff0000000e3098:	52a00021 	mov	w1, #0x10000               	// #65536
    threads[0].saved_stack_pointer = allocate_from_lower_l3(0x10000000, PAGE_SIZE) + 0x9ff0;
ffff0000000e309c:	8b130000 	add	x0, x0, x19
    threads[1].saved_program_counter = (uintptr_t) &thread_1;
ffff0000000e30a0:	a9008a80 	stp	x0, x2, [x20, #8]
    threads[1].saved_stack_pointer = allocate_from_lower_l3(0x10010000, PAGE_SIZE) + 0x9ff0;
ffff0000000e30a4:	d2a20020 	mov	x0, #0x10010000            	// #268500992
ffff0000000e30a8:	940000e6 	bl	ffff0000000e3440 <allocate_from_lower_l3>
ffff0000000e30ac:	8b130013 	add	x19, x0, x19

    // threads[3].saved_program_counter = (uintptr_t) &thread_3;
    // threads[3].saved_stack_pointer = allocate_from_lower_l3(0x10030000, PAGE_SIZE) + 0x9ff0;

    // Start up the scheduler
    arm_timer_countdown(SCHEDULER_FREQUENCY);
ffff0000000e30b0:	52800140 	mov	w0, #0xa                   	// #10
    threads[1].saved_stack_pointer = allocate_from_lower_l3(0x10010000, PAGE_SIZE) + 0x9ff0;
ffff0000000e30b4:	f9000e93 	str	x19, [x20, #24]
    arm_timer_countdown(SCHEDULER_FREQUENCY);
ffff0000000e30b8:	97fff8ba 	bl	ffff0000000e13a0 <arm_timer_countdown>
ffff0000000e30bc:	14000000 	b	ffff0000000e30bc <threading_init+0x5c>

ffff0000000e30c0 <thread_switch>:
    // So do nothing until that happens.
    while (1) {}
}

void thread_switch() {
    if (is_threading_ready) {
ffff0000000e30c0:	f0000000 	adrp	x0, ffff0000000e6000 <FONT+0x790>
ffff0000000e30c4:	91222001 	add	x1, x0, #0x888
ffff0000000e30c8:	39402022 	ldrb	w2, [x1, #8]
ffff0000000e30cc:	72001c5f 	tst	w2, #0xff
ffff0000000e30d0:	54000281 	b.ne	ffff0000000e3120 <thread_switch+0x60>  // b.any
        threads[current_thread_num].saved_program_counter = current_thread_saved_program_counter;
    } else {
        // We came directly from the old stack.
        // Don't attempt to save it.
        // We don't want it anymore, because it will be replaced by the scheduler stack.
        is_threading_ready = 1;
ffff0000000e30d4:	52800023 	mov	w3, #0x1                   	// #1
ffff0000000e30d8:	f0000002 	adrp	x2, ffff0000000e6000 <FONT+0x790>
ffff0000000e30dc:	39002023 	strb	w3, [x1, #8]
    }

    // Move to next thread (round-robin)
    current_thread_num = (current_thread_num + 1) % NUMBER_OF_THREADS;
ffff0000000e30e0:	91222000 	add	x0, x0, #0x888

    // Load new stack pointer and program counter
    current_thread_saved_stack_pointer = threads[current_thread_num].saved_stack_pointer;
ffff0000000e30e4:	91234042 	add	x2, x2, #0x8d0
    current_thread_num = (current_thread_num + 1) % NUMBER_OF_THREADS;
ffff0000000e30e8:	f9400801 	ldr	x1, [x0, #16]
ffff0000000e30ec:	91000421 	add	x1, x1, #0x1
ffff0000000e30f0:	92400021 	and	x1, x1, #0x1
ffff0000000e30f4:	f9000801 	str	x1, [x0, #16]
    current_thread_saved_stack_pointer = threads[current_thread_num].saved_stack_pointer;
ffff0000000e30f8:	f9400801 	ldr	x1, [x0, #16]
ffff0000000e30fc:	8b011041 	add	x1, x2, x1, lsl #4
ffff0000000e3100:	f9400421 	ldr	x1, [x1, #8]
ffff0000000e3104:	f9000c01 	str	x1, [x0, #24]
    current_thread_saved_program_counter = threads[current_thread_num].saved_program_counter;
ffff0000000e3108:	f9400801 	ldr	x1, [x0, #16]
ffff0000000e310c:	d37cec21 	lsl	x1, x1, #4
ffff0000000e3110:	f8616841 	ldr	x1, [x2, x1]
ffff0000000e3114:	f9001001 	str	x1, [x0, #32]
}
ffff0000000e3118:	d65f03c0 	ret
ffff0000000e311c:	d503201f 	nop
        threads[current_thread_num].saved_stack_pointer = current_thread_saved_stack_pointer;
ffff0000000e3120:	f9400824 	ldr	x4, [x1, #16]
ffff0000000e3124:	f0000002 	adrp	x2, ffff0000000e6000 <FONT+0x790>
ffff0000000e3128:	91234045 	add	x5, x2, #0x8d0
ffff0000000e312c:	f9400c27 	ldr	x7, [x1, #24]
        threads[current_thread_num].saved_program_counter = current_thread_saved_program_counter;
ffff0000000e3130:	f9400823 	ldr	x3, [x1, #16]
        threads[current_thread_num].saved_stack_pointer = current_thread_saved_stack_pointer;
ffff0000000e3134:	8b0410a4 	add	x4, x5, x4, lsl #4
        threads[current_thread_num].saved_program_counter = current_thread_saved_program_counter;
ffff0000000e3138:	f9401026 	ldr	x6, [x1, #32]
ffff0000000e313c:	d37cec61 	lsl	x1, x3, #4
        threads[current_thread_num].saved_stack_pointer = current_thread_saved_stack_pointer;
ffff0000000e3140:	f9000487 	str	x7, [x4, #8]
        threads[current_thread_num].saved_program_counter = current_thread_saved_program_counter;
ffff0000000e3144:	f82168a6 	str	x6, [x5, x1]
ffff0000000e3148:	17ffffe6 	b	ffff0000000e30e0 <thread_switch+0x20>
ffff0000000e314c:	00000000 	.inst	0x00000000 ; undefined

ffff0000000e3150 <align_64_kb>:
uint32_t kernel_lower_l3_page_table_num_pages_used;
uintptr_t kernel_lower_l3_page_table_end;

uintptr_t align_64_kb(uintptr_t address) {
	uint64_t remainder = address % KB_64;
	uint64_t aligned = address - remainder;
ffff0000000e3150:	9270bc01 	and	x1, x0, #0xffffffffffff0000
	if (remainder) aligned += KB_64;
ffff0000000e3154:	72003c1f 	tst	w0, #0xffff
ffff0000000e3158:	91404020 	add	x0, x1, #0x10, lsl #12
	return aligned;
}
ffff0000000e315c:	9a811000 	csel	x0, x0, x1, ne  // ne = any
ffff0000000e3160:	d65f03c0 	ret
ffff0000000e3164:	d503201f 	nop
ffff0000000e3168:	d503201f 	nop
ffff0000000e316c:	d503201f 	nop

ffff0000000e3170 <create_table_descriptor>:

uint64_t create_table_descriptor(uintptr_t address) {
	return (address & MASK_PHYS_ADDR) | TABLE_DESC_ID;
ffff0000000e3170:	92707c00 	and	x0, x0, #0xffffffff0000
}
ffff0000000e3174:	b2400400 	orr	x0, x0, #0x3
ffff0000000e3178:	d65f03c0 	ret
ffff0000000e317c:	d503201f 	nop

ffff0000000e3180 <create_normal_block_descriptor>:

uint64_t create_normal_block_descriptor(uintptr_t address) {
	return (address & MASK_PHYS_ADDR) | NORMAL_BLOCK_DESC_ID;
ffff0000000e3180:	92707c00 	and	x0, x0, #0xffffffff0000
ffff0000000e3184:	d2808061 	mov	x1, #0x403                 	// #1027
}
ffff0000000e3188:	aa010000 	orr	x0, x0, x1
ffff0000000e318c:	d65f03c0 	ret

ffff0000000e3190 <create_device_block_descriptor>:

uint64_t create_device_block_descriptor(uintptr_t address) {
	return (address & MASK_PHYS_ADDR) | DEVICE_BLOCK_DESC_ID;
ffff0000000e3190:	92707c00 	and	x0, x0, #0xffffffff0000
ffff0000000e3194:	d28080e1 	mov	x1, #0x407                 	// #1031
}
ffff0000000e3198:	aa010000 	orr	x0, x0, x1
ffff0000000e319c:	d65f03c0 	ret

ffff0000000e31a0 <measure_page_tables>:

void measure_page_tables() {
ffff0000000e31a0:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
	// TODO: The linker reports a different end of kernel than what
	//       was calculated by the bootloader. Off by approximately 0xf8 bytes.
	// The linker gives us the address of the end of the kernel.
	kernel_l1_page_table_begin = align_64_kb(kernel_end);
ffff0000000e31a4:	f0000004 	adrp	x4, ffff0000000e6000 <FONT+0x790>
	kernel_l1_page_table_end = kernel_l1_page_table_begin + L1_TABLE_SIZE;
ffff0000000e31a8:	f0000003 	adrp	x3, ffff0000000e6000 <FONT+0x790>
void measure_page_tables() {
ffff0000000e31ac:	910003fd 	mov	x29, sp
ffff0000000e31b0:	a90153f3 	stp	x19, x20, [sp, #16]
	kernel_l1_page_table_begin = align_64_kb(kernel_end);
ffff0000000e31b4:	f0000014 	adrp	x20, ffff0000000e6000 <FONT+0x790>
ffff0000000e31b8:	f9443a80 	ldr	x0, [x20, #2160]
void measure_page_tables() {
ffff0000000e31bc:	a9025bf5 	stp	x21, x22, [sp, #32]
	uint64_t remainder = address % KB_64;
ffff0000000e31c0:	92403c01 	and	x1, x0, #0xffff
void measure_page_tables() {
ffff0000000e31c4:	a90363f7 	stp	x23, x24, [sp, #48]
	uint64_t aligned = address - remainder;
ffff0000000e31c8:	cb010000 	sub	x0, x0, x1
	if (remainder) aligned += KB_64;
ffff0000000e31cc:	f100003f 	cmp	x1, #0x0
ffff0000000e31d0:	91404001 	add	x1, x0, #0x10, lsl #12
void measure_page_tables() {
ffff0000000e31d4:	a9046bf9 	stp	x25, x26, [sp, #64]
	if (remainder) aligned += KB_64;
ffff0000000e31d8:	9a801020 	csel	x0, x1, x0, ne  // ne = any
	kernel_l1_page_table_begin = align_64_kb(kernel_end);
ffff0000000e31dc:	f9049080 	str	x0, [x4, #2336]
	kernel_l1_page_table_end = kernel_l1_page_table_begin + L1_TABLE_SIZE;
ffff0000000e31e0:	91080000 	add	x0, x0, #0x200
void measure_page_tables() {
ffff0000000e31e4:	a90573fb 	stp	x27, x28, [sp, #80]
	kernel_l1_page_table_end = kernel_l1_page_table_begin + L1_TABLE_SIZE;
ffff0000000e31e8:	f9049860 	str	x0, [x3, #2352]
	uint64_t remainder = address % KB_64;
ffff0000000e31ec:	92403c02 	and	x2, x0, #0xffff
	uint64_t aligned = address - remainder;
ffff0000000e31f0:	cb020000 	sub	x0, x0, x2
ffff0000000e31f4:	91404001 	add	x1, x0, #0x10, lsl #12
	if (remainder) aligned += KB_64;
ffff0000000e31f8:	b4000082 	cbz	x2, ffff0000000e3208 <measure_page_tables+0x68>
ffff0000000e31fc:	91408002 	add	x2, x0, #0x20, lsl #12
ffff0000000e3200:	aa0103e0 	mov	x0, x1
ffff0000000e3204:	aa0203e1 	mov	x1, x2

	// Reserve space for upper 4TB L2 Page Table
	kernel_upper_l2_page_table_begin = align_64_kb(kernel_l1_page_table_end);
ffff0000000e3208:	f000001c 	adrp	x28, ffff0000000e6000 <FONT+0x790>
	kernel_upper_l2_page_table_end = kernel_upper_l2_page_table_begin + L2_TABLE_SIZE;
ffff0000000e320c:	f000001b 	adrp	x27, ffff0000000e6000 <FONT+0x790>
	uint64_t remainder = address % KB_64;
ffff0000000e3210:	92403c22 	and	x2, x1, #0xffff
	kernel_upper_l2_page_table_begin = align_64_kb(kernel_l1_page_table_end);
ffff0000000e3214:	f9048b80 	str	x0, [x28, #2320]
	kernel_upper_l2_page_table_end = kernel_upper_l2_page_table_begin + L2_TABLE_SIZE;
ffff0000000e3218:	f904af61 	str	x1, [x27, #2392]
	uint64_t aligned = address - remainder;
ffff0000000e321c:	cb020021 	sub	x1, x1, x2
ffff0000000e3220:	91404020 	add	x0, x1, #0x10, lsl #12
	if (remainder) aligned += KB_64;
ffff0000000e3224:	b4000082 	cbz	x2, ffff0000000e3234 <measure_page_tables+0x94>
ffff0000000e3228:	91408022 	add	x2, x1, #0x20, lsl #12
ffff0000000e322c:	aa0003e1 	mov	x1, x0
ffff0000000e3230:	aa0203e0 	mov	x0, x2

	// Reserve space for upper 512 MB L3 Page Table
	kernel_upper_l3_page_table_begin = align_64_kb(kernel_upper_l2_page_table_end);
ffff0000000e3234:	f000001a 	adrp	x26, ffff0000000e6000 <FONT+0x790>
	kernel_upper_l3_page_table_end = kernel_upper_l3_page_table_begin + L3_TABLE_SIZE;
ffff0000000e3238:	f0000019 	adrp	x25, ffff0000000e6000 <FONT+0x790>
	uint64_t remainder = address % KB_64;
ffff0000000e323c:	92403c02 	and	x2, x0, #0xffff
	kernel_upper_l3_page_table_begin = align_64_kb(kernel_upper_l2_page_table_end);
ffff0000000e3240:	f9048f41 	str	x1, [x26, #2328]
	uint64_t aligned = address - remainder;
ffff0000000e3244:	cb020001 	sub	x1, x0, x2
	kernel_upper_l3_page_table_end = kernel_upper_l3_page_table_begin + L3_TABLE_SIZE;
ffff0000000e3248:	f904a720 	str	x0, [x25, #2376]
ffff0000000e324c:	91404020 	add	x0, x1, #0x10, lsl #12
	if (remainder) aligned += KB_64;
ffff0000000e3250:	b4000082 	cbz	x2, ffff0000000e3260 <measure_page_tables+0xc0>
ffff0000000e3254:	91408022 	add	x2, x1, #0x20, lsl #12
ffff0000000e3258:	aa0003e1 	mov	x1, x0
ffff0000000e325c:	aa0203e0 	mov	x0, x2

	// Reserve space for lower 4TB L2 Page Table
	kernel_lower_l2_page_table_begin = align_64_kb(kernel_upper_l3_page_table_end);
ffff0000000e3260:	f0000018 	adrp	x24, ffff0000000e6000 <FONT+0x790>
	kernel_lower_l2_page_table_end = kernel_lower_l2_page_table_begin + L2_TABLE_SIZE;
ffff0000000e3264:	f0000017 	adrp	x23, ffff0000000e6000 <FONT+0x790>
	uint64_t remainder = address % KB_64;
ffff0000000e3268:	92403c05 	and	x5, x0, #0xffff
	kernel_lower_l2_page_table_begin = align_64_kb(kernel_upper_l3_page_table_end);
ffff0000000e326c:	f9047f01 	str	x1, [x24, #2296]
	uint64_t aligned = address - remainder;
ffff0000000e3270:	cb050001 	sub	x1, x0, x5
	kernel_lower_l2_page_table_end = kernel_lower_l2_page_table_begin + L2_TABLE_SIZE;
ffff0000000e3274:	f9047ae0 	str	x0, [x23, #2288]
ffff0000000e3278:	91404022 	add	x2, x1, #0x10, lsl #12
	if (remainder) aligned += KB_64;
ffff0000000e327c:	b4000085 	cbz	x5, ffff0000000e328c <measure_page_tables+0xec>
ffff0000000e3280:	91408020 	add	x0, x1, #0x20, lsl #12
ffff0000000e3284:	aa0203e1 	mov	x1, x2
ffff0000000e3288:	aa0003e2 	mov	x2, x0

	// Reserve space for lower 512 MB L3 Page Table
	kernel_lower_l3_page_table_begin = align_64_kb(kernel_lower_l2_page_table_end);
ffff0000000e328c:	f0000016 	adrp	x22, ffff0000000e6000 <FONT+0x790>
	kernel_lower_l3_page_table_end = kernel_lower_l3_page_table_begin + L3_TABLE_SIZE;
ffff0000000e3290:	f0000015 	adrp	x21, ffff0000000e6000 <FONT+0x790>

	println("   #########################################################");
ffff0000000e3294:	d0000013 	adrp	x19, ffff0000000e5000 <main+0x7b0>
ffff0000000e3298:	91130273 	add	x19, x19, #0x4c0
	kernel_lower_l3_page_table_end = kernel_lower_l3_page_table_begin + L3_TABLE_SIZE;
ffff0000000e329c:	f9049ea2 	str	x2, [x21, #2360]
	println("   #########################################################");
ffff0000000e32a0:	aa1303e0 	mov	x0, x19
ffff0000000e32a4:	a90613a3 	stp	x3, x4, [x29, #96]
	kernel_lower_l3_page_table_begin = align_64_kb(kernel_lower_l2_page_table_end);
ffff0000000e32a8:	f904a2c1 	str	x1, [x22, #2368]
	println("   #########################################################");
ffff0000000e32ac:	97fff489 	bl	ffff0000000e04d0 <println>
	printf("   # Kernel Start Address             = %x\n", kernel_start);
ffff0000000e32b0:	9121c281 	add	x1, x20, #0x870
ffff0000000e32b4:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e32b8:	91140000 	add	x0, x0, #0x500
ffff0000000e32bc:	f9400421 	ldr	x1, [x1, #8]
ffff0000000e32c0:	97fff6e4 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel End Address               = %x\n", kernel_end);
ffff0000000e32c4:	f9443a81 	ldr	x1, [x20, #2160]
ffff0000000e32c8:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e32cc:	9114c000 	add	x0, x0, #0x530
ffff0000000e32d0:	97fff6e0 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel L1 Page Table Begin       = %x\n", kernel_l1_page_table_begin);
ffff0000000e32d4:	f94037a4 	ldr	x4, [x29, #104]
ffff0000000e32d8:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e32dc:	91158000 	add	x0, x0, #0x560
ffff0000000e32e0:	f9449081 	ldr	x1, [x4, #2336]
ffff0000000e32e4:	97fff6db 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel L1 Page Table End         = %x\n", kernel_l1_page_table_end);
ffff0000000e32e8:	f94033a3 	ldr	x3, [x29, #96]
ffff0000000e32ec:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e32f0:	91164000 	add	x0, x0, #0x590
ffff0000000e32f4:	f9449861 	ldr	x1, [x3, #2352]
ffff0000000e32f8:	97fff6d6 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel Upper L2 Page Table Begin = %x\n", kernel_upper_l2_page_table_begin);
ffff0000000e32fc:	f9448b81 	ldr	x1, [x28, #2320]
ffff0000000e3300:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3304:	91170000 	add	x0, x0, #0x5c0
ffff0000000e3308:	97fff6d2 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel Upper L2 Page Table End   = %x\n", kernel_upper_l2_page_table_end);
ffff0000000e330c:	f944af61 	ldr	x1, [x27, #2392]
ffff0000000e3310:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3314:	9117c000 	add	x0, x0, #0x5f0
ffff0000000e3318:	97fff6ce 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel Upper L3 Page Table Begin = %x\n", kernel_upper_l3_page_table_begin);
ffff0000000e331c:	f9448f41 	ldr	x1, [x26, #2328]
ffff0000000e3320:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3324:	91188000 	add	x0, x0, #0x620
ffff0000000e3328:	97fff6ca 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel Upper L3 Page Table End   = %x\n", kernel_upper_l3_page_table_end);
ffff0000000e332c:	f944a721 	ldr	x1, [x25, #2376]
ffff0000000e3330:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3334:	91194000 	add	x0, x0, #0x650
ffff0000000e3338:	97fff6c6 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel Lower L2 Page Table Begin = %x\n", kernel_lower_l2_page_table_begin);
ffff0000000e333c:	f9447f01 	ldr	x1, [x24, #2296]
ffff0000000e3340:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3344:	911a0000 	add	x0, x0, #0x680
ffff0000000e3348:	97fff6c2 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel Lower L2 Page Table End   = %x\n", kernel_lower_l2_page_table_end);
ffff0000000e334c:	f9447ae1 	ldr	x1, [x23, #2288]
ffff0000000e3350:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3354:	911ac000 	add	x0, x0, #0x6b0
ffff0000000e3358:	97fff6be 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel Lower L3 Page Table Begin = %x\n", kernel_lower_l3_page_table_begin);
ffff0000000e335c:	f944a2c1 	ldr	x1, [x22, #2368]
ffff0000000e3360:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3364:	911b8000 	add	x0, x0, #0x6e0
ffff0000000e3368:	97fff6ba 	bl	ffff0000000e0e50 <printf>
	printf("   # Kernel Lower L3 Page Table End   = %x\n", kernel_lower_l3_page_table_end);
ffff0000000e336c:	f9449ea1 	ldr	x1, [x21, #2360]
ffff0000000e3370:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3374:	911c4000 	add	x0, x0, #0x710
ffff0000000e3378:	97fff6b6 	bl	ffff0000000e0e50 <printf>
	println("   #########################################################");
ffff0000000e337c:	aa1303e0 	mov	x0, x19
}
ffff0000000e3380:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e3384:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e3388:	a94363f7 	ldp	x23, x24, [sp, #48]
ffff0000000e338c:	a9446bf9 	ldp	x25, x26, [sp, #64]
ffff0000000e3390:	a94573fb 	ldp	x27, x28, [sp, #80]
ffff0000000e3394:	a8c77bfd 	ldp	x29, x30, [sp], #112
	println("   #########################################################");
ffff0000000e3398:	17fff44e 	b	ffff0000000e04d0 <println>
ffff0000000e339c:	d503201f 	nop

ffff0000000e33a0 <measure_top_of_physical_memory>:

void measure_top_of_physical_memory() {
	uint64_t top_of_physical_memory_num_bytes_used = kernel_lower_l3_page_table_end - TOP_OF_MEMORY;
ffff0000000e33a0:	f0000000 	adrp	x0, ffff0000000e6000 <FONT+0x790>
ffff0000000e33a4:	f9449c00 	ldr	x0, [x0, #2360]
ffff0000000e33a8:	d2e00021 	mov	x1, #0x1000000000000       	// #281474976710656
ffff0000000e33ac:	8b010000 	add	x0, x0, x1
	kernel_upper_l3_page_table_num_pages_used = top_of_physical_memory_num_bytes_used / PAGE_SIZE;
ffff0000000e33b0:	d350fc02 	lsr	x2, x0, #16

	if (top_of_physical_memory_num_bytes_used % PAGE_SIZE) {
ffff0000000e33b4:	92403c01 	and	x1, x0, #0xffff
	kernel_upper_l3_page_table_num_pages_used = top_of_physical_memory_num_bytes_used / PAGE_SIZE;
ffff0000000e33b8:	2a0203e0 	mov	w0, w2
	if (top_of_physical_memory_num_bytes_used % PAGE_SIZE) {
ffff0000000e33bc:	b4000161 	cbz	x1, ffff0000000e33e8 <measure_top_of_physical_memory+0x48>
		kernel_upper_l3_page_table_num_pages_used += 1;
ffff0000000e33c0:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e33c4:	11000440 	add	w0, w2, #0x1
	}

	kernel_upper_l3_page_table_current = kernel_upper_l3_page_table_begin + (kernel_upper_l3_page_table_num_pages_used * 8);
ffff0000000e33c8:	f0000002 	adrp	x2, ffff0000000e6000 <FONT+0x790>
ffff0000000e33cc:	f9448c42 	ldr	x2, [x2, #2328]
		kernel_upper_l3_page_table_num_pages_used += 1;
ffff0000000e33d0:	b9090020 	str	w0, [x1, #2304]
	kernel_upper_l3_page_table_current = kernel_upper_l3_page_table_begin + (kernel_upper_l3_page_table_num_pages_used * 8);
ffff0000000e33d4:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e33d8:	531d7000 	lsl	w0, w0, #3
ffff0000000e33dc:	8b020000 	add	x0, x0, x2
ffff0000000e33e0:	f9048420 	str	x0, [x1, #2312]
}
ffff0000000e33e4:	d65f03c0 	ret
	kernel_upper_l3_page_table_num_pages_used = top_of_physical_memory_num_bytes_used / PAGE_SIZE;
ffff0000000e33e8:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
	kernel_upper_l3_page_table_current = kernel_upper_l3_page_table_begin + (kernel_upper_l3_page_table_num_pages_used * 8);
ffff0000000e33ec:	531d7000 	lsl	w0, w0, #3
	kernel_upper_l3_page_table_num_pages_used = top_of_physical_memory_num_bytes_used / PAGE_SIZE;
ffff0000000e33f0:	b9090022 	str	w2, [x1, #2304]
	kernel_upper_l3_page_table_current = kernel_upper_l3_page_table_begin + (kernel_upper_l3_page_table_num_pages_used * 8);
ffff0000000e33f4:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e33f8:	f0000002 	adrp	x2, ffff0000000e6000 <FONT+0x790>
ffff0000000e33fc:	f9448c42 	ldr	x2, [x2, #2328]
ffff0000000e3400:	8b020000 	add	x0, x0, x2
ffff0000000e3404:	f9048420 	str	x0, [x1, #2312]
}
ffff0000000e3408:	d65f03c0 	ret
ffff0000000e340c:	d503201f 	nop

ffff0000000e3410 <measure_peripherals_and_scheduler_stack>:

void measure_peripherals_and_scheduler_stack() {
	// 1 page used for scheduler stack
	kernel_lower_l3_page_table_num_pages_used = PERIPHERALS_PAGES + 1;
ffff0000000e3410:	f0000002 	adrp	x2, ffff0000000e6000 <FONT+0x790>
	uint64_t num_pages_skipped = L3_TOTAL_PAGES - kernel_lower_l3_page_table_num_pages_used;
	kernel_lower_l3_page_table_current = kernel_lower_l3_page_table_begin + (num_pages_skipped * 8);
ffff0000000e3414:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e3418:	f0000000 	adrp	x0, ffff0000000e6000 <FONT+0x790>
ffff0000000e341c:	f944a000 	ldr	x0, [x0, #2368]
	kernel_lower_l3_page_table_num_pages_used = PERIPHERALS_PAGES + 1;
ffff0000000e3420:	52802023 	mov	w3, #0x101                 	// #257
ffff0000000e3424:	b9095043 	str	w3, [x2, #2384]
	kernel_lower_l3_page_table_current = kernel_lower_l3_page_table_begin + (num_pages_skipped * 8);
ffff0000000e3428:	d29eff02 	mov	x2, #0xf7f8                	// #63480
ffff0000000e342c:	8b020000 	add	x0, x0, x2
ffff0000000e3430:	f9049420 	str	x0, [x1, #2344]
}
ffff0000000e3434:	d65f03c0 	ret
ffff0000000e3438:	d503201f 	nop
ffff0000000e343c:	d503201f 	nop

ffff0000000e3440 <allocate_from_lower_l3>:

uintptr_t allocate_from_lower_l3(uintptr_t paddr_start, uint32_t len) {
ffff0000000e3440:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
	if (paddr_start & 0xFFFF) {
ffff0000000e3444:	72003c1f 	tst	w0, #0xffff
uintptr_t allocate_from_lower_l3(uintptr_t paddr_start, uint32_t len) {
ffff0000000e3448:	910003fd 	mov	x29, sp
ffff0000000e344c:	a90153f3 	stp	x19, x20, [sp, #16]
ffff0000000e3450:	a9025bf5 	stp	x21, x22, [sp, #32]
ffff0000000e3454:	a90363f7 	stp	x23, x24, [sp, #48]
	if (paddr_start & 0xFFFF) {
ffff0000000e3458:	540008a1 	b.ne	ffff0000000e356c <allocate_from_lower_l3+0x12c>  // b.any
ffff0000000e345c:	aa0003f3 	mov	x19, x0
		error("Give aligned addresses when allocating!");
	}

	uint32_t num_pages_required = len / PAGE_SIZE;
	if (len % PAGE_SIZE) {
ffff0000000e3460:	12003c20 	and	w0, w1, #0xffff
		num_pages_required += 1;
ffff0000000e3464:	7100001f 	cmp	w0, #0x0
ffff0000000e3468:	2a0103f8 	mov	w24, w1
ffff0000000e346c:	1a9f07f7 	cset	w23, ne  // ne = any
	}

	// Start from the last page that needs to be allocated
	uintptr_t paddr_cur = paddr_start + ((num_pages_required - 1) * PAGE_SIZE);
ffff0000000e3470:	529fffe2 	mov	w2, #0xffff                	// #65535
		num_pages_required += 1;
ffff0000000e3474:	0b5842f7 	add	w23, w23, w24, lsr #16
ffff0000000e3478:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e347c:	b9495023 	ldr	w3, [x1, #2384]
	uintptr_t paddr_cur = paddr_start + ((num_pages_required - 1) * PAGE_SIZE);
ffff0000000e3480:	0b0202f4 	add	w20, w23, w2
ffff0000000e3484:	53103e94 	lsl	w20, w20, #16
ffff0000000e3488:	8b130294 	add	x20, x20, x19
	uintptr_t last_page_paddr = paddr_cur;

	while(paddr_cur >= paddr_start) {
ffff0000000e348c:	eb14027f 	cmp	x19, x20
ffff0000000e3490:	54000248 	b.hi	ffff0000000e34d8 <allocate_from_lower_l3+0x98>  // b.pmore
ffff0000000e3494:	11000463 	add	w3, w3, #0x1
ffff0000000e3498:	aa1403e0 	mov	x0, x20
ffff0000000e349c:	f0000005 	adrp	x5, ffff0000000e6000 <FONT+0x790>
	return (address & MASK_PHYS_ADDR) | NORMAL_BLOCK_DESC_ID;
ffff0000000e34a0:	d2808067 	mov	x7, #0x403                 	// #1027
ffff0000000e34a4:	14000002 	b	ffff0000000e34ac <allocate_from_lower_l3+0x6c>
ffff0000000e34a8:	2a0603e3 	mov	w3, w6
		// Move the pointer to the current page table entry up by one.
		kernel_lower_l3_page_table_current -= 8;
ffff0000000e34ac:	f94494a4 	ldr	x4, [x5, #2344]
	return (address & MASK_PHYS_ADDR) | NORMAL_BLOCK_DESC_ID;
ffff0000000e34b0:	92707c02 	and	x2, x0, #0xffffffff0000
ffff0000000e34b4:	aa070042 	orr	x2, x2, x7
		
		// Increment number of pages used
		kernel_lower_l3_page_table_num_pages_used += 1;

		// Shift the current physical address up by a page
		paddr_cur -= PAGE_SIZE;
ffff0000000e34b8:	d1404000 	sub	x0, x0, #0x10, lsl #12
		kernel_lower_l3_page_table_current -= 8;
ffff0000000e34bc:	d1002086 	sub	x6, x4, #0x8
ffff0000000e34c0:	f90494a6 	str	x6, [x5, #2344]
	while(paddr_cur >= paddr_start) {
ffff0000000e34c4:	eb00027f 	cmp	x19, x0
ffff0000000e34c8:	11000466 	add	w6, w3, #0x1
		*((uint64_t*)(kernel_lower_l3_page_table_current)) = create_normal_block_descriptor(paddr_cur);
ffff0000000e34cc:	f81f8082 	stur	x2, [x4, #-8]
	while(paddr_cur >= paddr_start) {
ffff0000000e34d0:	54fffec9 	b.ls	ffff0000000e34a8 <allocate_from_lower_l3+0x68>  // b.plast
ffff0000000e34d4:	b9095023 	str	w3, [x1, #2384]
	}

	// TODO: It is possible to overflow the L3 page table. Prevent that from happening!

	// TODO: This math is hacky and I don't like it. Find a better way!									
	uintptr_t vaddr_start = 0xFFFFFFFFFFFF0000 - ((kernel_lower_l3_page_table_num_pages_used - 1) * PAGE_SIZE);
ffff0000000e34d8:	529fffe0 	mov	w0, #0xffff                	// #65535
ffff0000000e34dc:	0b000063 	add	w3, w3, w0
ffff0000000e34e0:	53103c63 	lsl	w3, w3, #16

	println("   #####################################################");
ffff0000000e34e4:	d0000016 	adrp	x22, ffff0000000e5000 <main+0x7b0>
ffff0000000e34e8:	911da2d6 	add	x22, x22, #0x768
ffff0000000e34ec:	aa1603e0 	mov	x0, x22
	uintptr_t vaddr_start = 0xFFFFFFFFFFFF0000 - ((kernel_lower_l3_page_table_num_pages_used - 1) * PAGE_SIZE);
ffff0000000e34f0:	929ffff5 	mov	x21, #0xffffffffffff0000    	// #-65536
ffff0000000e34f4:	cb0302b5 	sub	x21, x21, x3
	println("   #####################################################");
ffff0000000e34f8:	97fff3f6 	bl	ffff0000000e04d0 <println>
	printf("   # Allocation Size            = %u\n", len);
ffff0000000e34fc:	2a1803e1 	mov	w1, w24
ffff0000000e3500:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3504:	911ea000 	add	x0, x0, #0x7a8
ffff0000000e3508:	97fff652 	bl	ffff0000000e0e50 <printf>
	printf("   # Physical Address Start     = %x\n", paddr_start);
ffff0000000e350c:	aa1303e1 	mov	x1, x19
ffff0000000e3510:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3514:	911f4000 	add	x0, x0, #0x7d0
ffff0000000e3518:	97fff64e 	bl	ffff0000000e0e50 <printf>
	printf("   # Number of Pages Required   = %u\n", num_pages_required);
ffff0000000e351c:	2a1703e1 	mov	w1, w23
ffff0000000e3520:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3524:	911fe000 	add	x0, x0, #0x7f8
ffff0000000e3528:	97fff64a 	bl	ffff0000000e0e50 <printf>
	printf("   # Last Page Physical Address = %x\n", last_page_paddr);
ffff0000000e352c:	aa1403e1 	mov	x1, x20
ffff0000000e3530:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3534:	91208000 	add	x0, x0, #0x820
ffff0000000e3538:	97fff646 	bl	ffff0000000e0e50 <printf>
	printf("   # Virtual Address Start      = %x\n", vaddr_start);
ffff0000000e353c:	aa1503e1 	mov	x1, x21
ffff0000000e3540:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3544:	91212000 	add	x0, x0, #0x848
ffff0000000e3548:	97fff642 	bl	ffff0000000e0e50 <printf>
	println("   #####################################################");
ffff0000000e354c:	aa1603e0 	mov	x0, x22
ffff0000000e3550:	97fff3e0 	bl	ffff0000000e04d0 <println>

	return vaddr_start;
}
ffff0000000e3554:	aa1503e0 	mov	x0, x21
ffff0000000e3558:	a94153f3 	ldp	x19, x20, [sp, #16]
ffff0000000e355c:	a9425bf5 	ldp	x21, x22, [sp, #32]
ffff0000000e3560:	a94363f7 	ldp	x23, x24, [sp, #48]
ffff0000000e3564:	a8c47bfd 	ldp	x29, x30, [sp], #64
ffff0000000e3568:	d65f03c0 	ret
		error("Give aligned addresses when allocating!");
ffff0000000e356c:	d0000000 	adrp	x0, ffff0000000e5000 <main+0x7b0>
ffff0000000e3570:	911d0000 	add	x0, x0, #0x740
ffff0000000e3574:	97fff73b 	bl	ffff0000000e1260 <error>
ffff0000000e3578:	d503201f 	nop
ffff0000000e357c:	d503201f 	nop

ffff0000000e3580 <vmem_init>:

void vmem_init() {
ffff0000000e3580:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
ffff0000000e3584:	910003fd 	mov	x29, sp
	measure_page_tables();
ffff0000000e3588:	97ffff06 	bl	ffff0000000e31a0 <measure_page_tables>
	uint64_t top_of_physical_memory_num_bytes_used = kernel_lower_l3_page_table_end - TOP_OF_MEMORY;
ffff0000000e358c:	f0000000 	adrp	x0, ffff0000000e6000 <FONT+0x790>
ffff0000000e3590:	f9449c00 	ldr	x0, [x0, #2360]
ffff0000000e3594:	d2e00021 	mov	x1, #0x1000000000000       	// #281474976710656
ffff0000000e3598:	8b010000 	add	x0, x0, x1
	kernel_upper_l3_page_table_num_pages_used = top_of_physical_memory_num_bytes_used / PAGE_SIZE;
ffff0000000e359c:	d350fc02 	lsr	x2, x0, #16
	if (top_of_physical_memory_num_bytes_used % PAGE_SIZE) {
ffff0000000e35a0:	92403c01 	and	x1, x0, #0xffff
ffff0000000e35a4:	b40002a1 	cbz	x1, ffff0000000e35f8 <vmem_init+0x78>
		kernel_upper_l3_page_table_num_pages_used += 1;
ffff0000000e35a8:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e35ac:	11000440 	add	w0, w2, #0x1
ffff0000000e35b0:	b9090020 	str	w0, [x1, #2304]
	kernel_upper_l3_page_table_current = kernel_upper_l3_page_table_begin + (kernel_upper_l3_page_table_num_pages_used * 8);
ffff0000000e35b4:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e35b8:	f9448c26 	ldr	x6, [x1, #2328]
ffff0000000e35bc:	f0000005 	adrp	x5, ffff0000000e6000 <FONT+0x790>
	kernel_lower_l3_page_table_num_pages_used = PERIPHERALS_PAGES + 1;
ffff0000000e35c0:	f0000003 	adrp	x3, ffff0000000e6000 <FONT+0x790>
	kernel_lower_l3_page_table_current = kernel_lower_l3_page_table_begin + (num_pages_skipped * 8);
ffff0000000e35c4:	f0000002 	adrp	x2, ffff0000000e6000 <FONT+0x790>
ffff0000000e35c8:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e35cc:	f944a021 	ldr	x1, [x1, #2368]
	kernel_upper_l3_page_table_current = kernel_upper_l3_page_table_begin + (kernel_upper_l3_page_table_num_pages_used * 8);
ffff0000000e35d0:	531d7000 	lsl	w0, w0, #3
	kernel_lower_l3_page_table_num_pages_used = PERIPHERALS_PAGES + 1;
ffff0000000e35d4:	52802024 	mov	w4, #0x101                 	// #257
	kernel_upper_l3_page_table_current = kernel_upper_l3_page_table_begin + (kernel_upper_l3_page_table_num_pages_used * 8);
ffff0000000e35d8:	8b060000 	add	x0, x0, x6
	kernel_lower_l3_page_table_num_pages_used = PERIPHERALS_PAGES + 1;
ffff0000000e35dc:	b9095064 	str	w4, [x3, #2384]
	kernel_lower_l3_page_table_current = kernel_lower_l3_page_table_begin + (num_pages_skipped * 8);
ffff0000000e35e0:	d29eff06 	mov	x6, #0xf7f8                	// #63480
	kernel_upper_l3_page_table_current = kernel_upper_l3_page_table_begin + (kernel_upper_l3_page_table_num_pages_used * 8);
ffff0000000e35e4:	f90484a0 	str	x0, [x5, #2312]
	kernel_lower_l3_page_table_current = kernel_lower_l3_page_table_begin + (num_pages_skipped * 8);
ffff0000000e35e8:	8b060021 	add	x1, x1, x6
ffff0000000e35ec:	f9049441 	str	x1, [x2, #2344]
	measure_top_of_physical_memory();
	measure_peripherals_and_scheduler_stack();
}
ffff0000000e35f0:	a8c17bfd 	ldp	x29, x30, [sp], #16
ffff0000000e35f4:	d65f03c0 	ret
	kernel_upper_l3_page_table_num_pages_used = top_of_physical_memory_num_bytes_used / PAGE_SIZE;
ffff0000000e35f8:	f0000001 	adrp	x1, ffff0000000e6000 <FONT+0x790>
ffff0000000e35fc:	2a0203e0 	mov	w0, w2
ffff0000000e3600:	b9090022 	str	w2, [x1, #2304]
ffff0000000e3604:	17ffffec 	b	ffff0000000e35b4 <vmem_init+0x34>

ffff0000000e3608 <variant>:
.section ".text"

.global variant
variant:
	mrs x0, MIDR_EL1
ffff0000000e3608:	d5380000 	mrs	x0, midr_el1
	and x0, x0, #0x100000	// Only bits (23-20) are relevant
ffff0000000e360c:	926c0000 	and	x0, x0, #0x100000
	lsr x0, x0, #20		// Shift those bits right
ffff0000000e3610:	d354fc00 	lsr	x0, x0, #20
	ret
ffff0000000e3614:	d65f03c0 	ret

ffff0000000e3618 <implementer>:

.global implementer
implementer:
	mrs x0, MIDR_EL1
ffff0000000e3618:	d5380000 	mrs	x0, midr_el1
	lsr x0, x0, #24		// Only bits (31-24) are relevant
ffff0000000e361c:	d358fc00 	lsr	x0, x0, #24
	ret
ffff0000000e3620:	d65f03c0 	ret

ffff0000000e3624 <exception_level>:

.global exception_level
exception_level:
	mrs x0, CurrentEL
ffff0000000e3624:	d5384240 	mrs	x0, currentel
	and x0, x0, #12		// Only bits 3 and 2 are relevant
ffff0000000e3628:	927e0400 	and	x0, x0, #0xc
	lsr x0, x0, #2		// Shift right by 2
ffff0000000e362c:	d342fc00 	lsr	x0, x0, #2
	ret
ffff0000000e3630:	d65f03c0 	ret
ffff0000000e3634:	00000000 	.inst	0x00000000 ; undefined

ffff0000000e3638 <irq_enable>:
.section ".text"

.global irq_enable
irq_enable:
	msr DAIFClr, #15
ffff0000000e3638:	d5034fff 	msr	daifclr, #0xf
	ret
ffff0000000e363c:	d65f03c0 	ret

ffff0000000e3640 <irq_disable>:

.global irq_disable
irq_disable:
	msr DAIFSet, #15
ffff0000000e3640:	d5034fdf 	msr	daifset, #0xf
	ret
ffff0000000e3644:	d65f03c0 	ret

ffff0000000e3648 <interrupt_status_1>:

.global interrupt_status_1
interrupt_status_1:
	mrs x0, ISR_EL1
ffff0000000e3648:	d538c100 	mrs	x0, isr_el1
	ret
ffff0000000e364c:	d65f03c0 	ret

ffff0000000e3650 <exception_syndrome_2>:

.global exception_syndrome_2
exception_syndrome_2:
	mrs x0, ESR_EL2
ffff0000000e3650:	d53c5200 	mrs	x0, esr_el2
	ret
ffff0000000e3654:	d65f03c0 	ret

ffff0000000e3658 <exception_link_2>:

.global exception_link_2
exception_link_2:
	mrs x0, ELR_EL2
ffff0000000e3658:	d53c4020 	mrs	x0, elr_el2
	ret
ffff0000000e365c:	d65f03c0 	ret

ffff0000000e3660 <saved_program_state_2>:

.global saved_program_state_2
saved_program_state_2:
	mrs x0, SPSR_EL2
ffff0000000e3660:	d53c4000 	mrs	x0, spsr_el2
	ret
ffff0000000e3664:	d65f03c0 	ret

ffff0000000e3668 <exception_syndrome_1>:

.global exception_syndrome_1
exception_syndrome_1:
	mrs x0, ESR_EL1
ffff0000000e3668:	d5385200 	mrs	x0, esr_el1
	ret
ffff0000000e366c:	d65f03c0 	ret

ffff0000000e3670 <exception_link_1>:

.global exception_link_1
exception_link_1:
	mrs x0, ELR_EL1
ffff0000000e3670:	d5384020 	mrs	x0, elr_el1
	ret
ffff0000000e3674:	d65f03c0 	ret

ffff0000000e3678 <saved_program_state_1>:

.global saved_program_state_1
saved_program_state_1:
	mrs x0, SPSR_EL1
ffff0000000e3678:	d5384000 	mrs	x0, spsr_el1
	ret
ffff0000000e367c:	d65f03c0 	ret

ffff0000000e3680 <exception_handler>:
exception_handler:
	// Disable all H/W interrupts.
	// It's hard to deal with another
	// H/W interrupt while this one is
	// being dealt with.
	msr DAIFSet, #15
ffff0000000e3680:	d5034fdf 	msr	daifset, #0xf

	// Wait for all data accesses
	DSB SY
ffff0000000e3684:	d5033f9f 	dsb	sy

	// Wait for all instructions
	ISB SY
ffff0000000e3688:	d5033fdf 	isb

	// Save all registers
	sub sp, sp, #16
ffff0000000e368c:	d10043ff 	sub	sp, sp, #0x10
	stp x0,x1,[sp]
ffff0000000e3690:	a90007e0 	stp	x0, x1, [sp]

	sub sp, sp, #16
ffff0000000e3694:	d10043ff 	sub	sp, sp, #0x10
	stp x2,x3,[sp]
ffff0000000e3698:	a9000fe2 	stp	x2, x3, [sp]

	sub sp, sp, #16
ffff0000000e369c:	d10043ff 	sub	sp, sp, #0x10
	stp x4,x5,[sp]
ffff0000000e36a0:	a90017e4 	stp	x4, x5, [sp]

	sub sp, sp, #16
ffff0000000e36a4:	d10043ff 	sub	sp, sp, #0x10
	stp x6,x7,[sp]
ffff0000000e36a8:	a9001fe6 	stp	x6, x7, [sp]

	sub sp, sp, #16
ffff0000000e36ac:	d10043ff 	sub	sp, sp, #0x10
	stp x8,x9,[sp]
ffff0000000e36b0:	a90027e8 	stp	x8, x9, [sp]

	sub sp, sp, #16
ffff0000000e36b4:	d10043ff 	sub	sp, sp, #0x10
	stp x10,x11,[sp]
ffff0000000e36b8:	a9002fea 	stp	x10, x11, [sp]

	sub sp, sp, #16
ffff0000000e36bc:	d10043ff 	sub	sp, sp, #0x10
	stp x12,x13,[sp]
ffff0000000e36c0:	a90037ec 	stp	x12, x13, [sp]

	sub sp, sp, #16
ffff0000000e36c4:	d10043ff 	sub	sp, sp, #0x10
	stp x14,x15,[sp]
ffff0000000e36c8:	a9003fee 	stp	x14, x15, [sp]

	sub sp, sp, #16
ffff0000000e36cc:	d10043ff 	sub	sp, sp, #0x10
	stp x16,x17,[sp]
ffff0000000e36d0:	a90047f0 	stp	x16, x17, [sp]

	sub sp, sp, #16
ffff0000000e36d4:	d10043ff 	sub	sp, sp, #0x10
	stp x18,x19,[sp]
ffff0000000e36d8:	a9004ff2 	stp	x18, x19, [sp]

	sub sp, sp, #16
ffff0000000e36dc:	d10043ff 	sub	sp, sp, #0x10
	stp x20,x21,[sp]
ffff0000000e36e0:	a90057f4 	stp	x20, x21, [sp]

	sub sp, sp, #16
ffff0000000e36e4:	d10043ff 	sub	sp, sp, #0x10
	stp x22,x23,[sp]
ffff0000000e36e8:	a9005ff6 	stp	x22, x23, [sp]

	sub sp, sp, #16
ffff0000000e36ec:	d10043ff 	sub	sp, sp, #0x10
	stp x24,x25,[sp]
ffff0000000e36f0:	a90067f8 	stp	x24, x25, [sp]

	sub sp, sp, #16
ffff0000000e36f4:	d10043ff 	sub	sp, sp, #0x10
	stp x26,x27,[sp]
ffff0000000e36f8:	a9006ffa 	stp	x26, x27, [sp]

	sub sp, sp, #16
ffff0000000e36fc:	d10043ff 	sub	sp, sp, #0x10
	stp x28,x29,[sp]
ffff0000000e3700:	a90077fc 	stp	x28, x29, [sp]

	sub sp, sp, #16
ffff0000000e3704:	d10043ff 	sub	sp, sp, #0x10
	stp x30,x0,[sp]
ffff0000000e3708:	a90003fe 	stp	x30, x0, [sp]

	// Store return address for the current thread
	mrs x0, ELR_EL1
ffff0000000e370c:	d5384020 	mrs	x0, elr_el1
	ldr x1, =current_thread_saved_program_counter
ffff0000000e3710:	58000681 	ldr	x1, ffff0000000e37e0 <restore_registers+0x90>
	str x0, [x1, 0]
ffff0000000e3714:	f9000020 	str	x0, [x1]

	// Store stack pointer for the current thread
	mov x0, sp
ffff0000000e3718:	910003e0 	mov	x0, sp
	ldr x1, =current_thread_saved_stack_pointer
ffff0000000e371c:	58000661 	ldr	x1, ffff0000000e37e8 <restore_registers+0x98>
	str x0, [x1, 0]
ffff0000000e3720:	f9000020 	str	x0, [x1]

	// Set stack to the scheduler stack
	ldr x0, =0xFFFFFFFFFF000000
ffff0000000e3724:	58000660 	ldr	x0, ffff0000000e37f0 <restore_registers+0xa0>
	add sp, x0, #0
ffff0000000e3728:	9100001f 	mov	sp, x0

	// Go to EL1 exception handler
	bl exception_handler_1
ffff0000000e372c:	97fff6dd 	bl	ffff0000000e12a0 <exception_handler_1>

	// Wait for all data accesses
	DSB SY
ffff0000000e3730:	d5033f9f 	dsb	sy

	// Wait for all instructions
	ISB SY
ffff0000000e3734:	d5033fdf 	isb

	// Restore return address for the current thread
	ldr x0, =current_thread_saved_program_counter
ffff0000000e3738:	58000540 	ldr	x0, ffff0000000e37e0 <restore_registers+0x90>
	ldr x1, [x0, 0]
ffff0000000e373c:	f9400001 	ldr	x1, [x0]
	msr ELR_EL1, x1
ffff0000000e3740:	d5184021 	msr	elr_el1, x1

	// Restore stack pointer for the current thread
	ldr x0, =current_thread_saved_stack_pointer
ffff0000000e3744:	58000520 	ldr	x0, ffff0000000e37e8 <restore_registers+0x98>
	ldr x1, [x0, 0]
ffff0000000e3748:	f9400001 	ldr	x1, [x0]
	add sp, x1, #0
ffff0000000e374c:	9100003f 	mov	sp, x1

ffff0000000e3750 <restore_registers>:

restore_registers:
	ldp x30,x0,[sp]
ffff0000000e3750:	a94003fe 	ldp	x30, x0, [sp]
	add sp, sp, #16
ffff0000000e3754:	910043ff 	add	sp, sp, #0x10

	ldp x28,x29,[sp]
ffff0000000e3758:	a94077fc 	ldp	x28, x29, [sp]
	add sp, sp, #16
ffff0000000e375c:	910043ff 	add	sp, sp, #0x10

	ldp x26,x27,[sp]
ffff0000000e3760:	a9406ffa 	ldp	x26, x27, [sp]
	add sp, sp, #16
ffff0000000e3764:	910043ff 	add	sp, sp, #0x10

	ldp x24,x25,[sp]
ffff0000000e3768:	a94067f8 	ldp	x24, x25, [sp]
	add sp, sp, #16
ffff0000000e376c:	910043ff 	add	sp, sp, #0x10

	ldp x22,x23,[sp]
ffff0000000e3770:	a9405ff6 	ldp	x22, x23, [sp]
	add sp, sp, #16
ffff0000000e3774:	910043ff 	add	sp, sp, #0x10

	ldp x20,x21,[sp]
ffff0000000e3778:	a94057f4 	ldp	x20, x21, [sp]
	add sp, sp, #16
ffff0000000e377c:	910043ff 	add	sp, sp, #0x10

	ldp x18,x19,[sp]
ffff0000000e3780:	a9404ff2 	ldp	x18, x19, [sp]
	add sp, sp, #16
ffff0000000e3784:	910043ff 	add	sp, sp, #0x10

	ldp x16,x17,[sp]
ffff0000000e3788:	a94047f0 	ldp	x16, x17, [sp]
	add sp, sp, #16
ffff0000000e378c:	910043ff 	add	sp, sp, #0x10

	ldp x14,x15,[sp]
ffff0000000e3790:	a9403fee 	ldp	x14, x15, [sp]
	add sp, sp, #16
ffff0000000e3794:	910043ff 	add	sp, sp, #0x10

	ldp x12,x13,[sp]
ffff0000000e3798:	a94037ec 	ldp	x12, x13, [sp]
	add sp, sp, #16
ffff0000000e379c:	910043ff 	add	sp, sp, #0x10

	ldp x10,x11,[sp]
ffff0000000e37a0:	a9402fea 	ldp	x10, x11, [sp]
	add sp, sp, #16
ffff0000000e37a4:	910043ff 	add	sp, sp, #0x10

	ldp x8,x9,[sp]
ffff0000000e37a8:	a94027e8 	ldp	x8, x9, [sp]
	add sp, sp, #16
ffff0000000e37ac:	910043ff 	add	sp, sp, #0x10

	ldp x6,x7,[sp]
ffff0000000e37b0:	a9401fe6 	ldp	x6, x7, [sp]
	add sp, sp, #16
ffff0000000e37b4:	910043ff 	add	sp, sp, #0x10

	ldp x4,x5,[sp]
ffff0000000e37b8:	a94017e4 	ldp	x4, x5, [sp]
	add sp, sp, #16
ffff0000000e37bc:	910043ff 	add	sp, sp, #0x10

	ldp x2,x3,[sp]
ffff0000000e37c0:	a9400fe2 	ldp	x2, x3, [sp]
	add sp, sp, #16
ffff0000000e37c4:	910043ff 	add	sp, sp, #0x10

	ldp x0,x1,[sp]
ffff0000000e37c8:	a94007e0 	ldp	x0, x1, [sp]
	add sp, sp, #16
ffff0000000e37cc:	910043ff 	add	sp, sp, #0x10

	// Re-enable H/W interrupts
	msr DAIFClr, #15
ffff0000000e37d0:	d5034fff 	msr	daifclr, #0xf

	// Wait for all data accesses
	DSB SY
ffff0000000e37d4:	d5033f9f 	dsb	sy

	// Wait for all instructions
	ISB SY
ffff0000000e37d8:	d5033fdf 	isb

	// Return from exception
	// At this point, ELR_ELn
	// should be set correctly
	eret
ffff0000000e37dc:	d69f03e0 	eret
ffff0000000e37e0:	000e68a8 	.word	0x000e68a8
ffff0000000e37e4:	ffff0000 	.word	0xffff0000
ffff0000000e37e8:	000e68a0 	.word	0x000e68a0
ffff0000000e37ec:	ffff0000 	.word	0xffff0000
ffff0000000e37f0:	ff000000 	.word	0xff000000
ffff0000000e37f4:	ffffffff 	.word	0xffffffff
	...

ffff0000000e3800 <set_vector_table>:
.section ".text"

.global set_vector_table
set_vector_table:
	adr x0, vector_table
ffff0000000e3800:	10004000 	adr	x0, ffff0000000e4000 <synchronous_curr_sp0>
	msr VBAR_EL1, x0
ffff0000000e3804:	d518c000 	msr	vbar_el1, x0
	ret
ffff0000000e3808:	d65f03c0 	ret
ffff0000000e380c:	d503201f 	nop
ffff0000000e3810:	d503201f 	nop
ffff0000000e3814:	d503201f 	nop
ffff0000000e3818:	d503201f 	nop
ffff0000000e381c:	d503201f 	nop
ffff0000000e3820:	d503201f 	nop
ffff0000000e3824:	d503201f 	nop
ffff0000000e3828:	d503201f 	nop
ffff0000000e382c:	d503201f 	nop
ffff0000000e3830:	d503201f 	nop
ffff0000000e3834:	d503201f 	nop
ffff0000000e3838:	d503201f 	nop
ffff0000000e383c:	d503201f 	nop
ffff0000000e3840:	d503201f 	nop
ffff0000000e3844:	d503201f 	nop
ffff0000000e3848:	d503201f 	nop
ffff0000000e384c:	d503201f 	nop
ffff0000000e3850:	d503201f 	nop
ffff0000000e3854:	d503201f 	nop
ffff0000000e3858:	d503201f 	nop
ffff0000000e385c:	d503201f 	nop
ffff0000000e3860:	d503201f 	nop
ffff0000000e3864:	d503201f 	nop
ffff0000000e3868:	d503201f 	nop
ffff0000000e386c:	d503201f 	nop
ffff0000000e3870:	d503201f 	nop
ffff0000000e3874:	d503201f 	nop
ffff0000000e3878:	d503201f 	nop
ffff0000000e387c:	d503201f 	nop
ffff0000000e3880:	d503201f 	nop
ffff0000000e3884:	d503201f 	nop
ffff0000000e3888:	d503201f 	nop
ffff0000000e388c:	d503201f 	nop
ffff0000000e3890:	d503201f 	nop
ffff0000000e3894:	d503201f 	nop
ffff0000000e3898:	d503201f 	nop
ffff0000000e389c:	d503201f 	nop
ffff0000000e38a0:	d503201f 	nop
ffff0000000e38a4:	d503201f 	nop
ffff0000000e38a8:	d503201f 	nop
ffff0000000e38ac:	d503201f 	nop
ffff0000000e38b0:	d503201f 	nop
ffff0000000e38b4:	d503201f 	nop
ffff0000000e38b8:	d503201f 	nop
ffff0000000e38bc:	d503201f 	nop
ffff0000000e38c0:	d503201f 	nop
ffff0000000e38c4:	d503201f 	nop
ffff0000000e38c8:	d503201f 	nop
ffff0000000e38cc:	d503201f 	nop
ffff0000000e38d0:	d503201f 	nop
ffff0000000e38d4:	d503201f 	nop
ffff0000000e38d8:	d503201f 	nop
ffff0000000e38dc:	d503201f 	nop
ffff0000000e38e0:	d503201f 	nop
ffff0000000e38e4:	d503201f 	nop
ffff0000000e38e8:	d503201f 	nop
ffff0000000e38ec:	d503201f 	nop
ffff0000000e38f0:	d503201f 	nop
ffff0000000e38f4:	d503201f 	nop
ffff0000000e38f8:	d503201f 	nop
ffff0000000e38fc:	d503201f 	nop
ffff0000000e3900:	d503201f 	nop
ffff0000000e3904:	d503201f 	nop
ffff0000000e3908:	d503201f 	nop
ffff0000000e390c:	d503201f 	nop
ffff0000000e3910:	d503201f 	nop
ffff0000000e3914:	d503201f 	nop
ffff0000000e3918:	d503201f 	nop
ffff0000000e391c:	d503201f 	nop
ffff0000000e3920:	d503201f 	nop
ffff0000000e3924:	d503201f 	nop
ffff0000000e3928:	d503201f 	nop
ffff0000000e392c:	d503201f 	nop
ffff0000000e3930:	d503201f 	nop
ffff0000000e3934:	d503201f 	nop
ffff0000000e3938:	d503201f 	nop
ffff0000000e393c:	d503201f 	nop
ffff0000000e3940:	d503201f 	nop
ffff0000000e3944:	d503201f 	nop
ffff0000000e3948:	d503201f 	nop
ffff0000000e394c:	d503201f 	nop
ffff0000000e3950:	d503201f 	nop
ffff0000000e3954:	d503201f 	nop
ffff0000000e3958:	d503201f 	nop
ffff0000000e395c:	d503201f 	nop
ffff0000000e3960:	d503201f 	nop
ffff0000000e3964:	d503201f 	nop
ffff0000000e3968:	d503201f 	nop
ffff0000000e396c:	d503201f 	nop
ffff0000000e3970:	d503201f 	nop
ffff0000000e3974:	d503201f 	nop
ffff0000000e3978:	d503201f 	nop
ffff0000000e397c:	d503201f 	nop
ffff0000000e3980:	d503201f 	nop
ffff0000000e3984:	d503201f 	nop
ffff0000000e3988:	d503201f 	nop
ffff0000000e398c:	d503201f 	nop
ffff0000000e3990:	d503201f 	nop
ffff0000000e3994:	d503201f 	nop
ffff0000000e3998:	d503201f 	nop
ffff0000000e399c:	d503201f 	nop
ffff0000000e39a0:	d503201f 	nop
ffff0000000e39a4:	d503201f 	nop
ffff0000000e39a8:	d503201f 	nop
ffff0000000e39ac:	d503201f 	nop
ffff0000000e39b0:	d503201f 	nop
ffff0000000e39b4:	d503201f 	nop
ffff0000000e39b8:	d503201f 	nop
ffff0000000e39bc:	d503201f 	nop
ffff0000000e39c0:	d503201f 	nop
ffff0000000e39c4:	d503201f 	nop
ffff0000000e39c8:	d503201f 	nop
ffff0000000e39cc:	d503201f 	nop
ffff0000000e39d0:	d503201f 	nop
ffff0000000e39d4:	d503201f 	nop
ffff0000000e39d8:	d503201f 	nop
ffff0000000e39dc:	d503201f 	nop
ffff0000000e39e0:	d503201f 	nop
ffff0000000e39e4:	d503201f 	nop
ffff0000000e39e8:	d503201f 	nop
ffff0000000e39ec:	d503201f 	nop
ffff0000000e39f0:	d503201f 	nop
ffff0000000e39f4:	d503201f 	nop
ffff0000000e39f8:	d503201f 	nop
ffff0000000e39fc:	d503201f 	nop
ffff0000000e3a00:	d503201f 	nop
ffff0000000e3a04:	d503201f 	nop
ffff0000000e3a08:	d503201f 	nop
ffff0000000e3a0c:	d503201f 	nop
ffff0000000e3a10:	d503201f 	nop
ffff0000000e3a14:	d503201f 	nop
ffff0000000e3a18:	d503201f 	nop
ffff0000000e3a1c:	d503201f 	nop
ffff0000000e3a20:	d503201f 	nop
ffff0000000e3a24:	d503201f 	nop
ffff0000000e3a28:	d503201f 	nop
ffff0000000e3a2c:	d503201f 	nop
ffff0000000e3a30:	d503201f 	nop
ffff0000000e3a34:	d503201f 	nop
ffff0000000e3a38:	d503201f 	nop
ffff0000000e3a3c:	d503201f 	nop
ffff0000000e3a40:	d503201f 	nop
ffff0000000e3a44:	d503201f 	nop
ffff0000000e3a48:	d503201f 	nop
ffff0000000e3a4c:	d503201f 	nop
ffff0000000e3a50:	d503201f 	nop
ffff0000000e3a54:	d503201f 	nop
ffff0000000e3a58:	d503201f 	nop
ffff0000000e3a5c:	d503201f 	nop
ffff0000000e3a60:	d503201f 	nop
ffff0000000e3a64:	d503201f 	nop
ffff0000000e3a68:	d503201f 	nop
ffff0000000e3a6c:	d503201f 	nop
ffff0000000e3a70:	d503201f 	nop
ffff0000000e3a74:	d503201f 	nop
ffff0000000e3a78:	d503201f 	nop
ffff0000000e3a7c:	d503201f 	nop
ffff0000000e3a80:	d503201f 	nop
ffff0000000e3a84:	d503201f 	nop
ffff0000000e3a88:	d503201f 	nop
ffff0000000e3a8c:	d503201f 	nop
ffff0000000e3a90:	d503201f 	nop
ffff0000000e3a94:	d503201f 	nop
ffff0000000e3a98:	d503201f 	nop
ffff0000000e3a9c:	d503201f 	nop
ffff0000000e3aa0:	d503201f 	nop
ffff0000000e3aa4:	d503201f 	nop
ffff0000000e3aa8:	d503201f 	nop
ffff0000000e3aac:	d503201f 	nop
ffff0000000e3ab0:	d503201f 	nop
ffff0000000e3ab4:	d503201f 	nop
ffff0000000e3ab8:	d503201f 	nop
ffff0000000e3abc:	d503201f 	nop
ffff0000000e3ac0:	d503201f 	nop
ffff0000000e3ac4:	d503201f 	nop
ffff0000000e3ac8:	d503201f 	nop
ffff0000000e3acc:	d503201f 	nop
ffff0000000e3ad0:	d503201f 	nop
ffff0000000e3ad4:	d503201f 	nop
ffff0000000e3ad8:	d503201f 	nop
ffff0000000e3adc:	d503201f 	nop
ffff0000000e3ae0:	d503201f 	nop
ffff0000000e3ae4:	d503201f 	nop
ffff0000000e3ae8:	d503201f 	nop
ffff0000000e3aec:	d503201f 	nop
ffff0000000e3af0:	d503201f 	nop
ffff0000000e3af4:	d503201f 	nop
ffff0000000e3af8:	d503201f 	nop
ffff0000000e3afc:	d503201f 	nop
ffff0000000e3b00:	d503201f 	nop
ffff0000000e3b04:	d503201f 	nop
ffff0000000e3b08:	d503201f 	nop
ffff0000000e3b0c:	d503201f 	nop
ffff0000000e3b10:	d503201f 	nop
ffff0000000e3b14:	d503201f 	nop
ffff0000000e3b18:	d503201f 	nop
ffff0000000e3b1c:	d503201f 	nop
ffff0000000e3b20:	d503201f 	nop
ffff0000000e3b24:	d503201f 	nop
ffff0000000e3b28:	d503201f 	nop
ffff0000000e3b2c:	d503201f 	nop
ffff0000000e3b30:	d503201f 	nop
ffff0000000e3b34:	d503201f 	nop
ffff0000000e3b38:	d503201f 	nop
ffff0000000e3b3c:	d503201f 	nop
ffff0000000e3b40:	d503201f 	nop
ffff0000000e3b44:	d503201f 	nop
ffff0000000e3b48:	d503201f 	nop
ffff0000000e3b4c:	d503201f 	nop
ffff0000000e3b50:	d503201f 	nop
ffff0000000e3b54:	d503201f 	nop
ffff0000000e3b58:	d503201f 	nop
ffff0000000e3b5c:	d503201f 	nop
ffff0000000e3b60:	d503201f 	nop
ffff0000000e3b64:	d503201f 	nop
ffff0000000e3b68:	d503201f 	nop
ffff0000000e3b6c:	d503201f 	nop
ffff0000000e3b70:	d503201f 	nop
ffff0000000e3b74:	d503201f 	nop
ffff0000000e3b78:	d503201f 	nop
ffff0000000e3b7c:	d503201f 	nop
ffff0000000e3b80:	d503201f 	nop
ffff0000000e3b84:	d503201f 	nop
ffff0000000e3b88:	d503201f 	nop
ffff0000000e3b8c:	d503201f 	nop
ffff0000000e3b90:	d503201f 	nop
ffff0000000e3b94:	d503201f 	nop
ffff0000000e3b98:	d503201f 	nop
ffff0000000e3b9c:	d503201f 	nop
ffff0000000e3ba0:	d503201f 	nop
ffff0000000e3ba4:	d503201f 	nop
ffff0000000e3ba8:	d503201f 	nop
ffff0000000e3bac:	d503201f 	nop
ffff0000000e3bb0:	d503201f 	nop
ffff0000000e3bb4:	d503201f 	nop
ffff0000000e3bb8:	d503201f 	nop
ffff0000000e3bbc:	d503201f 	nop
ffff0000000e3bc0:	d503201f 	nop
ffff0000000e3bc4:	d503201f 	nop
ffff0000000e3bc8:	d503201f 	nop
ffff0000000e3bcc:	d503201f 	nop
ffff0000000e3bd0:	d503201f 	nop
ffff0000000e3bd4:	d503201f 	nop
ffff0000000e3bd8:	d503201f 	nop
ffff0000000e3bdc:	d503201f 	nop
ffff0000000e3be0:	d503201f 	nop
ffff0000000e3be4:	d503201f 	nop
ffff0000000e3be8:	d503201f 	nop
ffff0000000e3bec:	d503201f 	nop
ffff0000000e3bf0:	d503201f 	nop
ffff0000000e3bf4:	d503201f 	nop
ffff0000000e3bf8:	d503201f 	nop
ffff0000000e3bfc:	d503201f 	nop
ffff0000000e3c00:	d503201f 	nop
ffff0000000e3c04:	d503201f 	nop
ffff0000000e3c08:	d503201f 	nop
ffff0000000e3c0c:	d503201f 	nop
ffff0000000e3c10:	d503201f 	nop
ffff0000000e3c14:	d503201f 	nop
ffff0000000e3c18:	d503201f 	nop
ffff0000000e3c1c:	d503201f 	nop
ffff0000000e3c20:	d503201f 	nop
ffff0000000e3c24:	d503201f 	nop
ffff0000000e3c28:	d503201f 	nop
ffff0000000e3c2c:	d503201f 	nop
ffff0000000e3c30:	d503201f 	nop
ffff0000000e3c34:	d503201f 	nop
ffff0000000e3c38:	d503201f 	nop
ffff0000000e3c3c:	d503201f 	nop
ffff0000000e3c40:	d503201f 	nop
ffff0000000e3c44:	d503201f 	nop
ffff0000000e3c48:	d503201f 	nop
ffff0000000e3c4c:	d503201f 	nop
ffff0000000e3c50:	d503201f 	nop
ffff0000000e3c54:	d503201f 	nop
ffff0000000e3c58:	d503201f 	nop
ffff0000000e3c5c:	d503201f 	nop
ffff0000000e3c60:	d503201f 	nop
ffff0000000e3c64:	d503201f 	nop
ffff0000000e3c68:	d503201f 	nop
ffff0000000e3c6c:	d503201f 	nop
ffff0000000e3c70:	d503201f 	nop
ffff0000000e3c74:	d503201f 	nop
ffff0000000e3c78:	d503201f 	nop
ffff0000000e3c7c:	d503201f 	nop
ffff0000000e3c80:	d503201f 	nop
ffff0000000e3c84:	d503201f 	nop
ffff0000000e3c88:	d503201f 	nop
ffff0000000e3c8c:	d503201f 	nop
ffff0000000e3c90:	d503201f 	nop
ffff0000000e3c94:	d503201f 	nop
ffff0000000e3c98:	d503201f 	nop
ffff0000000e3c9c:	d503201f 	nop
ffff0000000e3ca0:	d503201f 	nop
ffff0000000e3ca4:	d503201f 	nop
ffff0000000e3ca8:	d503201f 	nop
ffff0000000e3cac:	d503201f 	nop
ffff0000000e3cb0:	d503201f 	nop
ffff0000000e3cb4:	d503201f 	nop
ffff0000000e3cb8:	d503201f 	nop
ffff0000000e3cbc:	d503201f 	nop
ffff0000000e3cc0:	d503201f 	nop
ffff0000000e3cc4:	d503201f 	nop
ffff0000000e3cc8:	d503201f 	nop
ffff0000000e3ccc:	d503201f 	nop
ffff0000000e3cd0:	d503201f 	nop
ffff0000000e3cd4:	d503201f 	nop
ffff0000000e3cd8:	d503201f 	nop
ffff0000000e3cdc:	d503201f 	nop
ffff0000000e3ce0:	d503201f 	nop
ffff0000000e3ce4:	d503201f 	nop
ffff0000000e3ce8:	d503201f 	nop
ffff0000000e3cec:	d503201f 	nop
ffff0000000e3cf0:	d503201f 	nop
ffff0000000e3cf4:	d503201f 	nop
ffff0000000e3cf8:	d503201f 	nop
ffff0000000e3cfc:	d503201f 	nop
ffff0000000e3d00:	d503201f 	nop
ffff0000000e3d04:	d503201f 	nop
ffff0000000e3d08:	d503201f 	nop
ffff0000000e3d0c:	d503201f 	nop
ffff0000000e3d10:	d503201f 	nop
ffff0000000e3d14:	d503201f 	nop
ffff0000000e3d18:	d503201f 	nop
ffff0000000e3d1c:	d503201f 	nop
ffff0000000e3d20:	d503201f 	nop
ffff0000000e3d24:	d503201f 	nop
ffff0000000e3d28:	d503201f 	nop
ffff0000000e3d2c:	d503201f 	nop
ffff0000000e3d30:	d503201f 	nop
ffff0000000e3d34:	d503201f 	nop
ffff0000000e3d38:	d503201f 	nop
ffff0000000e3d3c:	d503201f 	nop
ffff0000000e3d40:	d503201f 	nop
ffff0000000e3d44:	d503201f 	nop
ffff0000000e3d48:	d503201f 	nop
ffff0000000e3d4c:	d503201f 	nop
ffff0000000e3d50:	d503201f 	nop
ffff0000000e3d54:	d503201f 	nop
ffff0000000e3d58:	d503201f 	nop
ffff0000000e3d5c:	d503201f 	nop
ffff0000000e3d60:	d503201f 	nop
ffff0000000e3d64:	d503201f 	nop
ffff0000000e3d68:	d503201f 	nop
ffff0000000e3d6c:	d503201f 	nop
ffff0000000e3d70:	d503201f 	nop
ffff0000000e3d74:	d503201f 	nop
ffff0000000e3d78:	d503201f 	nop
ffff0000000e3d7c:	d503201f 	nop
ffff0000000e3d80:	d503201f 	nop
ffff0000000e3d84:	d503201f 	nop
ffff0000000e3d88:	d503201f 	nop
ffff0000000e3d8c:	d503201f 	nop
ffff0000000e3d90:	d503201f 	nop
ffff0000000e3d94:	d503201f 	nop
ffff0000000e3d98:	d503201f 	nop
ffff0000000e3d9c:	d503201f 	nop
ffff0000000e3da0:	d503201f 	nop
ffff0000000e3da4:	d503201f 	nop
ffff0000000e3da8:	d503201f 	nop
ffff0000000e3dac:	d503201f 	nop
ffff0000000e3db0:	d503201f 	nop
ffff0000000e3db4:	d503201f 	nop
ffff0000000e3db8:	d503201f 	nop
ffff0000000e3dbc:	d503201f 	nop
ffff0000000e3dc0:	d503201f 	nop
ffff0000000e3dc4:	d503201f 	nop
ffff0000000e3dc8:	d503201f 	nop
ffff0000000e3dcc:	d503201f 	nop
ffff0000000e3dd0:	d503201f 	nop
ffff0000000e3dd4:	d503201f 	nop
ffff0000000e3dd8:	d503201f 	nop
ffff0000000e3ddc:	d503201f 	nop
ffff0000000e3de0:	d503201f 	nop
ffff0000000e3de4:	d503201f 	nop
ffff0000000e3de8:	d503201f 	nop
ffff0000000e3dec:	d503201f 	nop
ffff0000000e3df0:	d503201f 	nop
ffff0000000e3df4:	d503201f 	nop
ffff0000000e3df8:	d503201f 	nop
ffff0000000e3dfc:	d503201f 	nop
ffff0000000e3e00:	d503201f 	nop
ffff0000000e3e04:	d503201f 	nop
ffff0000000e3e08:	d503201f 	nop
ffff0000000e3e0c:	d503201f 	nop
ffff0000000e3e10:	d503201f 	nop
ffff0000000e3e14:	d503201f 	nop
ffff0000000e3e18:	d503201f 	nop
ffff0000000e3e1c:	d503201f 	nop
ffff0000000e3e20:	d503201f 	nop
ffff0000000e3e24:	d503201f 	nop
ffff0000000e3e28:	d503201f 	nop
ffff0000000e3e2c:	d503201f 	nop
ffff0000000e3e30:	d503201f 	nop
ffff0000000e3e34:	d503201f 	nop
ffff0000000e3e38:	d503201f 	nop
ffff0000000e3e3c:	d503201f 	nop
ffff0000000e3e40:	d503201f 	nop
ffff0000000e3e44:	d503201f 	nop
ffff0000000e3e48:	d503201f 	nop
ffff0000000e3e4c:	d503201f 	nop
ffff0000000e3e50:	d503201f 	nop
ffff0000000e3e54:	d503201f 	nop
ffff0000000e3e58:	d503201f 	nop
ffff0000000e3e5c:	d503201f 	nop
ffff0000000e3e60:	d503201f 	nop
ffff0000000e3e64:	d503201f 	nop
ffff0000000e3e68:	d503201f 	nop
ffff0000000e3e6c:	d503201f 	nop
ffff0000000e3e70:	d503201f 	nop
ffff0000000e3e74:	d503201f 	nop
ffff0000000e3e78:	d503201f 	nop
ffff0000000e3e7c:	d503201f 	nop
ffff0000000e3e80:	d503201f 	nop
ffff0000000e3e84:	d503201f 	nop
ffff0000000e3e88:	d503201f 	nop
ffff0000000e3e8c:	d503201f 	nop
ffff0000000e3e90:	d503201f 	nop
ffff0000000e3e94:	d503201f 	nop
ffff0000000e3e98:	d503201f 	nop
ffff0000000e3e9c:	d503201f 	nop
ffff0000000e3ea0:	d503201f 	nop
ffff0000000e3ea4:	d503201f 	nop
ffff0000000e3ea8:	d503201f 	nop
ffff0000000e3eac:	d503201f 	nop
ffff0000000e3eb0:	d503201f 	nop
ffff0000000e3eb4:	d503201f 	nop
ffff0000000e3eb8:	d503201f 	nop
ffff0000000e3ebc:	d503201f 	nop
ffff0000000e3ec0:	d503201f 	nop
ffff0000000e3ec4:	d503201f 	nop
ffff0000000e3ec8:	d503201f 	nop
ffff0000000e3ecc:	d503201f 	nop
ffff0000000e3ed0:	d503201f 	nop
ffff0000000e3ed4:	d503201f 	nop
ffff0000000e3ed8:	d503201f 	nop
ffff0000000e3edc:	d503201f 	nop
ffff0000000e3ee0:	d503201f 	nop
ffff0000000e3ee4:	d503201f 	nop
ffff0000000e3ee8:	d503201f 	nop
ffff0000000e3eec:	d503201f 	nop
ffff0000000e3ef0:	d503201f 	nop
ffff0000000e3ef4:	d503201f 	nop
ffff0000000e3ef8:	d503201f 	nop
ffff0000000e3efc:	d503201f 	nop
ffff0000000e3f00:	d503201f 	nop
ffff0000000e3f04:	d503201f 	nop
ffff0000000e3f08:	d503201f 	nop
ffff0000000e3f0c:	d503201f 	nop
ffff0000000e3f10:	d503201f 	nop
ffff0000000e3f14:	d503201f 	nop
ffff0000000e3f18:	d503201f 	nop
ffff0000000e3f1c:	d503201f 	nop
ffff0000000e3f20:	d503201f 	nop
ffff0000000e3f24:	d503201f 	nop
ffff0000000e3f28:	d503201f 	nop
ffff0000000e3f2c:	d503201f 	nop
ffff0000000e3f30:	d503201f 	nop
ffff0000000e3f34:	d503201f 	nop
ffff0000000e3f38:	d503201f 	nop
ffff0000000e3f3c:	d503201f 	nop
ffff0000000e3f40:	d503201f 	nop
ffff0000000e3f44:	d503201f 	nop
ffff0000000e3f48:	d503201f 	nop
ffff0000000e3f4c:	d503201f 	nop
ffff0000000e3f50:	d503201f 	nop
ffff0000000e3f54:	d503201f 	nop
ffff0000000e3f58:	d503201f 	nop
ffff0000000e3f5c:	d503201f 	nop
ffff0000000e3f60:	d503201f 	nop
ffff0000000e3f64:	d503201f 	nop
ffff0000000e3f68:	d503201f 	nop
ffff0000000e3f6c:	d503201f 	nop
ffff0000000e3f70:	d503201f 	nop
ffff0000000e3f74:	d503201f 	nop
ffff0000000e3f78:	d503201f 	nop
ffff0000000e3f7c:	d503201f 	nop
ffff0000000e3f80:	d503201f 	nop
ffff0000000e3f84:	d503201f 	nop
ffff0000000e3f88:	d503201f 	nop
ffff0000000e3f8c:	d503201f 	nop
ffff0000000e3f90:	d503201f 	nop
ffff0000000e3f94:	d503201f 	nop
ffff0000000e3f98:	d503201f 	nop
ffff0000000e3f9c:	d503201f 	nop
ffff0000000e3fa0:	d503201f 	nop
ffff0000000e3fa4:	d503201f 	nop
ffff0000000e3fa8:	d503201f 	nop
ffff0000000e3fac:	d503201f 	nop
ffff0000000e3fb0:	d503201f 	nop
ffff0000000e3fb4:	d503201f 	nop
ffff0000000e3fb8:	d503201f 	nop
ffff0000000e3fbc:	d503201f 	nop
ffff0000000e3fc0:	d503201f 	nop
ffff0000000e3fc4:	d503201f 	nop
ffff0000000e3fc8:	d503201f 	nop
ffff0000000e3fcc:	d503201f 	nop
ffff0000000e3fd0:	d503201f 	nop
ffff0000000e3fd4:	d503201f 	nop
ffff0000000e3fd8:	d503201f 	nop
ffff0000000e3fdc:	d503201f 	nop
ffff0000000e3fe0:	d503201f 	nop
ffff0000000e3fe4:	d503201f 	nop
ffff0000000e3fe8:	d503201f 	nop
ffff0000000e3fec:	d503201f 	nop
ffff0000000e3ff0:	d503201f 	nop
ffff0000000e3ff4:	d503201f 	nop
ffff0000000e3ff8:	d503201f 	nop
ffff0000000e3ffc:	d503201f 	nop

ffff0000000e4000 <synchronous_curr_sp0>:

.balign 0x800
vector_table:
synchronous_curr_sp0:
	b generic_error
ffff0000000e4000:	17fff4bc 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4004:	d503201f 	nop
ffff0000000e4008:	d503201f 	nop
ffff0000000e400c:	d503201f 	nop
ffff0000000e4010:	d503201f 	nop
ffff0000000e4014:	d503201f 	nop
ffff0000000e4018:	d503201f 	nop
ffff0000000e401c:	d503201f 	nop
ffff0000000e4020:	d503201f 	nop
ffff0000000e4024:	d503201f 	nop
ffff0000000e4028:	d503201f 	nop
ffff0000000e402c:	d503201f 	nop
ffff0000000e4030:	d503201f 	nop
ffff0000000e4034:	d503201f 	nop
ffff0000000e4038:	d503201f 	nop
ffff0000000e403c:	d503201f 	nop
ffff0000000e4040:	d503201f 	nop
ffff0000000e4044:	d503201f 	nop
ffff0000000e4048:	d503201f 	nop
ffff0000000e404c:	d503201f 	nop
ffff0000000e4050:	d503201f 	nop
ffff0000000e4054:	d503201f 	nop
ffff0000000e4058:	d503201f 	nop
ffff0000000e405c:	d503201f 	nop
ffff0000000e4060:	d503201f 	nop
ffff0000000e4064:	d503201f 	nop
ffff0000000e4068:	d503201f 	nop
ffff0000000e406c:	d503201f 	nop
ffff0000000e4070:	d503201f 	nop
ffff0000000e4074:	d503201f 	nop
ffff0000000e4078:	d503201f 	nop
ffff0000000e407c:	d503201f 	nop

ffff0000000e4080 <irq_el2_sp0>:
	.balign 0x80
irq_el2_sp0:
	b generic_error
ffff0000000e4080:	17fff49c 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4084:	d503201f 	nop
ffff0000000e4088:	d503201f 	nop
ffff0000000e408c:	d503201f 	nop
ffff0000000e4090:	d503201f 	nop
ffff0000000e4094:	d503201f 	nop
ffff0000000e4098:	d503201f 	nop
ffff0000000e409c:	d503201f 	nop
ffff0000000e40a0:	d503201f 	nop
ffff0000000e40a4:	d503201f 	nop
ffff0000000e40a8:	d503201f 	nop
ffff0000000e40ac:	d503201f 	nop
ffff0000000e40b0:	d503201f 	nop
ffff0000000e40b4:	d503201f 	nop
ffff0000000e40b8:	d503201f 	nop
ffff0000000e40bc:	d503201f 	nop
ffff0000000e40c0:	d503201f 	nop
ffff0000000e40c4:	d503201f 	nop
ffff0000000e40c8:	d503201f 	nop
ffff0000000e40cc:	d503201f 	nop
ffff0000000e40d0:	d503201f 	nop
ffff0000000e40d4:	d503201f 	nop
ffff0000000e40d8:	d503201f 	nop
ffff0000000e40dc:	d503201f 	nop
ffff0000000e40e0:	d503201f 	nop
ffff0000000e40e4:	d503201f 	nop
ffff0000000e40e8:	d503201f 	nop
ffff0000000e40ec:	d503201f 	nop
ffff0000000e40f0:	d503201f 	nop
ffff0000000e40f4:	d503201f 	nop
ffff0000000e40f8:	d503201f 	nop
ffff0000000e40fc:	d503201f 	nop

ffff0000000e4100 <fiq_curr_sp0>:
	.balign 0x80
fiq_curr_sp0:
	b generic_error
ffff0000000e4100:	17fff47c 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4104:	d503201f 	nop
ffff0000000e4108:	d503201f 	nop
ffff0000000e410c:	d503201f 	nop
ffff0000000e4110:	d503201f 	nop
ffff0000000e4114:	d503201f 	nop
ffff0000000e4118:	d503201f 	nop
ffff0000000e411c:	d503201f 	nop
ffff0000000e4120:	d503201f 	nop
ffff0000000e4124:	d503201f 	nop
ffff0000000e4128:	d503201f 	nop
ffff0000000e412c:	d503201f 	nop
ffff0000000e4130:	d503201f 	nop
ffff0000000e4134:	d503201f 	nop
ffff0000000e4138:	d503201f 	nop
ffff0000000e413c:	d503201f 	nop
ffff0000000e4140:	d503201f 	nop
ffff0000000e4144:	d503201f 	nop
ffff0000000e4148:	d503201f 	nop
ffff0000000e414c:	d503201f 	nop
ffff0000000e4150:	d503201f 	nop
ffff0000000e4154:	d503201f 	nop
ffff0000000e4158:	d503201f 	nop
ffff0000000e415c:	d503201f 	nop
ffff0000000e4160:	d503201f 	nop
ffff0000000e4164:	d503201f 	nop
ffff0000000e4168:	d503201f 	nop
ffff0000000e416c:	d503201f 	nop
ffff0000000e4170:	d503201f 	nop
ffff0000000e4174:	d503201f 	nop
ffff0000000e4178:	d503201f 	nop
ffff0000000e417c:	d503201f 	nop

ffff0000000e4180 <serror_curr_sp0>:
	.balign 0x80
serror_curr_sp0:
	b generic_error
ffff0000000e4180:	17fff45c 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4184:	d503201f 	nop
ffff0000000e4188:	d503201f 	nop
ffff0000000e418c:	d503201f 	nop
ffff0000000e4190:	d503201f 	nop
ffff0000000e4194:	d503201f 	nop
ffff0000000e4198:	d503201f 	nop
ffff0000000e419c:	d503201f 	nop
ffff0000000e41a0:	d503201f 	nop
ffff0000000e41a4:	d503201f 	nop
ffff0000000e41a8:	d503201f 	nop
ffff0000000e41ac:	d503201f 	nop
ffff0000000e41b0:	d503201f 	nop
ffff0000000e41b4:	d503201f 	nop
ffff0000000e41b8:	d503201f 	nop
ffff0000000e41bc:	d503201f 	nop
ffff0000000e41c0:	d503201f 	nop
ffff0000000e41c4:	d503201f 	nop
ffff0000000e41c8:	d503201f 	nop
ffff0000000e41cc:	d503201f 	nop
ffff0000000e41d0:	d503201f 	nop
ffff0000000e41d4:	d503201f 	nop
ffff0000000e41d8:	d503201f 	nop
ffff0000000e41dc:	d503201f 	nop
ffff0000000e41e0:	d503201f 	nop
ffff0000000e41e4:	d503201f 	nop
ffff0000000e41e8:	d503201f 	nop
ffff0000000e41ec:	d503201f 	nop
ffff0000000e41f0:	d503201f 	nop
ffff0000000e41f4:	d503201f 	nop
ffff0000000e41f8:	d503201f 	nop
ffff0000000e41fc:	d503201f 	nop

ffff0000000e4200 <synchronous_curr_spcurr>:
	.balign 0x80
synchronous_curr_spcurr:
	b exception_handler
ffff0000000e4200:	17fffd20 	b	ffff0000000e3680 <exception_handler>
ffff0000000e4204:	d503201f 	nop
ffff0000000e4208:	d503201f 	nop
ffff0000000e420c:	d503201f 	nop
ffff0000000e4210:	d503201f 	nop
ffff0000000e4214:	d503201f 	nop
ffff0000000e4218:	d503201f 	nop
ffff0000000e421c:	d503201f 	nop
ffff0000000e4220:	d503201f 	nop
ffff0000000e4224:	d503201f 	nop
ffff0000000e4228:	d503201f 	nop
ffff0000000e422c:	d503201f 	nop
ffff0000000e4230:	d503201f 	nop
ffff0000000e4234:	d503201f 	nop
ffff0000000e4238:	d503201f 	nop
ffff0000000e423c:	d503201f 	nop
ffff0000000e4240:	d503201f 	nop
ffff0000000e4244:	d503201f 	nop
ffff0000000e4248:	d503201f 	nop
ffff0000000e424c:	d503201f 	nop
ffff0000000e4250:	d503201f 	nop
ffff0000000e4254:	d503201f 	nop
ffff0000000e4258:	d503201f 	nop
ffff0000000e425c:	d503201f 	nop
ffff0000000e4260:	d503201f 	nop
ffff0000000e4264:	d503201f 	nop
ffff0000000e4268:	d503201f 	nop
ffff0000000e426c:	d503201f 	nop
ffff0000000e4270:	d503201f 	nop
ffff0000000e4274:	d503201f 	nop
ffff0000000e4278:	d503201f 	nop
ffff0000000e427c:	d503201f 	nop

ffff0000000e4280 <irq_curr_spcurr>:
	.balign 0x80
irq_curr_spcurr:
	b exception_handler
ffff0000000e4280:	17fffd00 	b	ffff0000000e3680 <exception_handler>
ffff0000000e4284:	d503201f 	nop
ffff0000000e4288:	d503201f 	nop
ffff0000000e428c:	d503201f 	nop
ffff0000000e4290:	d503201f 	nop
ffff0000000e4294:	d503201f 	nop
ffff0000000e4298:	d503201f 	nop
ffff0000000e429c:	d503201f 	nop
ffff0000000e42a0:	d503201f 	nop
ffff0000000e42a4:	d503201f 	nop
ffff0000000e42a8:	d503201f 	nop
ffff0000000e42ac:	d503201f 	nop
ffff0000000e42b0:	d503201f 	nop
ffff0000000e42b4:	d503201f 	nop
ffff0000000e42b8:	d503201f 	nop
ffff0000000e42bc:	d503201f 	nop
ffff0000000e42c0:	d503201f 	nop
ffff0000000e42c4:	d503201f 	nop
ffff0000000e42c8:	d503201f 	nop
ffff0000000e42cc:	d503201f 	nop
ffff0000000e42d0:	d503201f 	nop
ffff0000000e42d4:	d503201f 	nop
ffff0000000e42d8:	d503201f 	nop
ffff0000000e42dc:	d503201f 	nop
ffff0000000e42e0:	d503201f 	nop
ffff0000000e42e4:	d503201f 	nop
ffff0000000e42e8:	d503201f 	nop
ffff0000000e42ec:	d503201f 	nop
ffff0000000e42f0:	d503201f 	nop
ffff0000000e42f4:	d503201f 	nop
ffff0000000e42f8:	d503201f 	nop
ffff0000000e42fc:	d503201f 	nop

ffff0000000e4300 <fiq_curr_spcurr>:
	.balign 0x80
fiq_curr_spcurr:
	b generic_error
ffff0000000e4300:	17fff3fc 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4304:	d503201f 	nop
ffff0000000e4308:	d503201f 	nop
ffff0000000e430c:	d503201f 	nop
ffff0000000e4310:	d503201f 	nop
ffff0000000e4314:	d503201f 	nop
ffff0000000e4318:	d503201f 	nop
ffff0000000e431c:	d503201f 	nop
ffff0000000e4320:	d503201f 	nop
ffff0000000e4324:	d503201f 	nop
ffff0000000e4328:	d503201f 	nop
ffff0000000e432c:	d503201f 	nop
ffff0000000e4330:	d503201f 	nop
ffff0000000e4334:	d503201f 	nop
ffff0000000e4338:	d503201f 	nop
ffff0000000e433c:	d503201f 	nop
ffff0000000e4340:	d503201f 	nop
ffff0000000e4344:	d503201f 	nop
ffff0000000e4348:	d503201f 	nop
ffff0000000e434c:	d503201f 	nop
ffff0000000e4350:	d503201f 	nop
ffff0000000e4354:	d503201f 	nop
ffff0000000e4358:	d503201f 	nop
ffff0000000e435c:	d503201f 	nop
ffff0000000e4360:	d503201f 	nop
ffff0000000e4364:	d503201f 	nop
ffff0000000e4368:	d503201f 	nop
ffff0000000e436c:	d503201f 	nop
ffff0000000e4370:	d503201f 	nop
ffff0000000e4374:	d503201f 	nop
ffff0000000e4378:	d503201f 	nop
ffff0000000e437c:	d503201f 	nop

ffff0000000e4380 <serror_curr_spcurr>:
	.balign 0x80
serror_curr_spcurr:
	b generic_error
ffff0000000e4380:	17fff3dc 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4384:	d503201f 	nop
ffff0000000e4388:	d503201f 	nop
ffff0000000e438c:	d503201f 	nop
ffff0000000e4390:	d503201f 	nop
ffff0000000e4394:	d503201f 	nop
ffff0000000e4398:	d503201f 	nop
ffff0000000e439c:	d503201f 	nop
ffff0000000e43a0:	d503201f 	nop
ffff0000000e43a4:	d503201f 	nop
ffff0000000e43a8:	d503201f 	nop
ffff0000000e43ac:	d503201f 	nop
ffff0000000e43b0:	d503201f 	nop
ffff0000000e43b4:	d503201f 	nop
ffff0000000e43b8:	d503201f 	nop
ffff0000000e43bc:	d503201f 	nop
ffff0000000e43c0:	d503201f 	nop
ffff0000000e43c4:	d503201f 	nop
ffff0000000e43c8:	d503201f 	nop
ffff0000000e43cc:	d503201f 	nop
ffff0000000e43d0:	d503201f 	nop
ffff0000000e43d4:	d503201f 	nop
ffff0000000e43d8:	d503201f 	nop
ffff0000000e43dc:	d503201f 	nop
ffff0000000e43e0:	d503201f 	nop
ffff0000000e43e4:	d503201f 	nop
ffff0000000e43e8:	d503201f 	nop
ffff0000000e43ec:	d503201f 	nop
ffff0000000e43f0:	d503201f 	nop
ffff0000000e43f4:	d503201f 	nop
ffff0000000e43f8:	d503201f 	nop
ffff0000000e43fc:	d503201f 	nop

ffff0000000e4400 <synchronous_lower_64>:
	.balign 0x80
synchronous_lower_64:
	b exception_handler
ffff0000000e4400:	17fffca0 	b	ffff0000000e3680 <exception_handler>
ffff0000000e4404:	d503201f 	nop
ffff0000000e4408:	d503201f 	nop
ffff0000000e440c:	d503201f 	nop
ffff0000000e4410:	d503201f 	nop
ffff0000000e4414:	d503201f 	nop
ffff0000000e4418:	d503201f 	nop
ffff0000000e441c:	d503201f 	nop
ffff0000000e4420:	d503201f 	nop
ffff0000000e4424:	d503201f 	nop
ffff0000000e4428:	d503201f 	nop
ffff0000000e442c:	d503201f 	nop
ffff0000000e4430:	d503201f 	nop
ffff0000000e4434:	d503201f 	nop
ffff0000000e4438:	d503201f 	nop
ffff0000000e443c:	d503201f 	nop
ffff0000000e4440:	d503201f 	nop
ffff0000000e4444:	d503201f 	nop
ffff0000000e4448:	d503201f 	nop
ffff0000000e444c:	d503201f 	nop
ffff0000000e4450:	d503201f 	nop
ffff0000000e4454:	d503201f 	nop
ffff0000000e4458:	d503201f 	nop
ffff0000000e445c:	d503201f 	nop
ffff0000000e4460:	d503201f 	nop
ffff0000000e4464:	d503201f 	nop
ffff0000000e4468:	d503201f 	nop
ffff0000000e446c:	d503201f 	nop
ffff0000000e4470:	d503201f 	nop
ffff0000000e4474:	d503201f 	nop
ffff0000000e4478:	d503201f 	nop
ffff0000000e447c:	d503201f 	nop

ffff0000000e4480 <irq_lower_64>:
	.balign 0x80
irq_lower_64:
	b generic_error
ffff0000000e4480:	17fff39c 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4484:	d503201f 	nop
ffff0000000e4488:	d503201f 	nop
ffff0000000e448c:	d503201f 	nop
ffff0000000e4490:	d503201f 	nop
ffff0000000e4494:	d503201f 	nop
ffff0000000e4498:	d503201f 	nop
ffff0000000e449c:	d503201f 	nop
ffff0000000e44a0:	d503201f 	nop
ffff0000000e44a4:	d503201f 	nop
ffff0000000e44a8:	d503201f 	nop
ffff0000000e44ac:	d503201f 	nop
ffff0000000e44b0:	d503201f 	nop
ffff0000000e44b4:	d503201f 	nop
ffff0000000e44b8:	d503201f 	nop
ffff0000000e44bc:	d503201f 	nop
ffff0000000e44c0:	d503201f 	nop
ffff0000000e44c4:	d503201f 	nop
ffff0000000e44c8:	d503201f 	nop
ffff0000000e44cc:	d503201f 	nop
ffff0000000e44d0:	d503201f 	nop
ffff0000000e44d4:	d503201f 	nop
ffff0000000e44d8:	d503201f 	nop
ffff0000000e44dc:	d503201f 	nop
ffff0000000e44e0:	d503201f 	nop
ffff0000000e44e4:	d503201f 	nop
ffff0000000e44e8:	d503201f 	nop
ffff0000000e44ec:	d503201f 	nop
ffff0000000e44f0:	d503201f 	nop
ffff0000000e44f4:	d503201f 	nop
ffff0000000e44f8:	d503201f 	nop
ffff0000000e44fc:	d503201f 	nop

ffff0000000e4500 <fiq_lower_64>:
	.balign 0x80
fiq_lower_64:
	b generic_error
ffff0000000e4500:	17fff37c 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4504:	d503201f 	nop
ffff0000000e4508:	d503201f 	nop
ffff0000000e450c:	d503201f 	nop
ffff0000000e4510:	d503201f 	nop
ffff0000000e4514:	d503201f 	nop
ffff0000000e4518:	d503201f 	nop
ffff0000000e451c:	d503201f 	nop
ffff0000000e4520:	d503201f 	nop
ffff0000000e4524:	d503201f 	nop
ffff0000000e4528:	d503201f 	nop
ffff0000000e452c:	d503201f 	nop
ffff0000000e4530:	d503201f 	nop
ffff0000000e4534:	d503201f 	nop
ffff0000000e4538:	d503201f 	nop
ffff0000000e453c:	d503201f 	nop
ffff0000000e4540:	d503201f 	nop
ffff0000000e4544:	d503201f 	nop
ffff0000000e4548:	d503201f 	nop
ffff0000000e454c:	d503201f 	nop
ffff0000000e4550:	d503201f 	nop
ffff0000000e4554:	d503201f 	nop
ffff0000000e4558:	d503201f 	nop
ffff0000000e455c:	d503201f 	nop
ffff0000000e4560:	d503201f 	nop
ffff0000000e4564:	d503201f 	nop
ffff0000000e4568:	d503201f 	nop
ffff0000000e456c:	d503201f 	nop
ffff0000000e4570:	d503201f 	nop
ffff0000000e4574:	d503201f 	nop
ffff0000000e4578:	d503201f 	nop
ffff0000000e457c:	d503201f 	nop

ffff0000000e4580 <serror_lower_64>:
	.balign 0x80
serror_lower_64:
	b generic_error
ffff0000000e4580:	17fff35c 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4584:	d503201f 	nop
ffff0000000e4588:	d503201f 	nop
ffff0000000e458c:	d503201f 	nop
ffff0000000e4590:	d503201f 	nop
ffff0000000e4594:	d503201f 	nop
ffff0000000e4598:	d503201f 	nop
ffff0000000e459c:	d503201f 	nop
ffff0000000e45a0:	d503201f 	nop
ffff0000000e45a4:	d503201f 	nop
ffff0000000e45a8:	d503201f 	nop
ffff0000000e45ac:	d503201f 	nop
ffff0000000e45b0:	d503201f 	nop
ffff0000000e45b4:	d503201f 	nop
ffff0000000e45b8:	d503201f 	nop
ffff0000000e45bc:	d503201f 	nop
ffff0000000e45c0:	d503201f 	nop
ffff0000000e45c4:	d503201f 	nop
ffff0000000e45c8:	d503201f 	nop
ffff0000000e45cc:	d503201f 	nop
ffff0000000e45d0:	d503201f 	nop
ffff0000000e45d4:	d503201f 	nop
ffff0000000e45d8:	d503201f 	nop
ffff0000000e45dc:	d503201f 	nop
ffff0000000e45e0:	d503201f 	nop
ffff0000000e45e4:	d503201f 	nop
ffff0000000e45e8:	d503201f 	nop
ffff0000000e45ec:	d503201f 	nop
ffff0000000e45f0:	d503201f 	nop
ffff0000000e45f4:	d503201f 	nop
ffff0000000e45f8:	d503201f 	nop
ffff0000000e45fc:	d503201f 	nop

ffff0000000e4600 <synchronous_lower_32>:
	.balign 0x80
synchronous_lower_32:
	b generic_error
ffff0000000e4600:	17fff33c 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4604:	d503201f 	nop
ffff0000000e4608:	d503201f 	nop
ffff0000000e460c:	d503201f 	nop
ffff0000000e4610:	d503201f 	nop
ffff0000000e4614:	d503201f 	nop
ffff0000000e4618:	d503201f 	nop
ffff0000000e461c:	d503201f 	nop
ffff0000000e4620:	d503201f 	nop
ffff0000000e4624:	d503201f 	nop
ffff0000000e4628:	d503201f 	nop
ffff0000000e462c:	d503201f 	nop
ffff0000000e4630:	d503201f 	nop
ffff0000000e4634:	d503201f 	nop
ffff0000000e4638:	d503201f 	nop
ffff0000000e463c:	d503201f 	nop
ffff0000000e4640:	d503201f 	nop
ffff0000000e4644:	d503201f 	nop
ffff0000000e4648:	d503201f 	nop
ffff0000000e464c:	d503201f 	nop
ffff0000000e4650:	d503201f 	nop
ffff0000000e4654:	d503201f 	nop
ffff0000000e4658:	d503201f 	nop
ffff0000000e465c:	d503201f 	nop
ffff0000000e4660:	d503201f 	nop
ffff0000000e4664:	d503201f 	nop
ffff0000000e4668:	d503201f 	nop
ffff0000000e466c:	d503201f 	nop
ffff0000000e4670:	d503201f 	nop
ffff0000000e4674:	d503201f 	nop
ffff0000000e4678:	d503201f 	nop
ffff0000000e467c:	d503201f 	nop

ffff0000000e4680 <irq_lower_32>:
	.balign 0x80
irq_lower_32:
	b generic_error
ffff0000000e4680:	17fff31c 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4684:	d503201f 	nop
ffff0000000e4688:	d503201f 	nop
ffff0000000e468c:	d503201f 	nop
ffff0000000e4690:	d503201f 	nop
ffff0000000e4694:	d503201f 	nop
ffff0000000e4698:	d503201f 	nop
ffff0000000e469c:	d503201f 	nop
ffff0000000e46a0:	d503201f 	nop
ffff0000000e46a4:	d503201f 	nop
ffff0000000e46a8:	d503201f 	nop
ffff0000000e46ac:	d503201f 	nop
ffff0000000e46b0:	d503201f 	nop
ffff0000000e46b4:	d503201f 	nop
ffff0000000e46b8:	d503201f 	nop
ffff0000000e46bc:	d503201f 	nop
ffff0000000e46c0:	d503201f 	nop
ffff0000000e46c4:	d503201f 	nop
ffff0000000e46c8:	d503201f 	nop
ffff0000000e46cc:	d503201f 	nop
ffff0000000e46d0:	d503201f 	nop
ffff0000000e46d4:	d503201f 	nop
ffff0000000e46d8:	d503201f 	nop
ffff0000000e46dc:	d503201f 	nop
ffff0000000e46e0:	d503201f 	nop
ffff0000000e46e4:	d503201f 	nop
ffff0000000e46e8:	d503201f 	nop
ffff0000000e46ec:	d503201f 	nop
ffff0000000e46f0:	d503201f 	nop
ffff0000000e46f4:	d503201f 	nop
ffff0000000e46f8:	d503201f 	nop
ffff0000000e46fc:	d503201f 	nop

ffff0000000e4700 <fiq_lower_32>:
	.balign 0x80
fiq_lower_32:
	b generic_error
ffff0000000e4700:	17fff2fc 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4704:	d503201f 	nop
ffff0000000e4708:	d503201f 	nop
ffff0000000e470c:	d503201f 	nop
ffff0000000e4710:	d503201f 	nop
ffff0000000e4714:	d503201f 	nop
ffff0000000e4718:	d503201f 	nop
ffff0000000e471c:	d503201f 	nop
ffff0000000e4720:	d503201f 	nop
ffff0000000e4724:	d503201f 	nop
ffff0000000e4728:	d503201f 	nop
ffff0000000e472c:	d503201f 	nop
ffff0000000e4730:	d503201f 	nop
ffff0000000e4734:	d503201f 	nop
ffff0000000e4738:	d503201f 	nop
ffff0000000e473c:	d503201f 	nop
ffff0000000e4740:	d503201f 	nop
ffff0000000e4744:	d503201f 	nop
ffff0000000e4748:	d503201f 	nop
ffff0000000e474c:	d503201f 	nop
ffff0000000e4750:	d503201f 	nop
ffff0000000e4754:	d503201f 	nop
ffff0000000e4758:	d503201f 	nop
ffff0000000e475c:	d503201f 	nop
ffff0000000e4760:	d503201f 	nop
ffff0000000e4764:	d503201f 	nop
ffff0000000e4768:	d503201f 	nop
ffff0000000e476c:	d503201f 	nop
ffff0000000e4770:	d503201f 	nop
ffff0000000e4774:	d503201f 	nop
ffff0000000e4778:	d503201f 	nop
ffff0000000e477c:	d503201f 	nop

ffff0000000e4780 <serror_lower_32>:
	.balign 0x80
serror_lower_32:
	b generic_error
ffff0000000e4780:	17fff2dc 	b	ffff0000000e12f0 <generic_error>
ffff0000000e4784:	d503201f 	nop
ffff0000000e4788:	d503201f 	nop
ffff0000000e478c:	d503201f 	nop
ffff0000000e4790:	d503201f 	nop
ffff0000000e4794:	d503201f 	nop
ffff0000000e4798:	d503201f 	nop
ffff0000000e479c:	d503201f 	nop
ffff0000000e47a0:	d503201f 	nop
ffff0000000e47a4:	d503201f 	nop
ffff0000000e47a8:	d503201f 	nop
ffff0000000e47ac:	d503201f 	nop
ffff0000000e47b0:	d503201f 	nop
ffff0000000e47b4:	d503201f 	nop
ffff0000000e47b8:	d503201f 	nop
ffff0000000e47bc:	d503201f 	nop
ffff0000000e47c0:	d503201f 	nop
ffff0000000e47c4:	d503201f 	nop
ffff0000000e47c8:	d503201f 	nop
ffff0000000e47cc:	d503201f 	nop
ffff0000000e47d0:	d503201f 	nop
ffff0000000e47d4:	d503201f 	nop
ffff0000000e47d8:	d503201f 	nop
ffff0000000e47dc:	d503201f 	nop
ffff0000000e47e0:	d503201f 	nop
ffff0000000e47e4:	d503201f 	nop
ffff0000000e47e8:	d503201f 	nop
ffff0000000e47ec:	d503201f 	nop
ffff0000000e47f0:	d503201f 	nop
ffff0000000e47f4:	d503201f 	nop
ffff0000000e47f8:	d503201f 	nop
ffff0000000e47fc:	d503201f 	nop

ffff0000000e4800 <get_physical_address>:
.section ".text"

.global get_physical_address
get_physical_address:
    AT S1E1R, x0
ffff0000000e4800:	d5087800 	at	s1e1r, x0
    mrs x1, PAR_EL1
ffff0000000e4804:	d5387401 	mrs	x1, par_el1
    ldr x2, =0xfffffffff000
ffff0000000e4808:	58000182 	ldr	x2, ffff0000000e4838 <test_translation+0x18>
    and x1, x1, x2
ffff0000000e480c:	8a020021 	and	x1, x1, x2
    ldr x2, =0xfff
ffff0000000e4810:	58000182 	ldr	x2, ffff0000000e4840 <test_translation+0x20>
    and x0, x0, x2
ffff0000000e4814:	8a020000 	and	x0, x0, x2
    add x0, x0, x1
ffff0000000e4818:	8b010000 	add	x0, x0, x1
    ret
ffff0000000e481c:	d65f03c0 	ret

ffff0000000e4820 <test_translation>:

.global test_translation
test_translation:
	AT S1E1R, x0
ffff0000000e4820:	d5087800 	at	s1e1r, x0
	DSB SY
ffff0000000e4824:	d5033f9f 	dsb	sy
	ISB
ffff0000000e4828:	d5033fdf 	isb
	mrs x0, PAR_EL1
ffff0000000e482c:	d5387400 	mrs	x0, par_el1
ffff0000000e4830:	d65f03c0 	ret
ffff0000000e4834:	00000000 	.inst	0x00000000 ; undefined
ffff0000000e4838:	fffff000 	.word	0xfffff000
ffff0000000e483c:	0000ffff 	.word	0x0000ffff
ffff0000000e4840:	00000fff 	.word	0x00000fff
ffff0000000e4844:	00000000 	.word	0x00000000

Disassembly of section .text.startup:

ffff0000000e4850 <main>:
extern void irq_enable();

// Implemented in VectorTable.S
extern void set_vector_table();

void main() {
ffff0000000e4850:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
	// Normally we would setup UART here
	// but that is not necessary because
	// the SerialClient or Bootloader
	// already did it.
	println("## Booting XyOS");
ffff0000000e4854:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e4858:	9126a000 	add	x0, x0, #0x9a8
void main() {
ffff0000000e485c:	910003fd 	mov	x29, sp
	println("## Booting XyOS");
ffff0000000e4860:	97ffef1c 	bl	ffff0000000e04d0 <println>

	println("┣━ Configuring Vector Table");
ffff0000000e4864:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e4868:	9126e000 	add	x0, x0, #0x9b8
ffff0000000e486c:	97ffef19 	bl	ffff0000000e04d0 <println>
	set_vector_table();
ffff0000000e4870:	97fffbe4 	bl	ffff0000000e3800 <set_vector_table>

	printf("┣━ Firmware Revision : %u\n", mailbox_get_firmware_revision());
ffff0000000e4874:	97fff7c7 	bl	ffff0000000e2790 <mailbox_get_firmware_revision>
ffff0000000e4878:	aa0003e1 	mov	x1, x0
ffff0000000e487c:	90000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e4880:	91276040 	add	x0, x2, #0x9d8
ffff0000000e4884:	97fff173 	bl	ffff0000000e0e50 <printf>
	printf("┣━ Board Model : %u\n", mailbox_get_board_model());
ffff0000000e4888:	97fff7ea 	bl	ffff0000000e2830 <mailbox_get_board_model>
ffff0000000e488c:	aa0003e1 	mov	x1, x0
ffff0000000e4890:	90000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e4894:	9127e040 	add	x0, x2, #0x9f8
ffff0000000e4898:	97fff16e 	bl	ffff0000000e0e50 <printf>
	printf("┣━ Board Revision : %u\n", mailbox_get_board_revision());
ffff0000000e489c:	97fff80d 	bl	ffff0000000e28d0 <mailbox_get_board_revision>
ffff0000000e48a0:	aa0003e1 	mov	x1, x0
ffff0000000e48a4:	90000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e48a8:	91286040 	add	x0, x2, #0xa18
ffff0000000e48ac:	97fff169 	bl	ffff0000000e0e50 <printf>
	printf("┣━ System Temperature : %u°C\n", mailbox_get_system_temp());
ffff0000000e48b0:	97fff968 	bl	ffff0000000e2e50 <mailbox_get_system_temp>
ffff0000000e48b4:	aa0003e1 	mov	x1, x0
ffff0000000e48b8:	90000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e48bc:	9128e040 	add	x0, x2, #0xa38
ffff0000000e48c0:	97fff164 	bl	ffff0000000e0e50 <printf>
	printf("┣━ ARM Memory Size : %u MB\n", mailbox_get_arm_memory_size() / (1024 * 1024));
ffff0000000e48c4:	97fff757 	bl	ffff0000000e2620 <mailbox_get_arm_memory_size>
ffff0000000e48c8:	d354fc01 	lsr	x1, x0, #20
ffff0000000e48cc:	90000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e48d0:	91298040 	add	x0, x2, #0xa60
ffff0000000e48d4:	97fff15f 	bl	ffff0000000e0e50 <printf>
	printf("┣━ VC Memory Size : %u MB\n", mailbox_get_vc_memory_size() / (1024 * 1024));
ffff0000000e48d8:	97fff782 	bl	ffff0000000e26e0 <mailbox_get_vc_memory_size>
ffff0000000e48dc:	d354fc01 	lsr	x1, x0, #20
ffff0000000e48e0:	90000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e48e4:	912a0040 	add	x0, x2, #0xa80
ffff0000000e48e8:	97fff15a 	bl	ffff0000000e0e50 <printf>
	printf("┣━ Current Exception Level : %u\n", exception_level());
ffff0000000e48ec:	97fffb4e 	bl	ffff0000000e3624 <exception_level>
ffff0000000e48f0:	aa0003e1 	mov	x1, x0
ffff0000000e48f4:	90000002 	adrp	x2, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e48f8:	912a8040 	add	x0, x2, #0xaa0
ffff0000000e48fc:	97fff155 	bl	ffff0000000e0e50 <printf>

	if (exception_level() != 1) {
ffff0000000e4900:	97fffb49 	bl	ffff0000000e3624 <exception_level>
ffff0000000e4904:	f100041f 	cmp	x0, #0x1
ffff0000000e4908:	54000080 	b.eq	ffff0000000e4918 <main+0xc8>  // b.none
		error("Unknown exception level");
ffff0000000e490c:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e4910:	912b2000 	add	x0, x0, #0xac8
ffff0000000e4914:	97fff253 	bl	ffff0000000e1260 <error>
	}

	println("┣━ Initializing Traffic Lights");
ffff0000000e4918:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e491c:	912b8000 	add	x0, x0, #0xae0
ffff0000000e4920:	97ffeeec 	bl	ffff0000000e04d0 <println>
	traffic_lights_init();
ffff0000000e4924:	97fff317 	bl	ffff0000000e1580 <traffic_lights_init>

	println("┣━ Enabling IRQ");
ffff0000000e4928:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e492c:	912c2000 	add	x0, x0, #0xb08
ffff0000000e4930:	97ffeee8 	bl	ffff0000000e04d0 <println>
	irq_enable();
ffff0000000e4934:	97fffb41 	bl	ffff0000000e3638 <irq_enable>

	println("┣━ Enabling ARM Timer");
ffff0000000e4938:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e493c:	912c8000 	add	x0, x0, #0xb20
ffff0000000e4940:	97ffeee4 	bl	ffff0000000e04d0 <println>
	arm_timer_enable();
ffff0000000e4944:	97fff27b 	bl	ffff0000000e1330 <arm_timer_enable>

	println("┣━ Enabling ARM Timer IRQ");
ffff0000000e4948:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e494c:	912d0000 	add	x0, x0, #0xb40
ffff0000000e4950:	97ffeee0 	bl	ffff0000000e04d0 <println>
	ic_enable_arm_timer_irq();
ffff0000000e4954:	97fff96b 	bl	ffff0000000e2f00 <ic_enable_arm_timer_irq>

	println("┣━ Enabling System Timer IRQ");
ffff0000000e4958:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e495c:	912d8000 	add	x0, x0, #0xb60
ffff0000000e4960:	97ffeedc 	bl	ffff0000000e04d0 <println>
	ic_enable_system_timer_chan_1_irq();
ffff0000000e4964:	97fff96f 	bl	ffff0000000e2f20 <ic_enable_system_timer_chan_1_irq>

	println("┣━ Initializing Virtual Memory");
ffff0000000e4968:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e496c:	912e2000 	add	x0, x0, #0xb88
ffff0000000e4970:	97ffeed8 	bl	ffff0000000e04d0 <println>
	vmem_init();
ffff0000000e4974:	97fffb03 	bl	ffff0000000e3580 <vmem_init>

	println("┣━ Initializing Frame Buffer");
ffff0000000e4978:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e497c:	912ec000 	add	x0, x0, #0xbb0
ffff0000000e4980:	97ffeed4 	bl	ffff0000000e04d0 <println>
	frame_buffer_init(1024, 768);
ffff0000000e4984:	52808000 	mov	w0, #0x400                 	// #1024
ffff0000000e4988:	52806001 	mov	w1, #0x300                 	// #768
ffff0000000e498c:	97fff375 	bl	ffff0000000e1760 <frame_buffer_init>
	frame_buffer_clear();
ffff0000000e4990:	97fff58c 	bl	ffff0000000e1fc0 <frame_buffer_clear>

	thread_0();
ffff0000000e4994:	97fff993 	bl	ffff0000000e2fe0 <thread_0>

	error("We should never reach here");
ffff0000000e4998:	90000000 	adrp	x0, ffff0000000e4000 <synchronous_curr_sp0>
ffff0000000e499c:	912f6000 	add	x0, x0, #0xbd8
ffff0000000e49a0:	97fff230 	bl	ffff0000000e1260 <error>

Disassembly of section .rodata.str1.8:

ffff0000000e49a8 <.rodata.str1.8>:
ffff0000000e49a8:	42202323 	.word	0x42202323
ffff0000000e49ac:	69746f6f 	.word	0x69746f6f
ffff0000000e49b0:	5820676e 	.word	0x5820676e
ffff0000000e49b4:	00534f79 	.word	0x00534f79
ffff0000000e49b8:	e2a394e2 	.word	0xe2a394e2
ffff0000000e49bc:	43208194 	.word	0x43208194
ffff0000000e49c0:	69666e6f 	.word	0x69666e6f
ffff0000000e49c4:	69727567 	.word	0x69727567
ffff0000000e49c8:	5620676e 	.word	0x5620676e
ffff0000000e49cc:	6f746365 	.word	0x6f746365
ffff0000000e49d0:	61542072 	.word	0x61542072
ffff0000000e49d4:	00656c62 	.word	0x00656c62
ffff0000000e49d8:	e2a394e2 	.word	0xe2a394e2
ffff0000000e49dc:	46208194 	.word	0x46208194
ffff0000000e49e0:	776d7269 	.word	0x776d7269
ffff0000000e49e4:	20657261 	.word	0x20657261
ffff0000000e49e8:	69766552 	.word	0x69766552
ffff0000000e49ec:	6e6f6973 	.word	0x6e6f6973
ffff0000000e49f0:	25203a20 	.word	0x25203a20
ffff0000000e49f4:	00000a75 	.word	0x00000a75
ffff0000000e49f8:	e2a394e2 	.word	0xe2a394e2
ffff0000000e49fc:	42208194 	.word	0x42208194
ffff0000000e4a00:	6472616f 	.word	0x6472616f
ffff0000000e4a04:	646f4d20 	.word	0x646f4d20
ffff0000000e4a08:	3a206c65 	.word	0x3a206c65
ffff0000000e4a0c:	0a752520 	.word	0x0a752520
	...
ffff0000000e4a18:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4a1c:	42208194 	.word	0x42208194
ffff0000000e4a20:	6472616f 	.word	0x6472616f
ffff0000000e4a24:	76655220 	.word	0x76655220
ffff0000000e4a28:	6f697369 	.word	0x6f697369
ffff0000000e4a2c:	203a206e 	.word	0x203a206e
ffff0000000e4a30:	000a7525 	.word	0x000a7525
ffff0000000e4a34:	00000000 	.word	0x00000000
ffff0000000e4a38:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4a3c:	53208194 	.word	0x53208194
ffff0000000e4a40:	65747379 	.word	0x65747379
ffff0000000e4a44:	6554206d 	.word	0x6554206d
ffff0000000e4a48:	7265706d 	.word	0x7265706d
ffff0000000e4a4c:	72757461 	.word	0x72757461
ffff0000000e4a50:	203a2065 	.word	0x203a2065
ffff0000000e4a54:	b0c27525 	.word	0xb0c27525
ffff0000000e4a58:	00000a43 	.word	0x00000a43
ffff0000000e4a5c:	00000000 	.word	0x00000000
ffff0000000e4a60:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4a64:	41208194 	.word	0x41208194
ffff0000000e4a68:	4d204d52 	.word	0x4d204d52
ffff0000000e4a6c:	726f6d65 	.word	0x726f6d65
ffff0000000e4a70:	69532079 	.word	0x69532079
ffff0000000e4a74:	3a20657a 	.word	0x3a20657a
ffff0000000e4a78:	20752520 	.word	0x20752520
ffff0000000e4a7c:	000a424d 	.word	0x000a424d
ffff0000000e4a80:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4a84:	56208194 	.word	0x56208194
ffff0000000e4a88:	654d2043 	.word	0x654d2043
ffff0000000e4a8c:	79726f6d 	.word	0x79726f6d
ffff0000000e4a90:	7a695320 	.word	0x7a695320
ffff0000000e4a94:	203a2065 	.word	0x203a2065
ffff0000000e4a98:	4d207525 	.word	0x4d207525
ffff0000000e4a9c:	00000a42 	.word	0x00000a42
ffff0000000e4aa0:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4aa4:	43208194 	.word	0x43208194
ffff0000000e4aa8:	65727275 	.word	0x65727275
ffff0000000e4aac:	4520746e 	.word	0x4520746e
ffff0000000e4ab0:	70656378 	.word	0x70656378
ffff0000000e4ab4:	6e6f6974 	.word	0x6e6f6974
ffff0000000e4ab8:	76654c20 	.word	0x76654c20
ffff0000000e4abc:	3a206c65 	.word	0x3a206c65
ffff0000000e4ac0:	0a752520 	.word	0x0a752520
ffff0000000e4ac4:	00000000 	.word	0x00000000
ffff0000000e4ac8:	6e6b6e55 	.word	0x6e6b6e55
ffff0000000e4acc:	206e776f 	.word	0x206e776f
ffff0000000e4ad0:	65637865 	.word	0x65637865
ffff0000000e4ad4:	6f697470 	.word	0x6f697470
ffff0000000e4ad8:	656c206e 	.word	0x656c206e
ffff0000000e4adc:	006c6576 	.word	0x006c6576
ffff0000000e4ae0:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4ae4:	49208194 	.word	0x49208194
ffff0000000e4ae8:	6974696e 	.word	0x6974696e
ffff0000000e4aec:	7a696c61 	.word	0x7a696c61
ffff0000000e4af0:	20676e69 	.word	0x20676e69
ffff0000000e4af4:	66617254 	.word	0x66617254
ffff0000000e4af8:	20636966 	.word	0x20636966
ffff0000000e4afc:	6867694c 	.word	0x6867694c
ffff0000000e4b00:	00007374 	.word	0x00007374
ffff0000000e4b04:	00000000 	.word	0x00000000
ffff0000000e4b08:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4b0c:	45208194 	.word	0x45208194
ffff0000000e4b10:	6c62616e 	.word	0x6c62616e
ffff0000000e4b14:	20676e69 	.word	0x20676e69
ffff0000000e4b18:	00515249 	.word	0x00515249
ffff0000000e4b1c:	00000000 	.word	0x00000000
ffff0000000e4b20:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4b24:	45208194 	.word	0x45208194
ffff0000000e4b28:	6c62616e 	.word	0x6c62616e
ffff0000000e4b2c:	20676e69 	.word	0x20676e69
ffff0000000e4b30:	204d5241 	.word	0x204d5241
ffff0000000e4b34:	656d6954 	.word	0x656d6954
ffff0000000e4b38:	00000072 	.word	0x00000072
ffff0000000e4b3c:	00000000 	.word	0x00000000
ffff0000000e4b40:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4b44:	45208194 	.word	0x45208194
ffff0000000e4b48:	6c62616e 	.word	0x6c62616e
ffff0000000e4b4c:	20676e69 	.word	0x20676e69
ffff0000000e4b50:	204d5241 	.word	0x204d5241
ffff0000000e4b54:	656d6954 	.word	0x656d6954
ffff0000000e4b58:	52492072 	.word	0x52492072
ffff0000000e4b5c:	00000051 	.word	0x00000051
ffff0000000e4b60:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4b64:	45208194 	.word	0x45208194
ffff0000000e4b68:	6c62616e 	.word	0x6c62616e
ffff0000000e4b6c:	20676e69 	.word	0x20676e69
ffff0000000e4b70:	74737953 	.word	0x74737953
ffff0000000e4b74:	54206d65 	.word	0x54206d65
ffff0000000e4b78:	72656d69 	.word	0x72656d69
ffff0000000e4b7c:	51524920 	.word	0x51524920
	...
ffff0000000e4b88:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4b8c:	49208194 	.word	0x49208194
ffff0000000e4b90:	6974696e 	.word	0x6974696e
ffff0000000e4b94:	7a696c61 	.word	0x7a696c61
ffff0000000e4b98:	20676e69 	.word	0x20676e69
ffff0000000e4b9c:	74726956 	.word	0x74726956
ffff0000000e4ba0:	206c6175 	.word	0x206c6175
ffff0000000e4ba4:	6f6d654d 	.word	0x6f6d654d
ffff0000000e4ba8:	00007972 	.word	0x00007972
ffff0000000e4bac:	00000000 	.word	0x00000000
ffff0000000e4bb0:	e2a394e2 	.word	0xe2a394e2
ffff0000000e4bb4:	49208194 	.word	0x49208194
ffff0000000e4bb8:	6974696e 	.word	0x6974696e
ffff0000000e4bbc:	7a696c61 	.word	0x7a696c61
ffff0000000e4bc0:	20676e69 	.word	0x20676e69
ffff0000000e4bc4:	6d617246 	.word	0x6d617246
ffff0000000e4bc8:	75422065 	.word	0x75422065
ffff0000000e4bcc:	72656666 	.word	0x72656666
	...
ffff0000000e4bd8:	73206557 	.word	0x73206557
ffff0000000e4bdc:	6c756f68 	.word	0x6c756f68
ffff0000000e4be0:	656e2064 	.word	0x656e2064
ffff0000000e4be4:	20726576 	.word	0x20726576
ffff0000000e4be8:	63616572 	.word	0x63616572
ffff0000000e4bec:	65682068 	.word	0x65682068
ffff0000000e4bf0:	00006572 	.word	0x00006572
ffff0000000e4bf4:	00000000 	.word	0x00000000
ffff0000000e4bf8:	63726f46 	.word	0x63726f46
ffff0000000e4bfc:	20676e69 	.word	0x20676e69
ffff0000000e4c00:	6c616e75 	.word	0x6c616e75
ffff0000000e4c04:	656e6769 	.word	0x656e6769
ffff0000000e4c08:	61642064 	.word	0x61642064
ffff0000000e4c0c:	61206174 	.word	0x61206174
ffff0000000e4c10:	73656363 	.word	0x73656363
ffff0000000e4c14:	2e2e2e73 	.word	0x2e2e2e73
	...
ffff0000000e4c20:	75746552 	.word	0x75746552
ffff0000000e4c24:	66206e72 	.word	0x66206e72
ffff0000000e4c28:	206d6f72 	.word	0x206d6f72
ffff0000000e4c2c:	65637865 	.word	0x65637865
ffff0000000e4c30:	6f697470 	.word	0x6f697470
ffff0000000e4c34:	0000006e 	.word	0x0000006e
ffff0000000e4c38:	65707954 	.word	0x65707954
ffff0000000e4c3c:	74697277 	.word	0x74697277
ffff0000000e4c40:	4d207265 	.word	0x4d207265
ffff0000000e4c44:	2065646f 	.word	0x2065646f
ffff0000000e4c48:	00006e4f 	.word	0x00006e4f
ffff0000000e4c4c:	00000000 	.word	0x00000000
ffff0000000e4c50:	6e6b6e55 	.word	0x6e6b6e55
ffff0000000e4c54:	206e776f 	.word	0x206e776f
ffff0000000e4c58:	6d6d6f63 	.word	0x6d6d6f63
ffff0000000e4c5c:	00646e61 	.word	0x00646e61
ffff0000000e4c60:	57202323 	.word	0x57202323
ffff0000000e4c64:	6f636c65 	.word	0x6f636c65
ffff0000000e4c68:	7420656d 	.word	0x7420656d
ffff0000000e4c6c:	7958206f 	.word	0x7958206f
ffff0000000e4c70:	0000534f 	.word	0x0000534f
ffff0000000e4c74:	00000000 	.word	0x00000000
ffff0000000e4c78:	4e49414d 	.word	0x4e49414d
ffff0000000e4c7c:	4e454d20 	.word	0x4e454d20
ffff0000000e4c80:	00000055 	.word	0x00000055
ffff0000000e4c84:	00000000 	.word	0x00000000
ffff0000000e4c88:	0000203e 	.word	0x0000203e
ffff0000000e4c8c:	00000000 	.word	0x00000000
ffff0000000e4c90:	23232323 	.word	0x23232323
ffff0000000e4c94:	23232323 	.word	0x23232323
ffff0000000e4c98:	58452023 	.word	0x58452023
ffff0000000e4c9c:	54504543 	.word	0x54504543
ffff0000000e4ca0:	204e4f49 	.word	0x204e4f49
ffff0000000e4ca4:	23232323 	.word	0x23232323
ffff0000000e4ca8:	23232323 	.word	0x23232323
ffff0000000e4cac:	00000023 	.word	0x00000023
ffff0000000e4cb0:	65637845 	.word	0x65637845
ffff0000000e4cb4:	6f697470 	.word	0x6f697470
ffff0000000e4cb8:	654c206e 	.word	0x654c206e
ffff0000000e4cbc:	3a6c6576 	.word	0x3a6c6576
ffff0000000e4cc0:	00003120 	.word	0x00003120
ffff0000000e4cc4:	00000000 	.word	0x00000000
ffff0000000e4cc8:	65746e49 	.word	0x65746e49
ffff0000000e4ccc:	70757272 	.word	0x70757272
ffff0000000e4cd0:	74532074 	.word	0x74532074
ffff0000000e4cd4:	73757461 	.word	0x73757461
ffff0000000e4cd8:	7825203a 	.word	0x7825203a
ffff0000000e4cdc:	0000000a 	.word	0x0000000a
ffff0000000e4ce0:	65637845 	.word	0x65637845
ffff0000000e4ce4:	6f697470 	.word	0x6f697470
ffff0000000e4ce8:	7953206e 	.word	0x7953206e
ffff0000000e4cec:	6f72646e 	.word	0x6f72646e
ffff0000000e4cf0:	203a656d 	.word	0x203a656d
ffff0000000e4cf4:	000a7825 	.word	0x000a7825
ffff0000000e4cf8:	65637845 	.word	0x65637845
ffff0000000e4cfc:	6f697470 	.word	0x6f697470
ffff0000000e4d00:	694c206e 	.word	0x694c206e
ffff0000000e4d04:	203a6b6e 	.word	0x203a6b6e
ffff0000000e4d08:	000a7825 	.word	0x000a7825
ffff0000000e4d0c:	00000000 	.word	0x00000000
ffff0000000e4d10:	65766153 	.word	0x65766153
ffff0000000e4d14:	72502064 	.word	0x72502064
ffff0000000e4d18:	6172676f 	.word	0x6172676f
ffff0000000e4d1c:	7453206d 	.word	0x7453206d
ffff0000000e4d20:	3a657461 	.word	0x3a657461
ffff0000000e4d24:	0a782520 	.word	0x0a782520
	...
ffff0000000e4d30:	23232323 	.word	0x23232323
ffff0000000e4d34:	23232323 	.word	0x23232323
ffff0000000e4d38:	23232323 	.word	0x23232323
ffff0000000e4d3c:	23232323 	.word	0x23232323
ffff0000000e4d40:	23232323 	.word	0x23232323
ffff0000000e4d44:	23232323 	.word	0x23232323
ffff0000000e4d48:	23232323 	.word	0x23232323
ffff0000000e4d4c:	00000023 	.word	0x00000023
ffff0000000e4d50:	23232323 	.word	0x23232323
ffff0000000e4d54:	23232323 	.word	0x23232323
ffff0000000e4d58:	20232323 	.word	0x20232323
ffff0000000e4d5c:	4f525245 	.word	0x4f525245
ffff0000000e4d60:	23232052 	.word	0x23232052
ffff0000000e4d64:	23232323 	.word	0x23232323
ffff0000000e4d68:	23232323 	.word	0x23232323
ffff0000000e4d6c:	00000023 	.word	0x00000023
ffff0000000e4d70:	6e6b6e55 	.word	0x6e6b6e55
ffff0000000e4d74:	206e776f 	.word	0x206e776f
ffff0000000e4d78:	20572f48 	.word	0x20572f48
ffff0000000e4d7c:	65637865 	.word	0x65637865
ffff0000000e4d80:	6f697470 	.word	0x6f697470
ffff0000000e4d84:	0000006e 	.word	0x0000006e
ffff0000000e4d88:	6e6b6e55 	.word	0x6e6b6e55
ffff0000000e4d8c:	206e776f 	.word	0x206e776f
ffff0000000e4d90:	20572f53 	.word	0x20572f53
ffff0000000e4d94:	65637865 	.word	0x65637865
ffff0000000e4d98:	6f697470 	.word	0x6f697470
ffff0000000e4d9c:	0000006e 	.word	0x0000006e
ffff0000000e4da0:	65672041 	.word	0x65672041
ffff0000000e4da4:	6972656e 	.word	0x6972656e
ffff0000000e4da8:	72652063 	.word	0x72652063
ffff0000000e4dac:	20726f72 	.word	0x20726f72
ffff0000000e4db0:	7563636f 	.word	0x7563636f
ffff0000000e4db4:	64657272 	.word	0x64657272
	...
ffff0000000e4dc0:	6b72614d 	.word	0x6b72614d
ffff0000000e4dc4:	77207265 	.word	0x77207265
ffff0000000e4dc8:	74207361 	.word	0x74207361
ffff0000000e4dcc:	67676972 	.word	0x67676972
ffff0000000e4dd0:	64657265 	.word	0x64657265
ffff0000000e4dd4:	00000021 	.word	0x00000021
ffff0000000e4dd8:	6f727245 	.word	0x6f727245
ffff0000000e4ddc:	66207372 	.word	0x66207372
ffff0000000e4de0:	646e756f 	.word	0x646e756f
ffff0000000e4de4:	00000021 	.word	0x00000021
ffff0000000e4de8:	74646957 	.word	0x74646957
ffff0000000e4dec:	65482f68 	.word	0x65482f68
ffff0000000e4df0:	74686769 	.word	0x74686769
ffff0000000e4df4:	65726120 	.word	0x65726120
ffff0000000e4df8:	746f6e20 	.word	0x746f6e20
ffff0000000e4dfc:	61687720 	.word	0x61687720
ffff0000000e4e00:	61772074 	.word	0x61772074
ffff0000000e4e04:	65642073 	.word	0x65642073
ffff0000000e4e08:	65726973 	.word	0x65726973
ffff0000000e4e0c:	00000064 	.word	0x00000064
ffff0000000e4e10:	73796850 	.word	0x73796850
ffff0000000e4e14:	6c616369 	.word	0x6c616369
ffff0000000e4e18:	646e6120 	.word	0x646e6120
ffff0000000e4e1c:	72697620 	.word	0x72697620
ffff0000000e4e20:	6c617574 	.word	0x6c617574
ffff0000000e4e24:	6d696420 	.word	0x6d696420
ffff0000000e4e28:	69736e65 	.word	0x69736e65
ffff0000000e4e2c:	20736e6f 	.word	0x20736e6f
ffff0000000e4e30:	20657261 	.word	0x20657261
ffff0000000e4e34:	20746f6e 	.word	0x20746f6e
ffff0000000e4e38:	20656874 	.word	0x20656874
ffff0000000e4e3c:	656d6173 	.word	0x656d6173
ffff0000000e4e40:	00000021 	.word	0x00000021
ffff0000000e4e44:	00000000 	.word	0x00000000
ffff0000000e4e48:	74706544 	.word	0x74706544
ffff0000000e4e4c:	73692068 	.word	0x73692068
ffff0000000e4e50:	746f6e20 	.word	0x746f6e20
ffff0000000e4e54:	61687720 	.word	0x61687720
ffff0000000e4e58:	61772074 	.word	0x61772074
ffff0000000e4e5c:	65642073 	.word	0x65642073
ffff0000000e4e60:	65726973 	.word	0x65726973
ffff0000000e4e64:	00000064 	.word	0x00000064
ffff0000000e4e68:	7366664f 	.word	0x7366664f
ffff0000000e4e6c:	20737465 	.word	0x20737465
ffff0000000e4e70:	20657261 	.word	0x20657261
ffff0000000e4e74:	20746f6e 	.word	0x20746f6e
ffff0000000e4e78:	74616877 	.word	0x74616877
ffff0000000e4e7c:	73617720 	.word	0x73617720
ffff0000000e4e80:	73656420 	.word	0x73656420
ffff0000000e4e84:	64657269 	.word	0x64657269
	...
ffff0000000e4e90:	6d617246 	.word	0x6d617246
ffff0000000e4e94:	75622065 	.word	0x75622065
ffff0000000e4e98:	72656666 	.word	0x72656666
ffff0000000e4e9c:	79687020 	.word	0x79687020
ffff0000000e4ea0:	61636973 	.word	0x61636973
ffff0000000e4ea4:	6461206c 	.word	0x6461206c
ffff0000000e4ea8:	73657264 	.word	0x73657264
ffff0000000e4eac:	696d2073 	.word	0x696d2073
ffff0000000e4eb0:	696c6173 	.word	0x696c6173
ffff0000000e4eb4:	64656e67 	.word	0x64656e67
	...
ffff0000000e4ec0:	23202020 	.word	0x23202020
ffff0000000e4ec4:	23232323 	.word	0x23232323
ffff0000000e4ec8:	23232323 	.word	0x23232323
ffff0000000e4ecc:	23232323 	.word	0x23232323
ffff0000000e4ed0:	23232323 	.word	0x23232323
ffff0000000e4ed4:	23232323 	.word	0x23232323
ffff0000000e4ed8:	23232323 	.word	0x23232323
ffff0000000e4edc:	23232323 	.word	0x23232323
ffff0000000e4ee0:	23232323 	.word	0x23232323
ffff0000000e4ee4:	23232323 	.word	0x23232323
ffff0000000e4ee8:	23232323 	.word	0x23232323
ffff0000000e4eec:	23232323 	.word	0x23232323
ffff0000000e4ef0:	23232323 	.word	0x23232323
ffff0000000e4ef4:	23232323 	.word	0x23232323
ffff0000000e4ef8:	23232323 	.word	0x23232323
ffff0000000e4efc:	23232323 	.word	0x23232323
ffff0000000e4f00:	00232323 	.word	0x00232323
ffff0000000e4f04:	00000000 	.word	0x00000000
ffff0000000e4f08:	23202020 	.word	0x23202020
ffff0000000e4f0c:	61724620 	.word	0x61724620
ffff0000000e4f10:	4220656d 	.word	0x4220656d
ffff0000000e4f14:	65666675 	.word	0x65666675
ffff0000000e4f18:	65522072 	.word	0x65522072
ffff0000000e4f1c:	756c6f73 	.word	0x756c6f73
ffff0000000e4f20:	6e6f6974 	.word	0x6e6f6974
ffff0000000e4f24:	20202020 	.word	0x20202020
ffff0000000e4f28:	20202020 	.word	0x20202020
ffff0000000e4f2c:	20202020 	.word	0x20202020
ffff0000000e4f30:	20202020 	.word	0x20202020
ffff0000000e4f34:	25203d20 	.word	0x25203d20
ffff0000000e4f38:	20782075 	.word	0x20782075
ffff0000000e4f3c:	000a7525 	.word	0x000a7525
ffff0000000e4f40:	23202020 	.word	0x23202020
ffff0000000e4f44:	61724620 	.word	0x61724620
ffff0000000e4f48:	4220656d 	.word	0x4220656d
ffff0000000e4f4c:	65666675 	.word	0x65666675
ffff0000000e4f50:	69532072 	.word	0x69532072
ffff0000000e4f54:	2020657a 	.word	0x2020657a
ffff0000000e4f58:	20202020 	.word	0x20202020
ffff0000000e4f5c:	20202020 	.word	0x20202020
ffff0000000e4f60:	20202020 	.word	0x20202020
ffff0000000e4f64:	20202020 	.word	0x20202020
ffff0000000e4f68:	20202020 	.word	0x20202020
ffff0000000e4f6c:	25203d20 	.word	0x25203d20
ffff0000000e4f70:	00000a75 	.word	0x00000a75
ffff0000000e4f74:	00000000 	.word	0x00000000
ffff0000000e4f78:	23202020 	.word	0x23202020
ffff0000000e4f7c:	61724620 	.word	0x61724620
ffff0000000e4f80:	4220656d 	.word	0x4220656d
ffff0000000e4f84:	65666675 	.word	0x65666675
ffff0000000e4f88:	68502072 	.word	0x68502072
ffff0000000e4f8c:	63697379 	.word	0x63697379
ffff0000000e4f90:	42206c61 	.word	0x42206c61
ffff0000000e4f94:	20657361 	.word	0x20657361
ffff0000000e4f98:	72646441 	.word	0x72646441
ffff0000000e4f9c:	20737365 	.word	0x20737365
ffff0000000e4fa0:	20202020 	.word	0x20202020
ffff0000000e4fa4:	25203d20 	.word	0x25203d20
ffff0000000e4fa8:	00000a75 	.word	0x00000a75
ffff0000000e4fac:	00000000 	.word	0x00000000
ffff0000000e4fb0:	23202020 	.word	0x23202020
ffff0000000e4fb4:	61724620 	.word	0x61724620
ffff0000000e4fb8:	4220656d 	.word	0x4220656d
ffff0000000e4fbc:	65666675 	.word	0x65666675
ffff0000000e4fc0:	68502072 	.word	0x68502072
ffff0000000e4fc4:	63697379 	.word	0x63697379
ffff0000000e4fc8:	45206c61 	.word	0x45206c61
ffff0000000e4fcc:	4120646e 	.word	0x4120646e
ffff0000000e4fd0:	65726464 	.word	0x65726464
ffff0000000e4fd4:	20207373 	.word	0x20207373
ffff0000000e4fd8:	20202020 	.word	0x20202020
ffff0000000e4fdc:	25203d20 	.word	0x25203d20
ffff0000000e4fe0:	00000a75 	.word	0x00000a75
ffff0000000e4fe4:	00000000 	.word	0x00000000
ffff0000000e4fe8:	23202020 	.word	0x23202020
ffff0000000e4fec:	61724620 	.word	0x61724620
ffff0000000e4ff0:	4220656d 	.word	0x4220656d
ffff0000000e4ff4:	65666675 	.word	0x65666675
ffff0000000e4ff8:	69562072 	.word	0x69562072
ffff0000000e4ffc:	61757472 	.word	0x61757472
ffff0000000e5000:	6142206c 	.word	0x6142206c
ffff0000000e5004:	41206573 	.word	0x41206573
ffff0000000e5008:	65726464 	.word	0x65726464
ffff0000000e500c:	20207373 	.word	0x20207373
ffff0000000e5010:	20202020 	.word	0x20202020
ffff0000000e5014:	25203d20 	.word	0x25203d20
ffff0000000e5018:	00000a75 	.word	0x00000a75
ffff0000000e501c:	00000000 	.word	0x00000000
ffff0000000e5020:	23202020 	.word	0x23202020
ffff0000000e5024:	61724620 	.word	0x61724620
ffff0000000e5028:	4220656d 	.word	0x4220656d
ffff0000000e502c:	65666675 	.word	0x65666675
ffff0000000e5030:	69562072 	.word	0x69562072
ffff0000000e5034:	61757472 	.word	0x61757472
ffff0000000e5038:	6e45206c 	.word	0x6e45206c
ffff0000000e503c:	64412064 	.word	0x64412064
ffff0000000e5040:	73657264 	.word	0x73657264
ffff0000000e5044:	20202073 	.word	0x20202073
ffff0000000e5048:	20202020 	.word	0x20202020
ffff0000000e504c:	25203d20 	.word	0x25203d20
ffff0000000e5050:	00000a75 	.word	0x00000a75
ffff0000000e5054:	00000000 	.word	0x00000000
ffff0000000e5058:	23202020 	.word	0x23202020
ffff0000000e505c:	73655420 	.word	0x73655420
ffff0000000e5060:	72542074 	.word	0x72542074
ffff0000000e5064:	6c736e61 	.word	0x6c736e61
ffff0000000e5068:	6f697461 	.word	0x6f697461
ffff0000000e506c:	5628206e 	.word	0x5628206e
ffff0000000e5070:	75747269 	.word	0x75747269
ffff0000000e5074:	42206c61 	.word	0x42206c61
ffff0000000e5078:	20657361 	.word	0x20657361
ffff0000000e507c:	72646441 	.word	0x72646441
ffff0000000e5080:	29737365 	.word	0x29737365
ffff0000000e5084:	25203d20 	.word	0x25203d20
ffff0000000e5088:	00000a75 	.word	0x00000a75
ffff0000000e508c:	00000000 	.word	0x00000000
ffff0000000e5090:	23202020 	.word	0x23202020
ffff0000000e5094:	73655420 	.word	0x73655420
ffff0000000e5098:	72542074 	.word	0x72542074
ffff0000000e509c:	6c736e61 	.word	0x6c736e61
ffff0000000e50a0:	6f697461 	.word	0x6f697461
ffff0000000e50a4:	5628206e 	.word	0x5628206e
ffff0000000e50a8:	75747269 	.word	0x75747269
ffff0000000e50ac:	45206c61 	.word	0x45206c61
ffff0000000e50b0:	4120646e 	.word	0x4120646e
ffff0000000e50b4:	65726464 	.word	0x65726464
ffff0000000e50b8:	20297373 	.word	0x20297373
ffff0000000e50bc:	25203d20 	.word	0x25203d20
ffff0000000e50c0:	00000a75 	.word	0x00000a75
ffff0000000e50c4:	00000000 	.word	0x00000000
ffff0000000e50c8:	6c756f43 	.word	0x6c756f43
ffff0000000e50cc:	6f6e2064 	.word	0x6f6e2064
ffff0000000e50d0:	65672074 	.word	0x65672074
ffff0000000e50d4:	44452074 	.word	0x44452074
ffff0000000e50d8:	62204449 	.word	0x62204449
ffff0000000e50dc:	6b636f6c 	.word	0x6b636f6c
ffff0000000e50e0:	0000002e 	.word	0x0000002e
ffff0000000e50e4:	00000000 	.word	0x00000000
ffff0000000e50e8:	44494445 	.word	0x44494445
ffff0000000e50ec:	6f6c4220 	.word	0x6f6c4220
ffff0000000e50f0:	53206b63 	.word	0x53206b63
ffff0000000e50f4:	75746174 	.word	0x75746174
ffff0000000e50f8:	203d2073 	.word	0x203d2073
ffff0000000e50fc:	000a7525 	.word	0x000a7525
ffff0000000e5100:	656b7341 	.word	0x656b7341
ffff0000000e5104:	6f742064 	.word	0x6f742064
ffff0000000e5108:	61726420 	.word	0x61726420
ffff0000000e510c:	78282077 	.word	0x78282077
ffff0000000e5110:	203d2029 	.word	0x203d2029
ffff0000000e5114:	000a7525 	.word	0x000a7525
ffff0000000e5118:	6d617246 	.word	0x6d617246
ffff0000000e511c:	75422065 	.word	0x75422065
ffff0000000e5120:	72656666 	.word	0x72656666
ffff0000000e5124:	64695720 	.word	0x64695720
ffff0000000e5128:	3d206874 	.word	0x3d206874
ffff0000000e512c:	0a752520 	.word	0x0a752520
	...
ffff0000000e5138:	61662078 	.word	0x61662078
ffff0000000e513c:	64656c69 	.word	0x64656c69
	...
ffff0000000e5148:	656b7341 	.word	0x656b7341
ffff0000000e514c:	6f742064 	.word	0x6f742064
ffff0000000e5150:	61726420 	.word	0x61726420
ffff0000000e5154:	79282077 	.word	0x79282077
ffff0000000e5158:	203d2029 	.word	0x203d2029
ffff0000000e515c:	000a7525 	.word	0x000a7525
ffff0000000e5160:	6d617246 	.word	0x6d617246
ffff0000000e5164:	75422065 	.word	0x75422065
ffff0000000e5168:	72656666 	.word	0x72656666
ffff0000000e516c:	69654820 	.word	0x69654820
ffff0000000e5170:	20746867 	.word	0x20746867
ffff0000000e5174:	7525203d 	.word	0x7525203d
ffff0000000e5178:	0000000a 	.word	0x0000000a
ffff0000000e517c:	00000000 	.word	0x00000000
ffff0000000e5180:	61662079 	.word	0x61662079
ffff0000000e5184:	64656c69 	.word	0x64656c69
	...
ffff0000000e5190:	6c756f43 	.word	0x6c756f43
ffff0000000e5194:	6f6e2064 	.word	0x6f6e2064
ffff0000000e5198:	75742074 	.word	0x75742074
ffff0000000e519c:	4c206e72 	.word	0x4c206e72
ffff0000000e51a0:	6f204445 	.word	0x6f204445
ffff0000000e51a4:	4d202e6e 	.word	0x4d202e6e
ffff0000000e51a8:	626c6961 	.word	0x626c6961
ffff0000000e51ac:	7720786f 	.word	0x7720786f
ffff0000000e51b0:	65746972 	.word	0x65746972
ffff0000000e51b4:	69616620 	.word	0x69616620
ffff0000000e51b8:	2e64656c 	.word	0x2e64656c
ffff0000000e51bc:	00000000 	.word	0x00000000
ffff0000000e51c0:	6c756f43 	.word	0x6c756f43
ffff0000000e51c4:	6f6e2064 	.word	0x6f6e2064
ffff0000000e51c8:	65672074 	.word	0x65672074
ffff0000000e51cc:	52412074 	.word	0x52412074
ffff0000000e51d0:	4152204d 	.word	0x4152204d
ffff0000000e51d4:	4d202e4d 	.word	0x4d202e4d
ffff0000000e51d8:	626c6961 	.word	0x626c6961
ffff0000000e51dc:	7720786f 	.word	0x7720786f
ffff0000000e51e0:	65746972 	.word	0x65746972
ffff0000000e51e4:	69616620 	.word	0x69616620
ffff0000000e51e8:	2e64656c 	.word	0x2e64656c
ffff0000000e51ec:	00000000 	.word	0x00000000
ffff0000000e51f0:	204d5241 	.word	0x204d5241
ffff0000000e51f4:	204d4152 	.word	0x204d4152
ffff0000000e51f8:	7366666f 	.word	0x7366666f
ffff0000000e51fc:	69207465 	.word	0x69207465
ffff0000000e5200:	6f6e2073 	.word	0x6f6e2073
ffff0000000e5204:	2e302074 	.word	0x2e302074
	...
ffff0000000e5210:	6c756f43 	.word	0x6c756f43
ffff0000000e5214:	6f6e2064 	.word	0x6f6e2064
ffff0000000e5218:	65672074 	.word	0x65672074
ffff0000000e521c:	43562074 	.word	0x43562074
ffff0000000e5220:	4d415220 	.word	0x4d415220
ffff0000000e5224:	614d202e 	.word	0x614d202e
ffff0000000e5228:	6f626c69 	.word	0x6f626c69
ffff0000000e522c:	72772078 	.word	0x72772078
ffff0000000e5230:	20657469 	.word	0x20657469
ffff0000000e5234:	6c696166 	.word	0x6c696166
ffff0000000e5238:	002e6465 	.word	0x002e6465
ffff0000000e523c:	00000000 	.word	0x00000000
ffff0000000e5240:	6c756f43 	.word	0x6c756f43
ffff0000000e5244:	6f6e2064 	.word	0x6f6e2064
ffff0000000e5248:	65672074 	.word	0x65672074
ffff0000000e524c:	69462074 	.word	0x69462074
ffff0000000e5250:	61776d72 	.word	0x61776d72
ffff0000000e5254:	52206572 	.word	0x52206572
ffff0000000e5258:	73697665 	.word	0x73697665
ffff0000000e525c:	2e6e6f69 	.word	0x2e6e6f69
ffff0000000e5260:	69614d20 	.word	0x69614d20
ffff0000000e5264:	786f626c 	.word	0x786f626c
ffff0000000e5268:	69727720 	.word	0x69727720
ffff0000000e526c:	66206574 	.word	0x66206574
ffff0000000e5270:	656c6961 	.word	0x656c6961
ffff0000000e5274:	00002e64 	.word	0x00002e64
ffff0000000e5278:	6c756f43 	.word	0x6c756f43
ffff0000000e527c:	6f6e2064 	.word	0x6f6e2064
ffff0000000e5280:	65672074 	.word	0x65672074
ffff0000000e5284:	6f422074 	.word	0x6f422074
ffff0000000e5288:	20647261 	.word	0x20647261
ffff0000000e528c:	65646f4d 	.word	0x65646f4d
ffff0000000e5290:	4d202e6c 	.word	0x4d202e6c
ffff0000000e5294:	626c6961 	.word	0x626c6961
ffff0000000e5298:	7720786f 	.word	0x7720786f
ffff0000000e529c:	65746972 	.word	0x65746972
ffff0000000e52a0:	69616620 	.word	0x69616620
ffff0000000e52a4:	2e64656c 	.word	0x2e64656c
	...
ffff0000000e52b0:	6c756f43 	.word	0x6c756f43
ffff0000000e52b4:	6f6e2064 	.word	0x6f6e2064
ffff0000000e52b8:	65672074 	.word	0x65672074
ffff0000000e52bc:	6f422074 	.word	0x6f422074
ffff0000000e52c0:	20647261 	.word	0x20647261
ffff0000000e52c4:	69766552 	.word	0x69766552
ffff0000000e52c8:	6e6f6973 	.word	0x6e6f6973
ffff0000000e52cc:	614d202e 	.word	0x614d202e
ffff0000000e52d0:	6f626c69 	.word	0x6f626c69
ffff0000000e52d4:	72772078 	.word	0x72772078
ffff0000000e52d8:	20657469 	.word	0x20657469
ffff0000000e52dc:	6c696166 	.word	0x6c696166
ffff0000000e52e0:	002e6465 	.word	0x002e6465
ffff0000000e52e4:	00000000 	.word	0x00000000
ffff0000000e52e8:	6c756f43 	.word	0x6c756f43
ffff0000000e52ec:	6f6e2064 	.word	0x6f6e2064
ffff0000000e52f0:	65672074 	.word	0x65672074
ffff0000000e52f4:	6c632074 	.word	0x6c632074
ffff0000000e52f8:	206b636f 	.word	0x206b636f
ffff0000000e52fc:	72727563 	.word	0x72727563
ffff0000000e5300:	20746e65 	.word	0x20746e65
ffff0000000e5304:	71657266 	.word	0x71657266
ffff0000000e5308:	636e6575 	.word	0x636e6575
ffff0000000e530c:	4d202e79 	.word	0x4d202e79
ffff0000000e5310:	626c6961 	.word	0x626c6961
ffff0000000e5314:	7720786f 	.word	0x7720786f
ffff0000000e5318:	65746972 	.word	0x65746972
ffff0000000e531c:	69616620 	.word	0x69616620
ffff0000000e5320:	2e64656c 	.word	0x2e64656c
ffff0000000e5324:	00000000 	.word	0x00000000
ffff0000000e5328:	20752528 	.word	0x20752528
ffff0000000e532c:	297a484b 	.word	0x297a484b
ffff0000000e5330:	00000020 	.word	0x00000020
ffff0000000e5334:	00000000 	.word	0x00000000
ffff0000000e5338:	6c756f43 	.word	0x6c756f43
ffff0000000e533c:	6f6e2064 	.word	0x6f6e2064
ffff0000000e5340:	65672074 	.word	0x65672074
ffff0000000e5344:	6c632074 	.word	0x6c632074
ffff0000000e5348:	206b636f 	.word	0x206b636f
ffff0000000e534c:	74617473 	.word	0x74617473
ffff0000000e5350:	4d202e65 	.word	0x4d202e65
ffff0000000e5354:	626c6961 	.word	0x626c6961
ffff0000000e5358:	7720786f 	.word	0x7720786f
ffff0000000e535c:	65746972 	.word	0x65746972
ffff0000000e5360:	69616620 	.word	0x69616620
ffff0000000e5364:	2e64656c 	.word	0x2e64656c
	...
ffff0000000e5370:	72746552 	.word	0x72746552
ffff0000000e5374:	69766569 	.word	0x69766569
ffff0000000e5378:	6320676e 	.word	0x6320676e
ffff0000000e537c:	6b636f6c 	.word	0x6b636f6c
ffff0000000e5380:	61747320 	.word	0x61747320
ffff0000000e5384:	66206574 	.word	0x66206574
ffff0000000e5388:	6320726f 	.word	0x6320726f
ffff0000000e538c:	6b636f6c 	.word	0x6b636f6c
ffff0000000e5390:	61687420 	.word	0x61687420
ffff0000000e5394:	6f642074 	.word	0x6f642074
ffff0000000e5398:	6e207365 	.word	0x6e207365
ffff0000000e539c:	6520746f 	.word	0x6520746f
ffff0000000e53a0:	74736978 	.word	0x74736978
ffff0000000e53a4:	00000021 	.word	0x00000021
ffff0000000e53a8:	296e4f28 	.word	0x296e4f28
ffff0000000e53ac:	00000020 	.word	0x00000020
ffff0000000e53b0:	66664f28 	.word	0x66664f28
ffff0000000e53b4:	00002029 	.word	0x00002029
ffff0000000e53b8:	4d4d4528 	.word	0x4d4d4528
ffff0000000e53bc:	00002943 	.word	0x00002943
ffff0000000e53c0:	52415528 	.word	0x52415528
ffff0000000e53c4:	00002954 	.word	0x00002954
ffff0000000e53c8:	4d524128 	.word	0x4d524128
ffff0000000e53cc:	00000029 	.word	0x00000029
ffff0000000e53d0:	524f4328 	.word	0x524f4328
ffff0000000e53d4:	00002945 	.word	0x00002945
ffff0000000e53d8:	44335628 	.word	0x44335628
ffff0000000e53dc:	00000029 	.word	0x00000029
ffff0000000e53e0:	36324828 	.word	0x36324828
ffff0000000e53e4:	00002934 	.word	0x00002934
ffff0000000e53e8:	50534928 	.word	0x50534928
ffff0000000e53ec:	00000029 	.word	0x00000029
ffff0000000e53f0:	52445328 	.word	0x52445328
ffff0000000e53f4:	00294d41 	.word	0x00294d41
ffff0000000e53f8:	58495028 	.word	0x58495028
ffff0000000e53fc:	00294c45 	.word	0x00294c45
ffff0000000e5400:	4d575028 	.word	0x4d575028
ffff0000000e5404:	00000029 	.word	0x00000029
ffff0000000e5408:	6e6b6e55 	.word	0x6e6b6e55
ffff0000000e540c:	206e776f 	.word	0x206e776f
ffff0000000e5410:	636f6c63 	.word	0x636f6c63
ffff0000000e5414:	43202e6b 	.word	0x43202e6b
ffff0000000e5418:	6f6e6e61 	.word	0x6f6e6e61
ffff0000000e541c:	65722074 	.word	0x65722074
ffff0000000e5420:	65697274 	.word	0x65697274
ffff0000000e5424:	6e206576 	.word	0x6e206576
ffff0000000e5428:	2e656d61 	.word	0x2e656d61
ffff0000000e542c:	00000000 	.word	0x00000000
ffff0000000e5430:	6c756f43 	.word	0x6c756f43
ffff0000000e5434:	6f6e2064 	.word	0x6f6e2064
ffff0000000e5438:	65672074 	.word	0x65672074
ffff0000000e543c:	6c632074 	.word	0x6c632074
ffff0000000e5440:	736b636f 	.word	0x736b636f
ffff0000000e5444:	614d202e 	.word	0x614d202e
ffff0000000e5448:	6f626c69 	.word	0x6f626c69
ffff0000000e544c:	72772078 	.word	0x72772078
ffff0000000e5450:	20657469 	.word	0x20657469
ffff0000000e5454:	6c696166 	.word	0x6c696166
ffff0000000e5458:	002e6465 	.word	0x002e6465
ffff0000000e545c:	00000000 	.word	0x00000000
ffff0000000e5460:	636f6c43 	.word	0x636f6c43
ffff0000000e5464:	7525206b 	.word	0x7525206b
ffff0000000e5468:	203e2d20 	.word	0x203e2d20
ffff0000000e546c:	00000000 	.word	0x00000000
ffff0000000e5470:	73614228 	.word	0x73614228
ffff0000000e5474:	00202965 	.word	0x00202965
ffff0000000e5478:	72615028 	.word	0x72615028
ffff0000000e547c:	20746e65 	.word	0x20746e65
ffff0000000e5480:	20297525 	.word	0x20297525
ffff0000000e5484:	00000000 	.word	0x00000000
ffff0000000e5488:	6c756f43 	.word	0x6c756f43
ffff0000000e548c:	6f6e2064 	.word	0x6f6e2064
ffff0000000e5490:	65672074 	.word	0x65672074
ffff0000000e5494:	79732074 	.word	0x79732074
ffff0000000e5498:	6d657473 	.word	0x6d657473
ffff0000000e549c:	6d657420 	.word	0x6d657420
ffff0000000e54a0:	61726570 	.word	0x61726570
ffff0000000e54a4:	65727574 	.word	0x65727574
ffff0000000e54a8:	614d202e 	.word	0x614d202e
ffff0000000e54ac:	6f626c69 	.word	0x6f626c69
ffff0000000e54b0:	72772078 	.word	0x72772078
ffff0000000e54b4:	20657469 	.word	0x20657469
ffff0000000e54b8:	6c696166 	.word	0x6c696166
ffff0000000e54bc:	002e6465 	.word	0x002e6465
ffff0000000e54c0:	23202020 	.word	0x23202020
ffff0000000e54c4:	23232323 	.word	0x23232323
ffff0000000e54c8:	23232323 	.word	0x23232323
ffff0000000e54cc:	23232323 	.word	0x23232323
ffff0000000e54d0:	23232323 	.word	0x23232323
ffff0000000e54d4:	23232323 	.word	0x23232323
ffff0000000e54d8:	23232323 	.word	0x23232323
ffff0000000e54dc:	23232323 	.word	0x23232323
ffff0000000e54e0:	23232323 	.word	0x23232323
ffff0000000e54e4:	23232323 	.word	0x23232323
ffff0000000e54e8:	23232323 	.word	0x23232323
ffff0000000e54ec:	23232323 	.word	0x23232323
ffff0000000e54f0:	23232323 	.word	0x23232323
ffff0000000e54f4:	23232323 	.word	0x23232323
ffff0000000e54f8:	23232323 	.word	0x23232323
ffff0000000e54fc:	00000000 	.word	0x00000000
ffff0000000e5500:	23202020 	.word	0x23202020
ffff0000000e5504:	72654b20 	.word	0x72654b20
ffff0000000e5508:	206c656e 	.word	0x206c656e
ffff0000000e550c:	72617453 	.word	0x72617453
ffff0000000e5510:	64412074 	.word	0x64412074
ffff0000000e5514:	73657264 	.word	0x73657264
ffff0000000e5518:	20202073 	.word	0x20202073
ffff0000000e551c:	20202020 	.word	0x20202020
ffff0000000e5520:	20202020 	.word	0x20202020
ffff0000000e5524:	203d2020 	.word	0x203d2020
ffff0000000e5528:	000a7825 	.word	0x000a7825
ffff0000000e552c:	00000000 	.word	0x00000000
ffff0000000e5530:	23202020 	.word	0x23202020
ffff0000000e5534:	72654b20 	.word	0x72654b20
ffff0000000e5538:	206c656e 	.word	0x206c656e
ffff0000000e553c:	20646e45 	.word	0x20646e45
ffff0000000e5540:	72646441 	.word	0x72646441
ffff0000000e5544:	20737365 	.word	0x20737365
ffff0000000e5548:	20202020 	.word	0x20202020
ffff0000000e554c:	20202020 	.word	0x20202020
ffff0000000e5550:	20202020 	.word	0x20202020
ffff0000000e5554:	203d2020 	.word	0x203d2020
ffff0000000e5558:	000a7825 	.word	0x000a7825
ffff0000000e555c:	00000000 	.word	0x00000000
ffff0000000e5560:	23202020 	.word	0x23202020
ffff0000000e5564:	72654b20 	.word	0x72654b20
ffff0000000e5568:	206c656e 	.word	0x206c656e
ffff0000000e556c:	5020314c 	.word	0x5020314c
ffff0000000e5570:	20656761 	.word	0x20656761
ffff0000000e5574:	6c626154 	.word	0x6c626154
ffff0000000e5578:	65422065 	.word	0x65422065
ffff0000000e557c:	206e6967 	.word	0x206e6967
ffff0000000e5580:	20202020 	.word	0x20202020
ffff0000000e5584:	203d2020 	.word	0x203d2020
ffff0000000e5588:	000a7825 	.word	0x000a7825
ffff0000000e558c:	00000000 	.word	0x00000000
ffff0000000e5590:	23202020 	.word	0x23202020
ffff0000000e5594:	72654b20 	.word	0x72654b20
ffff0000000e5598:	206c656e 	.word	0x206c656e
ffff0000000e559c:	5020314c 	.word	0x5020314c
ffff0000000e55a0:	20656761 	.word	0x20656761
ffff0000000e55a4:	6c626154 	.word	0x6c626154
ffff0000000e55a8:	6e452065 	.word	0x6e452065
ffff0000000e55ac:	20202064 	.word	0x20202064
ffff0000000e55b0:	20202020 	.word	0x20202020
ffff0000000e55b4:	203d2020 	.word	0x203d2020
ffff0000000e55b8:	000a7825 	.word	0x000a7825
ffff0000000e55bc:	00000000 	.word	0x00000000
ffff0000000e55c0:	23202020 	.word	0x23202020
ffff0000000e55c4:	72654b20 	.word	0x72654b20
ffff0000000e55c8:	206c656e 	.word	0x206c656e
ffff0000000e55cc:	65707055 	.word	0x65707055
ffff0000000e55d0:	324c2072 	.word	0x324c2072
ffff0000000e55d4:	67615020 	.word	0x67615020
ffff0000000e55d8:	61542065 	.word	0x61542065
ffff0000000e55dc:	20656c62 	.word	0x20656c62
ffff0000000e55e0:	69676542 	.word	0x69676542
ffff0000000e55e4:	203d206e 	.word	0x203d206e
ffff0000000e55e8:	000a7825 	.word	0x000a7825
ffff0000000e55ec:	00000000 	.word	0x00000000
ffff0000000e55f0:	23202020 	.word	0x23202020
ffff0000000e55f4:	72654b20 	.word	0x72654b20
ffff0000000e55f8:	206c656e 	.word	0x206c656e
ffff0000000e55fc:	65707055 	.word	0x65707055
ffff0000000e5600:	324c2072 	.word	0x324c2072
ffff0000000e5604:	67615020 	.word	0x67615020
ffff0000000e5608:	61542065 	.word	0x61542065
ffff0000000e560c:	20656c62 	.word	0x20656c62
ffff0000000e5610:	20646e45 	.word	0x20646e45
ffff0000000e5614:	203d2020 	.word	0x203d2020
ffff0000000e5618:	000a7825 	.word	0x000a7825
ffff0000000e561c:	00000000 	.word	0x00000000
ffff0000000e5620:	23202020 	.word	0x23202020
ffff0000000e5624:	72654b20 	.word	0x72654b20
ffff0000000e5628:	206c656e 	.word	0x206c656e
ffff0000000e562c:	65707055 	.word	0x65707055
ffff0000000e5630:	334c2072 	.word	0x334c2072
ffff0000000e5634:	67615020 	.word	0x67615020
ffff0000000e5638:	61542065 	.word	0x61542065
ffff0000000e563c:	20656c62 	.word	0x20656c62
ffff0000000e5640:	69676542 	.word	0x69676542
ffff0000000e5644:	203d206e 	.word	0x203d206e
ffff0000000e5648:	000a7825 	.word	0x000a7825
ffff0000000e564c:	00000000 	.word	0x00000000
ffff0000000e5650:	23202020 	.word	0x23202020
ffff0000000e5654:	72654b20 	.word	0x72654b20
ffff0000000e5658:	206c656e 	.word	0x206c656e
ffff0000000e565c:	65707055 	.word	0x65707055
ffff0000000e5660:	334c2072 	.word	0x334c2072
ffff0000000e5664:	67615020 	.word	0x67615020
ffff0000000e5668:	61542065 	.word	0x61542065
ffff0000000e566c:	20656c62 	.word	0x20656c62
ffff0000000e5670:	20646e45 	.word	0x20646e45
ffff0000000e5674:	203d2020 	.word	0x203d2020
ffff0000000e5678:	000a7825 	.word	0x000a7825
ffff0000000e567c:	00000000 	.word	0x00000000
ffff0000000e5680:	23202020 	.word	0x23202020
ffff0000000e5684:	72654b20 	.word	0x72654b20
ffff0000000e5688:	206c656e 	.word	0x206c656e
ffff0000000e568c:	65776f4c 	.word	0x65776f4c
ffff0000000e5690:	324c2072 	.word	0x324c2072
ffff0000000e5694:	67615020 	.word	0x67615020
ffff0000000e5698:	61542065 	.word	0x61542065
ffff0000000e569c:	20656c62 	.word	0x20656c62
ffff0000000e56a0:	69676542 	.word	0x69676542
ffff0000000e56a4:	203d206e 	.word	0x203d206e
ffff0000000e56a8:	000a7825 	.word	0x000a7825
ffff0000000e56ac:	00000000 	.word	0x00000000
ffff0000000e56b0:	23202020 	.word	0x23202020
ffff0000000e56b4:	72654b20 	.word	0x72654b20
ffff0000000e56b8:	206c656e 	.word	0x206c656e
ffff0000000e56bc:	65776f4c 	.word	0x65776f4c
ffff0000000e56c0:	324c2072 	.word	0x324c2072
ffff0000000e56c4:	67615020 	.word	0x67615020
ffff0000000e56c8:	61542065 	.word	0x61542065
ffff0000000e56cc:	20656c62 	.word	0x20656c62
ffff0000000e56d0:	20646e45 	.word	0x20646e45
ffff0000000e56d4:	203d2020 	.word	0x203d2020
ffff0000000e56d8:	000a7825 	.word	0x000a7825
ffff0000000e56dc:	00000000 	.word	0x00000000
ffff0000000e56e0:	23202020 	.word	0x23202020
ffff0000000e56e4:	72654b20 	.word	0x72654b20
ffff0000000e56e8:	206c656e 	.word	0x206c656e
ffff0000000e56ec:	65776f4c 	.word	0x65776f4c
ffff0000000e56f0:	334c2072 	.word	0x334c2072
ffff0000000e56f4:	67615020 	.word	0x67615020
ffff0000000e56f8:	61542065 	.word	0x61542065
ffff0000000e56fc:	20656c62 	.word	0x20656c62
ffff0000000e5700:	69676542 	.word	0x69676542
ffff0000000e5704:	203d206e 	.word	0x203d206e
ffff0000000e5708:	000a7825 	.word	0x000a7825
ffff0000000e570c:	00000000 	.word	0x00000000
ffff0000000e5710:	23202020 	.word	0x23202020
ffff0000000e5714:	72654b20 	.word	0x72654b20
ffff0000000e5718:	206c656e 	.word	0x206c656e
ffff0000000e571c:	65776f4c 	.word	0x65776f4c
ffff0000000e5720:	334c2072 	.word	0x334c2072
ffff0000000e5724:	67615020 	.word	0x67615020
ffff0000000e5728:	61542065 	.word	0x61542065
ffff0000000e572c:	20656c62 	.word	0x20656c62
ffff0000000e5730:	20646e45 	.word	0x20646e45
ffff0000000e5734:	203d2020 	.word	0x203d2020
ffff0000000e5738:	000a7825 	.word	0x000a7825
ffff0000000e573c:	00000000 	.word	0x00000000
ffff0000000e5740:	65766947 	.word	0x65766947
ffff0000000e5744:	696c6120 	.word	0x696c6120
ffff0000000e5748:	64656e67 	.word	0x64656e67
ffff0000000e574c:	64646120 	.word	0x64646120
ffff0000000e5750:	73736572 	.word	0x73736572
ffff0000000e5754:	77207365 	.word	0x77207365
ffff0000000e5758:	206e6568 	.word	0x206e6568
ffff0000000e575c:	6f6c6c61 	.word	0x6f6c6c61
ffff0000000e5760:	69746163 	.word	0x69746163
ffff0000000e5764:	0021676e 	.word	0x0021676e
ffff0000000e5768:	23202020 	.word	0x23202020
ffff0000000e576c:	23232323 	.word	0x23232323
ffff0000000e5770:	23232323 	.word	0x23232323
ffff0000000e5774:	23232323 	.word	0x23232323
ffff0000000e5778:	23232323 	.word	0x23232323
ffff0000000e577c:	23232323 	.word	0x23232323
ffff0000000e5780:	23232323 	.word	0x23232323
ffff0000000e5784:	23232323 	.word	0x23232323
ffff0000000e5788:	23232323 	.word	0x23232323
ffff0000000e578c:	23232323 	.word	0x23232323
ffff0000000e5790:	23232323 	.word	0x23232323
ffff0000000e5794:	23232323 	.word	0x23232323
ffff0000000e5798:	23232323 	.word	0x23232323
ffff0000000e579c:	23232323 	.word	0x23232323
	...
ffff0000000e57a8:	23202020 	.word	0x23202020
ffff0000000e57ac:	6c6c4120 	.word	0x6c6c4120
ffff0000000e57b0:	7461636f 	.word	0x7461636f
ffff0000000e57b4:	206e6f69 	.word	0x206e6f69
ffff0000000e57b8:	657a6953 	.word	0x657a6953
ffff0000000e57bc:	20202020 	.word	0x20202020
ffff0000000e57c0:	20202020 	.word	0x20202020
ffff0000000e57c4:	20202020 	.word	0x20202020
ffff0000000e57c8:	7525203d 	.word	0x7525203d
ffff0000000e57cc:	0000000a 	.word	0x0000000a
ffff0000000e57d0:	23202020 	.word	0x23202020
ffff0000000e57d4:	79685020 	.word	0x79685020
ffff0000000e57d8:	61636973 	.word	0x61636973
ffff0000000e57dc:	6441206c 	.word	0x6441206c
ffff0000000e57e0:	73657264 	.word	0x73657264
ffff0000000e57e4:	74532073 	.word	0x74532073
ffff0000000e57e8:	20747261 	.word	0x20747261
ffff0000000e57ec:	20202020 	.word	0x20202020
ffff0000000e57f0:	7825203d 	.word	0x7825203d
ffff0000000e57f4:	0000000a 	.word	0x0000000a
ffff0000000e57f8:	23202020 	.word	0x23202020
ffff0000000e57fc:	6d754e20 	.word	0x6d754e20
ffff0000000e5800:	20726562 	.word	0x20726562
ffff0000000e5804:	5020666f 	.word	0x5020666f
ffff0000000e5808:	73656761 	.word	0x73656761
ffff0000000e580c:	71655220 	.word	0x71655220
ffff0000000e5810:	65726975 	.word	0x65726975
ffff0000000e5814:	20202064 	.word	0x20202064
ffff0000000e5818:	7525203d 	.word	0x7525203d
ffff0000000e581c:	0000000a 	.word	0x0000000a
ffff0000000e5820:	23202020 	.word	0x23202020
ffff0000000e5824:	73614c20 	.word	0x73614c20
ffff0000000e5828:	61502074 	.word	0x61502074
ffff0000000e582c:	50206567 	.word	0x50206567
ffff0000000e5830:	69737968 	.word	0x69737968
ffff0000000e5834:	206c6163 	.word	0x206c6163
ffff0000000e5838:	72646441 	.word	0x72646441
ffff0000000e583c:	20737365 	.word	0x20737365
ffff0000000e5840:	7825203d 	.word	0x7825203d
ffff0000000e5844:	0000000a 	.word	0x0000000a
ffff0000000e5848:	23202020 	.word	0x23202020
ffff0000000e584c:	72695620 	.word	0x72695620
ffff0000000e5850:	6c617574 	.word	0x6c617574
ffff0000000e5854:	64644120 	.word	0x64644120
ffff0000000e5858:	73736572 	.word	0x73736572
ffff0000000e585c:	61745320 	.word	0x61745320
ffff0000000e5860:	20207472 	.word	0x20207472
ffff0000000e5864:	20202020 	.word	0x20202020
ffff0000000e5868:	7825203d 	.word	0x7825203d
ffff0000000e586c:	0000000a 	.word	0x0000000a

Disassembly of section .data:

ffff0000000e5870 <FONT>:
	...
ffff0000000e5880:	817e0000 	.word	0x817e0000
ffff0000000e5884:	bd8181a5 	.word	0xbd8181a5
ffff0000000e5888:	7e818199 	.word	0x7e818199
ffff0000000e588c:	00000000 	.word	0x00000000
ffff0000000e5890:	ff7e0000 	.word	0xff7e0000
ffff0000000e5894:	c3ffffdb 	.word	0xc3ffffdb
ffff0000000e5898:	7effffe7 	.word	0x7effffe7
	...
ffff0000000e58a4:	fefefe6c 	.word	0xfefefe6c
ffff0000000e58a8:	10387cfe 	.word	0x10387cfe
	...
ffff0000000e58b4:	fe7c3810 	.word	0xfe7c3810
ffff0000000e58b8:	0010387c 	.word	0x0010387c
ffff0000000e58bc:	00000000 	.word	0x00000000
ffff0000000e58c0:	18000000 	.word	0x18000000
ffff0000000e58c4:	e7e73c3c 	.word	0xe7e73c3c
ffff0000000e58c8:	3c1818e7 	.word	0x3c1818e7
ffff0000000e58cc:	00000000 	.word	0x00000000
ffff0000000e58d0:	18000000 	.word	0x18000000
ffff0000000e58d4:	ffff7e3c 	.word	0xffff7e3c
ffff0000000e58d8:	3c18187e 	.word	0x3c18187e
	...
ffff0000000e58e4:	3c180000 	.word	0x3c180000
ffff0000000e58e8:	0000183c 	.word	0x0000183c
ffff0000000e58ec:	00000000 	.word	0x00000000
ffff0000000e58f0:	ffffffff 	.word	0xffffffff
ffff0000000e58f4:	c3e7ffff 	.word	0xc3e7ffff
ffff0000000e58f8:	ffffe7c3 	.word	0xffffe7c3
ffff0000000e58fc:	ffffffff 	.word	0xffffffff
ffff0000000e5900:	00000000 	.word	0x00000000
ffff0000000e5904:	42663c00 	.word	0x42663c00
ffff0000000e5908:	003c6642 	.word	0x003c6642
ffff0000000e590c:	00000000 	.word	0x00000000
ffff0000000e5910:	ffffffff 	.word	0xffffffff
ffff0000000e5914:	bd99c3ff 	.word	0xbd99c3ff
ffff0000000e5918:	ffc399bd 	.word	0xffc399bd
ffff0000000e591c:	ffffffff 	.word	0xffffffff
ffff0000000e5920:	0e1e0000 	.word	0x0e1e0000
ffff0000000e5924:	cc78321a 	.word	0xcc78321a
ffff0000000e5928:	78cccccc 	.word	0x78cccccc
ffff0000000e592c:	00000000 	.word	0x00000000
ffff0000000e5930:	663c0000 	.word	0x663c0000
ffff0000000e5934:	3c666666 	.word	0x3c666666
ffff0000000e5938:	18187e18 	.word	0x18187e18
ffff0000000e593c:	00000000 	.word	0x00000000
ffff0000000e5940:	333f0000 	.word	0x333f0000
ffff0000000e5944:	3030303f 	.word	0x3030303f
ffff0000000e5948:	e0f07030 	.word	0xe0f07030
ffff0000000e594c:	00000000 	.word	0x00000000
ffff0000000e5950:	637f0000 	.word	0x637f0000
ffff0000000e5954:	6363637f 	.word	0x6363637f
ffff0000000e5958:	e6e76763 	.word	0xe6e76763
ffff0000000e595c:	000000c0 	.word	0x000000c0
ffff0000000e5960:	18000000 	.word	0x18000000
ffff0000000e5964:	e73cdb18 	.word	0xe73cdb18
ffff0000000e5968:	1818db3c 	.word	0x1818db3c
ffff0000000e596c:	00000000 	.word	0x00000000
ffff0000000e5970:	e0c08000 	.word	0xe0c08000
ffff0000000e5974:	f8fef8f0 	.word	0xf8fef8f0
ffff0000000e5978:	80c0e0f0 	.word	0x80c0e0f0
ffff0000000e597c:	00000000 	.word	0x00000000
ffff0000000e5980:	0e060200 	.word	0x0e060200
ffff0000000e5984:	3efe3e1e 	.word	0x3efe3e1e
ffff0000000e5988:	02060e1e 	.word	0x02060e1e
ffff0000000e598c:	00000000 	.word	0x00000000
ffff0000000e5990:	3c180000 	.word	0x3c180000
ffff0000000e5994:	1818187e 	.word	0x1818187e
ffff0000000e5998:	00183c7e 	.word	0x00183c7e
ffff0000000e599c:	00000000 	.word	0x00000000
ffff0000000e59a0:	66660000 	.word	0x66660000
ffff0000000e59a4:	66666666 	.word	0x66666666
ffff0000000e59a8:	66660066 	.word	0x66660066
ffff0000000e59ac:	00000000 	.word	0x00000000
ffff0000000e59b0:	db7f0000 	.word	0xdb7f0000
ffff0000000e59b4:	1b7bdbdb 	.word	0x1b7bdbdb
ffff0000000e59b8:	1b1b1b1b 	.word	0x1b1b1b1b
ffff0000000e59bc:	00000000 	.word	0x00000000
ffff0000000e59c0:	60c67c00 	.word	0x60c67c00
ffff0000000e59c4:	c6c66c38 	.word	0xc6c66c38
ffff0000000e59c8:	c60c386c 	.word	0xc60c386c
ffff0000000e59cc:	0000007c 	.word	0x0000007c
	...
ffff0000000e59d8:	fefefefe 	.word	0xfefefefe
ffff0000000e59dc:	00000000 	.word	0x00000000
ffff0000000e59e0:	3c180000 	.word	0x3c180000
ffff0000000e59e4:	1818187e 	.word	0x1818187e
ffff0000000e59e8:	7e183c7e 	.word	0x7e183c7e
ffff0000000e59ec:	00000000 	.word	0x00000000
ffff0000000e59f0:	3c180000 	.word	0x3c180000
ffff0000000e59f4:	1818187e 	.word	0x1818187e
ffff0000000e59f8:	18181818 	.word	0x18181818
ffff0000000e59fc:	00000000 	.word	0x00000000
ffff0000000e5a00:	18180000 	.word	0x18180000
ffff0000000e5a04:	18181818 	.word	0x18181818
ffff0000000e5a08:	183c7e18 	.word	0x183c7e18
	...
ffff0000000e5a14:	fe0c1800 	.word	0xfe0c1800
ffff0000000e5a18:	0000180c 	.word	0x0000180c
	...
ffff0000000e5a24:	fe603000 	.word	0xfe603000
ffff0000000e5a28:	00003060 	.word	0x00003060
	...
ffff0000000e5a34:	c0c00000 	.word	0xc0c00000
ffff0000000e5a38:	0000fec0 	.word	0x0000fec0
	...
ffff0000000e5a44:	ff662400 	.word	0xff662400
ffff0000000e5a48:	00002466 	.word	0x00002466
	...
ffff0000000e5a54:	7c383810 	.word	0x7c383810
ffff0000000e5a58:	00fefe7c 	.word	0x00fefe7c
	...
ffff0000000e5a64:	7c7cfefe 	.word	0x7c7cfefe
ffff0000000e5a68:	00103838 	.word	0x00103838
	...
ffff0000000e5a80:	3c180000 	.word	0x3c180000
ffff0000000e5a84:	18183c3c 	.word	0x18183c3c
ffff0000000e5a88:	18180018 	.word	0x18180018
ffff0000000e5a8c:	00000000 	.word	0x00000000
ffff0000000e5a90:	66666600 	.word	0x66666600
ffff0000000e5a94:	00000024 	.word	0x00000024
	...
ffff0000000e5aa0:	6c000000 	.word	0x6c000000
ffff0000000e5aa4:	6c6cfe6c 	.word	0x6c6cfe6c
ffff0000000e5aa8:	6c6cfe6c 	.word	0x6c6cfe6c
ffff0000000e5aac:	00000000 	.word	0x00000000
ffff0000000e5ab0:	c67c1818 	.word	0xc67c1818
ffff0000000e5ab4:	067cc0c2 	.word	0x067cc0c2
ffff0000000e5ab8:	7cc68606 	.word	0x7cc68606
ffff0000000e5abc:	00001818 	.word	0x00001818
ffff0000000e5ac0:	00000000 	.word	0x00000000
ffff0000000e5ac4:	180cc6c2 	.word	0x180cc6c2
ffff0000000e5ac8:	86c66030 	.word	0x86c66030
ffff0000000e5acc:	00000000 	.word	0x00000000
ffff0000000e5ad0:	6c380000 	.word	0x6c380000
ffff0000000e5ad4:	dc76386c 	.word	0xdc76386c
ffff0000000e5ad8:	76cccccc 	.word	0x76cccccc
ffff0000000e5adc:	00000000 	.word	0x00000000
ffff0000000e5ae0:	30303000 	.word	0x30303000
ffff0000000e5ae4:	00000060 	.word	0x00000060
	...
ffff0000000e5af0:	180c0000 	.word	0x180c0000
ffff0000000e5af4:	30303030 	.word	0x30303030
ffff0000000e5af8:	0c183030 	.word	0x0c183030
ffff0000000e5afc:	00000000 	.word	0x00000000
ffff0000000e5b00:	18300000 	.word	0x18300000
ffff0000000e5b04:	0c0c0c0c 	.word	0x0c0c0c0c
ffff0000000e5b08:	30180c0c 	.word	0x30180c0c
	...
ffff0000000e5b14:	ff3c6600 	.word	0xff3c6600
ffff0000000e5b18:	0000663c 	.word	0x0000663c
	...
ffff0000000e5b24:	7e181800 	.word	0x7e181800
ffff0000000e5b28:	00001818 	.word	0x00001818
	...
ffff0000000e5b38:	18181800 	.word	0x18181800
ffff0000000e5b3c:	00000030 	.word	0x00000030
ffff0000000e5b40:	00000000 	.word	0x00000000
ffff0000000e5b44:	7e000000 	.word	0x7e000000
	...
ffff0000000e5b58:	18180000 	.word	0x18180000
	...
ffff0000000e5b64:	180c0602 	.word	0x180c0602
ffff0000000e5b68:	80c06030 	.word	0x80c06030
ffff0000000e5b6c:	00000000 	.word	0x00000000
ffff0000000e5b70:	c67c0000 	.word	0xc67c0000
ffff0000000e5b74:	f6decec6 	.word	0xf6decec6
ffff0000000e5b78:	7cc6c6e6 	.word	0x7cc6c6e6
ffff0000000e5b7c:	00000000 	.word	0x00000000
ffff0000000e5b80:	38180000 	.word	0x38180000
ffff0000000e5b84:	18181878 	.word	0x18181878
ffff0000000e5b88:	7e181818 	.word	0x7e181818
ffff0000000e5b8c:	00000000 	.word	0x00000000
ffff0000000e5b90:	c67c0000 	.word	0xc67c0000
ffff0000000e5b94:	30180c06 	.word	0x30180c06
ffff0000000e5b98:	fec6c060 	.word	0xfec6c060
ffff0000000e5b9c:	00000000 	.word	0x00000000
ffff0000000e5ba0:	c67c0000 	.word	0xc67c0000
ffff0000000e5ba4:	063c0606 	.word	0x063c0606
ffff0000000e5ba8:	7cc60606 	.word	0x7cc60606
ffff0000000e5bac:	00000000 	.word	0x00000000
ffff0000000e5bb0:	1c0c0000 	.word	0x1c0c0000
ffff0000000e5bb4:	fecc6c3c 	.word	0xfecc6c3c
ffff0000000e5bb8:	1e0c0c0c 	.word	0x1e0c0c0c
ffff0000000e5bbc:	00000000 	.word	0x00000000
ffff0000000e5bc0:	c0fe0000 	.word	0xc0fe0000
ffff0000000e5bc4:	06fcc0c0 	.word	0x06fcc0c0
ffff0000000e5bc8:	7cc60606 	.word	0x7cc60606
ffff0000000e5bcc:	00000000 	.word	0x00000000
ffff0000000e5bd0:	60380000 	.word	0x60380000
ffff0000000e5bd4:	c6fcc0c0 	.word	0xc6fcc0c0
ffff0000000e5bd8:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e5bdc:	00000000 	.word	0x00000000
ffff0000000e5be0:	c6fe0000 	.word	0xc6fe0000
ffff0000000e5be4:	180c0606 	.word	0x180c0606
ffff0000000e5be8:	30303030 	.word	0x30303030
ffff0000000e5bec:	00000000 	.word	0x00000000
ffff0000000e5bf0:	c67c0000 	.word	0xc67c0000
ffff0000000e5bf4:	c67cc6c6 	.word	0xc67cc6c6
ffff0000000e5bf8:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e5bfc:	00000000 	.word	0x00000000
ffff0000000e5c00:	c67c0000 	.word	0xc67c0000
ffff0000000e5c04:	067ec6c6 	.word	0x067ec6c6
ffff0000000e5c08:	780c0606 	.word	0x780c0606
	...
ffff0000000e5c14:	00001818 	.word	0x00001818
ffff0000000e5c18:	00181800 	.word	0x00181800
	...
ffff0000000e5c24:	00001818 	.word	0x00001818
ffff0000000e5c28:	30181800 	.word	0x30181800
ffff0000000e5c2c:	00000000 	.word	0x00000000
ffff0000000e5c30:	06000000 	.word	0x06000000
ffff0000000e5c34:	6030180c 	.word	0x6030180c
ffff0000000e5c38:	060c1830 	.word	0x060c1830
	...
ffff0000000e5c44:	00007e00 	.word	0x00007e00
ffff0000000e5c48:	0000007e 	.word	0x0000007e
ffff0000000e5c4c:	00000000 	.word	0x00000000
ffff0000000e5c50:	60000000 	.word	0x60000000
ffff0000000e5c54:	060c1830 	.word	0x060c1830
ffff0000000e5c58:	6030180c 	.word	0x6030180c
ffff0000000e5c5c:	00000000 	.word	0x00000000
ffff0000000e5c60:	c67c0000 	.word	0xc67c0000
ffff0000000e5c64:	18180cc6 	.word	0x18180cc6
ffff0000000e5c68:	18180018 	.word	0x18180018
ffff0000000e5c6c:	00000000 	.word	0x00000000
ffff0000000e5c70:	c67c0000 	.word	0xc67c0000
ffff0000000e5c74:	dedec6c6 	.word	0xdedec6c6
ffff0000000e5c78:	7cc0dcde 	.word	0x7cc0dcde
ffff0000000e5c7c:	00000000 	.word	0x00000000
ffff0000000e5c80:	38100000 	.word	0x38100000
ffff0000000e5c84:	fec6c66c 	.word	0xfec6c66c
ffff0000000e5c88:	c6c6c6c6 	.word	0xc6c6c6c6
ffff0000000e5c8c:	00000000 	.word	0x00000000
ffff0000000e5c90:	66fc0000 	.word	0x66fc0000
ffff0000000e5c94:	667c6666 	.word	0x667c6666
ffff0000000e5c98:	fc666666 	.word	0xfc666666
ffff0000000e5c9c:	00000000 	.word	0x00000000
ffff0000000e5ca0:	663c0000 	.word	0x663c0000
ffff0000000e5ca4:	c0c0c0c2 	.word	0xc0c0c0c2
ffff0000000e5ca8:	3c66c2c0 	.word	0x3c66c2c0
ffff0000000e5cac:	00000000 	.word	0x00000000
ffff0000000e5cb0:	6cf80000 	.word	0x6cf80000
ffff0000000e5cb4:	66666666 	.word	0x66666666
ffff0000000e5cb8:	f86c6666 	.word	0xf86c6666
ffff0000000e5cbc:	00000000 	.word	0x00000000
ffff0000000e5cc0:	66fe0000 	.word	0x66fe0000
ffff0000000e5cc4:	68786862 	.word	0x68786862
ffff0000000e5cc8:	fe666260 	.word	0xfe666260
ffff0000000e5ccc:	00000000 	.word	0x00000000
ffff0000000e5cd0:	66fe0000 	.word	0x66fe0000
ffff0000000e5cd4:	68786862 	.word	0x68786862
ffff0000000e5cd8:	f0606060 	.word	0xf0606060
ffff0000000e5cdc:	00000000 	.word	0x00000000
ffff0000000e5ce0:	663c0000 	.word	0x663c0000
ffff0000000e5ce4:	dec0c0c2 	.word	0xdec0c0c2
ffff0000000e5ce8:	3a66c6c6 	.word	0x3a66c6c6
ffff0000000e5cec:	00000000 	.word	0x00000000
ffff0000000e5cf0:	c6c60000 	.word	0xc6c60000
ffff0000000e5cf4:	c6fec6c6 	.word	0xc6fec6c6
ffff0000000e5cf8:	c6c6c6c6 	.word	0xc6c6c6c6
ffff0000000e5cfc:	00000000 	.word	0x00000000
ffff0000000e5d00:	183c0000 	.word	0x183c0000
ffff0000000e5d04:	18181818 	.word	0x18181818
ffff0000000e5d08:	3c181818 	.word	0x3c181818
ffff0000000e5d0c:	00000000 	.word	0x00000000
ffff0000000e5d10:	0c1e0000 	.word	0x0c1e0000
ffff0000000e5d14:	0c0c0c0c 	.word	0x0c0c0c0c
ffff0000000e5d18:	78cccccc 	.word	0x78cccccc
ffff0000000e5d1c:	00000000 	.word	0x00000000
ffff0000000e5d20:	66e60000 	.word	0x66e60000
ffff0000000e5d24:	78786c66 	.word	0x78786c66
ffff0000000e5d28:	e666666c 	.word	0xe666666c
ffff0000000e5d2c:	00000000 	.word	0x00000000
ffff0000000e5d30:	60f00000 	.word	0x60f00000
ffff0000000e5d34:	60606060 	.word	0x60606060
ffff0000000e5d38:	fe666260 	.word	0xfe666260
ffff0000000e5d3c:	00000000 	.word	0x00000000
ffff0000000e5d40:	e7c30000 	.word	0xe7c30000
ffff0000000e5d44:	c3dbffff 	.word	0xc3dbffff
ffff0000000e5d48:	c3c3c3c3 	.word	0xc3c3c3c3
ffff0000000e5d4c:	00000000 	.word	0x00000000
ffff0000000e5d50:	e6c60000 	.word	0xe6c60000
ffff0000000e5d54:	cedefef6 	.word	0xcedefef6
ffff0000000e5d58:	c6c6c6c6 	.word	0xc6c6c6c6
ffff0000000e5d5c:	00000000 	.word	0x00000000
ffff0000000e5d60:	c67c0000 	.word	0xc67c0000
ffff0000000e5d64:	c6c6c6c6 	.word	0xc6c6c6c6
ffff0000000e5d68:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e5d6c:	00000000 	.word	0x00000000
ffff0000000e5d70:	66fc0000 	.word	0x66fc0000
ffff0000000e5d74:	607c6666 	.word	0x607c6666
ffff0000000e5d78:	f0606060 	.word	0xf0606060
ffff0000000e5d7c:	00000000 	.word	0x00000000
ffff0000000e5d80:	c67c0000 	.word	0xc67c0000
ffff0000000e5d84:	c6c6c6c6 	.word	0xc6c6c6c6
ffff0000000e5d88:	7cded6c6 	.word	0x7cded6c6
ffff0000000e5d8c:	00000e0c 	.word	0x00000e0c
ffff0000000e5d90:	66fc0000 	.word	0x66fc0000
ffff0000000e5d94:	6c7c6666 	.word	0x6c7c6666
ffff0000000e5d98:	e6666666 	.word	0xe6666666
ffff0000000e5d9c:	00000000 	.word	0x00000000
ffff0000000e5da0:	c67c0000 	.word	0xc67c0000
ffff0000000e5da4:	0c3860c6 	.word	0x0c3860c6
ffff0000000e5da8:	7cc6c606 	.word	0x7cc6c606
ffff0000000e5dac:	00000000 	.word	0x00000000
ffff0000000e5db0:	dbff0000 	.word	0xdbff0000
ffff0000000e5db4:	18181899 	.word	0x18181899
ffff0000000e5db8:	3c181818 	.word	0x3c181818
ffff0000000e5dbc:	00000000 	.word	0x00000000
ffff0000000e5dc0:	c6c60000 	.word	0xc6c60000
ffff0000000e5dc4:	c6c6c6c6 	.word	0xc6c6c6c6
ffff0000000e5dc8:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e5dcc:	00000000 	.word	0x00000000
ffff0000000e5dd0:	c3c30000 	.word	0xc3c30000
ffff0000000e5dd4:	c3c3c3c3 	.word	0xc3c3c3c3
ffff0000000e5dd8:	183c66c3 	.word	0x183c66c3
ffff0000000e5ddc:	00000000 	.word	0x00000000
ffff0000000e5de0:	c3c30000 	.word	0xc3c30000
ffff0000000e5de4:	dbc3c3c3 	.word	0xdbc3c3c3
ffff0000000e5de8:	6666ffdb 	.word	0x6666ffdb
ffff0000000e5dec:	00000000 	.word	0x00000000
ffff0000000e5df0:	c3c30000 	.word	0xc3c30000
ffff0000000e5df4:	18183c66 	.word	0x18183c66
ffff0000000e5df8:	c3c3663c 	.word	0xc3c3663c
ffff0000000e5dfc:	00000000 	.word	0x00000000
ffff0000000e5e00:	c3c30000 	.word	0xc3c30000
ffff0000000e5e04:	183c66c3 	.word	0x183c66c3
ffff0000000e5e08:	3c181818 	.word	0x3c181818
ffff0000000e5e0c:	00000000 	.word	0x00000000
ffff0000000e5e10:	c3ff0000 	.word	0xc3ff0000
ffff0000000e5e14:	30180c86 	.word	0x30180c86
ffff0000000e5e18:	ffc3c160 	.word	0xffc3c160
ffff0000000e5e1c:	00000000 	.word	0x00000000
ffff0000000e5e20:	303c0000 	.word	0x303c0000
ffff0000000e5e24:	30303030 	.word	0x30303030
ffff0000000e5e28:	3c303030 	.word	0x3c303030
ffff0000000e5e2c:	00000000 	.word	0x00000000
ffff0000000e5e30:	80000000 	.word	0x80000000
ffff0000000e5e34:	3870e0c0 	.word	0x3870e0c0
ffff0000000e5e38:	02060e1c 	.word	0x02060e1c
ffff0000000e5e3c:	00000000 	.word	0x00000000
ffff0000000e5e40:	0c3c0000 	.word	0x0c3c0000
ffff0000000e5e44:	0c0c0c0c 	.word	0x0c0c0c0c
ffff0000000e5e48:	3c0c0c0c 	.word	0x3c0c0c0c
ffff0000000e5e4c:	00000000 	.word	0x00000000
ffff0000000e5e50:	c66c3810 	.word	0xc66c3810
	...
ffff0000000e5e6c:	0000ff00 	.word	0x0000ff00
ffff0000000e5e70:	00183030 	.word	0x00183030
	...
ffff0000000e5e84:	7c0c7800 	.word	0x7c0c7800
ffff0000000e5e88:	76cccccc 	.word	0x76cccccc
ffff0000000e5e8c:	00000000 	.word	0x00000000
ffff0000000e5e90:	60e00000 	.word	0x60e00000
ffff0000000e5e94:	666c7860 	.word	0x666c7860
ffff0000000e5e98:	7c666666 	.word	0x7c666666
	...
ffff0000000e5ea4:	c0c67c00 	.word	0xc0c67c00
ffff0000000e5ea8:	7cc6c0c0 	.word	0x7cc6c0c0
ffff0000000e5eac:	00000000 	.word	0x00000000
ffff0000000e5eb0:	0c1c0000 	.word	0x0c1c0000
ffff0000000e5eb4:	cc6c3c0c 	.word	0xcc6c3c0c
ffff0000000e5eb8:	76cccccc 	.word	0x76cccccc
	...
ffff0000000e5ec4:	fec67c00 	.word	0xfec67c00
ffff0000000e5ec8:	7cc6c0c0 	.word	0x7cc6c0c0
ffff0000000e5ecc:	00000000 	.word	0x00000000
ffff0000000e5ed0:	6c380000 	.word	0x6c380000
ffff0000000e5ed4:	60f06064 	.word	0x60f06064
ffff0000000e5ed8:	f0606060 	.word	0xf0606060
	...
ffff0000000e5ee4:	cccc7600 	.word	0xcccc7600
ffff0000000e5ee8:	7ccccccc 	.word	0x7ccccccc
ffff0000000e5eec:	0078cc0c 	.word	0x0078cc0c
ffff0000000e5ef0:	60e00000 	.word	0x60e00000
ffff0000000e5ef4:	66766c60 	.word	0x66766c60
ffff0000000e5ef8:	e6666666 	.word	0xe6666666
ffff0000000e5efc:	00000000 	.word	0x00000000
ffff0000000e5f00:	18180000 	.word	0x18180000
ffff0000000e5f04:	18183800 	.word	0x18183800
ffff0000000e5f08:	3c181818 	.word	0x3c181818
ffff0000000e5f0c:	00000000 	.word	0x00000000
ffff0000000e5f10:	06060000 	.word	0x06060000
ffff0000000e5f14:	06060e00 	.word	0x06060e00
ffff0000000e5f18:	06060606 	.word	0x06060606
ffff0000000e5f1c:	003c6666 	.word	0x003c6666
ffff0000000e5f20:	60e00000 	.word	0x60e00000
ffff0000000e5f24:	786c6660 	.word	0x786c6660
ffff0000000e5f28:	e6666c78 	.word	0xe6666c78
ffff0000000e5f2c:	00000000 	.word	0x00000000
ffff0000000e5f30:	18380000 	.word	0x18380000
ffff0000000e5f34:	18181818 	.word	0x18181818
ffff0000000e5f38:	3c181818 	.word	0x3c181818
	...
ffff0000000e5f44:	dbffe600 	.word	0xdbffe600
ffff0000000e5f48:	dbdbdbdb 	.word	0xdbdbdbdb
	...
ffff0000000e5f54:	6666dc00 	.word	0x6666dc00
ffff0000000e5f58:	66666666 	.word	0x66666666
	...
ffff0000000e5f64:	c6c67c00 	.word	0xc6c67c00
ffff0000000e5f68:	7cc6c6c6 	.word	0x7cc6c6c6
	...
ffff0000000e5f74:	6666dc00 	.word	0x6666dc00
ffff0000000e5f78:	7c666666 	.word	0x7c666666
ffff0000000e5f7c:	00f06060 	.word	0x00f06060
ffff0000000e5f80:	00000000 	.word	0x00000000
ffff0000000e5f84:	cccc7600 	.word	0xcccc7600
ffff0000000e5f88:	7ccccccc 	.word	0x7ccccccc
ffff0000000e5f8c:	001e0c0c 	.word	0x001e0c0c
ffff0000000e5f90:	00000000 	.word	0x00000000
ffff0000000e5f94:	6676dc00 	.word	0x6676dc00
ffff0000000e5f98:	f0606060 	.word	0xf0606060
	...
ffff0000000e5fa4:	60c67c00 	.word	0x60c67c00
ffff0000000e5fa8:	7cc60c38 	.word	0x7cc60c38
ffff0000000e5fac:	00000000 	.word	0x00000000
ffff0000000e5fb0:	30100000 	.word	0x30100000
ffff0000000e5fb4:	3030fc30 	.word	0x3030fc30
ffff0000000e5fb8:	1c363030 	.word	0x1c363030
	...
ffff0000000e5fc4:	cccccc00 	.word	0xcccccc00
ffff0000000e5fc8:	76cccccc 	.word	0x76cccccc
	...
ffff0000000e5fd4:	c3c3c300 	.word	0xc3c3c300
ffff0000000e5fd8:	183c66c3 	.word	0x183c66c3
	...
ffff0000000e5fe4:	c3c3c300 	.word	0xc3c3c300
ffff0000000e5fe8:	66ffdbdb 	.word	0x66ffdbdb
	...
ffff0000000e5ff4:	3c66c300 	.word	0x3c66c300
ffff0000000e5ff8:	c3663c18 	.word	0xc3663c18
	...
ffff0000000e6004:	c6c6c600 	.word	0xc6c6c600
ffff0000000e6008:	7ec6c6c6 	.word	0x7ec6c6c6
ffff0000000e600c:	00f80c06 	.word	0x00f80c06
ffff0000000e6010:	00000000 	.word	0x00000000
ffff0000000e6014:	18ccfe00 	.word	0x18ccfe00
ffff0000000e6018:	fec66030 	.word	0xfec66030
ffff0000000e601c:	00000000 	.word	0x00000000
ffff0000000e6020:	180e0000 	.word	0x180e0000
ffff0000000e6024:	18701818 	.word	0x18701818
ffff0000000e6028:	0e181818 	.word	0x0e181818
ffff0000000e602c:	00000000 	.word	0x00000000
ffff0000000e6030:	18180000 	.word	0x18180000
ffff0000000e6034:	18001818 	.word	0x18001818
ffff0000000e6038:	18181818 	.word	0x18181818
ffff0000000e603c:	00000000 	.word	0x00000000
ffff0000000e6040:	18700000 	.word	0x18700000
ffff0000000e6044:	180e1818 	.word	0x180e1818
ffff0000000e6048:	70181818 	.word	0x70181818
ffff0000000e604c:	00000000 	.word	0x00000000
ffff0000000e6050:	dc760000 	.word	0xdc760000
	...
ffff0000000e6064:	c66c3810 	.word	0xc66c3810
ffff0000000e6068:	00fec6c6 	.word	0x00fec6c6
ffff0000000e606c:	00000000 	.word	0x00000000
ffff0000000e6070:	663c0000 	.word	0x663c0000
ffff0000000e6074:	c0c0c0c2 	.word	0xc0c0c0c2
ffff0000000e6078:	0c3c66c2 	.word	0x0c3c66c2
ffff0000000e607c:	00007c06 	.word	0x00007c06
ffff0000000e6080:	00cc0000 	.word	0x00cc0000
ffff0000000e6084:	cccccc00 	.word	0xcccccc00
ffff0000000e6088:	76cccccc 	.word	0x76cccccc
ffff0000000e608c:	00000000 	.word	0x00000000
ffff0000000e6090:	30180c00 	.word	0x30180c00
ffff0000000e6094:	fec67c00 	.word	0xfec67c00
ffff0000000e6098:	7cc6c0c0 	.word	0x7cc6c0c0
ffff0000000e609c:	00000000 	.word	0x00000000
ffff0000000e60a0:	6c381000 	.word	0x6c381000
ffff0000000e60a4:	7c0c7800 	.word	0x7c0c7800
ffff0000000e60a8:	76cccccc 	.word	0x76cccccc
ffff0000000e60ac:	00000000 	.word	0x00000000
ffff0000000e60b0:	00cc0000 	.word	0x00cc0000
ffff0000000e60b4:	7c0c7800 	.word	0x7c0c7800
ffff0000000e60b8:	76cccccc 	.word	0x76cccccc
ffff0000000e60bc:	00000000 	.word	0x00000000
ffff0000000e60c0:	18306000 	.word	0x18306000
ffff0000000e60c4:	7c0c7800 	.word	0x7c0c7800
ffff0000000e60c8:	76cccccc 	.word	0x76cccccc
ffff0000000e60cc:	00000000 	.word	0x00000000
ffff0000000e60d0:	386c3800 	.word	0x386c3800
ffff0000000e60d4:	7c0c7800 	.word	0x7c0c7800
ffff0000000e60d8:	76cccccc 	.word	0x76cccccc
	...
ffff0000000e60e4:	6060663c 	.word	0x6060663c
ffff0000000e60e8:	060c3c66 	.word	0x060c3c66
ffff0000000e60ec:	0000003c 	.word	0x0000003c
ffff0000000e60f0:	6c381000 	.word	0x6c381000
ffff0000000e60f4:	fec67c00 	.word	0xfec67c00
ffff0000000e60f8:	7cc6c0c0 	.word	0x7cc6c0c0
ffff0000000e60fc:	00000000 	.word	0x00000000
ffff0000000e6100:	00c60000 	.word	0x00c60000
ffff0000000e6104:	fec67c00 	.word	0xfec67c00
ffff0000000e6108:	7cc6c0c0 	.word	0x7cc6c0c0
ffff0000000e610c:	00000000 	.word	0x00000000
ffff0000000e6110:	18306000 	.word	0x18306000
ffff0000000e6114:	fec67c00 	.word	0xfec67c00
ffff0000000e6118:	7cc6c0c0 	.word	0x7cc6c0c0
ffff0000000e611c:	00000000 	.word	0x00000000
ffff0000000e6120:	00660000 	.word	0x00660000
ffff0000000e6124:	18183800 	.word	0x18183800
ffff0000000e6128:	3c181818 	.word	0x3c181818
ffff0000000e612c:	00000000 	.word	0x00000000
ffff0000000e6130:	663c1800 	.word	0x663c1800
ffff0000000e6134:	18183800 	.word	0x18183800
ffff0000000e6138:	3c181818 	.word	0x3c181818
ffff0000000e613c:	00000000 	.word	0x00000000
ffff0000000e6140:	18306000 	.word	0x18306000
ffff0000000e6144:	18183800 	.word	0x18183800
ffff0000000e6148:	3c181818 	.word	0x3c181818
ffff0000000e614c:	00000000 	.word	0x00000000
ffff0000000e6150:	1000c600 	.word	0x1000c600
ffff0000000e6154:	c6c66c38 	.word	0xc6c66c38
ffff0000000e6158:	c6c6c6fe 	.word	0xc6c6c6fe
ffff0000000e615c:	00000000 	.word	0x00000000
ffff0000000e6160:	00386c38 	.word	0x00386c38
ffff0000000e6164:	c6c66c38 	.word	0xc6c66c38
ffff0000000e6168:	c6c6c6fe 	.word	0xc6c6c6fe
ffff0000000e616c:	00000000 	.word	0x00000000
ffff0000000e6170:	00603018 	.word	0x00603018
ffff0000000e6174:	7c6066fe 	.word	0x7c6066fe
ffff0000000e6178:	fe666060 	.word	0xfe666060
	...
ffff0000000e6184:	1b3b6e00 	.word	0x1b3b6e00
ffff0000000e6188:	77dcd87e 	.word	0x77dcd87e
ffff0000000e618c:	00000000 	.word	0x00000000
ffff0000000e6190:	6c3e0000 	.word	0x6c3e0000
ffff0000000e6194:	ccfecccc 	.word	0xccfecccc
ffff0000000e6198:	cecccccc 	.word	0xcecccccc
ffff0000000e619c:	00000000 	.word	0x00000000
ffff0000000e61a0:	6c381000 	.word	0x6c381000
ffff0000000e61a4:	c6c67c00 	.word	0xc6c67c00
ffff0000000e61a8:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e61ac:	00000000 	.word	0x00000000
ffff0000000e61b0:	00c60000 	.word	0x00c60000
ffff0000000e61b4:	c6c67c00 	.word	0xc6c67c00
ffff0000000e61b8:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e61bc:	00000000 	.word	0x00000000
ffff0000000e61c0:	18306000 	.word	0x18306000
ffff0000000e61c4:	c6c67c00 	.word	0xc6c67c00
ffff0000000e61c8:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e61cc:	00000000 	.word	0x00000000
ffff0000000e61d0:	cc783000 	.word	0xcc783000
ffff0000000e61d4:	cccccc00 	.word	0xcccccc00
ffff0000000e61d8:	76cccccc 	.word	0x76cccccc
ffff0000000e61dc:	00000000 	.word	0x00000000
ffff0000000e61e0:	18306000 	.word	0x18306000
ffff0000000e61e4:	cccccc00 	.word	0xcccccc00
ffff0000000e61e8:	76cccccc 	.word	0x76cccccc
ffff0000000e61ec:	00000000 	.word	0x00000000
ffff0000000e61f0:	00c60000 	.word	0x00c60000
ffff0000000e61f4:	c6c6c600 	.word	0xc6c6c600
ffff0000000e61f8:	7ec6c6c6 	.word	0x7ec6c6c6
ffff0000000e61fc:	00780c06 	.word	0x00780c06
ffff0000000e6200:	7c00c600 	.word	0x7c00c600
ffff0000000e6204:	c6c6c6c6 	.word	0xc6c6c6c6
ffff0000000e6208:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e620c:	00000000 	.word	0x00000000
ffff0000000e6210:	c600c600 	.word	0xc600c600
ffff0000000e6214:	c6c6c6c6 	.word	0xc6c6c6c6
ffff0000000e6218:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e621c:	00000000 	.word	0x00000000
ffff0000000e6220:	7e181800 	.word	0x7e181800
ffff0000000e6224:	c0c0c0c3 	.word	0xc0c0c0c3
ffff0000000e6228:	18187ec3 	.word	0x18187ec3
ffff0000000e622c:	00000000 	.word	0x00000000
ffff0000000e6230:	646c3800 	.word	0x646c3800
ffff0000000e6234:	6060f060 	.word	0x6060f060
ffff0000000e6238:	fce66060 	.word	0xfce66060
ffff0000000e623c:	00000000 	.word	0x00000000
ffff0000000e6240:	66c30000 	.word	0x66c30000
ffff0000000e6244:	18ff183c 	.word	0x18ff183c
ffff0000000e6248:	181818ff 	.word	0x181818ff
ffff0000000e624c:	00000000 	.word	0x00000000
ffff0000000e6250:	6666fc00 	.word	0x6666fc00
ffff0000000e6254:	6f66627c 	.word	0x6f66627c
ffff0000000e6258:	f3666666 	.word	0xf3666666
ffff0000000e625c:	00000000 	.word	0x00000000
ffff0000000e6260:	181b0e00 	.word	0x181b0e00
ffff0000000e6264:	187e1818 	.word	0x187e1818
ffff0000000e6268:	18181818 	.word	0x18181818
ffff0000000e626c:	000070d8 	.word	0x000070d8
ffff0000000e6270:	60301800 	.word	0x60301800
ffff0000000e6274:	7c0c7800 	.word	0x7c0c7800
ffff0000000e6278:	76cccccc 	.word	0x76cccccc
ffff0000000e627c:	00000000 	.word	0x00000000
ffff0000000e6280:	30180c00 	.word	0x30180c00
ffff0000000e6284:	18183800 	.word	0x18183800
ffff0000000e6288:	3c181818 	.word	0x3c181818
ffff0000000e628c:	00000000 	.word	0x00000000
ffff0000000e6290:	60301800 	.word	0x60301800
ffff0000000e6294:	c6c67c00 	.word	0xc6c67c00
ffff0000000e6298:	7cc6c6c6 	.word	0x7cc6c6c6
ffff0000000e629c:	00000000 	.word	0x00000000
ffff0000000e62a0:	60301800 	.word	0x60301800
ffff0000000e62a4:	cccccc00 	.word	0xcccccc00
ffff0000000e62a8:	76cccccc 	.word	0x76cccccc
ffff0000000e62ac:	00000000 	.word	0x00000000
ffff0000000e62b0:	dc760000 	.word	0xdc760000
ffff0000000e62b4:	6666dc00 	.word	0x6666dc00
ffff0000000e62b8:	66666666 	.word	0x66666666
ffff0000000e62bc:	00000000 	.word	0x00000000
ffff0000000e62c0:	c600dc76 	.word	0xc600dc76
ffff0000000e62c4:	defef6e6 	.word	0xdefef6e6
ffff0000000e62c8:	c6c6c6ce 	.word	0xc6c6c6ce
ffff0000000e62cc:	00000000 	.word	0x00000000
ffff0000000e62d0:	6c6c3c00 	.word	0x6c6c3c00
ffff0000000e62d4:	007e003e 	.word	0x007e003e
	...
ffff0000000e62e0:	6c6c3800 	.word	0x6c6c3800
ffff0000000e62e4:	007c0038 	.word	0x007c0038
	...
ffff0000000e62f0:	30300000 	.word	0x30300000
ffff0000000e62f4:	60303000 	.word	0x60303000
ffff0000000e62f8:	7cc6c6c0 	.word	0x7cc6c6c0
	...
ffff0000000e6304:	c0fe0000 	.word	0xc0fe0000
ffff0000000e6308:	00c0c0c0 	.word	0x00c0c0c0
	...
ffff0000000e6314:	06fe0000 	.word	0x06fe0000
ffff0000000e6318:	00060606 	.word	0x00060606
ffff0000000e631c:	00000000 	.word	0x00000000
ffff0000000e6320:	c2c0c000 	.word	0xc2c0c000
ffff0000000e6324:	3018ccc6 	.word	0x3018ccc6
ffff0000000e6328:	069bce60 	.word	0x069bce60
ffff0000000e632c:	00001f0c 	.word	0x00001f0c
ffff0000000e6330:	c2c0c000 	.word	0xc2c0c000
ffff0000000e6334:	3018ccc6 	.word	0x3018ccc6
ffff0000000e6338:	3e96ce66 	.word	0x3e96ce66
ffff0000000e633c:	00000606 	.word	0x00000606
ffff0000000e6340:	18180000 	.word	0x18180000
ffff0000000e6344:	18181800 	.word	0x18181800
ffff0000000e6348:	183c3c3c 	.word	0x183c3c3c
	...
ffff0000000e6354:	d86c3600 	.word	0xd86c3600
ffff0000000e6358:	0000366c 	.word	0x0000366c
	...
ffff0000000e6364:	366cd800 	.word	0x366cd800
ffff0000000e6368:	0000d86c 	.word	0x0000d86c
ffff0000000e636c:	00000000 	.word	0x00000000
ffff0000000e6370:	44114411 	.word	0x44114411
ffff0000000e6374:	44114411 	.word	0x44114411
ffff0000000e6378:	44114411 	.word	0x44114411
ffff0000000e637c:	44114411 	.word	0x44114411
ffff0000000e6380:	aa55aa55 	.word	0xaa55aa55
ffff0000000e6384:	aa55aa55 	.word	0xaa55aa55
ffff0000000e6388:	aa55aa55 	.word	0xaa55aa55
ffff0000000e638c:	aa55aa55 	.word	0xaa55aa55
ffff0000000e6390:	77dd77dd 	.word	0x77dd77dd
ffff0000000e6394:	77dd77dd 	.word	0x77dd77dd
ffff0000000e6398:	77dd77dd 	.word	0x77dd77dd
ffff0000000e639c:	77dd77dd 	.word	0x77dd77dd
ffff0000000e63a0:	18181818 	.word	0x18181818
ffff0000000e63a4:	18181818 	.word	0x18181818
ffff0000000e63a8:	18181818 	.word	0x18181818
ffff0000000e63ac:	18181818 	.word	0x18181818
ffff0000000e63b0:	18181818 	.word	0x18181818
ffff0000000e63b4:	f8181818 	.word	0xf8181818
ffff0000000e63b8:	18181818 	.word	0x18181818
ffff0000000e63bc:	18181818 	.word	0x18181818
ffff0000000e63c0:	18181818 	.word	0x18181818
ffff0000000e63c4:	f818f818 	.word	0xf818f818
ffff0000000e63c8:	18181818 	.word	0x18181818
ffff0000000e63cc:	18181818 	.word	0x18181818
ffff0000000e63d0:	36363636 	.word	0x36363636
ffff0000000e63d4:	f6363636 	.word	0xf6363636
ffff0000000e63d8:	36363636 	.word	0x36363636
ffff0000000e63dc:	36363636 	.word	0x36363636
ffff0000000e63e0:	00000000 	.word	0x00000000
ffff0000000e63e4:	fe000000 	.word	0xfe000000
ffff0000000e63e8:	36363636 	.word	0x36363636
ffff0000000e63ec:	36363636 	.word	0x36363636
ffff0000000e63f0:	00000000 	.word	0x00000000
ffff0000000e63f4:	f818f800 	.word	0xf818f800
ffff0000000e63f8:	18181818 	.word	0x18181818
ffff0000000e63fc:	18181818 	.word	0x18181818
ffff0000000e6400:	36363636 	.word	0x36363636
ffff0000000e6404:	f606f636 	.word	0xf606f636
ffff0000000e6408:	36363636 	.word	0x36363636
ffff0000000e640c:	36363636 	.word	0x36363636
ffff0000000e6410:	36363636 	.word	0x36363636
ffff0000000e6414:	36363636 	.word	0x36363636
ffff0000000e6418:	36363636 	.word	0x36363636
ffff0000000e641c:	36363636 	.word	0x36363636
ffff0000000e6420:	00000000 	.word	0x00000000
ffff0000000e6424:	f606fe00 	.word	0xf606fe00
ffff0000000e6428:	36363636 	.word	0x36363636
ffff0000000e642c:	36363636 	.word	0x36363636
ffff0000000e6430:	36363636 	.word	0x36363636
ffff0000000e6434:	fe06f636 	.word	0xfe06f636
	...
ffff0000000e6440:	36363636 	.word	0x36363636
ffff0000000e6444:	fe363636 	.word	0xfe363636
	...
ffff0000000e6450:	18181818 	.word	0x18181818
ffff0000000e6454:	f818f818 	.word	0xf818f818
	...
ffff0000000e6464:	f8000000 	.word	0xf8000000
ffff0000000e6468:	18181818 	.word	0x18181818
ffff0000000e646c:	18181818 	.word	0x18181818
ffff0000000e6470:	18181818 	.word	0x18181818
ffff0000000e6474:	1f181818 	.word	0x1f181818
	...
ffff0000000e6480:	18181818 	.word	0x18181818
ffff0000000e6484:	ff181818 	.word	0xff181818
	...
ffff0000000e6494:	ff000000 	.word	0xff000000
ffff0000000e6498:	18181818 	.word	0x18181818
ffff0000000e649c:	18181818 	.word	0x18181818
ffff0000000e64a0:	18181818 	.word	0x18181818
ffff0000000e64a4:	1f181818 	.word	0x1f181818
ffff0000000e64a8:	18181818 	.word	0x18181818
ffff0000000e64ac:	18181818 	.word	0x18181818
ffff0000000e64b0:	00000000 	.word	0x00000000
ffff0000000e64b4:	ff000000 	.word	0xff000000
	...
ffff0000000e64c0:	18181818 	.word	0x18181818
ffff0000000e64c4:	ff181818 	.word	0xff181818
ffff0000000e64c8:	18181818 	.word	0x18181818
ffff0000000e64cc:	18181818 	.word	0x18181818
ffff0000000e64d0:	18181818 	.word	0x18181818
ffff0000000e64d4:	1f181f18 	.word	0x1f181f18
ffff0000000e64d8:	18181818 	.word	0x18181818
ffff0000000e64dc:	18181818 	.word	0x18181818
ffff0000000e64e0:	36363636 	.word	0x36363636
ffff0000000e64e4:	37363636 	.word	0x37363636
ffff0000000e64e8:	36363636 	.word	0x36363636
ffff0000000e64ec:	36363636 	.word	0x36363636
ffff0000000e64f0:	36363636 	.word	0x36363636
ffff0000000e64f4:	3f303736 	.word	0x3f303736
	...
ffff0000000e6504:	37303f00 	.word	0x37303f00
ffff0000000e6508:	36363636 	.word	0x36363636
ffff0000000e650c:	36363636 	.word	0x36363636
ffff0000000e6510:	36363636 	.word	0x36363636
ffff0000000e6514:	ff00f736 	.word	0xff00f736
	...
ffff0000000e6524:	f700ff00 	.word	0xf700ff00
ffff0000000e6528:	36363636 	.word	0x36363636
ffff0000000e652c:	36363636 	.word	0x36363636
ffff0000000e6530:	36363636 	.word	0x36363636
ffff0000000e6534:	37303736 	.word	0x37303736
ffff0000000e6538:	36363636 	.word	0x36363636
ffff0000000e653c:	36363636 	.word	0x36363636
ffff0000000e6540:	00000000 	.word	0x00000000
ffff0000000e6544:	ff00ff00 	.word	0xff00ff00
	...
ffff0000000e6550:	36363636 	.word	0x36363636
ffff0000000e6554:	f700f736 	.word	0xf700f736
ffff0000000e6558:	36363636 	.word	0x36363636
ffff0000000e655c:	36363636 	.word	0x36363636
ffff0000000e6560:	18181818 	.word	0x18181818
ffff0000000e6564:	ff00ff18 	.word	0xff00ff18
	...
ffff0000000e6570:	36363636 	.word	0x36363636
ffff0000000e6574:	ff363636 	.word	0xff363636
	...
ffff0000000e6584:	ff00ff00 	.word	0xff00ff00
ffff0000000e6588:	18181818 	.word	0x18181818
ffff0000000e658c:	18181818 	.word	0x18181818
ffff0000000e6590:	00000000 	.word	0x00000000
ffff0000000e6594:	ff000000 	.word	0xff000000
ffff0000000e6598:	36363636 	.word	0x36363636
ffff0000000e659c:	36363636 	.word	0x36363636
ffff0000000e65a0:	36363636 	.word	0x36363636
ffff0000000e65a4:	3f363636 	.word	0x3f363636
	...
ffff0000000e65b0:	18181818 	.word	0x18181818
ffff0000000e65b4:	1f181f18 	.word	0x1f181f18
	...
ffff0000000e65c4:	1f181f00 	.word	0x1f181f00
ffff0000000e65c8:	18181818 	.word	0x18181818
ffff0000000e65cc:	18181818 	.word	0x18181818
ffff0000000e65d0:	00000000 	.word	0x00000000
ffff0000000e65d4:	3f000000 	.word	0x3f000000
ffff0000000e65d8:	36363636 	.word	0x36363636
ffff0000000e65dc:	36363636 	.word	0x36363636
ffff0000000e65e0:	36363636 	.word	0x36363636
ffff0000000e65e4:	ff363636 	.word	0xff363636
ffff0000000e65e8:	36363636 	.word	0x36363636
ffff0000000e65ec:	36363636 	.word	0x36363636
ffff0000000e65f0:	18181818 	.word	0x18181818
ffff0000000e65f4:	ff18ff18 	.word	0xff18ff18
ffff0000000e65f8:	18181818 	.word	0x18181818
ffff0000000e65fc:	18181818 	.word	0x18181818
ffff0000000e6600:	18181818 	.word	0x18181818
ffff0000000e6604:	f8181818 	.word	0xf8181818
	...
ffff0000000e6614:	1f000000 	.word	0x1f000000
ffff0000000e6618:	18181818 	.word	0x18181818
ffff0000000e661c:	18181818 	.word	0x18181818
ffff0000000e6620:	ffffffff 	.word	0xffffffff
ffff0000000e6624:	ffffffff 	.word	0xffffffff
ffff0000000e6628:	ffffffff 	.word	0xffffffff
ffff0000000e662c:	ffffffff 	.word	0xffffffff
ffff0000000e6630:	00000000 	.word	0x00000000
ffff0000000e6634:	ff000000 	.word	0xff000000
ffff0000000e6638:	ffffffff 	.word	0xffffffff
ffff0000000e663c:	ffffffff 	.word	0xffffffff
ffff0000000e6640:	f0f0f0f0 	.word	0xf0f0f0f0
ffff0000000e6644:	f0f0f0f0 	.word	0xf0f0f0f0
ffff0000000e6648:	f0f0f0f0 	.word	0xf0f0f0f0
ffff0000000e664c:	f0f0f0f0 	.word	0xf0f0f0f0
ffff0000000e6650:	0f0f0f0f 	.word	0x0f0f0f0f
ffff0000000e6654:	0f0f0f0f 	.word	0x0f0f0f0f
ffff0000000e6658:	0f0f0f0f 	.word	0x0f0f0f0f
ffff0000000e665c:	0f0f0f0f 	.word	0x0f0f0f0f
ffff0000000e6660:	ffffffff 	.word	0xffffffff
ffff0000000e6664:	00ffffff 	.word	0x00ffffff
	...
ffff0000000e6674:	d8dc7600 	.word	0xd8dc7600
ffff0000000e6678:	76dcd8d8 	.word	0x76dcd8d8
ffff0000000e667c:	00000000 	.word	0x00000000
ffff0000000e6680:	cc780000 	.word	0xcc780000
ffff0000000e6684:	ccd8cccc 	.word	0xccd8cccc
ffff0000000e6688:	ccc6c6c6 	.word	0xccc6c6c6
ffff0000000e668c:	00000000 	.word	0x00000000
ffff0000000e6690:	c6fe0000 	.word	0xc6fe0000
ffff0000000e6694:	c0c0c0c6 	.word	0xc0c0c0c6
ffff0000000e6698:	c0c0c0c0 	.word	0xc0c0c0c0
	...
ffff0000000e66a4:	6c6c6cfe 	.word	0x6c6c6cfe
ffff0000000e66a8:	6c6c6c6c 	.word	0x6c6c6c6c
ffff0000000e66ac:	00000000 	.word	0x00000000
ffff0000000e66b0:	fe000000 	.word	0xfe000000
ffff0000000e66b4:	183060c6 	.word	0x183060c6
ffff0000000e66b8:	fec66030 	.word	0xfec66030
	...
ffff0000000e66c4:	d8d87e00 	.word	0xd8d87e00
ffff0000000e66c8:	70d8d8d8 	.word	0x70d8d8d8
	...
ffff0000000e66d4:	66666666 	.word	0x66666666
ffff0000000e66d8:	60607c66 	.word	0x60607c66
ffff0000000e66dc:	000000c0 	.word	0x000000c0
ffff0000000e66e0:	00000000 	.word	0x00000000
ffff0000000e66e4:	1818dc76 	.word	0x1818dc76
ffff0000000e66e8:	18181818 	.word	0x18181818
ffff0000000e66ec:	00000000 	.word	0x00000000
ffff0000000e66f0:	7e000000 	.word	0x7e000000
ffff0000000e66f4:	66663c18 	.word	0x66663c18
ffff0000000e66f8:	7e183c66 	.word	0x7e183c66
ffff0000000e66fc:	00000000 	.word	0x00000000
ffff0000000e6700:	38000000 	.word	0x38000000
ffff0000000e6704:	fec6c66c 	.word	0xfec6c66c
ffff0000000e6708:	386cc6c6 	.word	0x386cc6c6
ffff0000000e670c:	00000000 	.word	0x00000000
ffff0000000e6710:	6c380000 	.word	0x6c380000
ffff0000000e6714:	6cc6c6c6 	.word	0x6cc6c6c6
ffff0000000e6718:	ee6c6c6c 	.word	0xee6c6c6c
ffff0000000e671c:	00000000 	.word	0x00000000
ffff0000000e6720:	301e0000 	.word	0x301e0000
ffff0000000e6724:	663e0c18 	.word	0x663e0c18
ffff0000000e6728:	3c666666 	.word	0x3c666666
	...
ffff0000000e6734:	dbdb7e00 	.word	0xdbdb7e00
ffff0000000e6738:	00007edb 	.word	0x00007edb
ffff0000000e673c:	00000000 	.word	0x00000000
ffff0000000e6740:	03000000 	.word	0x03000000
ffff0000000e6744:	dbdb7e06 	.word	0xdbdb7e06
ffff0000000e6748:	c0607ef3 	.word	0xc0607ef3
ffff0000000e674c:	00000000 	.word	0x00000000
ffff0000000e6750:	301c0000 	.word	0x301c0000
ffff0000000e6754:	607c6060 	.word	0x607c6060
ffff0000000e6758:	1c306060 	.word	0x1c306060
ffff0000000e675c:	00000000 	.word	0x00000000
ffff0000000e6760:	7c000000 	.word	0x7c000000
ffff0000000e6764:	c6c6c6c6 	.word	0xc6c6c6c6
ffff0000000e6768:	c6c6c6c6 	.word	0xc6c6c6c6
	...
ffff0000000e6774:	fe0000fe 	.word	0xfe0000fe
ffff0000000e6778:	00fe0000 	.word	0x00fe0000
	...
ffff0000000e6784:	187e1818 	.word	0x187e1818
ffff0000000e6788:	ff000018 	.word	0xff000018
ffff0000000e678c:	00000000 	.word	0x00000000
ffff0000000e6790:	30000000 	.word	0x30000000
ffff0000000e6794:	0c060c18 	.word	0x0c060c18
ffff0000000e6798:	7e003018 	.word	0x7e003018
ffff0000000e679c:	00000000 	.word	0x00000000
ffff0000000e67a0:	0c000000 	.word	0x0c000000
ffff0000000e67a4:	30603018 	.word	0x30603018
ffff0000000e67a8:	7e000c18 	.word	0x7e000c18
ffff0000000e67ac:	00000000 	.word	0x00000000
ffff0000000e67b0:	1b0e0000 	.word	0x1b0e0000
ffff0000000e67b4:	18181b1b 	.word	0x18181b1b
ffff0000000e67b8:	18181818 	.word	0x18181818
ffff0000000e67bc:	18181818 	.word	0x18181818
ffff0000000e67c0:	18181818 	.word	0x18181818
ffff0000000e67c4:	18181818 	.word	0x18181818
ffff0000000e67c8:	70d8d8d8 	.word	0x70d8d8d8
	...
ffff0000000e67d4:	7e001818 	.word	0x7e001818
ffff0000000e67d8:	00181800 	.word	0x00181800
	...
ffff0000000e67e4:	00dc7600 	.word	0x00dc7600
ffff0000000e67e8:	0000dc76 	.word	0x0000dc76
ffff0000000e67ec:	00000000 	.word	0x00000000
ffff0000000e67f0:	6c6c3800 	.word	0x6c6c3800
ffff0000000e67f4:	00000038 	.word	0x00000038
	...
ffff0000000e6804:	18000000 	.word	0x18000000
ffff0000000e6808:	00000018 	.word	0x00000018
	...
ffff0000000e6818:	00000018 	.word	0x00000018
ffff0000000e681c:	00000000 	.word	0x00000000
ffff0000000e6820:	0c0c0f00 	.word	0x0c0c0f00
ffff0000000e6824:	ec0c0c0c 	.word	0xec0c0c0c
ffff0000000e6828:	1c3c6c6c 	.word	0x1c3c6c6c
ffff0000000e682c:	00000000 	.word	0x00000000
ffff0000000e6830:	6c6cd800 	.word	0x6c6cd800
ffff0000000e6834:	006c6c6c 	.word	0x006c6c6c
	...
ffff0000000e6840:	30d87000 	.word	0x30d87000
ffff0000000e6844:	00f8c860 	.word	0x00f8c860
	...
ffff0000000e6854:	7c7c7c7c 	.word	0x7c7c7c7c
ffff0000000e6858:	007c7c7c 	.word	0x007c7c7c
	...

ffff0000000e6870 <kernel_end>:
uintptr_t kernel_end = (uintptr_t) &__end;
ffff0000000e6870:	000e6960 	.word	0x000e6960
ffff0000000e6874:	ffff0000 	.word	0xffff0000

ffff0000000e6878 <kernel_start>:
uintptr_t kernel_start = (uintptr_t) &__start;
ffff0000000e6878:	000e0000 	.word	0x000e0000
ffff0000000e687c:	ffff0000 	.word	0xffff0000

Disassembly of section .bss:

ffff0000000e6880 <current_x>:
uint32_t current_x = 0;
ffff0000000e6880:	00000000 	.word	0x00000000

ffff0000000e6884 <current_y>:
uint32_t current_y = 0;
ffff0000000e6884:	00000000 	.word	0x00000000

ffff0000000e6888 <counter>:
	...

ffff0000000e6890 <is_threading_ready>:
	...

ffff0000000e6898 <current_thread_num>:
	...

ffff0000000e68a0 <current_thread_saved_stack_pointer>:
	...

ffff0000000e68a8 <current_thread_saved_program_counter>:
	...

ffff0000000e68b0 <frame_buffer_virtual_base_address>:
	...

ffff0000000e68b8 <frame_buffer_width>:
#define FRAME_BUFFER_PADDR_MASK 0x3fffffff;

unsigned char* frame_buffer_virtual_base_address;
volatile uint32_t frame_buffer_physical_base_address;
volatile uint32_t frame_buffer_height;
volatile uint32_t frame_buffer_width;
ffff0000000e68b8:	00000000 	.word	0x00000000

ffff0000000e68bc <frame_buffer_depth>:
uint32_t frame_buffer_size;
uint32_t frame_buffer_pitch;
uint32_t frame_buffer_depth;
ffff0000000e68bc:	00000000 	.word	0x00000000

ffff0000000e68c0 <frame_buffer_height>:
volatile uint32_t frame_buffer_height;
ffff0000000e68c0:	00000000 	.word	0x00000000

ffff0000000e68c4 <frame_buffer_size>:
uint32_t frame_buffer_size;
ffff0000000e68c4:	00000000 	.word	0x00000000

ffff0000000e68c8 <frame_buffer_physical_base_address>:
volatile uint32_t frame_buffer_physical_base_address;
ffff0000000e68c8:	00000000 	.word	0x00000000

ffff0000000e68cc <frame_buffer_pitch>:
uint32_t frame_buffer_pitch;
ffff0000000e68cc:	00000000 	.word	0x00000000

ffff0000000e68d0 <threads>:
	...

ffff0000000e68f0 <kernel_lower_l2_page_table_end>:
	...

ffff0000000e68f8 <kernel_lower_l2_page_table_begin>:
	...

ffff0000000e6900 <kernel_upper_l3_page_table_num_pages_used>:
	...

ffff0000000e6908 <kernel_upper_l3_page_table_current>:
	...

ffff0000000e6910 <kernel_upper_l2_page_table_begin>:
	...

ffff0000000e6918 <kernel_upper_l3_page_table_begin>:
	...

ffff0000000e6920 <kernel_l1_page_table_begin>:
	...

ffff0000000e6928 <kernel_lower_l3_page_table_current>:
	...

ffff0000000e6930 <kernel_l1_page_table_end>:
	...

ffff0000000e6938 <kernel_lower_l3_page_table_end>:
	...

ffff0000000e6940 <kernel_lower_l3_page_table_begin>:
	...

ffff0000000e6948 <kernel_upper_l3_page_table_end>:
	...

ffff0000000e6950 <kernel_lower_l3_page_table_num_pages_used>:
	...

ffff0000000e6958 <kernel_upper_l2_page_table_end>:
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	00000ff4 	.inst	0x00000ff4 ; undefined
       4:	00000004 	.inst	0x00000004 ; undefined
       8:	01080000 	.inst	0x01080000 ; undefined
       c:	00000064 	.inst	0x00000064 ; undefined
      10:	00018d0c 	.inst	0x00018d0c ; undefined
      14:	00024b00 	.inst	0x00024b00 ; undefined
      18:	0e00c000 	.inst	0x0e00c000 ; undefined
      1c:	ff000000 	.inst	0xff000000 ; undefined
      20:	000de4ff 	.inst	0x000de4ff ; undefined
	...
      2c:	07080200 	.inst	0x07080200 ; undefined
      30:	00000128 	.inst	0x00000128 ; undefined
      34:	17060102 	b	fffffffffc18043c <__end+0xfffffc099adc>
      38:	02000001 	.inst	0x02000001 ; undefined
      3c:	02040502 	.inst	0x02040502 ; undefined
      40:	04030000 	subr	z0.b, p0/m, z0.b, z0.b
      44:	746e6905 	.inst	0x746e6905 ; undefined
      48:	00ec0400 	.inst	0x00ec0400 ; undefined
      4c:	2b020000 	adds	w0, w0, w2
      50:	00000054 	.inst	0x00000054 ; undefined
      54:	3a050802 	.inst	0x3a050802 ; undefined
      58:	02000002 	.inst	0x02000002 ; undefined
      5c:	01150801 	.inst	0x01150801 ; undefined
      60:	02020000 	.inst	0x02020000 ; undefined
      64:	00013a07 	.inst	0x00013a07 ; undefined
      68:	02310400 	.inst	0x02310400 ; undefined
      6c:	34020000 	cbz	w0, 406c <__bss_size+0x4066>
      70:	00000079 	.inst	0x00000079 ; undefined
      74:	00006905 	.inst	0x00006905 ; undefined
      78:	07040200 	.inst	0x07040200 ; undefined
      7c:	0000012d 	.inst	0x0000012d ; undefined
      80:	0000eb04 	.inst	0x0000eb04 ; undefined
      84:	2d370200 	stp	s0, s0, [x16, #-72]
      88:	06000000 	.inst	0x06000000 ; undefined
      8c:	00000042 	.inst	0x00000042 ; undefined
      90:	00a00803 	.inst	0x00a00803 ; undefined
      94:	03090000 	.inst	0x03090000 ; undefined
      98:	000e68b0 	.inst	0x000e68b0 ; undefined
      9c:	ffff0000 	.inst	0xffff0000 ; undefined
      a0:	005b0807 	.inst	0x005b0807 ; undefined
      a4:	00060000 	.inst	0x00060000 ; undefined
      a8:	03000000 	.inst	0x03000000 ; undefined
      ac:	00007409 	.inst	0x00007409 ; undefined
      b0:	c8030900 	stxr	w3, x0, [x8]
      b4:	00000e68 	.inst	0x00000e68 ; undefined
      b8:	06ffff00 	.inst	0x06ffff00 ; undefined
      bc:	00000179 	.inst	0x00000179 ; undefined
      c0:	00740a03 	.inst	0x00740a03 ; undefined
      c4:	03090000 	.inst	0x03090000 ; undefined
      c8:	000e68c0 	.inst	0x000e68c0 ; undefined
      cc:	ffff0000 	.inst	0xffff0000 ; undefined
      d0:	0000d006 	.inst	0x0000d006 ; undefined
      d4:	740b0300 	.inst	0x740b0300 ; undefined
      d8:	09000000 	.inst	0x09000000 ; undefined
      dc:	0e68b803 	.inst	0x0e68b803 ; undefined
      e0:	ff000000 	.inst	0xff000000 ; undefined
      e4:	01d906ff 	.inst	0x01d906ff ; undefined
      e8:	0c030000 	.inst	0x0c030000 ; undefined
      ec:	00000069 	.inst	0x00000069 ; undefined
      f0:	68c40309 	ldpsw	x9, x0, [x24], #32
      f4:	0000000e 	.inst	0x0000000e ; undefined
      f8:	2306ffff 	.inst	0x2306ffff ; undefined
      fc:	03000000 	.inst	0x03000000 ; undefined
     100:	0000690d 	.inst	0x0000690d ; undefined
     104:	cc030900 	.inst	0xcc030900 ; undefined
     108:	00000e68 	.inst	0x00000e68 ; undefined
     10c:	06ffff00 	.inst	0x06ffff00 ; undefined
     110:	00000215 	.inst	0x00000215 ; undefined
     114:	00690e03 	.inst	0x00690e03 ; undefined
     118:	03090000 	.inst	0x03090000 ; undefined
     11c:	000e68bc 	.inst	0x000e68bc ; undefined
     120:	ffff0000 	.inst	0xffff0000 ; undefined
     124:	0000fc04 	.inst	0x0000fc04 ; undefined
     128:	2f280400 	ushr	v0.2s, v0.2s, #24
     12c:	08000001 	stxrb	w0, w1, [x0]
     130:	0000010b 	.inst	0x0000010b ; undefined
     134:	6e000620 	.inst	0x6e000620 ; undefined
     138:	09000001 	.inst	0x09000001 ; undefined
     13c:	0000027b 	.inst	0x0000027b ; undefined
     140:	0000016e 	.inst	0x0000016e ; undefined
     144:	00c70900 	.inst	0x00c70900 ; undefined
     148:	016e0000 	.inst	0x016e0000 ; undefined
     14c:	09080000 	.inst	0x09080000 ; undefined
     150:	00000228 	.inst	0x00000228 ; undefined
     154:	0000016e 	.inst	0x0000016e ; undefined
     158:	01590910 	.inst	0x01590910 ; undefined
     15c:	00420000 	.inst	0x00420000 ; undefined
     160:	09180000 	.inst	0x09180000 ; undefined
     164:	000001cf 	.inst	0x000001cf ; undefined
     168:	00000042 	.inst	0x00000042 ; undefined
     16c:	080a001c 	stxrb	w10, w28, [x0]
     170:	00010d04 	.inst	0x00010d04 ; undefined
     174:	24630400 	cmphs	p0.h, p1/z, z0.h, #12
     178:	0b000001 	add	w1, w0, w0
     17c:	000001f0 	.inst	0x000001f0 ; undefined
     180:	0e50b701 	.inst	0x0e50b701 ; undefined
     184:	0000000e 	.inst	0x0000000e ; undefined
     188:	0054ffff 	.inst	0x0054ffff ; undefined
     18c:	00000000 	.inst	0x00000000 ; undefined
     190:	9c010000 	ldr	q0, 2190 <__bss_size+0x218a>
     194:	000001d2 	.inst	0x000001d2 ; undefined
     198:	746d660c 	.inst	0x746d660c ; undefined
     19c:	d2b70100 	mov	x0, #0xb8080000            	// #3087532032
     1a0:	00000001 	.inst	0x00000001 ; undefined
     1a4:	0d000000 	st1	{v0.b}[0], [x0]
     1a8:	0061760e 	.inst	0x0061760e ; undefined
     1ac:	0170b801 	.inst	0x0170b801 ; undefined
     1b0:	91030000 	add	x0, x0, #0xc0
     1b4:	9c0f7fa0 	ldr	q0, 1f1a8 <__bss_size+0x1f1a2>
     1b8:	00000e0e 	.inst	0x00000e0e ; undefined
     1bc:	e4ffff00 	st4h	{z0.h-z3.h}, p7, [x24, #-4, mul vl]
     1c0:	10000001 	adr	x1, 1c0 <__bss_size+0x1ba>
     1c4:	f3035001 	.inst	0xf3035001 ; undefined
     1c8:	01105001 	.inst	0x01105001 ; undefined
     1cc:	108f0251 	adr	x17, fffffffffff1e214 <__end+0xffffffe378b4>
     1d0:	08070000 	stxrb	w7, w0, [x0]
     1d4:	000001d8 	.inst	0x000001d8 ; undefined
     1d8:	1e080102 	.inst	0x1e080102 ; undefined
     1dc:	11000001 	add	w1, w0, #0x0
     1e0:	000001d8 	.inst	0x000001d8 ; undefined
     1e4:	0001520b 	.inst	0x0001520b ; undefined
     1e8:	b0800100 	adrp	x0, ffffffff00021000 <__end+0xfffefff3a6a0>
     1ec:	00000e06 	.inst	0x00000e06 ; undefined
     1f0:	9cffff00 	ldr	q0, 1d0 <__bss_size+0x1ca>
     1f4:	00000007 	.inst	0x00000007 ; undefined
     1f8:	01000000 	.inst	0x01000000 ; undefined
     1fc:	0007c29c 	.inst	0x0007c29c ; undefined
     200:	6d660c00 	ldp	d0, d3, [x0, #-416]
     204:	80010074 	.inst	0x80010074 ; undefined
     208:	000007c2 	.inst	0x000007c2 ; undefined
     20c:	00000039 	.inst	0x00000039 ; undefined
     210:	0061760c 	.inst	0x0061760c ; undefined
     214:	01708001 	.inst	0x01708001 ; undefined
     218:	01220000 	.inst	0x01220000 ; undefined
     21c:	620e0000 	.inst	0x620e0000 ; undefined
     220:	81010066 	.inst	0x81010066 ; undefined
     224:	000007c8 	.inst	0x000007c8 ; undefined
     228:	12689102 	.inst	0x12689102 ; undefined
     22c:	01006863 	.inst	0x01006863 ; undefined
     230:	0001d882 	.inst	0x0001d882 ; undefined
     234:	0005dc00 	.inst	0x0005dc00 ; undefined
     238:	7a6c1200 	.inst	0x7a6c1200 ; undefined
     23c:	d8820100 	prfm	pldl1keep, fffffffffff0425c <__end+0xffffffe1d8fc>
     240:	7c000001 	stur	h1, [x0]
     244:	12000007 	and	w7, w0, #0x1
     248:	83010077 	.inst	0x83010077 ; undefined
     24c:	00000042 	.inst	0x00000042 ; undefined
     250:	000007c8 	.inst	0x000007c8 ; undefined
     254:	000a2913 	.inst	0x000a2913 ; undefined
     258:	0e06bc00 	.inst	0x0e06bc00 ; undefined
     25c:	ff000000 	.inst	0xff000000 ; undefined
     260:	0002a0ff 	.inst	0x0002a0ff ; undefined
     264:	9ca40100 	ldr	q0, fffffffffff48284 <__end+0xffffffe61924>
     268:	14000002 	b	270 <__bss_size+0x26a>
     26c:	00000a4b 	.inst	0x00000a4b ; undefined
     270:	000008d2 	.inst	0x000008d2 ; undefined
     274:	000a4014 	.inst	0x000a4014 ; undefined
     278:	00095a00 	.inst	0x00095a00 ; undefined
     27c:	0a351400 	bic	w0, w0, w21, lsl #5
     280:	097e0000 	.inst	0x097e0000 ; undefined
     284:	a0150000 	.inst	0xa0150000 ; undefined
     288:	16000002 	b	fffffffff8000290 <__end+0xfffff7f19930>
     28c:	00000e19 	.inst	0x00000e19 ; undefined
     290:	000e2216 	.inst	0x000e2216 ; undefined
     294:	0e2b1600 	srhadd	v0.8b, v16.8b, v11.8b
     298:	00000000 	.inst	0x00000000 ; undefined
     29c:	000a2913 	.inst	0x000a2913 ; undefined
     2a0:	0e06cc00 	.inst	0x0e06cc00 ; undefined
     2a4:	ff000000 	.inst	0xff000000 ; undefined
     2a8:	000300ff 	.inst	0x000300ff ; undefined
     2ac:	e4ac0100 	.inst	0xe4ac0100 ; undefined
     2b0:	14000002 	b	2b8 <__bss_size+0x2b2>
     2b4:	00000a4b 	.inst	0x00000a4b ; undefined
     2b8:	000009b4 	.inst	0x000009b4 ; undefined
     2bc:	000a4014 	.inst	0x000a4014 ; undefined
     2c0:	000a7800 	.inst	0x000a7800 ; undefined
     2c4:	0a351400 	bic	w0, w0, w21, lsl #5
     2c8:	0ac40000 	and	w0, w0, w4, ror #0
     2cc:	00150000 	.inst	0x00150000 ; undefined
     2d0:	16000003 	b	fffffffff80002dc <__end+0xfffff7f1997c>
     2d4:	00000e19 	.inst	0x00000e19 ; undefined
     2d8:	000e2216 	.inst	0x000e2216 ; undefined
     2dc:	0e2b1600 	srhadd	v0.8b, v16.8b, v11.8b
     2e0:	00000000 	.inst	0x00000000 ; undefined
     2e4:	000ca813 	.inst	0x000ca813 ; undefined
     2e8:	0e06f000 	.inst	0x0e06f000 ; undefined
     2ec:	ff000000 	.inst	0xff000000 ; undefined
     2f0:	000360ff 	.inst	0x000360ff ; undefined
     2f4:	30870100 	adr	x0, fffffffffff0e315 <__end+0xffffffe279b5>
     2f8:	14000003 	b	304 <__bss_size+0x2fe>
     2fc:	00000cb4 	.inst	0x00000cb4 ; undefined
     300:	00000afa 	.inst	0x00000afa ; undefined
     304:	0e070417 	dup	v23.8b, v0.b[3]
     308:	ff000000 	.inst	0xff000000 ; undefined
     30c:	000fe1ff 	.inst	0x000fe1ff ; undefined
     310:	00031c00 	.inst	0x00031c00 ; undefined
     314:	50011000 	adr	x0, 2516 <__bss_size+0x2510>
     318:	00008302 	.inst	0x00008302 ; undefined
     31c:	0e08480f 	.inst	0x0e08480f ; undefined
     320:	ff000000 	.inst	0xff000000 ; undefined
     324:	000fe1ff 	.inst	0x000fe1ff ; undefined
     328:	50011000 	adr	x0, 252a <__bss_size+0x2524>
     32c:	00003d01 	.inst	0x00003d01 ; undefined
     330:	000a7313 	.inst	0x000a7313 ; undefined
     334:	0e073c00 	umov	w0, v0.b[3]
     338:	ff000000 	.inst	0xff000000 ; undefined
     33c:	0003a0ff 	.inst	0x0003a0ff ; undefined
     340:	a5980100 	ld1rqd	{z0.d}, p0/z, [x8, x24, lsl #3]
     344:	18000003 	ldr	w3, 344 <__bss_size+0x33e>
     348:	00000aa3 	.inst	0x00000aa3 ; undefined
     34c:	000a9818 	.inst	0x000a9818 ; undefined
     350:	0a8d1800 	and	w0, w0, w13, asr #6
     354:	83140000 	.inst	0x83140000 ; undefined
     358:	3000000a 	adr	x10, 359 <__bss_size+0x353>
     35c:	1500000b 	b	4000388 <__bss_size+0x4000382>
     360:	000003a0 	.inst	0x000003a0 ; undefined
     364:	000d9f16 	.inst	0x000d9f16 ; undefined
     368:	0da81600 	st2	{v0.b, v1.b}[5], [x16], x8
     36c:	ad160000 	stp	q0, q0, [x0, #704]
     370:	1900000d 	.inst	0x1900000d ; undefined
     374:	00000ada 	.inst	0x00000ada ; undefined
     378:	000e0750 	.inst	0x000e0750 ; undefined
     37c:	ffff0000 	.inst	0xffff0000 ; undefined
     380:	000003d0 	.inst	0x000003d0 ; undefined
     384:	ea143901 	ands	x1, x8, x20, lsl #14
     388:	5300000a 	ubfx	w10, w0, #0, #1
     38c:	1a00000b 	adc	w11, w0, w0
     390:	00000ada 	.inst	0x00000ada ; undefined
     394:	00000410 	.inst	0x00000410 ; undefined
     398:	000aea14 	.inst	0x000aea14 ; undefined
     39c:	000b8900 	.inst	0x000b8900 ; undefined
     3a0:	00000000 	.inst	0x00000000 ; undefined
     3a4:	0a071300 	and	w0, w24, w7, lsl #4
     3a8:	07c80000 	.inst	0x07c80000 ; undefined
     3ac:	0000000e 	.inst	0x0000000e ; undefined
     3b0:	0460ffff 	uqdech	wzr
     3b4:	a8010000 	stnp	x0, x0, [x0, #16]
     3b8:	00000413 	.inst	0x00000413 ; undefined
     3bc:	000a1e14 	.inst	0x000a1e14 ; undefined
     3c0:	000bbf00 	.inst	0x000bbf00 ; undefined
     3c4:	0a131400 	and	w0, w0, w19, lsl #5
     3c8:	0c340000 	.inst	0x0c340000 ; undefined
     3cc:	29190000 	stp	w0, w0, [x0, #200]
     3d0:	e400000a 	.inst	0xe400000a ; undefined
     3d4:	00000e07 	.inst	0x00000e07 ; undefined
     3d8:	b0ffff00 	adrp	x0, fffffffffffe1000 <__end+0xffffffefa6a0>
     3dc:	01000004 	.inst	0x01000004 ; undefined
     3e0:	0a4b145a 	and	w26, w2, w11, lsr #5
     3e4:	0c7d0000 	.inst	0x0c7d0000 ; undefined
     3e8:	40140000 	.inst	0x40140000 ; undefined
     3ec:	ff00000a 	.inst	0xff00000a ; undefined
     3f0:	1400000c 	b	420 <__bss_size+0x41a>
     3f4:	00000a35 	.inst	0x00000a35 ; undefined
     3f8:	00000d37 	.inst	0x00000d37 ; undefined
     3fc:	0004b015 	.inst	0x0004b015 ; undefined
     400:	0e191600 	.inst	0x0e191600 ; undefined
     404:	22160000 	.inst	0x22160000 ; undefined
     408:	1600000e 	b	fffffffff8000440 <__end+0xfffff7f19ae0>
     40c:	00000e2b 	.inst	0x00000e2b ; undefined
     410:	13000000 	sbfx	w0, w0, #0, #1
     414:	000007d8 	.inst	0x000007d8 ; undefined
     418:	000e08cc 	.inst	0x000e08cc ; undefined
     41c:	ffff0000 	.inst	0xffff0000 ; undefined
     420:	00000500 	.inst	0x00000500 ; undefined
     424:	04eaa101 	adr	z1.d, [z8.d, z10.d]
     428:	f7140000 	.inst	0xf7140000 ; undefined
     42c:	80000007 	.inst	0x80000007 ; undefined
     430:	1400000d 	b	464 <__bss_size+0x45e>
     434:	000007ed 	.inst	0x000007ed ; undefined
     438:	00000de0 	.inst	0x00000de0 ; undefined
     43c:	0007e414 	.inst	0x0007e414 ; undefined
     440:	000e2c00 	.inst	0x000e2c00 ; undefined
     444:	05001500 	orr	z0.h, z0.h, #0xc07f
     448:	dd160000 	.inst	0xdd160000 ; undefined
     44c:	1600000e 	b	fffffffff8000484 <__end+0xfffff7f19b24>
     450:	00000ee6 	.inst	0x00000ee6 ; undefined
     454:	000ca813 	.inst	0x000ca813 ; undefined
     458:	0e090800 	.inst	0x0e090800 ; undefined
     45c:	ff000000 	.inst	0xff000000 ; undefined
     460:	000540ff 	.inst	0x000540ff ; undefined
     464:	887c0100 	ldxp	w0, w0, [x8]
     468:	14000004 	b	478 <__bss_size+0x472>
     46c:	00000cb4 	.inst	0x00000cb4 ; undefined
     470:	00000eeb 	.inst	0x00000eeb ; undefined
     474:	0e09140f 	.inst	0x0e09140f ; undefined
     478:	ff000000 	.inst	0xff000000 ; undefined
     47c:	000fe1ff 	.inst	0x000fe1ff ; undefined
     480:	50011000 	adr	x0, 2682 <__bss_size+0x267c>
     484:	00003001 	.inst	0x00003001 ; undefined
     488:	000ca819 	.inst	0x000ca819 ; undefined
     48c:	0e092800 	trn1	v0.8b, v0.8b, v9.8b
     490:	ff000000 	.inst	0xff000000 ; undefined
     494:	000570ff 	.inst	0x000570ff ; undefined
     498:	147d0100 	b	1f40898 <__bss_size+0x1f40892>
     49c:	00000cb4 	.inst	0x00000cb4 ; undefined
     4a0:	00000f0f 	.inst	0x00000f0f ; undefined
     4a4:	0e093817 	zip1	v23.8b, v0.8b, v9.8b
     4a8:	ff000000 	.inst	0xff000000 ; undefined
     4ac:	000fe1ff 	.inst	0x000fe1ff ; undefined
     4b0:	0004bc00 	.inst	0x0004bc00 ; undefined
     4b4:	50011000 	adr	x0, 26b6 <__bss_size+0x26b0>
     4b8:	00008302 	.inst	0x00008302 ; undefined
     4bc:	0e097017 	tbx	v23.8b, {v0.16b-v3.16b}, v9.8b
     4c0:	ff000000 	.inst	0xff000000 ; undefined
     4c4:	000fe1ff 	.inst	0x000fe1ff ; undefined
     4c8:	0004d300 	.inst	0x0004d300 ; undefined
     4cc:	50011000 	adr	x0, 26ce <__bss_size+0x26c8>
     4d0:	0f003d01 	.inst	0x0f003d01 ; undefined
     4d4:	000e0978 	.inst	0x000e0978 ; undefined
     4d8:	ffff0000 	.inst	0xffff0000 ; undefined
     4dc:	00000fe1 	.inst	0x00000fe1 ; undefined
     4e0:	02500110 	.inst	0x02500110 ; undefined
     4e4:	00000083 	.inst	0x00000083 ; undefined
     4e8:	a81b0000 	stnp	x0, x0, [x0, #432]
     4ec:	6000000c 	.inst	0x6000000c ; undefined
     4f0:	00000e09 	.inst	0x00000e09 ; undefined
     4f4:	08ffff00 	casalb	wzr, w0, [x24]
     4f8:	00000000 	.inst	0x00000000 ; undefined
     4fc:	01000000 	.inst	0x01000000 ; undefined
     500:	00051cb0 	.inst	0x00051cb0 ; undefined
     504:	0cb41400 	.inst	0x0cb41400 ; undefined
     508:	0f450000 	.inst	0x0f450000 ; undefined
     50c:	641c0000 	.inst	0x641c0000 ; undefined
     510:	00000e09 	.inst	0x00000e09 ; undefined
     514:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     518:	0000000f 	.inst	0x0000000f ; undefined
     51c:	000ca813 	.inst	0x000ca813 ; undefined
     520:	0e099800 	.inst	0x0e099800 ; undefined
     524:	ff000000 	.inst	0xff000000 ; undefined
     528:	0005a0ff 	.inst	0x0005a0ff ; undefined
     52c:	6b9e0100 	subs	w0, w8, w30, asr #0
     530:	14000005 	b	544 <__bss_size+0x53e>
     534:	00000cb4 	.inst	0x00000cb4 ; undefined
     538:	00000f6a 	.inst	0x00000f6a ; undefined
     53c:	0e09ac17 	.inst	0x0e09ac17 ; undefined
     540:	ff000000 	.inst	0xff000000 ; undefined
     544:	000fe1ff 	.inst	0x000fe1ff ; undefined
     548:	00055700 	.inst	0x00055700 ; undefined
     54c:	50011000 	adr	x0, 274e <__bss_size+0x2748>
     550:	08008305 	stlxrb	w0, w5, [x24]
     554:	0f001aff 	fmla	v31.4h, v23.4h, v0.h[4]
     558:	000e0b00 	.inst	0x000e0b00 ; undefined
     55c:	ffff0000 	.inst	0xffff0000 ; undefined
     560:	00000fe1 	.inst	0x00000fe1 ; undefined
     564:	01500110 	.inst	0x01500110 ; undefined
     568:	1300003d 	sbfx	w29, w1, #0, #1
     56c:	000007d8 	.inst	0x000007d8 ; undefined
     570:	000e0a54 	.inst	0x000e0a54 ; undefined
     574:	ffff0000 	.inst	0xffff0000 ; undefined
     578:	000005d0 	.inst	0x000005d0 ; undefined
     57c:	063bad01 	.inst	0x063bad01 ; undefined
     580:	f7140000 	.inst	0xf7140000 ; undefined
     584:	a0000007 	.inst	0xa0000007 ; undefined
     588:	1800000f 	ldr	w15, 588 <__bss_size+0x582>
     58c:	000007ed 	.inst	0x000007ed ; undefined
     590:	0007e414 	.inst	0x0007e414 ; undefined
     594:	00101600 	.inst	0x00101600 ; undefined
     598:	05d01500 	mov	z0.d, p0/z, #-88
     59c:	dd160000 	.inst	0xdd160000 ; undefined
     5a0:	1600000e 	b	fffffffff80005d8 <__end+0xfffff7f19c78>
     5a4:	00000ee6 	.inst	0x00000ee6 ; undefined
     5a8:	000ca813 	.inst	0x000ca813 ; undefined
     5ac:	0e0a8800 	.inst	0x0e0a8800 ; undefined
     5b0:	ff000000 	.inst	0xff000000 ; undefined
     5b4:	000620ff 	.inst	0x000620ff ; undefined
     5b8:	d97c0100 	.inst	0xd97c0100 ; undefined
     5bc:	18000005 	ldr	w5, 5bc <__bss_size+0x5b6>
     5c0:	00000cb4 	.inst	0x00000cb4 ; undefined
     5c4:	0e0a940f 	.inst	0x0e0a940f ; undefined
     5c8:	ff000000 	.inst	0xff000000 ; undefined
     5cc:	000fe1ff 	.inst	0x000fe1ff ; undefined
     5d0:	50011000 	adr	x0, 27d2 <__bss_size+0x27cc>
     5d4:	00008302 	.inst	0x00008302 ; undefined
     5d8:	0ca81900 	.inst	0x0ca81900 ; undefined
     5dc:	0aa80000 	bic	w0, w0, w8, asr #0
     5e0:	0000000e 	.inst	0x0000000e ; undefined
     5e4:	0650ffff 	.inst	0x0650ffff ; undefined
     5e8:	7d010000 	str	h0, [x0, #128]
     5ec:	000cb414 	.inst	0x000cb414 ; undefined
     5f0:	0010ea00 	.inst	0x0010ea00 ; undefined
     5f4:	0ab81700 	bic	w0, w24, w24, asr #5
     5f8:	0000000e 	.inst	0x0000000e ; undefined
     5fc:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     600:	060d0000 	.inst	0x060d0000 ; undefined
     604:	01100000 	.inst	0x01100000 ; undefined
     608:	008a0250 	.inst	0x008a0250 ; undefined
     60c:	0ae01700 	bic	w0, w24, w0, ror #5
     610:	0000000e 	.inst	0x0000000e ; undefined
     614:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     618:	06240000 	.inst	0x06240000 ; undefined
     61c:	01100000 	.inst	0x01100000 ; undefined
     620:	003d0150 	.inst	0x003d0150 ; NYI
     624:	0e0ae80f 	.inst	0x0e0ae80f ; undefined
     628:	ff000000 	.inst	0xff000000 ; undefined
     62c:	000fe1ff 	.inst	0x000fe1ff ; undefined
     630:	50011000 	adr	x0, 2832 <__bss_size+0x282c>
     634:	00008a02 	.inst	0x00008a02 ; undefined
     638:	13000000 	sbfx	w0, w0, #0, #1
     63c:	000007d8 	.inst	0x000007d8 ; undefined
     640:	000e0bcc 	.inst	0x000e0bcc ; undefined
     644:	ffff0000 	.inst	0xffff0000 ; undefined
     648:	00000680 	.inst	0x00000680 ; undefined
     64c:	0700a501 	.inst	0x0700a501 ; undefined
     650:	f7140000 	.inst	0xf7140000 ; undefined
     654:	20000007 	.inst	0x20000007 ; undefined
     658:	18000011 	ldr	w17, 658 <__bss_size+0x652>
     65c:	000007ed 	.inst	0x000007ed ; undefined
     660:	0007e414 	.inst	0x0007e414 ; undefined
     664:	00119600 	.inst	0x00119600 ; undefined
     668:	06801500 	.inst	0x06801500 ; undefined
     66c:	dd160000 	.inst	0xdd160000 ; undefined
     670:	1600000e 	b	fffffffff80006a8 <__end+0xfffff7f19d48>
     674:	00000ee6 	.inst	0x00000ee6 ; undefined
     678:	000ca813 	.inst	0x000ca813 ; undefined
     67c:	0e0c0000 	tbl	v0.8b, {v0.16b}, v12.8b
     680:	ff000000 	.inst	0xff000000 ; undefined
     684:	0006c0ff 	.inst	0x0006c0ff ; undefined
     688:	a97c0100 	ldp	x0, x0, [x8, #-64]
     68c:	18000006 	ldr	w6, 68c <__bss_size+0x686>
     690:	00000cb4 	.inst	0x00000cb4 ; undefined
     694:	0e0c0c0f 	dup	v15.2s, w0
     698:	ff000000 	.inst	0xff000000 ; undefined
     69c:	000fe1ff 	.inst	0x000fe1ff ; undefined
     6a0:	50011000 	adr	x0, 28a2 <__bss_size+0x289c>
     6a4:	00008302 	.inst	0x00008302 ; undefined
     6a8:	0ca81900 	.inst	0x0ca81900 ; undefined
     6ac:	0c200000 	.inst	0x0c200000 ; undefined
     6b0:	0000000e 	.inst	0x0000000e ; undefined
     6b4:	06f0ffff 	.inst	0x06f0ffff ; undefined
     6b8:	7d010000 	str	h0, [x0, #128]
     6bc:	000cb414 	.inst	0x000cb414 ; undefined
     6c0:	00126800 	.inst	0x00126800 ; undefined
     6c4:	0c301c00 	.inst	0x0c301c00 ; undefined
     6c8:	0000000e 	.inst	0x0000000e ; undefined
     6cc:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     6d0:	4c170000 	.inst	0x4c170000 ; undefined
     6d4:	00000e0c 	.inst	0x00000e0c ; undefined
     6d8:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     6dc:	e900000f 	.inst	0xe900000f ; undefined
     6e0:	10000006 	adr	x6, 6e0 <__bss_size+0x6da>
     6e4:	3d015001 	str	b1, [x0, #84]
     6e8:	0c540f00 	.inst	0x0c540f00 ; undefined
     6ec:	0000000e 	.inst	0x0000000e ; undefined
     6f0:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     6f4:	01100000 	.inst	0x01100000 ; undefined
     6f8:	008a0250 	.inst	0x008a0250 ; undefined
     6fc:	00000000 	.inst	0x00000000 ; undefined
     700:	0007d819 	.inst	0x0007d819 ; undefined
     704:	0e0ccc00 	.inst	0x0e0ccc00 ; undefined
     708:	ff000000 	.inst	0xff000000 ; undefined
     70c:	000720ff 	.inst	0x000720ff ; undefined
     710:	14a90100 	b	2a40b10 <__bss_size+0x2a40b0a>
     714:	000007f7 	.inst	0x000007f7 ; undefined
     718:	0000129e 	.inst	0x0000129e ; undefined
     71c:	0007ed18 	.inst	0x0007ed18 ; undefined
     720:	07e41400 	.inst	0x07e41400 ; undefined
     724:	13140000 	sbfiz	w0, w0, #12, #1
     728:	20150000 	.inst	0x20150000 ; undefined
     72c:	16000007 	b	fffffffff8000748 <__end+0xfffff7f19de8>
     730:	00000edd 	.inst	0x00000edd ; undefined
     734:	000ee616 	.inst	0x000ee616 ; undefined
     738:	0ca81300 	.inst	0x0ca81300 ; undefined
     73c:	0d000000 	st1	{v0.b}[0], [x0]
     740:	0000000e 	.inst	0x0000000e ; undefined
     744:	0760ffff 	.inst	0x0760ffff ; undefined
     748:	7c010000 	stur	h0, [x0, #16]
     74c:	0000076a 	.inst	0x0000076a ; undefined
     750:	000cb418 	.inst	0x000cb418 ; undefined
     754:	0d0c0f00 	.inst	0x0d0c0f00 ; undefined
     758:	0000000e 	.inst	0x0000000e ; undefined
     75c:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     760:	01100000 	.inst	0x01100000 ; undefined
     764:	00830250 	.inst	0x00830250 ; undefined
     768:	a8190000 	stnp	x0, x0, [x0, #400]
     76c:	2000000c 	.inst	0x2000000c ; undefined
     770:	00000e0d 	.inst	0x00000e0d ; undefined
     774:	90ffff00 	adrp	x0, fffffffffffe0000 <__end+0xffffffef96a0>
     778:	01000007 	.inst	0x01000007 ; undefined
     77c:	0cb4147d 	.inst	0x0cb4147d ; undefined
     780:	13e80000 	.inst	0x13e80000 ; undefined
     784:	301c0000 	adr	x0, 38785 <__bss_size+0x3877f>
     788:	00000e0d 	.inst	0x00000e0d ; undefined
     78c:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     790:	1700000f 	b	fffffffffc0007cc <__end+0xfffffbf19e6c>
     794:	000e0d4c 	.inst	0x000e0d4c ; undefined
     798:	ffff0000 	.inst	0xffff0000 ; undefined
     79c:	00000fe1 	.inst	0x00000fe1 ; undefined
     7a0:	000007aa 	.inst	0x000007aa ; undefined
     7a4:	01500110 	.inst	0x01500110 ; undefined
     7a8:	540f003d 	.inst	0x540f003d ; undefined
     7ac:	00000e0d 	.inst	0x00000e0d ; undefined
     7b0:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     7b4:	1000000f 	adr	x15, 7b4 <__bss_size+0x7ae>
     7b8:	8a025001 	and	x1, x0, x2, lsl #20
     7bc:	00000000 	.inst	0x00000000 ; undefined
     7c0:	08070000 	stxrb	w7, w0, [x0]
     7c4:	000001df 	.inst	0x000001df ; undefined
     7c8:	0001d81d 	.inst	0x0001d81d ; undefined
     7cc:	0007d800 	.inst	0x0007d800 ; undefined
     7d0:	002d1e00 	.inst	0x002d1e00 ; NYI
     7d4:	00140000 	.inst	0x00140000 ; undefined
     7d8:	00014d1f 	.inst	0x00014d1f ; undefined
     7dc:	01770100 	.inst	0x01770100 ; undefined
     7e0:	00000815 	.inst	0x00000815 ; undefined
     7e4:	01006e20 	.inst	0x01006e20 ; undefined
     7e8:	00004277 	.inst	0x00004277 ; undefined
     7ec:	63662000 	.inst	0x63662000 ; undefined
     7f0:	d8770100 	prfm	pldl1keep, ee810 <__bss_size+0xee80a>
     7f4:	20000001 	.inst	0x20000001 ; undefined
     7f8:	01006662 	.inst	0x01006662 ; undefined
     7fc:	0001d277 	.inst	0x0001d277 ; undefined
     800:	68632100 	.inst	0x68632100 ; undefined
     804:	d8780100 	prfm	pldl1keep, f0824 <__bss_size+0xf081e>
     808:	21000001 	.inst	0x21000001 ; undefined
     80c:	79010070 	strh	w16, [x3, #128]
     810:	000001d2 	.inst	0x000001d2 ; undefined
     814:	00f40b00 	.inst	0x00f40b00 ; undefined
     818:	6f010000 	.inst	0x6f010000 ; undefined
     81c:	000e04d0 	.inst	0x000e04d0 ; undefined
     820:	ffff0000 	.inst	0xffff0000 ; undefined
     824:	00000074 	.inst	0x00000074 ; undefined
     828:	00000000 	.inst	0x00000000 ; undefined
     82c:	08e09c01 	.inst	0x08e09c01 ; undefined
     830:	730c0000 	.inst	0x730c0000 ; undefined
     834:	01007274 	.inst	0x01007274 ; undefined
     838:	0007c26f 	.inst	0x0007c26f ; undefined
     83c:	00141e00 	.inst	0x00141e00 ; undefined
     840:	0ca81300 	.inst	0x0ca81300 ; undefined
     844:	04e80000 	add	z0.d, z0.d, z8.d
     848:	0000000e 	.inst	0x0000000e ; undefined
     84c:	01d0ffff 	.inst	0x01d0ffff ; undefined
     850:	71010000 	subs	w0, w0, #0x40
     854:	000008a5 	.inst	0x000008a5 ; undefined
     858:	000cb414 	.inst	0x000cb414 ; undefined
     85c:	00149100 	.inst	0x00149100 ; undefined
     860:	04f81700 	uqadd	z0.d, z24.d, z24.d
     864:	0000000e 	.inst	0x0000000e ; undefined
     868:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     86c:	08790000 	.inst	0x08790000 ; undefined
     870:	01100000 	.inst	0x01100000 ; undefined
     874:	00830250 	.inst	0x00830250 ; undefined
     878:	05201700 	ext	z0.b, z0.b, z24.b, #5
     87c:	0000000e 	.inst	0x0000000e ; undefined
     880:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     884:	08900000 	stllrb	w0, [x0]
     888:	01100000 	.inst	0x01100000 ; undefined
     88c:	003d0150 	.inst	0x003d0150 ; NYI
     890:	0e05280f 	trn1	v15.8b, v0.8b, v5.8b
     894:	ff000000 	.inst	0xff000000 ; undefined
     898:	000fe1ff 	.inst	0x000fe1ff ; undefined
     89c:	50011000 	adr	x0, 2a9e <__bss_size+0x2a98>
     8a0:	00008302 	.inst	0x00008302 ; undefined
     8a4:	05142200 	.inst	0x05142200 ; undefined
     8a8:	0000000e 	.inst	0x0000000e ; undefined
     8ac:	08e0ffff 	casalb	w0, wzr, [sp]
     8b0:	08c40000 	ldlarb	w0, [x0]
     8b4:	01100000 	.inst	0x01100000 ; undefined
     8b8:	c0030950 	.inst	0xc0030950 ; undefined
     8bc:	00000e00 	.inst	0x00000e00 ; undefined
     8c0:	00ffff00 	.inst	0x00ffff00 ; undefined
     8c4:	0e054423 	.inst	0x0e054423 ; undefined
     8c8:	ff000000 	.inst	0xff000000 ; undefined
     8cc:	0008e0ff 	.inst	0x0008e0ff ; undefined
     8d0:	50011000 	adr	x0, 2ad2 <__bss_size+0x2acc>
     8d4:	00c00309 	.inst	0x00c00309 ; undefined
     8d8:	0000000e 	.inst	0x0000000e ; undefined
     8dc:	0000ffff 	.inst	0x0000ffff ; undefined
     8e0:	00024324 	.inst	0x00024324 ; undefined
     8e4:	a06a0100 	.inst	0xa06a0100 ; undefined
     8e8:	00000e04 	.inst	0x00000e04 ; undefined
     8ec:	24ffff00 	cmplo	p0.d, p7/z, z24.d, #127
     8f0:	00000000 	.inst	0x00000000 ; undefined
     8f4:	01000000 	.inst	0x01000000 ; undefined
     8f8:	00097a9c 	.inst	0x00097a9c ; undefined
     8fc:	0ca81300 	.inst	0x0ca81300 ; undefined
     900:	04a40000 	add	z0.s, z0.s, z4.s
     904:	0000000e 	.inst	0x0000000e ; undefined
     908:	01a0ffff 	.inst	0x01a0ffff ; undefined
     90c:	6b010000 	subs	w0, w0, w1
     910:	00000948 	.inst	0x00000948 ; undefined
     914:	000cb414 	.inst	0x000cb414 ; undefined
     918:	0014c700 	.inst	0x0014c700 ; undefined
     91c:	04b01700 	uqadd	z0.s, z24.s, z16.s
     920:	0000000e 	.inst	0x0000000e ; undefined
     924:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     928:	09340000 	.inst	0x09340000 ; undefined
     92c:	01100000 	.inst	0x01100000 ; undefined
     930:	003d0150 	.inst	0x003d0150 ; NYI
     934:	0e04b80f 	.inst	0x0e04b80f ; undefined
     938:	ff000000 	.inst	0xff000000 ; undefined
     93c:	000fe1ff 	.inst	0x000fe1ff ; undefined
     940:	50011000 	adr	x0, 2b42 <__bss_size+0x2b3c>
     944:	00003a01 	.inst	0x00003a01 ; undefined
     948:	000ca825 	.inst	0x000ca825 ; undefined
     94c:	0e04bc00 	.inst	0x0e04bc00 ; undefined
     950:	ff000000 	.inst	0xff000000 ; undefined
     954:	000008ff 	.inst	0x000008ff ; undefined
     958:	00000000 	.inst	0x00000000 ; undefined
     95c:	266c0100 	.inst	0x266c0100 ; undefined
     960:	00000cb4 	.inst	0x00000cb4 ; undefined
     964:	04c4230d 	.inst	0x04c4230d ; undefined
     968:	0000000e 	.inst	0x0000000e ; undefined
     96c:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     970:	01100000 	.inst	0x01100000 ; undefined
     974:	003d0150 	.inst	0x003d0150 ; NYI
     978:	0e0b0000 	tbl	v0.8b, {v0.16b}, v11.8b
     97c:	01000002 	.inst	0x01000002 ; undefined
     980:	0e043063 	tbx	v3.8b, {v3.16b, v4.16b}, v4.8b
     984:	ff000000 	.inst	0xff000000 ; undefined
     988:	000064ff 	.inst	0x000064ff ; undefined
     98c:	00000000 	.inst	0x00000000 ; undefined
     990:	079c0100 	.inst	0x079c0100 ; undefined
     994:	0c00000a 	st4	{v10.8b-v13.8b}, [x0]
     998:	00727473 	.inst	0x00727473 ; undefined
     99c:	07c26301 	.inst	0x07c26301 ; undefined
     9a0:	14eb0000 	b	3ac09a0 <__bss_size+0x3ac099a>
     9a4:	a8190000 	stnp	x0, x0, [x0, #400]
     9a8:	4800000c 	stxrh	w0, w12, [x0]
     9ac:	00000e04 	.inst	0x00000e04 ; undefined
     9b0:	70ffff00 	adr	x0, 993 <__bss_size+0x98d>
     9b4:	01000001 	.inst	0x01000001 ; undefined
     9b8:	0cb41465 	.inst	0x0cb41465 ; undefined
     9bc:	155e0000 	b	57809bc <__bss_size+0x57809b6>
     9c0:	58170000 	ldr	x0, 2e9c0 <__bss_size+0x2e9ba>
     9c4:	00000e04 	.inst	0x00000e04 ; undefined
     9c8:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     9cc:	da00000f 	sbc	x15, x0, x0
     9d0:	10000009 	adr	x9, 9d0 <__bss_size+0x9ca>
     9d4:	83025001 	.inst	0x83025001 ; undefined
     9d8:	78170000 	sturh	w0, [x0, #-144]
     9dc:	00000e04 	.inst	0x00000e04 ; undefined
     9e0:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     9e4:	f100000f 	subs	x15, x0, #0x0
     9e8:	10000009 	adr	x9, 9e8 <__bss_size+0x9e2>
     9ec:	3d015001 	str	b1, [x0, #84]
     9f0:	04800f00 	add	z0.s, p3/m, z0.s, z24.s
     9f4:	0000000e 	.inst	0x0000000e ; undefined
     9f8:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     9fc:	01100000 	.inst	0x01100000 ; undefined
     a00:	00830250 	.inst	0x00830250 ; undefined
     a04:	27000000 	.inst	0x27000000 ; undefined
     a08:	00613269 	.inst	0x00613269 ; undefined
     a0c:	29015501 	stp	w1, w21, [x8, #8]
     a10:	2000000a 	.inst	0x2000000a ; undefined
     a14:	006d756e 	.inst	0x006d756e ; undefined
     a18:	00495501 	.inst	0x00495501 ; undefined
     a1c:	62200000 	.inst	0x62200000 ; undefined
     a20:	55010066 	.inst	0x55010066 ; undefined
     a24:	000001d2 	.inst	0x000001d2 ; undefined
     a28:	02761f00 	.inst	0x02761f00 ; undefined
     a2c:	42010000 	.inst	0x42010000 ; undefined
     a30:	000a7301 	.inst	0x000a7301 ; undefined
     a34:	756e2000 	.inst	0x756e2000 ; undefined
     a38:	4201006d 	.inst	0x4201006d ; undefined
     a3c:	00000080 	.inst	0x00000080 ; undefined
     a40:	00016328 	.inst	0x00016328 ; undefined
     a44:	79420100 	ldrh	w0, [x8, #256]
     a48:	20000000 	.inst	0x20000000 ; undefined
     a4c:	01006662 	.inst	0x01006662 ; undefined
     a50:	0001d242 	.inst	0x0001d242 ; undefined
     a54:	006e2100 	.inst	0x006e2100 ; undefined
     a58:	00424301 	.inst	0x00424301 ; undefined
     a5c:	64210000 	fmla	z0.h, z0.h, z1.h[0]
     a60:	01007467 	.inst	0x01007467 ; undefined
     a64:	00004244 	.inst	0x00004244 ; undefined
     a68:	00642100 	.inst	0x00642100 ; undefined
     a6c:	00804501 	.inst	0x00804501 ; undefined
     a70:	29000000 	stp	w0, w0, [x0]
     a74:	00693261 	.inst	0x00693261 ; undefined
     a78:	01d83401 	.inst	0x01d83401 ; undefined
     a7c:	ce010000 	.inst	0xce010000 ; undefined
     a80:	2000000a 	.inst	0x2000000a ; undefined
     a84:	01006863 	.inst	0x01006863 ; undefined
     a88:	0001d834 	.inst	0x0001d834 ; undefined
     a8c:	72732000 	.inst	0x72732000 ; undefined
     a90:	34010063 	cbz	w3, 2a9c <__bss_size+0x2a96>
     a94:	00000ace 	.inst	0x00000ace ; undefined
     a98:	00016328 	.inst	0x00016328 ; undefined
     a9c:	42340100 	.inst	0x42340100 ; undefined
     aa0:	28000000 	stnp	w0, w0, [x0]
     aa4:	000001eb 	.inst	0x000001eb ; undefined
     aa8:	0ad43401 	and	w1, w0, w20, ror #13
     aac:	6e210000 	uaddl2	v0.8h, v0.16b, v1.16b
     ab0:	01006d75 	.inst	0x01006d75 ; undefined
     ab4:	00004235 	.inst	0x00004235 ; undefined
     ab8:	01682a00 	.inst	0x01682a00 ; undefined
     abc:	35010000 	cbnz	w0, 2abc <__bss_size+0x2ab6>
     ac0:	00000042 	.inst	0x00000042 ; undefined
     ac4:	01007021 	.inst	0x01007021 ; undefined
     ac8:	0007c236 	.inst	0x0007c236 ; undefined
     acc:	08070000 	stxrb	w7, w0, [x0]
     ad0:	000007c2 	.inst	0x000007c2 ; undefined
     ad4:	00420807 	.inst	0x00420807 ; undefined
     ad8:	61290000 	.inst	0x61290000 ; undefined
     adc:	01006432 	.inst	0x01006432 ; undefined
     ae0:	0000422d 	.inst	0x0000422d ; undefined
     ae4:	0af50100 	bic	w0, w8, w21, ror #0
     ae8:	63200000 	.inst	0x63200000 ; undefined
     aec:	2d010068 	stp	s8, s0, [x3, #8]
     af0:	000001d8 	.inst	0x000001d8 ; undefined
     af4:	32632b00 	.inst	0x32632b00 ; undefined
     af8:	28010078 	stnp	w24, w0, [x3, #8]
     afc:	000001d8 	.inst	0x000001d8 ; undefined
     b00:	000e01c0 	.inst	0x000e01c0 ; undefined
     b04:	ffff0000 	.inst	0xffff0000 ; undefined
     b08:	00000020 	.inst	0x00000020 ; undefined
     b0c:	00000000 	.inst	0x00000000 ; undefined
     b10:	0b259c01 	.inst	0x0b259c01 ; undefined
     b14:	630c0000 	.inst	0x630c0000 ; undefined
     b18:	28010068 	stnp	w8, w0, [x3, #8]
     b1c:	000001d8 	.inst	0x000001d8 ; undefined
     b20:	00001594 	.inst	0x00001594 ; undefined
     b24:	01232c00 	.inst	0x01232c00 ; undefined
     b28:	24010000 	cmphs	p0.b, p0/z, z0.b, z1.b
     b2c:	000001d8 	.inst	0x000001d8 ; undefined
     b30:	000e01a0 	.inst	0x000e01a0 ; undefined
     b34:	ffff0000 	.inst	0xffff0000 ; undefined
     b38:	00000014 	.inst	0x00000014 ; undefined
     b3c:	00000000 	.inst	0x00000000 ; undefined
     b40:	0b549c01 	.inst	0x0b549c01 ; undefined
     b44:	ac1c0000 	stnp	q0, q0, [x0, #896]
     b48:	00000e01 	.inst	0x00000e01 ; undefined
     b4c:	ecffff00 	.inst	0xecffff00 ; undefined
     b50:	0000000f 	.inst	0x0000000f ; undefined
     b54:	0000e30b 	.inst	0x0000e30b ; undefined
     b58:	00130100 	.inst	0x00130100 ; undefined
     b5c:	00000e01 	.inst	0x00000e01 ; undefined
     b60:	94ffff00 	bl	4000760 <__bss_size+0x400075a>
     b64:	00000000 	.inst	0x00000000 ; undefined
     b68:	01000000 	.inst	0x01000000 ; undefined
     b6c:	000ca89c 	.inst	0x000ca89c ; undefined
     b70:	756e0c00 	.inst	0x756e0c00 ; undefined
     b74:	1301006d 	sbfiz	w13, w3, #31, #1
     b78:	00000080 	.inst	0x00000080 ; undefined
     b7c:	000015ca 	.inst	0x000015ca ; undefined
     b80:	0001f72d 	.inst	0x0001f72d ; undefined
     b84:	69160100 	.inst	0x69160100 ; undefined
     b88:	16000000 	b	fffffffff8000b88 <__end+0xfffff7f1a228>
     b8c:	2e000016 	ext	v22.8b, v0.8b, v0.8b, #0
     b90:	00000000 	.inst	0x00000000 ; undefined
     b94:	00000c3d 	.inst	0x00000c3d ; undefined
     b98:	01006912 	.inst	0x01006912 ; undefined
     b9c:	00006917 	.inst	0x00006917 ; undefined
     ba0:	00164d00 	.inst	0x00164d00 ; undefined
     ba4:	00301500 	.inst	0x00301500 ; NYI
     ba8:	68120000 	.inst	0x68120000 ; undefined
     bac:	01007865 	.inst	0x01007865 ; undefined
     bb0:	00006918 	.inst	0x00006918 ; undefined
     bb4:	0016d400 	.inst	0x0016d400 ; undefined
     bb8:	0ca81b00 	.inst	0x0ca81b00 ; undefined
     bbc:	01380000 	.inst	0x01380000 ; undefined
     bc0:	0000000e 	.inst	0x0000000e ; undefined
     bc4:	000cffff 	.inst	0x000cffff ; undefined
     bc8:	00000000 	.inst	0x00000000 ; undefined
     bcc:	1c010000 	ldr	s0, 2bcc <__bss_size+0x2bc6>
     bd0:	00000bfc 	.inst	0x00000bfc ; undefined
     bd4:	000cb414 	.inst	0x000cb414 ; undefined
     bd8:	00175b00 	.inst	0x00175b00 ; undefined
     bdc:	01400f00 	.inst	0x01400f00 ; undefined
     be0:	0000000e 	.inst	0x0000000e ; undefined
     be4:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     be8:	01100000 	.inst	0x01100000 ; undefined
     bec:	00860c50 	.inst	0x00860c50 ; undefined
     bf0:	ff080085 	.inst	0xff080085 ; undefined
     bf4:	1a3f251a 	.inst	0x1a3f251a ; undefined
     bf8:	00005723 	.inst	0x00005723 ; undefined
     bfc:	000ca825 	.inst	0x000ca825 ; undefined
     c00:	0e017000 	tbx	v0.8b, {v0.16b-v3.16b}, v1.8b
     c04:	ff000000 	.inst	0xff000000 ; undefined
     c08:	00000cff 	.inst	0x00000cff ; undefined
     c0c:	00000000 	.inst	0x00000000 ; undefined
     c10:	141e0100 	b	781010 <__bss_size+0x78100a>
     c14:	00000cb4 	.inst	0x00000cb4 ; undefined
     c18:	000017fd 	.inst	0x000017fd ; undefined
     c1c:	0e01780f 	zip2	v15.8b, v0.8b, v1.8b
     c20:	ff000000 	.inst	0xff000000 ; undefined
     c24:	000fe1ff 	.inst	0x000fe1ff ; undefined
     c28:	50011000 	adr	x0, 2e2a <__bss_size+0x2e24>
     c2c:	8500860c 	.inst	0x8500860c ; undefined
     c30:	1aff0800 	.inst	0x1aff0800 ; undefined
     c34:	231a3f25 	.inst	0x231a3f25 ; undefined
     c38:	00000030 	.inst	0x00000030 ; undefined
     c3c:	0ca81b00 	.inst	0x0ca81b00 ; undefined
     c40:	01180000 	.inst	0x01180000 ; undefined
     c44:	0000000e 	.inst	0x0000000e ; undefined
     c48:	0008ffff 	.inst	0x0008ffff ; undefined
     c4c:	00000000 	.inst	0x00000000 ; undefined
     c50:	14010000 	b	40c50 <__bss_size+0x40c4a>
     c54:	00000c76 	.inst	0x00000c76 ; undefined
     c58:	000cb414 	.inst	0x000cb414 ; undefined
     c5c:	00189d00 	.inst	0x00189d00 ; undefined
     c60:	01200f00 	.inst	0x01200f00 ; undefined
     c64:	0000000e 	.inst	0x0000000e ; undefined
     c68:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     c6c:	01100000 	.inst	0x01100000 ; undefined
     c70:	30080250 	adr	x16, 10cb9 <__bss_size+0x10cb3>
     c74:	a8190000 	stnp	x0, x0, [x0, #400]
     c78:	2000000c 	.inst	0x2000000c ; undefined
     c7c:	00000e01 	.inst	0x00000e01 ; undefined
     c80:	60ffff00 	.inst	0x60ffff00 ; undefined
     c84:	01000000 	.inst	0x01000000 ; undefined
     c88:	0cb41415 	.inst	0x0cb41415 ; undefined
     c8c:	18c20000 	ldr	w0, fffffffffff84c8c <__end+0xffffffe9e32c>
     c90:	300f0000 	adr	x0, 1ec91 <__bss_size+0x1ec8b>
     c94:	00000e01 	.inst	0x00000e01 ; undefined
     c98:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     c9c:	1000000f 	adr	x15, c9c <__bss_size+0xc96>
     ca0:	08025001 	stxrb	w2, w1, [x0]
     ca4:	00000078 	.inst	0x00000078 ; undefined
     ca8:	0009d71f 	.inst	0x0009d71f ; undefined
     cac:	010c0100 	.inst	0x010c0100 ; undefined
     cb0:	00000cbe 	.inst	0x00000cbe ; undefined
     cb4:	01006320 	.inst	0x01006320 ; undefined
     cb8:	0001d80c 	.inst	0x0001d80c ; undefined
     cbc:	a82f0000 	stnp	x0, x0, [x0, #-272]
     cc0:	c000000c 	.inst	0xc000000c ; undefined
     cc4:	00000e00 	.inst	0x00000e00 ; undefined
     cc8:	40ffff00 	.inst	0x40ffff00 ; undefined
     ccc:	00000000 	.inst	0x00000000 ; undefined
     cd0:	01000000 	.inst	0x01000000 ; undefined
     cd4:	000d2e9c 	.inst	0x000d2e9c ; undefined
     cd8:	0cb41400 	.inst	0x0cb41400 ; undefined
     cdc:	18e70000 	ldr	w0, fffffffffffcecdc <__end+0xffffffee837c>
     ce0:	e8220000 	.inst	0xe8220000 ; undefined
     ce4:	00000e00 	.inst	0x00000e00 ; undefined
     ce8:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     cec:	fe00000f 	.inst	0xfe00000f ; undefined
     cf0:	1000000c 	adr	x12, cf0 <__bss_size+0xcea>
     cf4:	f3065001 	.inst	0xf3065001 ; undefined
     cf8:	ff085001 	.inst	0xff085001 ; undefined
     cfc:	f017001a 	adrp	x26, 2e003000 <__bss_size+0x2e002ffa>
     d00:	00000e00 	.inst	0x00000e00 ; undefined
     d04:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     d08:	1500000f 	b	4000d44 <__bss_size+0x4000d3e>
     d0c:	1000000d 	adr	x13, d0c <__bss_size+0xd06>
     d10:	3d015001 	str	b1, [x0, #84]
     d14:	01002300 	.inst	0x01002300 ; undefined
     d18:	0000000e 	.inst	0x0000000e ; undefined
     d1c:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     d20:	01100000 	.inst	0x01100000 ; undefined
     d24:	01f30650 	.inst	0x01f30650 ; undefined
     d28:	1aff0850 	.inst	0x1aff0850 ; undefined
     d2c:	da2f0000 	.inst	0xda2f0000 ; undefined
     d30:	e000000a 	.inst	0xe000000a ; undefined
     d34:	00000e01 	.inst	0x00000e01 ; undefined
     d38:	50ffff00 	adr	x0, d1a <__bss_size+0xd14>
     d3c:	00000000 	.inst	0x00000000 ; undefined
     d40:	01000000 	.inst	0x01000000 ; undefined
     d44:	000d669c 	.inst	0x000d669c ; undefined
     d48:	0aea1400 	bic	w0, w0, w10, ror #5
     d4c:	196f0000 	.inst	0x196f0000 ; undefined
     d50:	da1a0000 	sbc	x0, x0, x26
     d54:	9000000a 	adrp	x10, 0 <__bss_size-0x6>
     d58:	14000000 	b	d58 <__bss_size+0xd52>
     d5c:	00000aea 	.inst	0x00000aea ; undefined
     d60:	000019a5 	.inst	0x000019a5 ; undefined
     d64:	732f0000 	.inst	0x732f0000 ; undefined
     d68:	3000000a 	adr	x10, d69 <__bss_size+0xd63>
     d6c:	00000e02 	.inst	0x00000e02 ; undefined
     d70:	78ffff00 	.inst	0x78ffff00 ; undefined
     d74:	00000000 	.inst	0x00000000 ; undefined
     d78:	01000000 	.inst	0x01000000 ; undefined
     d7c:	000de59c 	.inst	0x000de59c ; undefined
     d80:	0a831400 	and	w0, w0, w3, asr #5
     d84:	19db0000 	.inst	0x19db0000 ; undefined
     d88:	8d300000 	.inst	0x8d300000 ; undefined
     d8c:	0100000a 	.inst	0x0100000a ; undefined
     d90:	0a983051 	and	w17, w2, w24, asr #12
     d94:	52010000 	eor	w0, w0, #0x80000000
     d98:	000aa330 	.inst	0x000aa330 ; undefined
     d9c:	31530100 	adds	w0, w8, #0x4c0, lsl #12
     da0:	00000aae 	.inst	0x00000aae ; undefined
     da4:	00001a11 	.inst	0x00001a11 ; undefined
     da8:	000ab916 	.inst	0x000ab916 ; undefined
     dac:	0ac43200 	and	w0, w16, w4, ror #12
     db0:	58010000 	ldr	x0, 2db0 <__bss_size+0x2daa>
     db4:	000ada19 	.inst	0x000ada19 ; undefined
     db8:	0e024000 	tbl	v0.8b, {v0.16b-v2.16b}, v2.8b
     dbc:	ff000000 	.inst	0xff000000 ; undefined
     dc0:	0000c0ff 	.inst	0x0000c0ff ; undefined
     dc4:	14390100 	b	e411c4 <__bss_size+0xe411be>
     dc8:	00000aea 	.inst	0x00000aea ; undefined
     dcc:	00001a48 	.inst	0x00001a48 ; undefined
     dd0:	000ada1a 	.inst	0x000ada1a ; undefined
     dd4:	00010000 	.inst	0x00010000 ; undefined
     dd8:	0aea1400 	bic	w0, w0, w10, ror #5
     ddc:	1a910000 	csel	w0, w0, w17, eq  // eq = none
     de0:	00000000 	.inst	0x00000000 ; undefined
     de4:	0a292f00 	bic	w0, w24, w9, lsl #11
     de8:	02b00000 	.inst	0x02b00000 ; undefined
     dec:	0000000e 	.inst	0x0000000e ; undefined
     df0:	00a4ffff 	.inst	0x00a4ffff ; undefined
     df4:	00000000 	.inst	0x00000000 ; undefined
     df8:	9c010000 	ldr	q0, 2df8 <__bss_size+0x2df2>
     dfc:	00000e35 	.inst	0x00000e35 ; undefined
     e00:	000a3514 	.inst	0x000a3514 ; undefined
     e04:	001ac700 	.inst	0x001ac700 ; undefined
     e08:	0a403000 	and	w0, w0, w0, lsr #12
     e0c:	51010000 	sub	w0, w0, #0x40
     e10:	000a4b14 	.inst	0x000a4b14 ; undefined
     e14:	001afd00 	.inst	0x001afd00 ; undefined
     e18:	0a553100 	and	w0, w8, w21, lsr #12
     e1c:	1b6c0000 	.inst	0x1b6c0000 ; undefined
     e20:	5e310000 	.inst	0x5e310000 ; undefined
     e24:	ca00000a 	eor	x10, x0, x0
     e28:	3100001b 	adds	w27, w0, #0x0
     e2c:	00000a69 	.inst	0x00000a69 ; undefined
     e30:	00001c15 	.inst	0x00001c15 ; undefined
     e34:	0a072f00 	and	w0, w24, w7, lsl #11
     e38:	03600000 	.inst	0x03600000 ; undefined
     e3c:	0000000e 	.inst	0x0000000e ; undefined
     e40:	00ccffff 	.inst	0x00ccffff ; undefined
     e44:	00000000 	.inst	0x00000000 ; undefined
     e48:	9c010000 	ldr	q0, 2e48 <__bss_size+0x2e42>
     e4c:	00000ea7 	.inst	0x00000ea7 ; undefined
     e50:	000a1314 	.inst	0x000a1314 ; undefined
     e54:	001ca900 	.inst	0x001ca900 ; undefined
     e58:	0a1e1400 	and	w0, w0, w30, lsl #5
     e5c:	1cf20000 	ldr	s0, fffffffffffe4e5c <__end+0xffffffefe4fc>
     e60:	29190000 	stp	w0, w0, [x0, #200]
     e64:	7800000a 	sturh	w10, [x0]
     e68:	00000e03 	.inst	0x00000e03 ; undefined
     e6c:	40ffff00 	.inst	0x40ffff00 ; undefined
     e70:	01000001 	.inst	0x01000001 ; undefined
     e74:	0a4b145a 	and	w26, w2, w11, lsr #5
     e78:	1d500000 	.inst	0x1d500000 ; undefined
     e7c:	40140000 	.inst	0x40140000 ; undefined
     e80:	bf00000a 	.inst	0xbf00000a ; undefined
     e84:	1400001d 	b	ef8 <__bss_size+0xef2>
     e88:	00000a35 	.inst	0x00000a35 ; undefined
     e8c:	00001df7 	.inst	0x00001df7 ; undefined
     e90:	00014015 	.inst	0x00014015 ; undefined
     e94:	0e191600 	.inst	0x0e191600 ; undefined
     e98:	22160000 	.inst	0x22160000 ; undefined
     e9c:	1600000e 	b	fffffffff8000ed4 <__end+0xfffff7f1a574>
     ea0:	00000e2b 	.inst	0x00000e2b ; undefined
     ea4:	2f000000 	.inst	0x2f000000 ; undefined
     ea8:	000007d8 	.inst	0x000007d8 ; undefined
     eac:	000e0550 	.inst	0x000e0550 ; undefined
     eb0:	ffff0000 	.inst	0xffff0000 ; undefined
     eb4:	00000158 	.inst	0x00000158 ; undefined
     eb8:	00000000 	.inst	0x00000000 ; undefined
     ebc:	0fe19c01 	.inst	0x0fe19c01 ; undefined
     ec0:	e4140000 	.inst	0xe4140000 ; undefined
     ec4:	2d000007 	stp	s7, s0, [x0]
     ec8:	1400001e 	b	f40 <__bss_size+0xf3a>
     ecc:	000007ed 	.inst	0x000007ed ; undefined
     ed0:	00001f8a 	.inst	0x00001f8a ; undefined
     ed4:	0007f714 	.inst	0x0007f714 ; undefined
     ed8:	001ffc00 	.inst	0x001ffc00 ; undefined
     edc:	08013100 	stxrb	w1, w0, [x8]
     ee0:	20bb0000 	.inst	0x20bb0000 ; undefined
     ee4:	0b310000 	add	w0, w0, w17, uxtb
     ee8:	05000008 	orr	z8.s, z8.s, #0x1
     eec:	13000021 	sbfx	w1, w1, #0, #1
     ef0:	00000ca8 	.inst	0x00000ca8 ; undefined
     ef4:	000e05b8 	.inst	0x000e05b8 ; undefined
     ef8:	ffff0000 	.inst	0xffff0000 ; undefined
     efc:	00000200 	.inst	0x00000200 ; undefined
     f00:	0f807c01 	.inst	0x0f807c01 ; undefined
     f04:	b4140000 	cbz	x0, 28f04 <__bss_size+0x28efe>
     f08:	8900000c 	.inst	0x8900000c ; undefined
     f0c:	17000021 	b	fffffffffc000f90 <__end+0xfffffbf1a630>
     f10:	000e05c4 	.inst	0x000e05c4 ; undefined
     f14:	ffff0000 	.inst	0xffff0000 ; undefined
     f18:	00000fe1 	.inst	0x00000fe1 ; undefined
     f1c:	00000f27 	.inst	0x00000f27 ; undefined
     f20:	02500110 	.inst	0x02500110 ; undefined
     f24:	17000086 	b	fffffffffc00113c <__end+0xfffffbf1a7dc>
     f28:	000e0648 	.inst	0x000e0648 ; undefined
     f2c:	ffff0000 	.inst	0xffff0000 ; undefined
     f30:	00000fe1 	.inst	0x00000fe1 ; undefined
     f34:	00000f3e 	.inst	0x00000f3e ; undefined
     f38:	01500110 	.inst	0x01500110 ; undefined
     f3c:	5417003d 	.inst	0x5417003d ; undefined
     f40:	00000e06 	.inst	0x00000e06 ; undefined
     f44:	e1ffff00 	.inst	0xe1ffff00 ; undefined
     f48:	5500000f 	.inst	0x5500000f ; undefined
     f4c:	1000000f 	adr	x15, f4c <__bss_size+0xf46>
     f50:	3a015001 	.inst	0x3a015001 ; undefined
     f54:	06681700 	.inst	0x06681700 ; undefined
     f58:	0000000e 	.inst	0x0000000e ; undefined
     f5c:	0fe1ffff 	.inst	0x0fe1ffff ; undefined
     f60:	0f6c0000 	.inst	0x0f6c0000 ; undefined
     f64:	01100000 	.inst	0x01100000 ; undefined
     f68:	003d0150 	.inst	0x003d0150 ; NYI
     f6c:	0e06740f 	.inst	0x0e06740f ; undefined
     f70:	ff000000 	.inst	0xff000000 ; undefined
     f74:	000fe1ff 	.inst	0x000fe1ff ; undefined
     f78:	50011000 	adr	x0, 317a <__bss_size+0x3174>
     f7c:	00003a01 	.inst	0x00003a01 ; undefined
     f80:	000ca819 	.inst	0x000ca819 ; undefined
     f84:	0e05e000 	.inst	0x0e05e000 ; undefined
     f88:	ff000000 	.inst	0xff000000 ; undefined
     f8c:	000270ff 	.inst	0x000270ff ; undefined
     f90:	147d0100 	b	1f41390 <__bss_size+0x1f4138a>
     f94:	00000cb4 	.inst	0x00000cb4 ; undefined
     f98:	000021ad 	.inst	0x000021ad ; undefined
     f9c:	0e05f017 	.inst	0x0e05f017 ; undefined
     fa0:	ff000000 	.inst	0xff000000 ; undefined
     fa4:	000fe1ff 	.inst	0x000fe1ff ; undefined
     fa8:	000fb400 	.inst	0x000fb400 ; undefined
     fac:	50011000 	adr	x0, 31ae <__bss_size+0x31a8>
     fb0:	00008302 	.inst	0x00008302 ; undefined
     fb4:	0e061817 	uzp1	v23.8b, v0.8b, v6.8b
     fb8:	ff000000 	.inst	0xff000000 ; undefined
     fbc:	000fe1ff 	.inst	0x000fe1ff ; undefined
     fc0:	000fcb00 	.inst	0x000fcb00 ; undefined
     fc4:	50011000 	adr	x0, 31c6 <__bss_size+0x31c0>
     fc8:	0f003d01 	.inst	0x0f003d01 ; undefined
     fcc:	000e0620 	.inst	0x000e0620 ; undefined
     fd0:	ffff0000 	.inst	0xffff0000 ; undefined
     fd4:	00000fe1 	.inst	0x00000fe1 ; undefined
     fd8:	02500110 	.inst	0x02500110 ; undefined
     fdc:	00000083 	.inst	0x00000083 ; undefined
     fe0:	00363300 	.inst	0x00363300 ; NYI
     fe4:	00360000 	.inst	0x00360000 ; NYI
     fe8:	16050000 	b	fffffffff8140fe8 <__end+0xfffff805a688>
     fec:	00016e33 	.inst	0x00016e33 ; undefined
     ff0:	00016e00 	.inst	0x00016e00 ; undefined
     ff4:	00170500 	.inst	0x00170500 ; undefined
     ff8:	00000528 	.inst	0x00000528 ; undefined
     ffc:	02b00004 	.inst	0x02b00004 ; undefined
    1000:	01080000 	.inst	0x01080000 ; undefined
    1004:	00000064 	.inst	0x00000064 ; undefined
    1008:	0003d00c 	.inst	0x0003d00c ; undefined
    100c:	00024b00 	.inst	0x00024b00 ; undefined
    1010:	0007c000 	.inst	0x0007c000 ; undefined
	...
    101c:	00044b00 	.inst	0x00044b00 ; undefined
    1020:	06010200 	.inst	0x06010200 ; undefined
    1024:	00000117 	.inst	0x00000117 ; undefined
    1028:	04050202 	.inst	0x04050202 ; undefined
    102c:	03000002 	.inst	0x03000002 ; undefined
    1030:	6e690504 	uhadd	v4.8h, v8.8h, v9.8h
    1034:	08020074 	stxrb	w2, w20, [x3]
    1038:	00023a05 	.inst	0x00023a05 ; undefined
    103c:	08010200 	stxrb	w1, w0, [x16]
    1040:	00000115 	.inst	0x00000115 ; undefined
    1044:	3a070202 	adcs	w2, w16, w7
    1048:	04000001 	add	z1.b, p0/m, z1.b, z0.b
    104c:	00000231 	.inst	0x00000231 ; undefined
    1050:	0063340c 	.inst	0x0063340c ; undefined
    1054:	53050000 	ubfiz	w0, w0, #27, #1
    1058:	02000000 	.inst	0x02000000 ; undefined
    105c:	012d0704 	.inst	0x012d0704 ; undefined
    1060:	08020000 	stxrb	w2, w0, [x0]
    1064:	00012807 	.inst	0x00012807 ; undefined
    1068:	00420600 	.inst	0x00420600 ; undefined
    106c:	08020000 	stxrb	w2, w0, [x0]
    1070:	00000086 	.inst	0x00000086 ; undefined
    1074:	68b00309 	.inst	0x68b00309 ; undefined
    1078:	0000000e 	.inst	0x0000000e ; undefined
    107c:	0807ffff 	stlxrb	w7, wzr, [sp]
    1080:	00000045 	.inst	0x00000045 ; undefined
    1084:	00000006 	.inst	0x00000006 ; undefined
    1088:	5e090200 	sha1c	q0, s16, v9.4s
    108c:	09000000 	.inst	0x09000000 ; undefined
    1090:	0e68c803 	.inst	0x0e68c803 ; undefined
    1094:	ff000000 	.inst	0xff000000 ; undefined
    1098:	017906ff 	.inst	0x017906ff ; undefined
    109c:	0a020000 	and	w0, w0, w2
    10a0:	0000005e 	.inst	0x0000005e ; undefined
    10a4:	68c00309 	ldpsw	x9, x0, [x24], #0
    10a8:	0000000e 	.inst	0x0000000e ; undefined
    10ac:	d006ffff 	adrp	xzr, dfff000 <__bss_size+0xdffeffa>
    10b0:	02000000 	.inst	0x02000000 ; undefined
    10b4:	00005e0b 	.inst	0x00005e0b ; undefined
    10b8:	b8030900 	sttr	w0, [x8, #48]
    10bc:	00000e68 	.inst	0x00000e68 ; undefined
    10c0:	06ffff00 	.inst	0x06ffff00 ; undefined
    10c4:	000001d9 	.inst	0x000001d9 ; undefined
    10c8:	00530c02 	.inst	0x00530c02 ; undefined
    10cc:	03090000 	.inst	0x03090000 ; undefined
    10d0:	000e68c4 	.inst	0x000e68c4 ; undefined
    10d4:	ffff0000 	.inst	0xffff0000 ; undefined
    10d8:	00002306 	.inst	0x00002306 ; undefined
    10dc:	530d0200 	ubfiz	w0, w16, #19, #1
    10e0:	09000000 	.inst	0x09000000 ; undefined
    10e4:	0e68cc03 	.inst	0x0e68cc03 ; undefined
    10e8:	ff000000 	.inst	0xff000000 ; undefined
    10ec:	021506ff 	.inst	0x021506ff ; undefined
    10f0:	0e020000 	tbl	v0.8b, {v0.16b}, v2.8b
    10f4:	00000053 	.inst	0x00000053 ; undefined
    10f8:	68bc0309 	.inst	0x68bc0309 ; undefined
    10fc:	0000000e 	.inst	0x0000000e ; undefined
    1100:	1008ffff 	adr	xzr, 130fc <__bss_size+0x130f6>
    1104:	01000003 	.inst	0x01000003 ; undefined
    1108:	0e485016 	.inst	0x0e485016 ; undefined
    110c:	ff000000 	.inst	0xff000000 ; undefined
    1110:	000154ff 	.inst	0x000154ff ; undefined
    1114:	00000000 	.inst	0x00000000 ; undefined
    1118:	4f9c0100 	.inst	0x4f9c0100 ; undefined
    111c:	09000004 	.inst	0x09000004 ; undefined
    1120:	000e4864 	.inst	0x000e4864 ; undefined
    1124:	ffff0000 	.inst	0xffff0000 ; undefined
    1128:	0000044f 	.inst	0x0000044f ; undefined
    112c:	00000146 	.inst	0x00000146 ; undefined
    1130:	0950010a 	.inst	0x0950010a ; undefined
    1134:	0e49a803 	.inst	0x0e49a803 ; undefined
    1138:	ff000000 	.inst	0xff000000 ; undefined
    113c:	700900ff 	adr	xzr, 1315b <__bss_size+0x13155>
    1140:	00000e48 	.inst	0x00000e48 ; undefined
    1144:	4fffff00 	.inst	0x4fffff00 ; undefined
    1148:	65000004 	.inst	0x65000004 ; undefined
    114c:	0a000001 	and	w1, w0, w0
    1150:	03095001 	.inst	0x03095001 ; undefined
    1154:	000e49b8 	.inst	0x000e49b8 ; undefined
    1158:	ffff0000 	.inst	0xffff0000 ; undefined
    115c:	48740b00 	.inst	0x48740b00 ; undefined
    1160:	0000000e 	.inst	0x0000000e ; undefined
    1164:	045affff 	msb	z31.h, p7/m, z26.h, z31.h
    1168:	780b0000 	sturh	w0, [x0, #176]
    116c:	00000e48 	.inst	0x00000e48 ; undefined
    1170:	65ffff00 	fnmsb	z0.d, p7/m, z24.d, z31.d
    1174:	09000004 	.inst	0x09000004 ; undefined
    1178:	000e4888 	.inst	0x000e4888 ; undefined
    117c:	ffff0000 	.inst	0xffff0000 ; undefined
    1180:	00000470 	.inst	0x00000470 ; undefined
    1184:	0000019e 	.inst	0x0000019e ; undefined
    1188:	0950010a 	.inst	0x0950010a ; undefined
    118c:	0e49d803 	.inst	0x0e49d803 ; undefined
    1190:	ff000000 	.inst	0xff000000 ; undefined
    1194:	8c0b00ff 	.inst	0x8c0b00ff ; undefined
    1198:	00000e48 	.inst	0x00000e48 ; undefined
    119c:	7bffff00 	.inst	0x7bffff00 ; undefined
    11a0:	09000004 	.inst	0x09000004 ; undefined
    11a4:	000e489c 	.inst	0x000e489c ; undefined
    11a8:	ffff0000 	.inst	0xffff0000 ; undefined
    11ac:	00000470 	.inst	0x00000470 ; undefined
    11b0:	000001ca 	.inst	0x000001ca ; undefined
    11b4:	0950010a 	.inst	0x0950010a ; undefined
    11b8:	0e49f803 	.inst	0x0e49f803 ; undefined
    11bc:	ff000000 	.inst	0xff000000 ; undefined
    11c0:	a00b00ff 	.inst	0xa00b00ff ; undefined
    11c4:	00000e48 	.inst	0x00000e48 ; undefined
    11c8:	86ffff00 	.inst	0x86ffff00 ; undefined
    11cc:	09000004 	.inst	0x09000004 ; undefined
    11d0:	000e48b0 	.inst	0x000e48b0 ; undefined
    11d4:	ffff0000 	.inst	0xffff0000 ; undefined
    11d8:	00000470 	.inst	0x00000470 ; undefined
    11dc:	000001f6 	.inst	0x000001f6 ; undefined
    11e0:	0950010a 	.inst	0x0950010a ; undefined
    11e4:	0e4a1803 	uzp1	v3.4h, v0.4h, v10.4h
    11e8:	ff000000 	.inst	0xff000000 ; undefined
    11ec:	b40b00ff 	cbz	xzr, 17208 <__bss_size+0x17202>
    11f0:	00000e48 	.inst	0x00000e48 ; undefined
    11f4:	91ffff00 	.inst	0x91ffff00 ; undefined
    11f8:	09000004 	.inst	0x09000004 ; undefined
    11fc:	000e48c4 	.inst	0x000e48c4 ; undefined
    1200:	ffff0000 	.inst	0xffff0000 ; undefined
    1204:	00000470 	.inst	0x00000470 ; undefined
    1208:	00000222 	.inst	0x00000222 ; undefined
    120c:	0950010a 	.inst	0x0950010a ; undefined
    1210:	0e4a3803 	zip1	v3.4h, v0.4h, v10.4h
    1214:	ff000000 	.inst	0xff000000 ; undefined
    1218:	c80b00ff 	stxr	w11, xzr, [x7]
    121c:	00000e48 	.inst	0x00000e48 ; undefined
    1220:	9cffff00 	ldr	q0, 1200 <__bss_size+0x11fa>
    1224:	09000004 	.inst	0x09000004 ; undefined
    1228:	000e48d8 	.inst	0x000e48d8 ; undefined
    122c:	ffff0000 	.inst	0xffff0000 ; undefined
    1230:	00000470 	.inst	0x00000470 ; undefined
    1234:	0000024e 	.inst	0x0000024e ; undefined
    1238:	0950010a 	.inst	0x0950010a ; undefined
    123c:	0e4a6003 	.inst	0x0e4a6003 ; undefined
    1240:	ff000000 	.inst	0xff000000 ; undefined
    1244:	dc0b00ff 	.inst	0xdc0b00ff ; undefined
    1248:	00000e48 	.inst	0x00000e48 ; undefined
    124c:	a7ffff00 	.inst	0xa7ffff00 ; undefined
    1250:	09000004 	.inst	0x09000004 ; undefined
    1254:	000e48ec 	.inst	0x000e48ec ; undefined
    1258:	ffff0000 	.inst	0xffff0000 ; undefined
    125c:	00000470 	.inst	0x00000470 ; undefined
    1260:	0000027a 	.inst	0x0000027a ; undefined
    1264:	0950010a 	.inst	0x0950010a ; undefined
    1268:	0e4a8003 	.inst	0x0e4a8003 ; undefined
    126c:	ff000000 	.inst	0xff000000 ; undefined
    1270:	f00b00ff 	adrp	xzr, 16020000 <__bss_size+0x1601fffa>
    1274:	00000e48 	.inst	0x00000e48 ; undefined
    1278:	b2ffff00 	.inst	0xb2ffff00 ; undefined
    127c:	09000004 	.inst	0x09000004 ; undefined
    1280:	000e4900 	.inst	0x000e4900 ; undefined
    1284:	ffff0000 	.inst	0xffff0000 ; undefined
    1288:	00000470 	.inst	0x00000470 ; undefined
    128c:	000002a6 	.inst	0x000002a6 ; undefined
    1290:	0950010a 	.inst	0x0950010a ; undefined
    1294:	0e4aa003 	.inst	0x0e4aa003 ; undefined
    1298:	ff000000 	.inst	0xff000000 ; undefined
    129c:	040b00ff 	umin	z31.b, p0/m, z31.b, z7.b
    12a0:	00000e49 	.inst	0x00000e49 ; undefined
    12a4:	b2ffff00 	.inst	0xb2ffff00 ; undefined
    12a8:	09000004 	.inst	0x09000004 ; undefined
    12ac:	000e4918 	.inst	0x000e4918 ; undefined
    12b0:	ffff0000 	.inst	0xffff0000 ; undefined
    12b4:	000004bd 	.inst	0x000004bd ; undefined
    12b8:	000002d2 	.inst	0x000002d2 ; undefined
    12bc:	0950010a 	.inst	0x0950010a ; undefined
    12c0:	0e4ac803 	.inst	0x0e4ac803 ; undefined
    12c4:	ff000000 	.inst	0xff000000 ; undefined
    12c8:	240900ff 	cmphi	p15.b, p0/z, z7.b, z9.b
    12cc:	00000e49 	.inst	0x00000e49 ; undefined
    12d0:	4fffff00 	.inst	0x4fffff00 ; undefined
    12d4:	f1000004 	subs	x4, x0, #0x0
    12d8:	0a000002 	and	w2, w0, w0
    12dc:	03095001 	.inst	0x03095001 ; undefined
    12e0:	000e4ae0 	.inst	0x000e4ae0 ; undefined
    12e4:	ffff0000 	.inst	0xffff0000 ; undefined
    12e8:	49280b00 	.inst	0x49280b00 ; undefined
    12ec:	0000000e 	.inst	0x0000000e ; undefined
    12f0:	04c8ffff 	msb	z31.d, p7/m, z8.d, z31.d
    12f4:	34090000 	cbz	w0, 132f4 <__bss_size+0x132ee>
    12f8:	00000e49 	.inst	0x00000e49 ; undefined
    12fc:	4fffff00 	.inst	0x4fffff00 ; undefined
    1300:	1d000004 	.inst	0x1d000004 ; undefined
    1304:	0a000003 	and	w3, w0, w0
    1308:	03095001 	.inst	0x03095001 ; undefined
    130c:	000e4b08 	.inst	0x000e4b08 ; undefined
    1310:	ffff0000 	.inst	0xffff0000 ; undefined
    1314:	49380b00 	.inst	0x49380b00 ; undefined
    1318:	0000000e 	.inst	0x0000000e ; undefined
    131c:	04d3ffff 	msb	z31.d, p7/m, z19.d, z31.d
    1320:	44090000 	.inst	0x44090000 ; undefined
    1324:	00000e49 	.inst	0x00000e49 ; undefined
    1328:	4fffff00 	.inst	0x4fffff00 ; undefined
    132c:	49000004 	.inst	0x49000004 ; undefined
    1330:	0a000003 	and	w3, w0, w0
    1334:	03095001 	.inst	0x03095001 ; undefined
    1338:	000e4b20 	.inst	0x000e4b20 ; undefined
    133c:	ffff0000 	.inst	0xffff0000 ; undefined
    1340:	49480b00 	.inst	0x49480b00 ; undefined
    1344:	0000000e 	.inst	0x0000000e ; undefined
    1348:	04deffff 	msb	z31.d, p7/m, z30.d, z31.d
    134c:	54090000 	b.eq	1334c <__bss_size+0x13346>  // b.none
    1350:	00000e49 	.inst	0x00000e49 ; undefined
    1354:	4fffff00 	.inst	0x4fffff00 ; undefined
    1358:	75000004 	.inst	0x75000004 ; undefined
    135c:	0a000003 	and	w3, w0, w0
    1360:	03095001 	.inst	0x03095001 ; undefined
    1364:	000e4b40 	.inst	0x000e4b40 ; undefined
    1368:	ffff0000 	.inst	0xffff0000 ; undefined
    136c:	49580b00 	.inst	0x49580b00 ; undefined
    1370:	0000000e 	.inst	0x0000000e ; undefined
    1374:	04e9ffff 	uqdecd	wzr, all, mul #10
    1378:	64090000 	.inst	0x64090000 ; undefined
    137c:	00000e49 	.inst	0x00000e49 ; undefined
    1380:	4fffff00 	.inst	0x4fffff00 ; undefined
    1384:	a1000004 	.inst	0xa1000004 ; undefined
    1388:	0a000003 	and	w3, w0, w0
    138c:	03095001 	.inst	0x03095001 ; undefined
    1390:	000e4b60 	.inst	0x000e4b60 ; undefined
    1394:	ffff0000 	.inst	0xffff0000 ; undefined
    1398:	49680b00 	.inst	0x49680b00 ; undefined
    139c:	0000000e 	.inst	0x0000000e ; undefined
    13a0:	04f4ffff 	uqdecd	xzr, all, mul #5
    13a4:	74090000 	.inst	0x74090000 ; undefined
    13a8:	00000e49 	.inst	0x00000e49 ; undefined
    13ac:	4fffff00 	.inst	0x4fffff00 ; undefined
    13b0:	cd000004 	.inst	0xcd000004 ; undefined
    13b4:	0a000003 	and	w3, w0, w0
    13b8:	03095001 	.inst	0x03095001 ; undefined
    13bc:	000e4b88 	.inst	0x000e4b88 ; undefined
    13c0:	ffff0000 	.inst	0xffff0000 ; undefined
    13c4:	49780b00 	.inst	0x49780b00 ; undefined
    13c8:	0000000e 	.inst	0x0000000e ; undefined
    13cc:	04ffffff 	uqdecd	xzr, all, mul #16
    13d0:	84090000 	ld1sb	{z0.s}, p0/z, [x0, z9.s, uxtw]
    13d4:	00000e49 	.inst	0x00000e49 ; undefined
    13d8:	4fffff00 	.inst	0x4fffff00 ; undefined
    13dc:	f9000004 	str	x4, [x0]
    13e0:	0a000003 	and	w3, w0, w0
    13e4:	03095001 	.inst	0x03095001 ; undefined
    13e8:	000e4bb0 	.inst	0x000e4bb0 ; undefined
    13ec:	ffff0000 	.inst	0xffff0000 ; undefined
    13f0:	49900900 	.inst	0x49900900 ; undefined
    13f4:	0000000e 	.inst	0x0000000e ; undefined
    13f8:	050affff 	.inst	0x050affff ; undefined
    13fc:	04190000 	eor	z0.b, p0/m, z0.b, z0.b
    1400:	010a0000 	.inst	0x010a0000 ; undefined
    1404:	000a0350 	.inst	0x000a0350 ; undefined
    1408:	51010a04 	sub	w4, w16, #0x42
    140c:	03000a03 	.inst	0x03000a03 ; undefined
    1410:	49940b00 	.inst	0x49940b00 ; undefined
    1414:	0000000e 	.inst	0x0000000e ; undefined
    1418:	0515ffff 	.inst	0x0515ffff ; undefined
    141c:	980b0000 	ldrsw	x0, 1741c <__bss_size+0x17416>
    1420:	00000e49 	.inst	0x00000e49 ; undefined
    1424:	20ffff00 	.inst	0x20ffff00 ; undefined
    1428:	0c000005 	st4	{v5.8b-v8.8b}, [x0]
    142c:	000e49a4 	.inst	0x000e49a4 ; undefined
    1430:	ffff0000 	.inst	0xffff0000 ; undefined
    1434:	000004bd 	.inst	0x000004bd ; undefined
    1438:	0950010a 	.inst	0x0950010a ; undefined
    143c:	0e4bd803 	.inst	0x0e4bd803 ; undefined
    1440:	ff000000 	.inst	0xff000000 ; undefined
    1444:	0d0000ff 	st1	{v31.b}[0], [x7]
    1448:	000000f4 	.inst	0x000000f4 ; undefined
    144c:	000000f4 	.inst	0x000000f4 ; undefined
    1450:	830d1203 	.inst	0x830d1203 ; undefined
    1454:	83000002 	.inst	0x83000002 ; undefined
    1458:	01000002 	.inst	0x01000002 ; undefined
    145c:	02e10d14 	.inst	0x02e10d14 ; undefined
    1460:	02e10000 	.inst	0x02e10000 ; undefined
    1464:	12040000 	and	w0, w0, #0x10000000
    1468:	0001f00d 	.inst	0x0001f00d ; undefined
    146c:	0001f000 	.inst	0x0001f000 ; undefined
    1470:	0d110300 	.inst	0x0d110300 ; undefined
    1474:	00000337 	.inst	0x00000337 ; undefined
    1478:	00000337 	.inst	0x00000337 ; undefined
    147c:	080d1304 	stxrb	w13, w4, [x24]
    1480:	08000004 	stxrb	w0, w4, [x0]
    1484:	04000004 	add	z4.b, p0/m, z4.b, z0.b
    1488:	034f0d14 	.inst	0x034f0d14 ; undefined
    148c:	034f0000 	.inst	0x034f0000 ; undefined
    1490:	16040000 	b	fffffffff8101490 <__end+0xfffff801ab30>
    1494:	0002c50d 	.inst	0x0002c50d ; undefined
    1498:	0002c500 	.inst	0x0002c500 ; undefined
    149c:	0d100400 	.inst	0x0d100400 ; undefined
    14a0:	00000367 	.inst	0x00000367 ; undefined
    14a4:	00000367 	.inst	0x00000367 ; undefined
    14a8:	270d1104 	.inst	0x270d1104 ; undefined
    14ac:	27000003 	.inst	0x27000003 ; undefined
    14b0:	01000003 	.inst	0x01000003 ; undefined
    14b4:	05330d0e 	ext	z14.b, z14.b, z8.b, #155
    14b8:	05330000 	ext	z0.b, z0.b, z0.b, #152
    14bc:	04050000 	.inst	0x04050000 ; undefined
    14c0:	0003a40d 	.inst	0x0003a40d ; undefined
    14c4:	0003a400 	.inst	0x0003a400 ; undefined
    14c8:	0d040600 	.inst	0x0d040600 ; undefined
    14cc:	000002a7 	.inst	0x000002a7 ; undefined
    14d0:	000002a7 	.inst	0x000002a7 ; undefined
    14d4:	ff0d1101 	.inst	0xff0d1101 ; undefined
    14d8:	ff000002 	.inst	0xff000002 ; undefined
    14dc:	07000002 	.inst	0x07000002 ; undefined
    14e0:	03b80d0f 	.inst	0x03b80d0f ; undefined
    14e4:	03b80000 	.inst	0x03b80000 ; undefined
    14e8:	13080000 	sbfiz	w0, w0, #24, #1
    14ec:	0003820d 	.inst	0x0003820d ; undefined
    14f0:	00038200 	.inst	0x00038200 ; undefined
    14f4:	0d140800 	.inst	0x0d140800 ; undefined
    14f8:	00000294 	.inst	0x00000294 ; undefined
    14fc:	00000294 	.inst	0x00000294 ; undefined
    1500:	150d1609 	b	4346d24 <__bss_size+0x4346d1e>
    1504:	15000003 	b	4001510 <__bss_size+0x400150a>
    1508:	02000003 	.inst	0x02000003 ; undefined
    150c:	02b20d11 	.inst	0x02b20d11 ; undefined
    1510:	02b20000 	.inst	0x02b20000 ; undefined
    1514:	060a0000 	.inst	0x060a0000 ; undefined
    1518:	00029e0d 	.inst	0x00029e0d ; undefined
    151c:	00029e00 	.inst	0x00029e00 ; undefined
    1520:	00090b00 	.inst	0x00090b00 ; undefined
    1524:	00000766 	.inst	0x00000766 ; undefined
    1528:	03600004 	.inst	0x03600004 ; undefined
    152c:	01080000 	.inst	0x01080000 ; undefined
    1530:	00000064 	.inst	0x00000064 ; undefined
    1534:	0004630c 	.inst	0x0004630c ; undefined
    1538:	00024b00 	.inst	0x00024b00 ; undefined
    153c:	0e0eb000 	.inst	0x0e0eb000 ; undefined
    1540:	ff000000 	.inst	0xff000000 ; undefined
    1544:	000330ff 	.inst	0x000330ff ; undefined
    1548:	00000000 	.inst	0x00000000 ; undefined
    154c:	00061e00 	.inst	0x00061e00 ; undefined
    1550:	06010200 	.inst	0x06010200 ; undefined
    1554:	00000117 	.inst	0x00000117 ; undefined
    1558:	04050202 	.inst	0x04050202 ; undefined
    155c:	03000002 	.inst	0x03000002 ; undefined
    1560:	6e690504 	uhadd	v4.8h, v8.8h, v9.8h
    1564:	08020074 	stxrb	w2, w20, [x3]
    1568:	00023a05 	.inst	0x00023a05 ; undefined
    156c:	04b50400 	sub	z0.s, z0.s, z21.s
    1570:	2e020000 	ext	v0.8b, v0.8b, v2.8b, #0
    1574:	00000054 	.inst	0x00000054 ; undefined
    1578:	15080102 	b	4201980 <__bss_size+0x420197a>
    157c:	02000001 	.inst	0x02000001 ; undefined
    1580:	013a0702 	.inst	0x013a0702 ; undefined
    1584:	31040000 	adds	w0, w0, #0x100
    1588:	02000002 	.inst	0x02000002 ; undefined
    158c:	00007234 	.inst	0x00007234 ; undefined
    1590:	00620500 	.inst	0x00620500 ; undefined
    1594:	04020000 	.inst	0x04020000 ; undefined
    1598:	00012d07 	.inst	0x00012d07 ; undefined
    159c:	00eb0400 	.inst	0x00eb0400 ; undefined
    15a0:	37020000 	tbnz	w0, #0, 55a0 <__bss_size+0x559a>
    15a4:	00000084 	.inst	0x00000084 ; undefined
    15a8:	28070802 	stnp	w2, w2, [x0, #56]
    15ac:	06000001 	.inst	0x06000001 ; undefined
    15b0:	00000042 	.inst	0x00000042 ; undefined
    15b4:	00a00803 	.inst	0x00a00803 ; undefined
    15b8:	03090000 	.inst	0x03090000 ; undefined
    15bc:	000e68b0 	.inst	0x000e68b0 ; undefined
    15c0:	ffff0000 	.inst	0xffff0000 ; undefined
    15c4:	00540807 	.inst	0x00540807 ; undefined
    15c8:	00060000 	.inst	0x00060000 ; undefined
    15cc:	03000000 	.inst	0x03000000 ; undefined
    15d0:	00006d09 	.inst	0x00006d09 ; undefined
    15d4:	c8030900 	stxr	w3, x0, [x8]
    15d8:	00000e68 	.inst	0x00000e68 ; undefined
    15dc:	06ffff00 	.inst	0x06ffff00 ; undefined
    15e0:	00000179 	.inst	0x00000179 ; undefined
    15e4:	006d0a03 	.inst	0x006d0a03 ; undefined
    15e8:	03090000 	.inst	0x03090000 ; undefined
    15ec:	000e68c0 	.inst	0x000e68c0 ; undefined
    15f0:	ffff0000 	.inst	0xffff0000 ; undefined
    15f4:	0000d006 	.inst	0x0000d006 ; undefined
    15f8:	6d0b0300 	stp	d0, d0, [x24, #176]
    15fc:	09000000 	.inst	0x09000000 ; undefined
    1600:	0e68b803 	.inst	0x0e68b803 ; undefined
    1604:	ff000000 	.inst	0xff000000 ; undefined
    1608:	01d906ff 	.inst	0x01d906ff ; undefined
    160c:	0c030000 	.inst	0x0c030000 ; undefined
    1610:	00000062 	.inst	0x00000062 ; undefined
    1614:	68c40309 	ldpsw	x9, x0, [x24], #32
    1618:	0000000e 	.inst	0x0000000e ; undefined
    161c:	2306ffff 	.inst	0x2306ffff ; undefined
    1620:	03000000 	.inst	0x03000000 ; undefined
    1624:	0000620d 	.inst	0x0000620d ; undefined
    1628:	cc030900 	.inst	0xcc030900 ; undefined
    162c:	00000e68 	.inst	0x00000e68 ; undefined
    1630:	06ffff00 	.inst	0x06ffff00 ; undefined
    1634:	00000215 	.inst	0x00000215 ; undefined
    1638:	00620e03 	.inst	0x00620e03 ; undefined
    163c:	03090000 	.inst	0x03090000 ; undefined
    1640:	000e68bc 	.inst	0x000e68bc ; undefined
    1644:	ffff0000 	.inst	0xffff0000 ; undefined
    1648:	00051308 	.inst	0x00051308 ; undefined
    164c:	90530100 	adrp	x0, a6021000 <__bss_size+0xa6020ffa>
    1650:	00000e10 	.inst	0x00000e10 ; undefined
    1654:	50ffff00 	adr	x0, 1636 <__bss_size+0x1630>
    1658:	00000001 	.inst	0x00000001 ; undefined
    165c:	01000000 	.inst	0x01000000 ; undefined
    1660:	0003a89c 	.inst	0x0003a89c ; undefined
    1664:	08d00900 	ldlarb	w0, [x8]
    1668:	03600000 	.inst	0x03600000 ; undefined
    166c:	730a0000 	.inst	0x730a0000 ; undefined
    1670:	01000001 	.inst	0x01000001 ; undefined
    1674:	0003a85c 	.inst	0x0003a85c ; undefined
    1678:	0021e300 	.inst	0x0021e300 ; NYI
    167c:	03af0b00 	.inst	0x03af0b00 ; undefined
    1680:	10ac0000 	adr	x0, fffffffffff59680 <__end+0xffffffe72d20>
    1684:	0000000e 	.inst	0x0000000e ; undefined
    1688:	0910ffff 	.inst	0x0910ffff ; undefined
    168c:	61010000 	.inst	0x61010000 ; undefined
    1690:	000002cb 	.inst	0x000002cb ; undefined
    1694:	0003bb0c 	.inst	0x0003bb0c ; undefined
    1698:	00223f00 	.inst	0x00223f00 ; NYI
    169c:	03af0d00 	.inst	0x03af0d00 ; undefined
    16a0:	09600000 	.inst	0x09600000 ; undefined
    16a4:	01d70000 	.inst	0x01d70000 ; undefined
    16a8:	bb0c0000 	.inst	0xbb0c0000 ; undefined
    16ac:	88000003 	stxr	w0, w3, [x0]
    16b0:	0e000022 	tbl	v2.8b, {v1.16b}, v0.8b
    16b4:	00000462 	.inst	0x00000462 ; undefined
    16b8:	000e10ac 	.inst	0x000e10ac ; undefined
    16bc:	ffff0000 	.inst	0xffff0000 ; undefined
    16c0:	00000960 	.inst	0x00000960 ; undefined
    16c4:	880f3a01 	stxr	w15, w1, [x16]
    16c8:	00000e11 	.inst	0x00000e11 ; undefined
    16cc:	11ffff00 	.inst	0x11ffff00 ; undefined
    16d0:	ba000007 	adcs	x7, x0, x0
    16d4:	10000001 	adr	x1, 16d4 <__bss_size+0x16ce>
    16d8:	84025001 	ld1b	{z1.s}, p4/z, [x0, z2.s, uxtw]
    16dc:	98110000 	ldrsw	x0, 236dc <__bss_size+0x236d6>
    16e0:	00000e11 	.inst	0x00000e11 ; undefined
    16e4:	11ffff00 	.inst	0x11ffff00 ; undefined
    16e8:	10000007 	adr	x7, 16e8 <__bss_size+0x16e2>
    16ec:	03095001 	.inst	0x03095001 ; undefined
    16f0:	000e4c20 	.inst	0x000e4c20 ; undefined
    16f4:	ffff0000 	.inst	0xffff0000 ; undefined
    16f8:	0b000000 	add	w0, w0, w0
    16fc:	000003fa 	.inst	0x000003fa ; undefined
    1700:	000e10c8 	.inst	0x000e10c8 ; undefined
    1704:	ffff0000 	.inst	0xffff0000 ; undefined
    1708:	00000990 	.inst	0x00000990 ; undefined
    170c:	024a4a01 	.inst	0x024a4a01 ; undefined
    1710:	db0d0000 	.inst	0xdb0d0000 ; undefined
    1714:	d0000004 	adrp	x4, 3000 <__bss_size+0x2ffa>
    1718:	35000009 	cbnz	w9, 1718 <__bss_size+0x1712>
    171c:	12000002 	and	w2, w0, #0x1
    1720:	000004e4 	.inst	0x000004e4 ; undefined
    1724:	0e116813 	trn2	v19.8b, v0.8b, v17.8b
    1728:	ff000000 	.inst	0xff000000 ; undefined
    172c:	00071cff 	.inst	0x00071cff ; undefined
    1730:	11bc1300 	.inst	0x11bc1300 ; undefined
    1734:	0000000e 	.inst	0x0000000e ; undefined
    1738:	0727ffff 	.inst	0x0727ffff ; undefined
    173c:	c0130000 	.inst	0xc0130000 ; undefined
    1740:	00000e11 	.inst	0x00000e11 ; undefined
    1744:	32ffff00 	.inst	0x32ffff00 ; undefined
    1748:	13000007 	sbfx	w7, w0, #0, #1
    174c:	000e11d0 	.inst	0x000e11d0 ; undefined
    1750:	ffff0000 	.inst	0xffff0000 ; undefined
    1754:	0000071c 	.inst	0x0000071c ; undefined
    1758:	11b01100 	.inst	0x11b01100 ; undefined
    175c:	0000000e 	.inst	0x0000000e ; undefined
    1760:	0711ffff 	.inst	0x0711ffff ; undefined
    1764:	01100000 	.inst	0x01100000 ; undefined
    1768:	00850250 	.inst	0x00850250 ; undefined
    176c:	e4140000 	.inst	0xe4140000 ; undefined
    1770:	50000003 	adr	x3, 1772 <__bss_size+0x176c>
    1774:	00000e11 	.inst	0x00000e11 ; undefined
    1778:	14ffff00 	b	4001378 <__bss_size+0x4001372>
    177c:	00000000 	.inst	0x00000000 ; undefined
    1780:	01000000 	.inst	0x01000000 ; undefined
    1784:	00028a42 	.inst	0x00028a42 ; undefined
    1788:	11501500 	add	w0, w8, #0x405, lsl #12
    178c:	0000000e 	.inst	0x0000000e ; undefined
    1790:	0014ffff 	.inst	0x0014ffff ; undefined
    1794:	00000000 	.inst	0x00000000 ; undefined
    1798:	4c120000 	.inst	0x4c120000 ; undefined
    179c:	13000005 	sbfx	w5, w0, #0, #1
    17a0:	000e115c 	.inst	0x000e115c ; undefined
    17a4:	ffff0000 	.inst	0xffff0000 ; undefined
    17a8:	00000727 	.inst	0x00000727 ; undefined
    17ac:	2c0f0000 	stnp	s0, s0, [x0, #120]
    17b0:	00000e11 	.inst	0x00000e11 ; undefined
    17b4:	11ffff00 	.inst	0x11ffff00 ; undefined
    17b8:	a2000007 	.inst	0xa2000007 ; undefined
    17bc:	10000002 	adr	x2, 17bc <__bss_size+0x17b6>
    17c0:	86025001 	.inst	0x86025001 ; undefined
    17c4:	a40f0000 	ld1rqb	{z0.b}, p0/z, [x0, x15]
    17c8:	00000e11 	.inst	0x00000e11 ; undefined
    17cc:	3dffff00 	ldr	q0, [x24, #65520]
    17d0:	bd000007 	str	s7, [x0]
    17d4:	10000002 	adr	x2, 17d4 <__bss_size+0x17ce>
    17d8:	0c055001 	.inst	0x0c055001 ; undefined
    17dc:	00ffffff 	.inst	0x00ffffff ; undefined
    17e0:	11d81300 	.inst	0x11d81300 ; undefined
    17e4:	0000000e 	.inst	0x0000000e ; undefined
    17e8:	0748ffff 	.inst	0x0748ffff ; undefined
    17ec:	0f000000 	.inst	0x0f000000 ; undefined
    17f0:	000e10f0 	.inst	0x000e10f0 ; undefined
    17f4:	ffff0000 	.inst	0xffff0000 ; undefined
    17f8:	00000753 	.inst	0x00000753 ; undefined
    17fc:	000002e3 	.inst	0x000002e3 ; undefined
    1800:	02500110 	.inst	0x02500110 ; undefined
    1804:	13000087 	sbfx	w7, w4, #0, #1
    1808:	000e10f4 	.inst	0x000e10f4 ; undefined
    180c:	ffff0000 	.inst	0xffff0000 ; undefined
    1810:	00000732 	.inst	0x00000732 ; undefined
    1814:	0e10fc0f 	.inst	0x0e10fc0f ; undefined
    1818:	ff000000 	.inst	0xff000000 ; undefined
    181c:	000727ff 	.inst	0x000727ff ; undefined
    1820:	00030800 	.inst	0x00030800 ; undefined
    1824:	50011000 	adr	x0, 3a26 <__bss_size+0x3a20>
    1828:	00008302 	.inst	0x00008302 ; undefined
    182c:	0e110013 	tbl	v19.8b, {v0.16b}, v17.8b
    1830:	ff000000 	.inst	0xff000000 ; undefined
    1834:	00071cff 	.inst	0x00071cff ; undefined
    1838:	11340f00 	add	w0, w24, #0xd03
    183c:	0000000e 	.inst	0x0000000e ; undefined
    1840:	0753ffff 	.inst	0x0753ffff ; undefined
    1844:	032d0000 	.inst	0x032d0000 ; undefined
    1848:	01100000 	.inst	0x01100000 ; undefined
    184c:	00870250 	.inst	0x00870250 ; undefined
    1850:	11381300 	add	w0, w24, #0xe04
    1854:	0000000e 	.inst	0x0000000e ; undefined
    1858:	0732ffff 	.inst	0x0732ffff ; undefined
    185c:	400f0000 	.inst	0x400f0000 ; undefined
    1860:	00000e11 	.inst	0x00000e11 ; undefined
    1864:	27ffff00 	.inst	0x27ffff00 ; undefined
    1868:	52000007 	eor	w7, w0, #0x1
    186c:	10000003 	adr	x3, 186c <__bss_size+0x1866>
    1870:	83025001 	.inst	0x83025001 ; undefined
    1874:	44130000 	.inst	0x44130000 ; undefined
    1878:	00000e11 	.inst	0x00000e11 ; undefined
    187c:	1cffff00 	ldr	s0, 185c <__bss_size+0x1856>
    1880:	00000007 	.inst	0x00000007 ; undefined
    1884:	0e10d40f 	.inst	0x0e10d40f ; undefined
    1888:	ff000000 	.inst	0xff000000 ; undefined
    188c:	000711ff 	.inst	0x000711ff ; undefined
    1890:	00037f00 	.inst	0x00037f00 ; undefined
    1894:	50011000 	adr	x0, 3a96 <__bss_size+0x3a90>
    1898:	4c600309 	.inst	0x4c600309 ; undefined
    189c:	0000000e 	.inst	0x0000000e ; undefined
    18a0:	1300ffff 	.inst	0x1300ffff ; undefined
    18a4:	000e10d8 	.inst	0x000e10d8 ; undefined
    18a8:	ffff0000 	.inst	0xffff0000 ; undefined
    18ac:	0000071c 	.inst	0x0000071c ; undefined
    18b0:	0e10e411 	.inst	0x0e10e411 ; undefined
    18b4:	ff000000 	.inst	0xff000000 ; undefined
    18b8:	000711ff 	.inst	0x000711ff ; undefined
    18bc:	50011000 	adr	x0, 3abe <__bss_size+0x3ab8>
    18c0:	4c780309 	.inst	0x4c780309 ; undefined
    18c4:	0000000e 	.inst	0x0000000e ; undefined
    18c8:	0000ffff 	.inst	0x0000ffff ; undefined
    18cc:	1e080102 	.inst	0x1e080102 ; undefined
    18d0:	16000001 	b	fffffffff80018d4 <__end+0xfffff7f1af74>
    18d4:	00000502 	.inst	0x00000502 ; undefined
    18d8:	c5013301 	ldff1sw	{z1.d}, p4/z, [x24, z1.d, uxtw]
    18dc:	17000003 	b	fffffffffc0018e8 <__end+0xfffffbf1af88>
    18e0:	33010063 	bfi	w3, w3, #31, #1
    18e4:	000003a8 	.inst	0x000003a8 ; undefined
    18e8:	04ef1600 	uqadd	z0.d, z16.d, z15.d
    18ec:	2f010000 	.inst	0x2f010000 ; undefined
    18f0:	0003e401 	.inst	0x0003e401 ; undefined
    18f4:	00781700 	.inst	0x00781700 ; undefined
    18f8:	00792f01 	.inst	0x00792f01 ; undefined
    18fc:	79170000 	strh	w0, [x0, #2944]
    1900:	792f0100 	strh	w0, [x8, #6016]
    1904:	00000000 	.inst	0x00000000 ; undefined
    1908:	0004bd18 	.inst	0x0004bd18 ; undefined
    190c:	01260100 	.inst	0x01260100 ; undefined
    1910:	000003fa 	.inst	0x000003fa ; undefined
    1914:	01006319 	.inst	0x01006319 ; undefined
    1918:	0003a827 	.inst	0x0003a827 ; undefined
    191c:	23180000 	.inst	0x23180000 ; undefined
    1920:	01000004 	.inst	0x01000004 ; undefined
    1924:	04140115 	.inst	0x04140115 ; undefined
    1928:	1b1a0000 	madd	w0, w0, w26, w0
    192c:	00000173 	.inst	0x00000173 ; undefined
    1930:	03a81801 	.inst	0x03a81801 ; undefined
    1934:	00000000 	.inst	0x00000000 ; undefined
    1938:	0004a51c 	.inst	0x0004a51c ; undefined
    193c:	e00d0100 	.inst	0xe00d0100 ; undefined
    1940:	00000e0e 	.inst	0x00000e0e ; undefined
    1944:	3cffff00 	.inst	0x3cffff00 ; undefined
    1948:	00000000 	.inst	0x00000000 ; undefined
    194c:	01000000 	.inst	0x01000000 ; undefined
    1950:	0004629c 	.inst	0x0004629c ; undefined
    1954:	049b0a00 	bic	z0.s, p2/m, z0.s, z16.s
    1958:	0e010000 	tbl	v0.8b, {v0.16b}, v1.8b
    195c:	00000049 	.inst	0x00000049 ; undefined
    1960:	000022ad 	.inst	0x000022ad ; undefined
    1964:	0e0f0013 	tbl	v19.8b, {v0.16b}, v15.8b
    1968:	ff000000 	.inst	0xff000000 ; undefined
    196c:	00071cff 	.inst	0x00071cff ; undefined
    1970:	0f0c1100 	fmla	v0.4h, v8.4h, v12.h[0]
    1974:	0000000e 	.inst	0x0000000e ; undefined
    1978:	075effff 	.inst	0x075effff ; undefined
    197c:	01100000 	.inst	0x01100000 ; undefined
    1980:	00830250 	.inst	0x00830250 ; undefined
    1984:	331d0000 	bfi	w0, w0, #3, #1
    1988:	01000004 	.inst	0x01000004 ; undefined
    198c:	621e0107 	.inst	0x621e0107 ; undefined
    1990:	b0000004 	adrp	x4, 2000 <__bss_size+0x1ffa>
    1994:	00000e0e 	.inst	0x00000e0e ; undefined
    1998:	2cffff00 	ldp	s0, s31, [x24], #-4
    199c:	00000000 	.inst	0x00000000 ; undefined
    19a0:	01000000 	.inst	0x01000000 ; undefined
    19a4:	0004c09c 	.inst	0x0004c09c ; undefined
    19a8:	0ec40f00 	fmls	v0.4h, v24.4h, v4.4h
    19ac:	0000000e 	.inst	0x0000000e ; undefined
    19b0:	0711ffff 	.inst	0x0711ffff ; undefined
    19b4:	04a40000 	add	z0.s, z0.s, z4.s
    19b8:	01100000 	.inst	0x01100000 ; undefined
    19bc:	f8030950 	sttr	x16, [x10, #48]
    19c0:	00000e4b 	.inst	0x00000e4b ; undefined
    19c4:	00ffff00 	.inst	0x00ffff00 ; undefined
    19c8:	0e0edc1f 	.inst	0x0e0edc1f ; undefined
    19cc:	ff000000 	.inst	0xff000000 ; undefined
    19d0:	000711ff 	.inst	0x000711ff ; undefined
    19d4:	50011000 	adr	x0, 3bd6 <__bss_size+0x3bd0>
    19d8:	4c200309 	.inst	0x4c200309 ; undefined
    19dc:	0000000e 	.inst	0x0000000e ; undefined
    19e0:	0000ffff 	.inst	0x0000ffff ; undefined
    19e4:	0003fa1e 	.inst	0x0003fa1e ; undefined
    19e8:	0e0f2000 	tbl	v0.8b, {v0.16b, v1.16b}, v15.8b
    19ec:	ff000000 	.inst	0xff000000 ; undefined
    19f0:	000034ff 	.inst	0x000034ff ; undefined
    19f4:	00000000 	.inst	0x00000000 ; undefined
    19f8:	319c0100 	.inst	0x319c0100 ; undefined
    19fc:	09000005 	.inst	0x09000005 ; undefined
    1a00:	000007e0 	.inst	0x000007e0 ; undefined
    1a04:	00000515 	.inst	0x00000515 ; undefined
    1a08:	00040720 	.inst	0x00040720 ; undefined
    1a0c:	0022f700 	.inst	0x0022f700 ; NYI
    1a10:	0f3c1300 	fmla	v0.4h, v24.4h, v12.h[3]
    1a14:	0000000e 	.inst	0x0000000e ; undefined
    1a18:	0727ffff 	.inst	0x0727ffff ; undefined
    1a1c:	40130000 	.inst	0x40130000 ; undefined
    1a20:	00000e0f 	.inst	0x00000e0f ; undefined
    1a24:	32ffff00 	.inst	0x32ffff00 ; undefined
    1a28:	21000007 	.inst	0x21000007 ; undefined
    1a2c:	000e0f54 	.inst	0x000e0f54 ; undefined
    1a30:	ffff0000 	.inst	0xffff0000 ; undefined
    1a34:	0000071c 	.inst	0x0000071c ; undefined
    1a38:	0f341100 	fmla	v0.4h, v8.4h, v4.h[3]
    1a3c:	0000000e 	.inst	0x0000000e ; undefined
    1a40:	0711ffff 	.inst	0x0711ffff ; undefined
    1a44:	01100000 	.inst	0x01100000 ; undefined
    1a48:	38030950 	sttrb	w16, [x10, #48]
    1a4c:	00000e4c 	.inst	0x00000e4c ; undefined
    1a50:	00ffff00 	.inst	0x00ffff00 ; undefined
    1a54:	03e41e00 	.inst	0x03e41e00 ; undefined
    1a58:	0f600000 	.inst	0x0f600000 ; undefined
    1a5c:	0000000e 	.inst	0x0000000e ; undefined
    1a60:	0030ffff 	.inst	0x0030ffff ; NYI
    1a64:	00000000 	.inst	0x00000000 ; undefined
    1a68:	9c010000 	ldr	q0, 3a68 <__bss_size+0x3a62>
    1a6c:	00000570 	.inst	0x00000570 ; undefined
    1a70:	0003f020 	.inst	0x0003f020 ; undefined
    1a74:	00232d00 	.inst	0x00232d00 ; NYI
    1a78:	0f7c1300 	.inst	0x0f7c1300 ; undefined
    1a7c:	0000000e 	.inst	0x0000000e ; undefined
    1a80:	0727ffff 	.inst	0x0727ffff ; undefined
    1a84:	90210000 	adrp	x0, 42001000 <__bss_size+0x42000ffa>
    1a88:	00000e0f 	.inst	0x00000e0f ; undefined
    1a8c:	1cffff00 	ldr	s0, 1a6c <__bss_size+0x1a66>
    1a90:	00000007 	.inst	0x00000007 ; undefined
    1a94:	0003c51e 	.inst	0x0003c51e ; undefined
    1a98:	0e0f9000 	.inst	0x0e0f9000 ; undefined
    1a9c:	ff000000 	.inst	0xff000000 ; undefined
    1aa0:	000004ff 	.inst	0x000004ff ; undefined
    1aa4:	00000000 	.inst	0x00000000 ; undefined
    1aa8:	9a9c0100 	csel	x0, x8, x28, eq  // eq = none
    1aac:	22000005 	.inst	0x22000005 ; undefined
    1ab0:	000003d1 	.inst	0x000003d1 ; undefined
    1ab4:	da225001 	.inst	0xda225001 ; undefined
    1ab8:	01000003 	.inst	0x01000003 ; undefined
    1abc:	af1e0051 	.inst	0xaf1e0051 ; undefined
    1ac0:	a0000003 	.inst	0xa0000003 ; undefined
    1ac4:	00000e0f 	.inst	0x00000e0f ; undefined
    1ac8:	e4ffff00 	st4h	{z0.h-z3.h}, p7, [x24, #-4, mul vl]
    1acc:	00000000 	.inst	0x00000000 ; undefined
    1ad0:	01000000 	.inst	0x01000000 ; undefined
    1ad4:	0007119c 	.inst	0x0007119c ; undefined
    1ad8:	03bb0c00 	.inst	0x03bb0c00 ; undefined
    1adc:	23770000 	.inst	0x23770000 ; undefined
    1ae0:	af0d0000 	.inst	0xaf0d0000 ; undefined
    1ae4:	10000003 	adr	x3, 1ae4 <__bss_size+0x1ade>
    1ae8:	23000008 	.inst	0x23000008 ; undefined
    1aec:	0c000006 	st4	{v6.8b-v9.8b}, [x0]
    1af0:	000003bb 	.inst	0x000003bb ; undefined
    1af4:	000023b0 	.inst	0x000023b0 ; undefined
    1af8:	0004620e 	.inst	0x0004620e ; undefined
    1afc:	0e0ff000 	.inst	0x0e0ff000 ; undefined
    1b00:	ff000000 	.inst	0xff000000 ; undefined
    1b04:	000810ff 	.inst	0x000810ff ; undefined
    1b08:	0f3a0100 	.inst	0x0f3a0100 ; undefined
    1b0c:	000e0ffc 	.inst	0x000e0ffc ; undefined
    1b10:	ffff0000 	.inst	0xffff0000 ; undefined
    1b14:	00000711 	.inst	0x00000711 ; undefined
    1b18:	00000606 	.inst	0x00000606 ; undefined
    1b1c:	09500110 	.inst	0x09500110 ; undefined
    1b20:	0e4bf803 	.inst	0x0e4bf803 ; undefined
    1b24:	ff000000 	.inst	0xff000000 ; undefined
    1b28:	141f00ff 	b	7c1f24 <__bss_size+0x7c1f1e>
    1b2c:	00000e10 	.inst	0x00000e10 ; undefined
    1b30:	11ffff00 	.inst	0x11ffff00 ; undefined
    1b34:	10000007 	adr	x7, 1b34 <__bss_size+0x1b2e>
    1b38:	03095001 	.inst	0x03095001 ; undefined
    1b3c:	000e4c20 	.inst	0x000e4c20 ; undefined
    1b40:	ffff0000 	.inst	0xffff0000 ; undefined
    1b44:	0b000000 	add	w0, w0, w0
    1b48:	000003fa 	.inst	0x000003fa ; undefined
    1b4c:	000e1014 	.inst	0x000e1014 ; undefined
    1b50:	ffff0000 	.inst	0xffff0000 ; undefined
    1b54:	00000840 	.inst	0x00000840 ; undefined
    1b58:	06904a01 	.inst	0x06904a01 ; undefined
    1b5c:	db0d0000 	.inst	0xdb0d0000 ; undefined
    1b60:	70000004 	adr	x4, 1b63 <__bss_size+0x1b5d>
    1b64:	74000008 	.inst	0x74000008 ; undefined
    1b68:	12000006 	and	w6, w0, #0x1
    1b6c:	000004e4 	.inst	0x000004e4 ; undefined
    1b70:	0e102c13 	.inst	0x0e102c13 ; undefined
    1b74:	ff000000 	.inst	0xff000000 ; undefined
    1b78:	000727ff 	.inst	0x000727ff ; undefined
    1b7c:	10301300 	adr	x0, 61ddc <__bss_size+0x61dd6>
    1b80:	0000000e 	.inst	0x0000000e ; undefined
    1b84:	0732ffff 	.inst	0x0732ffff ; undefined
    1b88:	44210000 	.inst	0x44210000 ; undefined
    1b8c:	00000e10 	.inst	0x00000e10 ; undefined
    1b90:	1cffff00 	ldr	s0, 1b70 <__bss_size+0x1b6a>
    1b94:	00000007 	.inst	0x00000007 ; undefined
    1b98:	0e102011 	tbl	v17.8b, {v0.16b, v1.16b}, v16.8b
    1b9c:	ff000000 	.inst	0xff000000 ; undefined
    1ba0:	000711ff 	.inst	0x000711ff ; undefined
    1ba4:	50011000 	adr	x0, 3da6 <__bss_size+0x3da0>
    1ba8:	4c380309 	.inst	0x4c380309 ; undefined
    1bac:	0000000e 	.inst	0x0000000e ; undefined
    1bb0:	0000ffff 	.inst	0x0000ffff ; undefined
    1bb4:	0003e40b 	.inst	0x0003e40b ; undefined
    1bb8:	0e106000 	tbl	v0.8b, {v0.16b-v3.16b}, v16.8b
    1bbc:	ff000000 	.inst	0xff000000 ; undefined
    1bc0:	0008a0ff 	.inst	0x0008a0ff ; undefined
    1bc4:	cd420100 	.inst	0xcd420100 ; undefined
    1bc8:	23000006 	.inst	0x23000006 ; undefined
    1bcc:	000008a0 	.inst	0x000008a0 ; undefined
    1bd0:	00054c12 	.inst	0x00054c12 ; undefined
    1bd4:	106c1300 	adr	x0, d9e34 <__bss_size+0xd9e2e>
    1bd8:	0000000e 	.inst	0x0000000e ; undefined
    1bdc:	0727ffff 	.inst	0x0727ffff ; undefined
    1be0:	80210000 	.inst	0x80210000 ; NYI
    1be4:	00000e10 	.inst	0x00000e10 ; undefined
    1be8:	1cffff00 	ldr	s0, 1bc8 <__bss_size+0x1bc2>
    1bec:	00000007 	.inst	0x00000007 ; undefined
    1bf0:	0fe02400 	.inst	0x0fe02400 ; undefined
    1bf4:	0000000e 	.inst	0x0000000e ; undefined
    1bf8:	0711ffff 	.inst	0x0711ffff ; undefined
    1bfc:	06ec0000 	.inst	0x06ec0000 ; undefined
    1c00:	01100000 	.inst	0x01100000 ; undefined
    1c04:	50030950 	adr	x16, 7d2e <__bss_size+0x7d28>
    1c08:	00000e4c 	.inst	0x00000e4c ; undefined
    1c0c:	00ffff00 	.inst	0x00ffff00 ; undefined
    1c10:	0e104c21 	.inst	0x0e104c21 ; undefined
    1c14:	ff000000 	.inst	0xff000000 ; undefined
    1c18:	000748ff 	.inst	0x000748ff ; undefined
    1c1c:	10581f00 	adr	x0, b1ffc <__bss_size+0xb1ff6>
    1c20:	0000000e 	.inst	0x0000000e ; undefined
    1c24:	073dffff 	.inst	0x073dffff ; undefined
    1c28:	01100000 	.inst	0x01100000 ; undefined
    1c2c:	ff0c0550 	.inst	0xff0c0550 ; undefined
    1c30:	0000ffff 	.inst	0x0000ffff ; undefined
    1c34:	00f42500 	.inst	0x00f42500 ; undefined
    1c38:	00f40000 	.inst	0x00f40000 ; undefined
    1c3c:	12040000 	and	w0, w0, #0x10000000
    1c40:	00024325 	.inst	0x00024325 ; undefined
    1c44:	00024300 	.inst	0x00024300 ; undefined
    1c48:	25130400 	cmpge	p0.b, p1/z, z0.b, #-13
    1c4c:	000009d7 	.inst	0x000009d7 ; undefined
    1c50:	000009d7 	.inst	0x000009d7 ; undefined
    1c54:	23251504 	.inst	0x23251504 ; undefined
    1c58:	23000001 	.inst	0x23000001 ; undefined
    1c5c:	04000001 	add	z1.b, p0/m, z1.b, z0.b
    1c60:	04432516 	.inst	0x04432516 ; undefined
    1c64:	04430000 	subr	z0.h, p0/m, z0.h, z0.h
    1c68:	0b050000 	add	w0, w0, w5
    1c6c:	0002b225 	.inst	0x0002b225 ; undefined
    1c70:	0002b200 	.inst	0x0002b200 ; undefined
    1c74:	25060500 	cmpge	p0.b, p1/z, z8.b, #6
    1c78:	0000020e 	.inst	0x0000020e ; undefined
    1c7c:	0000020e 	.inst	0x0000020e ; undefined
    1c80:	d3251404 	.inst	0xd3251404 ; undefined
    1c84:	d3000004 	.inst	0xd3000004 ; undefined
    1c88:	03000004 	.inst	0x03000004 ; undefined
    1c8c:	03900010 	.inst	0x03900010 ; undefined
    1c90:	00040000 	.inst	0x00040000 ; undefined
    1c94:	0000054e 	.inst	0x0000054e ; undefined
    1c98:	00640108 	.inst	0x00640108 ; undefined
    1c9c:	8b0c0000 	add	x0, x0, x12
    1ca0:	4b000005 	sub	w5, w0, w0
    1ca4:	e0000002 	.inst	0xe0000002 ; undefined
    1ca8:	00000e11 	.inst	0x00000e11 ; undefined
    1cac:	44ffff00 	.inst	0x44ffff00 ; undefined
    1cb0:	00000001 	.inst	0x00000001 ; undefined
    1cb4:	31000000 	adds	w0, w0, #0x0
    1cb8:	02000008 	.inst	0x02000008 ; undefined
    1cbc:	01170601 	.inst	0x01170601 ; undefined
    1cc0:	02020000 	.inst	0x02020000 ; undefined
    1cc4:	00020405 	.inst	0x00020405 ; undefined
    1cc8:	05040300 	.inst	0x05040300 ; undefined
    1ccc:	00746e69 	.inst	0x00746e69 ; undefined
    1cd0:	3a050802 	.inst	0x3a050802 ; undefined
    1cd4:	02000002 	.inst	0x02000002 ; undefined
    1cd8:	01150801 	.inst	0x01150801 ; undefined
    1cdc:	02020000 	.inst	0x02020000 ; undefined
    1ce0:	00013a07 	.inst	0x00013a07 ; undefined
    1ce4:	07040200 	.inst	0x07040200 ; undefined
    1ce8:	0000012d 	.inst	0x0000012d ; undefined
    1cec:	28070802 	stnp	w2, w2, [x0, #56]
    1cf0:	04000001 	add	z1.b, p0/m, z1.b, z0.b
    1cf4:	000005e9 	.inst	0x000005e9 ; undefined
    1cf8:	13103e01 	sbfiz	w1, w16, #16, #16
    1cfc:	0000000e 	.inst	0x0000000e ; undefined
    1d00:	0014ffff 	.inst	0x0014ffff ; undefined
    1d04:	00000000 	.inst	0x00000000 ; undefined
    1d08:	9c010000 	ldr	q0, 3d08 <__bss_size+0x3d02>
    1d0c:	0000009e 	.inst	0x0000009e ; undefined
    1d10:	0e132405 	.inst	0x0e132405 ; undefined
    1d14:	ff000000 	.inst	0xff000000 ; undefined
    1d18:	0000d7ff 	.inst	0x0000d7ff ; undefined
    1d1c:	50010600 	adr	x0, 3dde <__bss_size+0x3dd8>
    1d20:	4dc00309 	ld1	{v9.b}[8], [x24], x0
    1d24:	0000000e 	.inst	0x0000000e ; undefined
    1d28:	0000ffff 	.inst	0x0000ffff ; undefined
    1d2c:	00052b04 	.inst	0x00052b04 ; undefined
    1d30:	f0390100 	adrp	x0, 72024000 <__bss_size+0x72023ffa>
    1d34:	00000e12 	.inst	0x00000e12 ; undefined
    1d38:	14ffff00 	b	4001938 <__bss_size+0x4001932>
    1d3c:	00000000 	.inst	0x00000000 ; undefined
    1d40:	01000000 	.inst	0x01000000 ; undefined
    1d44:	0000d79c 	.inst	0x0000d79c ; undefined
    1d48:	13040500 	sbfiz	w0, w8, #28, #2
    1d4c:	0000000e 	.inst	0x0000000e ; undefined
    1d50:	00d7ffff 	.inst	0x00d7ffff ; undefined
    1d54:	01060000 	.inst	0x01060000 ; undefined
    1d58:	a0030950 	.inst	0xa0030950 ; undefined
    1d5c:	00000e4d 	.inst	0x00000e4d ; undefined
    1d60:	00ffff00 	.inst	0x00ffff00 ; undefined
    1d64:	05330700 	ext	z0.b, z0.b, z24.b, #153
    1d68:	32010000 	orr	w0, w0, #0x80000000
    1d6c:	000e1260 	.inst	0x000e1260 ; undefined
    1d70:	ffff0000 	.inst	0xffff0000 ; undefined
    1d74:	00000034 	.inst	0x00000034 ; undefined
    1d78:	00000000 	.inst	0x00000000 ; undefined
    1d7c:	01569c01 	.inst	0x01569c01 ; undefined
    1d80:	6d080000 	stp	d0, d0, [x0, #128]
    1d84:	01006773 	.inst	0x01006773 ; undefined
    1d88:	00015632 	.inst	0x00015632 ; undefined
    1d8c:	0023d500 	.inst	0x0023d500 ; NYI
    1d90:	127c0900 	.inst	0x127c0900 ; undefined
    1d94:	0000000e 	.inst	0x0000000e ; undefined
    1d98:	0330ffff 	.inst	0x0330ffff ; undefined
    1d9c:	01220000 	.inst	0x01220000 ; undefined
    1da0:	01060000 	.inst	0x01060000 ; undefined
    1da4:	50030950 	adr	x16, 7ece <__bss_size+0x7ec8>
    1da8:	00000e4d 	.inst	0x00000e4d ; undefined
    1dac:	00ffff00 	.inst	0x00ffff00 ; undefined
    1db0:	0e128409 	.inst	0x0e128409 ; undefined
    1db4:	ff000000 	.inst	0xff000000 ; undefined
    1db8:	000330ff 	.inst	0x000330ff ; undefined
    1dbc:	00013a00 	.inst	0x00013a00 ; undefined
    1dc0:	50010600 	adr	x0, 3e82 <__bss_size+0x3e7c>
    1dc4:	00008302 	.inst	0x00008302 ; undefined
    1dc8:	0e129005 	.inst	0x0e129005 ; undefined
    1dcc:	ff000000 	.inst	0xff000000 ; undefined
    1dd0:	000330ff 	.inst	0x000330ff ; undefined
    1dd4:	50010600 	adr	x0, 3e96 <__bss_size+0x3e90>
    1dd8:	4d300309 	.inst	0x4d300309 ; undefined
    1ddc:	0000000e 	.inst	0x0000000e ; undefined
    1de0:	0000ffff 	.inst	0x0000ffff ; undefined
    1de4:	015c080a 	.inst	0x015c080a ; undefined
    1de8:	01020000 	.inst	0x01020000 ; undefined
    1dec:	00011e08 	.inst	0x00011e08 ; undefined
    1df0:	06190400 	.inst	0x06190400 ; undefined
    1df4:	1e010000 	.inst	0x1e010000 ; undefined
    1df8:	000e12a0 	.inst	0x000e12a0 ; undefined
    1dfc:	ffff0000 	.inst	0xffff0000 ; undefined
    1e00:	00000044 	.inst	0x00000044 ; undefined
    1e04:	00000000 	.inst	0x00000000 ; undefined
    1e08:	02099c01 	.inst	0x02099c01 ; undefined
    1e0c:	ac0b0000 	stnp	q0, q0, [x0, #352]
    1e10:	00000e12 	.inst	0x00000e12 ; undefined
    1e14:	3bffff00 	.inst	0x3bffff00 ; undefined
    1e18:	0b000003 	add	w3, w0, w0
    1e1c:	000e12b4 	.inst	0x000e12b4 ; undefined
    1e20:	ffff0000 	.inst	0xffff0000 ; undefined
    1e24:	00000346 	.inst	0x00000346 ; undefined
    1e28:	0e12bc0b 	.inst	0x0e12bc0b ; undefined
    1e2c:	ff000000 	.inst	0xff000000 ; undefined
    1e30:	000351ff 	.inst	0x000351ff ; undefined
    1e34:	12c40c00 	.inst	0x12c40c00 ; undefined
    1e38:	0000000e 	.inst	0x0000000e ; undefined
    1e3c:	035cffff 	.inst	0x035cffff ; undefined
    1e40:	c80b0000 	stxr	w11, x0, [x0]
    1e44:	00000e12 	.inst	0x00000e12 ; undefined
    1e48:	09ffff00 	.inst	0x09ffff00 ; undefined
    1e4c:	09000002 	.inst	0x09000002 ; undefined
    1e50:	000e12d4 	.inst	0x000e12d4 ; undefined
    1e54:	ffff0000 	.inst	0xffff0000 ; undefined
    1e58:	000000d7 	.inst	0x000000d7 ; undefined
    1e5c:	000001e0 	.inst	0x000001e0 ; undefined
    1e60:	09500106 	.inst	0x09500106 ; undefined
    1e64:	0e4d8803 	.inst	0x0e4d8803 ; undefined
    1e68:	ff000000 	.inst	0xff000000 ; undefined
    1e6c:	d80b00ff 	prfm	#0x1f, 17e88 <__bss_size+0x17e82>
    1e70:	00000e12 	.inst	0x00000e12 ; undefined
    1e74:	09ffff00 	.inst	0x09ffff00 ; undefined
    1e78:	05000002 	orr	z2.s, z2.s, #0x1
    1e7c:	000e12e4 	.inst	0x000e12e4 ; undefined
    1e80:	ffff0000 	.inst	0xffff0000 ; undefined
    1e84:	000000d7 	.inst	0x000000d7 ; undefined
    1e88:	09500106 	.inst	0x09500106 ; undefined
    1e8c:	0e4d7003 	.inst	0x0e4d7003 ; undefined
    1e90:	ff000000 	.inst	0xff000000 ; undefined
    1e94:	040000ff 	add	z31.b, p0/m, z31.b, z7.b
    1e98:	00000539 	.inst	0x00000539 ; undefined
    1e9c:	11e01301 	.inst	0x11e01301 ; undefined
    1ea0:	0000000e 	.inst	0x0000000e ; undefined
    1ea4:	0080ffff 	.inst	0x0080ffff ; undefined
    1ea8:	00000000 	.inst	0x00000000 ; undefined
    1eac:	9c010000 	ldr	q0, 3eac <__bss_size+0x3ea6>
    1eb0:	00000330 	.inst	0x00000330 ; undefined
    1eb4:	0e11f409 	.inst	0x0e11f409 ; undefined
    1eb8:	ff000000 	.inst	0xff000000 ; undefined
    1ebc:	000330ff 	.inst	0x000330ff ; undefined
    1ec0:	00024500 	.inst	0x00024500 ; undefined
    1ec4:	50010600 	adr	x0, 3f86 <__bss_size+0x3f80>
    1ec8:	4c900309 	st4	{v9.16b-v12.16b}, [x24], x16
    1ecc:	0000000e 	.inst	0x0000000e ; undefined
    1ed0:	0900ffff 	.inst	0x0900ffff ; undefined
    1ed4:	000e1200 	.inst	0x000e1200 ; undefined
    1ed8:	ffff0000 	.inst	0xffff0000 ; undefined
    1edc:	00000330 	.inst	0x00000330 ; undefined
    1ee0:	00000264 	.inst	0x00000264 ; undefined
    1ee4:	09500106 	.inst	0x09500106 ; undefined
    1ee8:	0e4cb003 	.inst	0x0e4cb003 ; undefined
    1eec:	ff000000 	.inst	0xff000000 ; undefined
    1ef0:	040b00ff 	umin	z31.b, p0/m, z31.b, z7.b
    1ef4:	00000e12 	.inst	0x00000e12 ; undefined
    1ef8:	3bffff00 	.inst	0x3bffff00 ; undefined
    1efc:	09000003 	.inst	0x09000003 ; undefined
    1f00:	000e1214 	.inst	0x000e1214 ; undefined
    1f04:	ffff0000 	.inst	0xffff0000 ; undefined
    1f08:	00000367 	.inst	0x00000367 ; undefined
    1f0c:	00000290 	.inst	0x00000290 ; undefined
    1f10:	09500106 	.inst	0x09500106 ; undefined
    1f14:	0e4cc803 	.inst	0x0e4cc803 ; undefined
    1f18:	ff000000 	.inst	0xff000000 ; undefined
    1f1c:	180b00ff 	ldr	wzr, 17f38 <__bss_size+0x17f32>
    1f20:	00000e12 	.inst	0x00000e12 ; undefined
    1f24:	72ffff00 	.inst	0x72ffff00 ; undefined
    1f28:	09000003 	.inst	0x09000003 ; undefined
    1f2c:	000e1228 	.inst	0x000e1228 ; undefined
    1f30:	ffff0000 	.inst	0xffff0000 ; undefined
    1f34:	00000367 	.inst	0x00000367 ; undefined
    1f38:	000002bc 	.inst	0x000002bc ; undefined
    1f3c:	09500106 	.inst	0x09500106 ; undefined
    1f40:	0e4ce003 	.inst	0x0e4ce003 ; undefined
    1f44:	ff000000 	.inst	0xff000000 ; undefined
    1f48:	2c0b00ff 	stnp	s31, s0, [x7, #88]
    1f4c:	00000e12 	.inst	0x00000e12 ; undefined
    1f50:	7dffff00 	.inst	0x7dffff00 ; undefined
    1f54:	09000003 	.inst	0x09000003 ; undefined
    1f58:	000e123c 	.inst	0x000e123c ; undefined
    1f5c:	ffff0000 	.inst	0xffff0000 ; undefined
    1f60:	00000367 	.inst	0x00000367 ; undefined
    1f64:	000002e8 	.inst	0x000002e8 ; undefined
    1f68:	09500106 	.inst	0x09500106 ; undefined
    1f6c:	0e4cf803 	.inst	0x0e4cf803 ; undefined
    1f70:	ff000000 	.inst	0xff000000 ; undefined
    1f74:	400b00ff 	.inst	0x400b00ff ; undefined
    1f78:	00000e12 	.inst	0x00000e12 ; undefined
    1f7c:	88ffff00 	casal	wzr, w0, [x24]
    1f80:	09000003 	.inst	0x09000003 ; undefined
    1f84:	000e1250 	.inst	0x000e1250 ; undefined
    1f88:	ffff0000 	.inst	0xffff0000 ; undefined
    1f8c:	00000367 	.inst	0x00000367 ; undefined
    1f90:	00000314 	.inst	0x00000314 ; undefined
    1f94:	09500106 	.inst	0x09500106 ; undefined
    1f98:	0e4d1003 	.inst	0x0e4d1003 ; undefined
    1f9c:	ff000000 	.inst	0xff000000 ; undefined
    1fa0:	600d00ff 	.inst	0x600d00ff ; undefined
    1fa4:	00000e12 	.inst	0x00000e12 ; undefined
    1fa8:	30ffff00 	adr	x0, 1f89 <__bss_size+0x1f83>
    1fac:	06000003 	.inst	0x06000003 ; undefined
    1fb0:	03095001 	.inst	0x03095001 ; undefined
    1fb4:	000e4d30 	.inst	0x000e4d30 ; undefined
    1fb8:	ffff0000 	.inst	0xffff0000 ; undefined
    1fbc:	f40e0000 	.inst	0xf40e0000 ; undefined
    1fc0:	f4000000 	.inst	0xf4000000 ; undefined
    1fc4:	02000000 	.inst	0x02000000 ; undefined
    1fc8:	06060e12 	.inst	0x06060e12 ; undefined
    1fcc:	06060000 	.inst	0x06060000 ; undefined
    1fd0:	11010000 	add	w0, w0, #0x40
    1fd4:	0005cf0e 	.inst	0x0005cf0e ; undefined
    1fd8:	0005cf00 	.inst	0x0005cf00 ; undefined
    1fdc:	0e110300 	tbl	v0.8b, {v24.16b}, v17.8b
    1fe0:	0000051d 	.inst	0x0000051d ; undefined
    1fe4:	0000051d 	.inst	0x0000051d ; undefined
    1fe8:	620e0804 	.inst	0x620e0804 ; undefined
    1fec:	62000005 	.inst	0x62000005 ; undefined
    1ff0:	03000005 	.inst	0x03000005 ; undefined
    1ff4:	01f00e12 	.inst	0x01f00e12 ; undefined
    1ff8:	01f00000 	.inst	0x01f00000 ; undefined
    1ffc:	11020000 	add	w0, w0, #0x80
    2000:	00054d0e 	.inst	0x00054d0e ; undefined
    2004:	00054d00 	.inst	0x00054d00 ; undefined
    2008:	0e0e0100 	tbl	v0.8b, {v8.16b}, v14.8b
    200c:	0000057a 	.inst	0x0000057a ; undefined
    2010:	0000057a 	.inst	0x0000057a ; undefined
    2014:	f00e0f01 	adrp	x1, 1c1e5000 <__bss_size+0x1c1e4ffa>
    2018:	f0000005 	adrp	x5, 5000 <__bss_size+0x4ffa>
    201c:	01000005 	.inst	0x01000005 ; undefined
    2020:	011f0010 	.inst	0x011f0010 ; undefined
    2024:	00040000 	.inst	0x00040000 ; undefined
    2028:	00000621 	.inst	0x00000621 ; undefined
    202c:	00640108 	.inst	0x00640108 ; undefined
    2030:	4b0c0000 	sub	w0, w0, w12
    2034:	4b000006 	sub	w6, w0, w0
    2038:	30000002 	adr	x2, 2039 <__bss_size+0x2033>
    203c:	00000e13 	.inst	0x00000e13 ; undefined
    2040:	84ffff00 	ld1rh	{z0.d}, p7/z, [x24, #126]
    2044:	00000000 	.inst	0x00000000 ; undefined
    2048:	2e000000 	ext	v0.8b, v0.8b, v0.8b, #0
    204c:	02000009 	.inst	0x02000009 ; undefined
    2050:	01170601 	.inst	0x01170601 ; undefined
    2054:	02020000 	.inst	0x02020000 ; undefined
    2058:	00020405 	.inst	0x00020405 ; undefined
    205c:	05040300 	.inst	0x05040300 ; undefined
    2060:	00746e69 	.inst	0x00746e69 ; undefined
    2064:	3a050802 	.inst	0x3a050802 ; undefined
    2068:	02000002 	.inst	0x02000002 ; undefined
    206c:	01150801 	.inst	0x01150801 ; undefined
    2070:	02020000 	.inst	0x02020000 ; undefined
    2074:	00013a07 	.inst	0x00013a07 ; undefined
    2078:	02310400 	.inst	0x02310400 ; undefined
    207c:	34020000 	cbz	w0, 607c <__bss_size+0x6076>
    2080:	00000062 	.inst	0x00000062 ; undefined
    2084:	2d070402 	stp	s2, s1, [x0, #56]
    2088:	02000001 	.inst	0x02000001 ; undefined
    208c:	01280708 	.inst	0x01280708 ; undefined
    2090:	ac050000 	stnp	q0, q0, [x0, #160]
    2094:	01000006 	.inst	0x01000006 ; undefined
    2098:	0e13a01c 	.inst	0x0e13a01c ; undefined
    209c:	ff000000 	.inst	0xff000000 ; undefined
    20a0:	000014ff 	.inst	0x000014ff ; undefined
    20a4:	00000000 	.inst	0x00000000 ; undefined
    20a8:	9d9c0100 	.inst	0x9d9c0100 ; undefined
    20ac:	06000000 	.inst	0x06000000 ; undefined
    20b0:	0000062d 	.inst	0x0000062d ; undefined
    20b4:	00571c01 	.inst	0x00571c01 ; undefined
    20b8:	240b0000 	cmphs	p0.b, p0/z, z0.b, z11.b
    20bc:	07000000 	.inst	0x07000000 ; undefined
    20c0:	00000639 	.inst	0x00000639 ; undefined
    20c4:	13901801 	extr	w1, w0, w16, #6
    20c8:	0000000e 	.inst	0x0000000e ; undefined
    20cc:	0010ffff 	.inst	0x0010ffff ; undefined
    20d0:	00000000 	.inst	0x00000000 ; undefined
    20d4:	9c010000 	ldr	q0, 40d4 <__bss_size+0x40ce>
    20d8:	00056207 	.inst	0x00056207 ; undefined
    20dc:	80140100 	.inst	0x80140100 ; undefined
    20e0:	00000e13 	.inst	0x00000e13 ; undefined
    20e4:	10ffff00 	adr	x0, 20c4 <__bss_size+0x20be>
    20e8:	00000000 	.inst	0x00000000 ; undefined
    20ec:	01000000 	.inst	0x01000000 ; undefined
    20f0:	05cf089c 	.inst	0x05cf089c ; undefined
    20f4:	10010000 	adr	x0, 40f4 <__bss_size+0x40ee>
    20f8:	00000057 	.inst	0x00000057 ; undefined
    20fc:	000e1370 	.inst	0x000e1370 ; undefined
    2100:	ffff0000 	.inst	0xffff0000 ; undefined
    2104:	00000010 	.inst	0x00000010 ; undefined
    2108:	00000000 	.inst	0x00000000 ; undefined
    210c:	97089c01 	bl	fffffffffc229110 <__end+0xfffffc1427b0>
    2110:	01000006 	.inst	0x01000006 ; undefined
    2114:	00005708 	.inst	0x00005708 ; undefined
    2118:	0e135000 	tbx	v0.8b, {v0.16b-v2.16b}, v19.8b
    211c:	ff000000 	.inst	0xff000000 ; undefined
    2120:	00001cff 	.inst	0x00001cff ; undefined
    2124:	00000000 	.inst	0x00000000 ; undefined
    2128:	079c0100 	.inst	0x079c0100 ; undefined
    212c:	000002ff 	.inst	0x000002ff ; undefined
    2130:	13300301 	.inst	0x13300301 ; undefined
    2134:	0000000e 	.inst	0x0000000e ; undefined
    2138:	0020ffff 	.inst	0x0020ffff ; NYI
    213c:	00000000 	.inst	0x00000000 ; undefined
    2140:	9c010000 	ldr	q0, 4140 <__bss_size+0x413a>
    2144:	00019c00 	.inst	0x00019c00 ; undefined
    2148:	af000400 	.inst	0xaf000400 ; undefined
    214c:	08000006 	stxrb	w0, w6, [x0]
    2150:	00006401 	.inst	0x00006401 ; undefined
    2154:	06e20c00 	.inst	0x06e20c00 ; undefined
    2158:	024b0000 	.inst	0x024b0000 ; undefined
    215c:	13c00000 	.inst	0x13c00000 ; undefined
    2160:	0000000e 	.inst	0x0000000e ; undefined
    2164:	01bcffff 	.inst	0x01bcffff ; undefined
    2168:	00000000 	.inst	0x00000000 ; undefined
    216c:	0a290000 	bic	w0, w0, w9
    2170:	01020000 	.inst	0x01020000 ; undefined
    2174:	00011706 	.inst	0x00011706 ; undefined
    2178:	05020200 	orr	z0.d, z0.d, #0x1ffff
    217c:	00000204 	.inst	0x00000204 ; undefined
    2180:	69050403 	.inst	0x69050403 ; undefined
    2184:	0200746e 	.inst	0x0200746e ; undefined
    2188:	023a0508 	.inst	0x023a0508 ; undefined
    218c:	01020000 	.inst	0x01020000 ; undefined
    2190:	00011508 	.inst	0x00011508 ; undefined
    2194:	07020200 	.inst	0x07020200 ; undefined
    2198:	0000013a 	.inst	0x0000013a ; undefined
    219c:	00023104 	.inst	0x00023104 ; undefined
    21a0:	67340200 	.inst	0x67340200 ; undefined
    21a4:	05000000 	orr	z0.s, z0.s, #0x1
    21a8:	00000057 	.inst	0x00000057 ; undefined
    21ac:	2d070402 	stp	s2, s1, [x0, #56]
    21b0:	02000001 	.inst	0x02000001 ; undefined
    21b4:	01280708 	.inst	0x01280708 ; undefined
    21b8:	d9060000 	.inst	0xd9060000 ; undefined
    21bc:	01000006 	.inst	0x01000006 ; undefined
    21c0:	0e15202f 	tbl	v15.8b, {v1.16b, v2.16b}, v21.8b
    21c4:	ff000000 	.inst	0xff000000 ; undefined
    21c8:	00005cff 	.inst	0x00005cff ; undefined
    21cc:	00000000 	.inst	0x00000000 ; undefined
    21d0:	cc9c0100 	.inst	0xcc9c0100 ; undefined
    21d4:	07000000 	.inst	0x07000000 ; undefined
    21d8:	006e6970 	.inst	0x006e6970 ; undefined
    21dc:	003b2f01 	.inst	0x003b2f01 ; NYI
    21e0:	24440000 	cmphs	p0.h, p0/z, z0.h, z4.h
    21e4:	31080000 	adds	w0, w0, #0x200
    21e8:	01000003 	.inst	0x01000003 ; undefined
    21ec:	00003b2f 	.inst	0x00003b2f ; undefined
    21f0:	09510100 	.inst	0x09510100 ; undefined
    21f4:	000000f9 	.inst	0x000000f9 ; undefined
    21f8:	000e1520 	.inst	0x000e1520 ; undefined
    21fc:	ffff0000 	.inst	0xffff0000 ; undefined
    2200:	00000a00 	.inst	0x00000a00 ; undefined
    2204:	050a3001 	.inst	0x050a3001 ; undefined
    2208:	bb000001 	.inst	0xbb000001 ; undefined
    220c:	00000024 	.inst	0x00000024 ; undefined
    2210:	07260600 	.inst	0x07260600 ; undefined
    2214:	27010000 	.inst	0x27010000 ; undefined
    2218:	000e14e0 	.inst	0x000e14e0 ; undefined
    221c:	ffff0000 	.inst	0xffff0000 ; undefined
    2220:	00000038 	.inst	0x00000038 ; undefined
    2224:	00000000 	.inst	0x00000000 ; undefined
    2228:	00f99c01 	.inst	0x00f99c01 ; undefined
    222c:	70070000 	adr	x0, 1022f <__bss_size+0x10229>
    2230:	01006e69 	.inst	0x01006e69 ; undefined
    2234:	00003b27 	.inst	0x00003b27 ; undefined
    2238:	00250600 	.inst	0x00250600 ; NYI
    223c:	c00b0000 	.inst	0xc00b0000 ; undefined
    2240:	01000006 	.inst	0x01000006 ; undefined
    2244:	0111011f 	.inst	0x0111011f ; undefined
    2248:	700c0000 	adr	x0, 1a24b <__bss_size+0x1a245>
    224c:	01006e69 	.inst	0x01006e69 ; undefined
    2250:	00003b1f 	.inst	0x00003b1f ; undefined
    2254:	cf060000 	.inst	0xcf060000 ; undefined
    2258:	01000006 	.inst	0x01000006 ; undefined
    225c:	0e13c003 	.inst	0x0e13c003 ; undefined
    2260:	ff000000 	.inst	0xff000000 ; undefined
    2264:	0000d8ff 	.inst	0x0000d8ff ; undefined
    2268:	00000000 	.inst	0x00000000 ; undefined
    226c:	789c0100 	ldursh	x0, [x8, #-64]
    2270:	07000001 	.inst	0x07000001 ; undefined
    2274:	006e6970 	.inst	0x006e6970 ; undefined
    2278:	003b0301 	.inst	0x003b0301 ; NYI
    227c:	25680000 	.inst	0x25680000 ; undefined
    2280:	d4080000 	.inst	0xd4080000 ; undefined
    2284:	01000006 	.inst	0x01000006 ; undefined
    2288:	00003b03 	.inst	0x00003b03 ; undefined
    228c:	0d510100 	.inst	0x0d510100 ; undefined
    2290:	0000110e 	.inst	0x0000110e ; undefined
    2294:	01780401 	.inst	0x01780401 ; undefined
    2298:	26e90000 	.inst	0x26e90000 ; undefined
    229c:	310d0000 	adds	w0, w0, #0x340
    22a0:	01000007 	.inst	0x01000007 ; undefined
    22a4:	00003b05 	.inst	0x00003b05 ; undefined
    22a8:	00273200 	.inst	0x00273200 ; NYI
    22ac:	08eb0d00 	.inst	0x08eb0d00 ; undefined
    22b0:	06010000 	.inst	0x06010000 ; undefined
    22b4:	0000003b 	.inst	0x0000003b ; undefined
    22b8:	00002792 	.inst	0x00002792 ; undefined
    22bc:	62080e00 	.inst	0x62080e00 ; undefined
    22c0:	0f000000 	.inst	0x0f000000 ; undefined
    22c4:	000000f9 	.inst	0x000000f9 ; undefined
    22c8:	000e14a0 	.inst	0x000e14a0 ; undefined
    22cc:	ffff0000 	.inst	0xffff0000 ; undefined
    22d0:	00000038 	.inst	0x00000038 ; undefined
    22d4:	00000000 	.inst	0x00000000 ; undefined
    22d8:	050a9c01 	.inst	0x050a9c01 ; undefined
    22dc:	f2000001 	ands	x1, x0, #0x100000001
    22e0:	00000027 	.inst	0x00000027 ; undefined
    22e4:	00018800 	.inst	0x00018800 ; undefined
    22e8:	85000400 	.inst	0x85000400 ; undefined
    22ec:	08000007 	stxrb	w0, w7, [x0]
    22f0:	00006401 	.inst	0x00006401 ; undefined
    22f4:	073e0c00 	.inst	0x073e0c00 ; undefined
    22f8:	024b0000 	.inst	0x024b0000 ; undefined
    22fc:	15800000 	b	60022fc <__bss_size+0x60022f6>
    2300:	0000000e 	.inst	0x0000000e ; undefined
    2304:	005cffff 	.inst	0x005cffff ; undefined
    2308:	00000000 	.inst	0x00000000 ; undefined
    230c:	0b5a0000 	add	w0, w0, w26, lsr #0
    2310:	01020000 	.inst	0x01020000 ; undefined
    2314:	00011706 	.inst	0x00011706 ; undefined
    2318:	05020200 	orr	z0.d, z0.d, #0x1ffff
    231c:	00000204 	.inst	0x00000204 ; undefined
    2320:	69050403 	.inst	0x69050403 ; undefined
    2324:	0200746e 	.inst	0x0200746e ; undefined
    2328:	023a0508 	.inst	0x023a0508 ; undefined
    232c:	01020000 	.inst	0x01020000 ; undefined
    2330:	00011508 	.inst	0x00011508 ; undefined
    2334:	07020200 	.inst	0x07020200 ; undefined
    2338:	0000013a 	.inst	0x0000013a ; undefined
    233c:	2d070402 	stp	s2, s1, [x0, #56]
    2340:	02000001 	.inst	0x02000001 ; undefined
    2344:	01280708 	.inst	0x01280708 ; undefined
    2348:	a0040000 	.inst	0xa0040000 ; undefined
    234c:	01000007 	.inst	0x01000007 ; undefined
    2350:	0e15d012 	.inst	0x0e15d012 ; undefined
    2354:	ff000000 	.inst	0xff000000 ; undefined
    2358:	00000cff 	.inst	0x00000cff ; undefined
    235c:	00000000 	.inst	0x00000000 ; undefined
    2360:	9b9c0100 	.inst	0x9b9c0100 ; undefined
    2364:	05000000 	orr	z0.s, z0.s, #0x1
    2368:	000e15dc 	.inst	0x000e15dc ; undefined
    236c:	ffff0000 	.inst	0xffff0000 ; undefined
    2370:	00000175 	.inst	0x00000175 ; undefined
    2374:	01500106 	.inst	0x01500106 ; undefined
    2378:	5101063b 	sub	w27, w17, #0x41
    237c:	00003101 	.inst	0x00003101 ; undefined
    2380:	0007b704 	.inst	0x0007b704 ; undefined
    2384:	c00e0100 	.inst	0xc00e0100 ; undefined
    2388:	00000e15 	.inst	0x00000e15 ; undefined
    238c:	0cffff00 	.inst	0x0cffff00 ; undefined
    2390:	00000000 	.inst	0x00000000 ; undefined
    2394:	01000000 	.inst	0x01000000 ; undefined
    2398:	0000d19c 	.inst	0x0000d19c ; undefined
    239c:	15cc0500 	b	730379c <__bss_size+0x7303796>
    23a0:	0000000e 	.inst	0x0000000e ; undefined
    23a4:	0175ffff 	.inst	0x0175ffff ; undefined
    23a8:	01060000 	.inst	0x01060000 ; undefined
    23ac:	063a0150 	.inst	0x063a0150 ; undefined
    23b0:	31015101 	adds	w1, w8, #0x54
    23b4:	8b040000 	add	x0, x0, x4
    23b8:	01000007 	.inst	0x01000007 ; undefined
    23bc:	0e15b00a 	.inst	0x0e15b00a ; undefined
    23c0:	ff000000 	.inst	0xff000000 ; undefined
    23c4:	00000cff 	.inst	0x00000cff ; undefined
    23c8:	00000000 	.inst	0x00000000 ; undefined
    23cc:	079c0100 	.inst	0x079c0100 ; undefined
    23d0:	05000001 	orr	z1.s, z1.s, #0x1
    23d4:	000e15bc 	.inst	0x000e15bc ; undefined
    23d8:	ffff0000 	.inst	0xffff0000 ; undefined
    23dc:	00000175 	.inst	0x00000175 ; undefined
    23e0:	01500106 	.inst	0x01500106 ; undefined
    23e4:	51010639 	sub	w25, w17, #0x41
    23e8:	00003101 	.inst	0x00003101 ; undefined
    23ec:	0003a404 	.inst	0x0003a404 ; undefined
    23f0:	80040100 	.inst	0x80040100 ; undefined
    23f4:	00000e15 	.inst	0x00000e15 ; undefined
    23f8:	30ffff00 	adr	x0, 23d9 <__bss_size+0x23d3>
    23fc:	00000000 	.inst	0x00000000 ; undefined
    2400:	01000000 	.inst	0x01000000 ; undefined
    2404:	0001759c 	.inst	0x0001759c ; undefined
    2408:	15940700 	b	6504008 <__bss_size+0x6504002>
    240c:	0000000e 	.inst	0x0000000e ; undefined
    2410:	0180ffff 	.inst	0x0180ffff ; undefined
    2414:	01400000 	.inst	0x01400000 ; undefined
    2418:	01060000 	.inst	0x01060000 ; undefined
    241c:	06390150 	.inst	0x06390150 ; undefined
    2420:	31015101 	adds	w1, w8, #0x54
    2424:	15a00700 	b	6804024 <__bss_size+0x680401e>
    2428:	0000000e 	.inst	0x0000000e ; undefined
    242c:	0180ffff 	.inst	0x0180ffff ; undefined
    2430:	015c0000 	.inst	0x015c0000 ; undefined
    2434:	01060000 	.inst	0x01060000 ; undefined
    2438:	063a0150 	.inst	0x063a0150 ; undefined
    243c:	31015101 	adds	w1, w8, #0x54
    2440:	15b00500 	b	6c03840 <__bss_size+0x6c0383a>
    2444:	0000000e 	.inst	0x0000000e ; undefined
    2448:	0180ffff 	.inst	0x0180ffff ; undefined
    244c:	01060000 	.inst	0x01060000 ; undefined
    2450:	063b0150 	.inst	0x063b0150 ; undefined
    2454:	31015101 	adds	w1, w8, #0x54
    2458:	d9080000 	.inst	0xd9080000 ; undefined
    245c:	d9000006 	.inst	0xd9000006 ; undefined
    2460:	02000006 	.inst	0x02000006 ; undefined
    2464:	06cf0823 	.inst	0x06cf0823 ; undefined
    2468:	06cf0000 	.inst	0x06cf0000 ; undefined
    246c:	21020000 	.inst	0x21020000 ; undefined
    2470:	00018c00 	.inst	0x00018c00 ; undefined
    2474:	ff000400 	.inst	0xff000400 ; undefined
    2478:	08000007 	stxrb	w0, w7, [x0]
    247c:	00006401 	.inst	0x00006401 ; undefined
    2480:	07f20c00 	.inst	0x07f20c00 ; undefined
    2484:	024b0000 	.inst	0x024b0000 ; undefined
    2488:	15e00000 	b	7802488 <__bss_size+0x7802482>
    248c:	0000000e 	.inst	0x0000000e ; undefined
    2490:	0174ffff 	.inst	0x0174ffff ; undefined
    2494:	00000000 	.inst	0x00000000 ; undefined
    2498:	0c1b0000 	.inst	0x0c1b0000 ; undefined
    249c:	01020000 	.inst	0x01020000 ; undefined
    24a0:	00011706 	.inst	0x00011706 ; undefined
    24a4:	05020200 	orr	z0.d, z0.d, #0x1ffff
    24a8:	00000204 	.inst	0x00000204 ; undefined
    24ac:	69050403 	.inst	0x69050403 ; undefined
    24b0:	0200746e 	.inst	0x0200746e ; undefined
    24b4:	023a0508 	.inst	0x023a0508 ; undefined
    24b8:	01020000 	.inst	0x01020000 ; undefined
    24bc:	00011508 	.inst	0x00011508 ; undefined
    24c0:	07020200 	.inst	0x07020200 ; undefined
    24c4:	0000013a 	.inst	0x0000013a ; undefined
    24c8:	00023104 	.inst	0x00023104 ; undefined
    24cc:	62340200 	.inst	0x62340200 ; undefined
    24d0:	02000000 	.inst	0x02000000 ; undefined
    24d4:	012d0704 	.inst	0x012d0704 ; undefined
    24d8:	08020000 	stxrb	w2, w0, [x0]
    24dc:	00012807 	.inst	0x00012807 ; undefined
    24e0:	016e0500 	.inst	0x016e0500 ; undefined
    24e4:	48010000 	stxrh	w1, w0, [x0]
    24e8:	00000057 	.inst	0x00000057 ; undefined
    24ec:	000e1730 	.inst	0x000e1730 ; undefined
    24f0:	ffff0000 	.inst	0xffff0000 ; undefined
    24f4:	00000024 	.inst	0x00000024 ; undefined
    24f8:	00000000 	.inst	0x00000000 ; undefined
    24fc:	00a99c01 	.inst	0x00a99c01 ; undefined
    2500:	a9060000 	stp	x0, x0, [x0, #96]
    2504:	30000000 	adr	x0, 2505 <__bss_size+0x24ff>
    2508:	00000e17 	.inst	0x00000e17 ; undefined
    250c:	14ffff00 	b	400210c <__bss_size+0x4002106>
    2510:	00000000 	.inst	0x00000000 ; undefined
    2514:	01000000 	.inst	0x01000000 ; undefined
    2518:	da070049 	sbc	x9, x2, x7
    251c:	01000007 	.inst	0x01000007 ; undefined
    2520:	36080143 	tbz	w3, #1, 2548 <__bss_size+0x2542>
    2524:	01000000 	.inst	0x01000000 ; undefined
    2528:	0e16e03e 	.inst	0x0e16e03e ; undefined
    252c:	ff000000 	.inst	0xff000000 ; undefined
    2530:	000024ff 	.inst	0x000024ff ; undefined
    2534:	00000000 	.inst	0x00000000 ; undefined
    2538:	f39c0100 	.inst	0xf39c0100 ; undefined
    253c:	09000000 	.inst	0x09000000 ; undefined
    2540:	000007eb 	.inst	0x000007eb ; undefined
    2544:	00573e01 	.inst	0x00573e01 ; undefined
    2548:	50010000 	adr	x0, 454a <__bss_size+0x4544>
    254c:	0000f306 	.inst	0x0000f306 ; undefined
    2550:	0e16e000 	.inst	0x0e16e000 ; undefined
    2554:	ff000000 	.inst	0xff000000 ; undefined
    2558:	000014ff 	.inst	0x000014ff ; undefined
    255c:	00000000 	.inst	0x00000000 ; undefined
    2560:	003f0100 	.inst	0x003f0100 ; NYI
    2564:	00083607 	.inst	0x00083607 ; undefined
    2568:	01390100 	.inst	0x01390100 ; undefined
    256c:	0007cf0a 	.inst	0x0007cf0a ; undefined
    2570:	e0040100 	.inst	0xe0040100 ; undefined
    2574:	00000e15 	.inst	0x00000e15 ; undefined
    2578:	e0ffff00 	.inst	0xe0ffff00 ; undefined
    257c:	00000000 	.inst	0x00000000 ; undefined
    2580:	01000000 	.inst	0x01000000 ; undefined
    2584:	0001569c 	.inst	0x0001569c ; undefined
    2588:	00720b00 	.inst	0x00720b00 ; undefined
    258c:	00570501 	.inst	0x00570501 ; undefined
    2590:	540c0000 	b.eq	1a590 <__bss_size+0x1a58a>  // b.none
    2594:	00000e16 	.inst	0x00000e16 ; undefined
    2598:	84ffff00 	ld1rh	{z0.d}, p7/z, [x24, #126]
    259c:	3d000001 	str	b1, [x0]
    25a0:	0d000001 	st1	{v1.b}[0], [x0]
    25a4:	3e015001 	.inst	0x3e015001 ; undefined
    25a8:	0151010d 	.inst	0x0151010d ; undefined
    25ac:	600e0032 	.inst	0x600e0032 ; undefined
    25b0:	00000e16 	.inst	0x00000e16 ; undefined
    25b4:	84ffff00 	ld1rh	{z0.d}, p7/z, [x24, #126]
    25b8:	0d000001 	st1	{v1.b}[0], [x0]
    25bc:	3f015001 	.inst	0x3f015001 ; undefined
    25c0:	0151010d 	.inst	0x0151010d ; undefined
    25c4:	0f000032 	.inst	0x0f000032 ; undefined
    25c8:	000000f3 	.inst	0x000000f3 ; undefined
    25cc:	000e16c0 	.inst	0x000e16c0 ; undefined
    25d0:	ffff0000 	.inst	0xffff0000 ; undefined
    25d4:	00000018 	.inst	0x00000018 ; undefined
    25d8:	00000000 	.inst	0x00000000 ; undefined
    25dc:	a90f9c01 	stp	x1, x7, [x0, #248]
    25e0:	10000000 	adr	x0, 25e0 <__bss_size+0x25da>
    25e4:	00000e17 	.inst	0x00000e17 ; undefined
    25e8:	18ffff00 	ldr	w0, 25c8 <__bss_size+0x25c2>
    25ec:	00000000 	.inst	0x00000000 ; undefined
    25f0:	01000000 	.inst	0x01000000 ; undefined
    25f4:	06cf109c 	.inst	0x06cf109c ; undefined
    25f8:	06cf0000 	.inst	0x06cf0000 ; undefined
    25fc:	21030000 	.inst	0x21030000 ; undefined
    2600:	00083700 	.inst	0x00083700 ; undefined
    2604:	01000400 	.inst	0x01000400 ; undefined
    2608:	08000009 	stxrb	w0, w9, [x0]
    260c:	00006401 	.inst	0x00006401 ; undefined
    2610:	09040c00 	.inst	0x09040c00 ; undefined
    2614:	024b0000 	.inst	0x024b0000 ; undefined
    2618:	17600000 	b	fffffffffd802618 <__end+0xfffffd71bcb8>
    261c:	0000000e 	.inst	0x0000000e ; undefined
    2620:	0548ffff 	.inst	0x0548ffff ; undefined
    2624:	00000000 	.inst	0x00000000 ; undefined
    2628:	0d860000 	st1	{v0.b}[0], [x0], x6
    262c:	01020000 	.inst	0x01020000 ; undefined
    2630:	00011706 	.inst	0x00011706 ; undefined
    2634:	05020200 	orr	z0.d, z0.d, #0x1ffff
    2638:	00000204 	.inst	0x00000204 ; undefined
    263c:	69050403 	.inst	0x69050403 ; undefined
    2640:	0200746e 	.inst	0x0200746e ; undefined
    2644:	023a0508 	.inst	0x023a0508 ; undefined
    2648:	01020000 	.inst	0x01020000 ; undefined
    264c:	00011508 	.inst	0x00011508 ; undefined
    2650:	07020200 	.inst	0x07020200 ; undefined
    2654:	0000013a 	.inst	0x0000013a ; undefined
    2658:	00023104 	.inst	0x00023104 ; undefined
    265c:	67340200 	.inst	0x67340200 ; undefined
    2660:	05000000 	orr	z0.s, z0.s, #0x1
    2664:	00000057 	.inst	0x00000057 ; undefined
    2668:	2d070402 	stp	s2, s1, [x0, #56]
    266c:	02000001 	.inst	0x02000001 ; undefined
    2670:	01280708 	.inst	0x01280708 ; undefined
    2674:	9e040000 	.inst	0x9e040000 ; undefined
    2678:	02000008 	.inst	0x02000008 ; undefined
    267c:	00006e56 	.inst	0x00006e56 ; undefined
    2680:	00420600 	.inst	0x00420600 ; undefined
    2684:	08030000 	stxrb	w3, w0, [x0]
    2688:	00000095 	.inst	0x00000095 ; undefined
    268c:	68b00309 	.inst	0x68b00309 ; undefined
    2690:	0000000e 	.inst	0x0000000e ; undefined
    2694:	0807ffff 	stlxrb	w7, wzr, [sp]
    2698:	00000049 	.inst	0x00000049 ; undefined
    269c:	00000006 	.inst	0x00000006 ; undefined
    26a0:	62090300 	.inst	0x62090300 ; undefined
    26a4:	09000000 	.inst	0x09000000 ; undefined
    26a8:	0e68c803 	.inst	0x0e68c803 ; undefined
    26ac:	ff000000 	.inst	0xff000000 ; undefined
    26b0:	017906ff 	.inst	0x017906ff ; undefined
    26b4:	0a030000 	and	w0, w0, w3
    26b8:	00000062 	.inst	0x00000062 ; undefined
    26bc:	68c00309 	ldpsw	x9, x0, [x24], #0
    26c0:	0000000e 	.inst	0x0000000e ; undefined
    26c4:	d006ffff 	adrp	xzr, e000000 <__bss_size+0xdfffffa>
    26c8:	03000000 	.inst	0x03000000 ; undefined
    26cc:	0000620b 	.inst	0x0000620b ; undefined
    26d0:	b8030900 	sttr	w0, [x8, #48]
    26d4:	00000e68 	.inst	0x00000e68 ; undefined
    26d8:	06ffff00 	.inst	0x06ffff00 ; undefined
    26dc:	000001d9 	.inst	0x000001d9 ; undefined
    26e0:	00570c03 	.inst	0x00570c03 ; undefined
    26e4:	03090000 	.inst	0x03090000 ; undefined
    26e8:	000e68c4 	.inst	0x000e68c4 ; undefined
    26ec:	ffff0000 	.inst	0xffff0000 ; undefined
    26f0:	00002306 	.inst	0x00002306 ; undefined
    26f4:	570d0300 	.inst	0x570d0300 ; undefined
    26f8:	09000000 	.inst	0x09000000 ; undefined
    26fc:	0e68cc03 	.inst	0x0e68cc03 ; undefined
    2700:	ff000000 	.inst	0xff000000 ; undefined
    2704:	021506ff 	.inst	0x021506ff ; undefined
    2708:	0e030000 	tbl	v0.8b, {v0.16b}, v3.8b
    270c:	00000057 	.inst	0x00000057 ; undefined
    2710:	68bc0309 	.inst	0x68bc0309 ; undefined
    2714:	0000000e 	.inst	0x0000000e ; undefined
    2718:	f208ffff 	.inst	0xf208ffff ; undefined
    271c:	01000008 	.inst	0x01000008 ; undefined
    2720:	0e1bc0cd 	.inst	0x0e1bc0cd ; undefined
    2724:	ff000000 	.inst	0xff000000 ; undefined
    2728:	0000e8ff 	.inst	0x0000e8ff ; undefined
    272c:	00000000 	.inst	0x00000000 ; undefined
    2730:	609c0100 	.inst	0x609c0100 ; undefined
    2734:	09000002 	.inst	0x09000002 ; undefined
    2738:	cd010078 	.inst	0xcd010078 ; undefined
    273c:	00000057 	.inst	0x00000057 ; undefined
    2740:	00002854 	.inst	0x00002854 ; undefined
    2744:	01007909 	.inst	0x01007909 ; undefined
    2748:	000057cd 	.inst	0x000057cd ; undefined
    274c:	0028f200 	.inst	0x0028f200 ; NYI
    2750:	08b90a00 	.inst	0x08b90a00 ; undefined
    2754:	cd010000 	.inst	0xcd010000 ; undefined
    2758:	00000057 	.inst	0x00000057 ; undefined
    275c:	00002990 	.inst	0x00002990 ; undefined
    2760:	0008e50b 	.inst	0x0008e50b ; undefined
    2764:	57db0100 	.inst	0x57db0100 ; undefined
    2768:	f2000000 	ands	x0, x0, #0x100000001
    276c:	0c000029 	st4	{v9.8b-v12.8b}, [x1]
    2770:	dd010052 	.inst	0xdd010052 ; undefined
    2774:	00000049 	.inst	0x00000049 ; undefined
    2778:	00002a2a 	.inst	0x00002a2a ; undefined
    277c:	0100470c 	.inst	0x0100470c ; undefined
    2780:	000049de 	.inst	0x000049de ; undefined
    2784:	002a4d00 	.inst	0x002a4d00 ; NYI
    2788:	00420c00 	.inst	0x00420c00 ; undefined
    278c:	0049df01 	.inst	0x0049df01 ; undefined
    2790:	2a740000 	orn	w0, w0, w20, lsr #0
    2794:	410c0000 	.inst	0x410c0000 ; undefined
    2798:	49e00100 	.inst	0x49e00100 ; undefined
    279c:	9b000000 	madd	x0, x0, x0, x0
    27a0:	0d00002a 	st1	{v10.b}[0], [x1]
    27a4:	000e1c64 	.inst	0x000e1c64 ; undefined
    27a8:	ffff0000 	.inst	0xffff0000 ; undefined
    27ac:	000007d7 	.inst	0x000007d7 ; undefined
    27b0:	000001c8 	.inst	0x000001c8 ; undefined
    27b4:	0950010e 	.inst	0x0950010e ; undefined
    27b8:	0e510003 	.inst	0x0e510003 ; undefined
    27bc:	ff000000 	.inst	0xff000000 ; undefined
    27c0:	51010eff 	sub	wsp, w23, #0x43
    27c4:	5001f303 	adr	x3, 6626 <__bss_size+0x6620>
    27c8:	1c740d00 	ldr	s0, ea968 <__bss_size+0xea962>
    27cc:	0000000e 	.inst	0x0000000e ; undefined
    27d0:	07d7ffff 	.inst	0x07d7ffff ; undefined
    27d4:	01e70000 	.inst	0x01e70000 ; undefined
    27d8:	010e0000 	.inst	0x010e0000 ; undefined
    27dc:	18030950 	ldr	w16, 8904 <__bss_size+0x88fe>
    27e0:	00000e51 	.inst	0x00000e51 ; undefined
    27e4:	00ffff00 	.inst	0x00ffff00 ; undefined
    27e8:	0e1c800d 	.inst	0x0e1c800d ; undefined
    27ec:	ff000000 	.inst	0xff000000 ; undefined
    27f0:	0007e2ff 	.inst	0x0007e2ff ; undefined
    27f4:	00020600 	.inst	0x00020600 ; undefined
    27f8:	50010e00 	adr	x0, 49ba <__bss_size+0x49b4>
    27fc:	51380309 	sub	w9, w24, #0xe00
    2800:	0000000e 	.inst	0x0000000e ; undefined
    2804:	0d00ffff 	.inst	0x0d00ffff ; undefined
    2808:	000e1c8c 	.inst	0x000e1c8c ; undefined
    280c:	ffff0000 	.inst	0xffff0000 ; undefined
    2810:	000007d7 	.inst	0x000007d7 ; undefined
    2814:	00000225 	.inst	0x00000225 ; undefined
    2818:	0950010e 	.inst	0x0950010e ; undefined
    281c:	0e514803 	.inst	0x0e514803 ; undefined
    2820:	ff000000 	.inst	0xff000000 ; undefined
    2824:	9c0d00ff 	ldr	q31, 1c840 <__bss_size+0x1c83a>
    2828:	00000e1c 	.inst	0x00000e1c ; undefined
    282c:	d7ffff00 	.inst	0xd7ffff00 ; undefined
    2830:	44000007 	.inst	0x44000007 ; undefined
    2834:	0e000002 	tbl	v2.8b, {v0.16b}, v0.8b
    2838:	03095001 	.inst	0x03095001 ; undefined
    283c:	000e5160 	.inst	0x000e5160 ; undefined
    2840:	ffff0000 	.inst	0xffff0000 ; undefined
    2844:	1ca80f00 	ldr	s0, fffffffffff52a24 <__end+0xffffffe6c0c4>
    2848:	0000000e 	.inst	0x0000000e ; undefined
    284c:	07e2ffff 	.inst	0x07e2ffff ; undefined
    2850:	010e0000 	.inst	0x010e0000 ; undefined
    2854:	80030950 	.inst	0x80030950 ; undefined
    2858:	00000e51 	.inst	0x00000e51 ; undefined
    285c:	00ffff00 	.inst	0x00ffff00 ; undefined
    2860:	04d31000 	umulh	z0.d, p4/m, z0.d, z0.d
    2864:	9f010000 	.inst	0x9f010000 ; undefined
    2868:	00000057 	.inst	0x00000057 ; undefined
    286c:	000e1a90 	.inst	0x000e1a90 ; undefined
    2870:	ffff0000 	.inst	0xffff0000 ; undefined
    2874:	0000012c 	.inst	0x0000012c ; undefined
    2878:	00000000 	.inst	0x00000000 ; undefined
    287c:	03dc9c01 	.inst	0x03dc9c01 ; undefined
    2880:	9b0a0000 	madd	x0, x0, x10, x0
    2884:	01000004 	.inst	0x01000004 ; undefined
    2888:	0000579f 	.inst	0x0000579f ; undefined
    288c:	002ac000 	.inst	0x002ac000 ; NYI
    2890:	08541100 	ldxrb	w0, [x8]
    2894:	a0010000 	.inst	0xa0010000 ; undefined
    2898:	000003dc 	.inst	0x000003dc ; undefined
    289c:	e0910310 	.inst	0xe0910310 ; undefined
    28a0:	08e00b7e 	.inst	0x08e00b7e ; undefined
    28a4:	c1010000 	.inst	0xc1010000 ; undefined
    28a8:	000003ec 	.inst	0x000003ec ; undefined
    28ac:	00002b0e 	.inst	0x00002b0e ; undefined
    28b0:	000a5012 	.inst	0x000a5012 ; undefined
    28b4:	00037b00 	.inst	0x00037b00 ; undefined
    28b8:	00690c00 	.inst	0x00690c00 ; undefined
    28bc:	0057c201 	.inst	0x0057c201 ; undefined
    28c0:	2b310000 	adds	w0, w0, w17, uxtb
    28c4:	f9130000 	str	x0, [x0, #9728]
    28c8:	08000003 	stxrb	w0, w3, [x0]
    28cc:	00000e1b 	.inst	0x00000e1b ; undefined
    28d0:	80ffff00 	.inst	0x80ffff00 ; undefined
    28d4:	0100000a 	.inst	0x0100000a ; undefined
    28d8:	00033dc3 	.inst	0x00033dc3 ; undefined
    28dc:	04051400 	.inst	0x04051400 ; undefined
    28e0:	2ba40000 	.inst	0x2ba40000 ; undefined
    28e4:	80150000 	.inst	0x80150000 ; undefined
    28e8:	1600000a 	b	fffffffff8002910 <__end+0xfffff7f1bfb0>
    28ec:	00000770 	.inst	0x00000770 ; undefined
    28f0:	00077916 	.inst	0x00077916 ; undefined
    28f4:	1b141700 	madd	w0, w24, w20, w5
    28f8:	0000000e 	.inst	0x0000000e ; undefined
    28fc:	07edffff 	.inst	0x07edffff ; undefined
    2900:	240d0000 	cmphs	p0.b, p0/z, z0.b, z13.b
    2904:	00000e1b 	.inst	0x00000e1b ; undefined
    2908:	edffff00 	.inst	0xedffff00 ; undefined
    290c:	19000007 	.inst	0x19000007 ; undefined
    2910:	0e000003 	tbl	v3.8b, {v0.16b}, v0.8b
    2914:	83025001 	.inst	0x83025001 ; undefined
    2918:	60170030 	.inst	0x60170030 ; undefined
    291c:	00000e1b 	.inst	0x00000e1b ; undefined
    2920:	edffff00 	.inst	0xedffff00 ; undefined
    2924:	0f000007 	.inst	0x0f000007 ; undefined
    2928:	000e1b70 	.inst	0x000e1b70 ; undefined
    292c:	ffff0000 	.inst	0xffff0000 ; undefined
    2930:	000007ed 	.inst	0x000007ed ; undefined
    2934:	0350010e 	.inst	0x0350010e ; undefined
    2938:	0000d783 	.inst	0x0000d783 ; undefined
    293c:	2c0d0000 	stnp	s0, s0, [x0, #104]
    2940:	00000e1b 	.inst	0x00000e1b ; undefined
    2944:	edffff00 	.inst	0xedffff00 ; undefined
    2948:	55000007 	.inst	0x55000007 ; undefined
    294c:	0e000003 	tbl	v3.8b, {v0.16b}, v0.8b
    2950:	08025001 	stxrb	w2, w1, [x0]
    2954:	780d0020 	sturh	w0, [x1, #208]
    2958:	00000e1b 	.inst	0x00000e1b ; undefined
    295c:	edffff00 	.inst	0xedffff00 ; undefined
    2960:	6d000007 	stp	d7, d0, [x0]
    2964:	0e000003 	tbl	v3.8b, {v0.16b}, v0.8b
    2968:	08025001 	stxrb	w2, w1, [x0]
    296c:	84170020 	ld1sb	{z0.s}, p0/z, [x1, z23.s, uxtw]
    2970:	00000e1b 	.inst	0x00000e1b ; undefined
    2974:	f8ffff00 	ldrab	x0, [x24, #-8]!
    2978:	00000007 	.inst	0x00000007 ; undefined
    297c:	0e1ac00d 	.inst	0x0e1ac00d ; undefined
    2980:	ff000000 	.inst	0xff000000 ; undefined
    2984:	000803ff 	.inst	0x000803ff ; undefined
    2988:	00039400 	.inst	0x00039400 ; undefined
    298c:	50010e00 	adr	x0, 4b4e <__bss_size+0x4b48>
    2990:	00d08f03 	.inst	0x00d08f03 ; undefined
    2994:	1ac41700 	.inst	0x1ac41700 ; undefined
    2998:	0000000e 	.inst	0x0000000e ; undefined
    299c:	080effff 	stlxrb	w14, wzr, [sp]
    29a0:	e40d0000 	.inst	0xe40d0000 ; undefined
    29a4:	00000e1a 	.inst	0x00000e1a ; undefined
    29a8:	d7ffff00 	.inst	0xd7ffff00 ; undefined
    29ac:	c0000007 	.inst	0xc0000007 ; undefined
    29b0:	0e000003 	tbl	v3.8b, {v0.16b}, v0.8b
    29b4:	03095001 	.inst	0x03095001 ; undefined
    29b8:	000e50e8 	.inst	0x000e50e8 ; undefined
    29bc:	ffff0000 	.inst	0xffff0000 ; undefined
    29c0:	1bbc0f00 	.inst	0x1bbc0f00 ; undefined
    29c4:	0000000e 	.inst	0x0000000e ; undefined
    29c8:	07e2ffff 	.inst	0x07e2ffff ; undefined
    29cc:	010e0000 	.inst	0x010e0000 ; undefined
    29d0:	c8030950 	stxr	w3, x16, [x10]
    29d4:	00000e50 	.inst	0x00000e50 ; undefined
    29d8:	00ffff00 	.inst	0x00ffff00 ; undefined
    29dc:	00571800 	.inst	0x00571800 ; undefined
    29e0:	03ec0000 	.inst	0x03ec0000 ; undefined
    29e4:	6e190000 	ext	v0.16b, v0.16b, v25.16b, #0
    29e8:	27000000 	.inst	0x27000000 ; undefined
    29ec:	f2080700 	ands	x0, x24, #0x300000003000000
    29f0:	02000003 	.inst	0x02000003 ; undefined
    29f4:	011e0801 	.inst	0x011e0801 ; undefined
    29f8:	481a0000 	stxrh	w26, w0, [x0]
    29fc:	01000008 	.inst	0x01000008 ; undefined
    2a00:	04270190 	add	z16.b, z12.b, z7.b
    2a04:	781b0000 	sturh	w0, [x0, #-80]
    2a08:	01000009 	.inst	0x01000009 ; undefined
    2a0c:	0003f290 	.inst	0x0003f290 ; undefined
    2a10:	08841c00 	stllrb	w0, [x0]
    2a14:	91010000 	add	x0, x0, #0x40
    2a18:	00000057 	.inst	0x00000057 ; undefined
    2a1c:	0008891c 	.inst	0x0008891c ; undefined
    2a20:	57970100 	.inst	0x57970100 ; undefined
    2a24:	00000000 	.inst	0x00000000 ; undefined
    2a28:	00031508 	.inst	0x00031508 ; undefined
    2a2c:	60090100 	.inst	0x60090100 ; undefined
    2a30:	00000e17 	.inst	0x00000e17 ; undefined
    2a34:	c0ffff00 	.inst	0xc0ffff00 ; undefined
    2a38:	00000002 	.inst	0x00000002 ; undefined
    2a3c:	01000000 	.inst	0x01000000 ; undefined
    2a40:	00073c9c 	.inst	0x00073c9c ; undefined
    2a44:	096a0a00 	.inst	0x096a0a00 ; undefined
    2a48:	09010000 	.inst	0x09010000 ; undefined
    2a4c:	00000057 	.inst	0x00000057 ; undefined
    2a50:	00002c02 	.inst	0x00002c02 ; undefined
    2a54:	00098d0a 	.inst	0x00098d0a ; undefined
    2a58:	57090100 	.inst	0x57090100 ; undefined
    2a5c:	61000000 	.inst	0x61000000 ; undefined
    2a60:	1d00002c 	.inst	0x1d00002c ; undefined
    2a64:	0000094e 	.inst	0x0000094e ; undefined
    2a68:	00570a01 	.inst	0x00570a01 ; undefined
    2a6c:	1d200000 	.inst	0x1d200000 ; undefined
    2a70:	000008a8 	.inst	0x000008a8 ; undefined
    2a74:	00570b01 	.inst	0x00570b01 ; undefined
    2a78:	1d000000 	.inst	0x1d000000 ; undefined
    2a7c:	0000085c 	.inst	0x0000085c ; undefined
    2a80:	00570c01 	.inst	0x00570c01 ; undefined
    2a84:	11000000 	add	w0, w0, #0x0
    2a88:	00000854 	.inst	0x00000854 ; undefined
    2a8c:	073c0e01 	.inst	0x073c0e01 ; undefined
    2a90:	03100000 	.inst	0x03100000 ; undefined
    2a94:	1e7f8091 	.inst	0x1e7f8091 ; undefined
    2a98:	0000097e 	.inst	0x0000097e ; undefined
    2a9c:	00576501 	.inst	0x00576501 ; undefined
    2aa0:	55010000 	.inst	0x55010000 ; undefined
    2aa4:	00099c0b 	.inst	0x00099c0b ; undefined
    2aa8:	57660100 	.inst	0x57660100 ; undefined
    2aac:	c0000000 	.inst	0xc0000000 ; undefined
    2ab0:	0b00002c 	add	w12, w1, w0
    2ab4:	0000088e 	.inst	0x0000088e ; undefined
    2ab8:	00576701 	.inst	0x00576701 ; undefined
    2abc:	2d420000 	ldp	s0, s0, [x0, #16]
    2ac0:	d00b0000 	adrp	x0, 16004000 <__bss_size+0x16003ffa>
    2ac4:	01000008 	.inst	0x01000008 ; undefined
    2ac8:	00005768 	.inst	0x00005768 ; undefined
    2acc:	002e1c00 	.inst	0x002e1c00 ; NYI
    2ad0:	00160b00 	.inst	0x00160b00 ; undefined
    2ad4:	7f010000 	.inst	0x7f010000 ; undefined
    2ad8:	00000075 	.inst	0x00000075 ; undefined
    2adc:	00002e9e 	.inst	0x00002e9e ; undefined
    2ae0:	0009be0b 	.inst	0x0009be0b ; undefined
    2ae4:	75800100 	.inst	0x75800100 ; undefined
    2ae8:	d4000000 	.inst	0xd4000000 ; undefined
    2aec:	0d00002e 	st1	{v14.b}[0], [x1]
    2af0:	000e1808 	.inst	0x000e1808 ; undefined
    2af4:	ffff0000 	.inst	0xffff0000 ; undefined
    2af8:	00000803 	.inst	0x00000803 ; undefined
    2afc:	00000507 	.inst	0x00000507 ; undefined
    2b00:	0350010e 	.inst	0x0350010e ; undefined
    2b04:	0001908f 	.inst	0x0001908f ; undefined
    2b08:	0e180c17 	.inst	0x0e180c17 ; undefined
    2b0c:	ff000000 	.inst	0xff000000 ; undefined
    2b10:	00080eff 	.inst	0x00080eff ; undefined
    2b14:	18dc1700 	ldr	w0, fffffffffffbadf4 <__end+0xffffffed4494>
    2b18:	0000000e 	.inst	0x0000000e ; undefined
    2b1c:	0819ffff 	stlxrb	w25, wzr, [sp]
    2b20:	f40d0000 	.inst	0xf40d0000 ; undefined
    2b24:	00000e18 	.inst	0x00000e18 ; undefined
    2b28:	24ffff00 	cmplo	p0.d, p7/z, z24.d, #127
    2b2c:	39000008 	strb	w8, [x0]
    2b30:	0e000005 	tbl	v5.8b, {v0.16b}, v0.8b
    2b34:	85025001 	ld1w	{z1.s}, p4/z, [x0, z2.s, uxtw]
    2b38:	100d0000 	adr	x0, 1cb38 <__bss_size+0x1cb32>
    2b3c:	00000e19 	.inst	0x00000e19 ; undefined
    2b40:	d7ffff00 	.inst	0xd7ffff00 ; undefined
    2b44:	58000007 	ldr	x7, 2b44 <__bss_size+0x2b3e>
    2b48:	0e000005 	tbl	v5.8b, {v0.16b}, v0.8b
    2b4c:	03095001 	.inst	0x03095001 ; undefined
    2b50:	000e4f08 	.inst	0x000e4f08 ; undefined
    2b54:	ffff0000 	.inst	0xffff0000 ; undefined
    2b58:	19200d00 	.inst	0x19200d00 ; undefined
    2b5c:	0000000e 	.inst	0x0000000e ; undefined
    2b60:	07d7ffff 	.inst	0x07d7ffff ; undefined
    2b64:	05770000 	.inst	0x05770000 ; undefined
    2b68:	010e0000 	.inst	0x010e0000 ; undefined
    2b6c:	40030950 	.inst	0x40030950 ; undefined
    2b70:	00000e4f 	.inst	0x00000e4f ; undefined
    2b74:	00ffff00 	.inst	0x00ffff00 ; undefined
    2b78:	0e19300d 	tbx	v13.8b, {v0.16b, v1.16b}, v25.8b
    2b7c:	ff000000 	.inst	0xff000000 ; undefined
    2b80:	0007d7ff 	.inst	0x0007d7ff ; undefined
    2b84:	00059600 	.inst	0x00059600 ; undefined
    2b88:	50010e00 	adr	x0, 4d4a <__bss_size+0x4d44>
    2b8c:	4f780309 	.inst	0x4f780309 ; undefined
    2b90:	0000000e 	.inst	0x0000000e ; undefined
    2b94:	0d00ffff 	.inst	0x0d00ffff ; undefined
    2b98:	000e194c 	.inst	0x000e194c ; undefined
    2b9c:	ffff0000 	.inst	0xffff0000 ; undefined
    2ba0:	000007d7 	.inst	0x000007d7 ; undefined
    2ba4:	000005b5 	.inst	0x000005b5 ; undefined
    2ba8:	0950010e 	.inst	0x0950010e ; undefined
    2bac:	0e4fb003 	.inst	0x0e4fb003 ; undefined
    2bb0:	ff000000 	.inst	0xff000000 ; undefined
    2bb4:	5c0d00ff 	ldr	d31, 1cbd0 <__bss_size+0x1cbca>
    2bb8:	00000e19 	.inst	0x00000e19 ; undefined
    2bbc:	d7ffff00 	.inst	0xd7ffff00 ; undefined
    2bc0:	da000007 	sbc	x7, x0, x0
    2bc4:	0e000005 	tbl	v5.8b, {v0.16b}, v0.8b
    2bc8:	03095001 	.inst	0x03095001 ; undefined
    2bcc:	000e4fe8 	.inst	0x000e4fe8 ; undefined
    2bd0:	ffff0000 	.inst	0xffff0000 ; undefined
    2bd4:	0251010e 	.inst	0x0251010e ; undefined
    2bd8:	0d000086 	st1	{v6.b}[0], [x4]
    2bdc:	000e196c 	.inst	0x000e196c ; undefined
    2be0:	ffff0000 	.inst	0xffff0000 ; undefined
    2be4:	000007d7 	.inst	0x000007d7 ; undefined
    2be8:	000005ff 	.inst	0x000005ff ; undefined
    2bec:	0950010e 	.inst	0x0950010e ; undefined
    2bf0:	0e502003 	.inst	0x0e502003 ; undefined
    2bf4:	ff000000 	.inst	0xff000000 ; undefined
    2bf8:	51010eff 	sub	wsp, w23, #0x43
    2bfc:	00008302 	.inst	0x00008302 ; undefined
    2c00:	0e19740d 	.inst	0x0e19740d ; undefined
    2c04:	ff000000 	.inst	0xff000000 ; undefined
    2c08:	00082fff 	.inst	0x00082fff ; undefined
    2c0c:	00061700 	.inst	0x00061700 ; undefined
    2c10:	50010e00 	adr	x0, 4dd2 <__bss_size+0x4dcc>
    2c14:	00008602 	.inst	0x00008602 ; undefined
    2c18:	0e19840d 	.inst	0x0e19840d ; undefined
    2c1c:	ff000000 	.inst	0xff000000 ; undefined
    2c20:	0007d7ff 	.inst	0x0007d7ff ; undefined
    2c24:	00063600 	.inst	0x00063600 ; undefined
    2c28:	50010e00 	adr	x0, 4dea <__bss_size+0x4de4>
    2c2c:	50580309 	adr	x9, b2c8e <__bss_size+0xb2c88>
    2c30:	0000000e 	.inst	0x0000000e ; undefined
    2c34:	0d00ffff 	.inst	0x0d00ffff ; undefined
    2c38:	000e198c 	.inst	0x000e198c ; undefined
    2c3c:	ffff0000 	.inst	0xffff0000 ; undefined
    2c40:	0000082f 	.inst	0x0000082f ; undefined
    2c44:	0000064e 	.inst	0x0000064e ; undefined
    2c48:	0250010e 	.inst	0x0250010e ; undefined
    2c4c:	0d000083 	st1	{v3.b}[0], [x4]
    2c50:	000e199c 	.inst	0x000e199c ; undefined
    2c54:	ffff0000 	.inst	0xffff0000 ; undefined
    2c58:	000007d7 	.inst	0x000007d7 ; undefined
    2c5c:	0000066d 	.inst	0x0000066d ; undefined
    2c60:	0950010e 	.inst	0x0950010e ; undefined
    2c64:	0e509003 	.inst	0x0e509003 ; undefined
    2c68:	ff000000 	.inst	0xff000000 ; undefined
    2c6c:	a40d00ff 	ld1rqb	{z31.b}, p0/z, [x7, x13]
    2c70:	00000e19 	.inst	0x00000e19 ; undefined
    2c74:	24ffff00 	cmplo	p0.d, p7/z, z24.d, #127
    2c78:	85000008 	.inst	0x85000008 ; undefined
    2c7c:	0e000006 	tbl	v6.8b, {v0.16b}, v0.8b
    2c80:	85025001 	ld1w	{z1.s}, p4/z, [x0, z2.s, uxtw]
    2c84:	d00d0000 	adrp	x0, 1a004000 <__bss_size+0x1a003ffa>
    2c88:	00000e19 	.inst	0x00000e19 ; undefined
    2c8c:	e2ffff00 	.inst	0xe2ffff00 ; undefined
    2c90:	a4000007 	ld1rqb	{z7.b}, p0/z, [x0, x0]
    2c94:	0e000006 	tbl	v6.8b, {v0.16b}, v0.8b
    2c98:	03095001 	.inst	0x03095001 ; undefined
    2c9c:	000e4de8 	.inst	0x000e4de8 ; undefined
    2ca0:	ffff0000 	.inst	0xffff0000 ; undefined
    2ca4:	19e00d00 	.inst	0x19e00d00 ; undefined
    2ca8:	0000000e 	.inst	0x0000000e ; undefined
    2cac:	07e2ffff 	.inst	0x07e2ffff ; undefined
    2cb0:	06c30000 	.inst	0x06c30000 ; undefined
    2cb4:	010e0000 	.inst	0x010e0000 ; undefined
    2cb8:	10030950 	adr	x16, 8de0 <__bss_size+0x8dda>
    2cbc:	00000e4e 	.inst	0x00000e4e ; undefined
    2cc0:	00ffff00 	.inst	0x00ffff00 ; undefined
    2cc4:	0e19f00d 	.inst	0x0e19f00d ; undefined
    2cc8:	ff000000 	.inst	0xff000000 ; undefined
    2ccc:	0007e2ff 	.inst	0x0007e2ff ; undefined
    2cd0:	0006e200 	.inst	0x0006e200 ; undefined
    2cd4:	50010e00 	adr	x0, 4e96 <__bss_size+0x4e90>
    2cd8:	4e480309 	.inst	0x4e480309 ; undefined
    2cdc:	0000000e 	.inst	0x0000000e ; undefined
    2ce0:	0d00ffff 	.inst	0x0d00ffff ; undefined
    2ce4:	000e1a00 	.inst	0x000e1a00 ; undefined
    2ce8:	ffff0000 	.inst	0xffff0000 ; undefined
    2cec:	000007e2 	.inst	0x000007e2 ; undefined
    2cf0:	00000701 	.inst	0x00000701 ; undefined
    2cf4:	0950010e 	.inst	0x0950010e ; undefined
    2cf8:	0e4e6803 	trn2	v3.4h, v0.4h, v14.4h
    2cfc:	ff000000 	.inst	0xff000000 ; undefined
    2d00:	0c0d00ff 	.inst	0x0c0d00ff ; undefined
    2d04:	00000e1a 	.inst	0x00000e1a ; undefined
    2d08:	e2ffff00 	.inst	0xe2ffff00 ; undefined
    2d0c:	20000007 	.inst	0x20000007 ; undefined
    2d10:	0e000007 	tbl	v7.8b, {v0.16b}, v0.8b
    2d14:	03095001 	.inst	0x03095001 ; undefined
    2d18:	000e4e90 	.inst	0x000e4e90 ; undefined
    2d1c:	ffff0000 	.inst	0xffff0000 ; undefined
    2d20:	1a200f00 	.inst	0x1a200f00 ; undefined
    2d24:	0000000e 	.inst	0x0000000e ; undefined
    2d28:	07e2ffff 	.inst	0x07e2ffff ; undefined
    2d2c:	010e0000 	.inst	0x010e0000 ; undefined
    2d30:	d8030950 	prfm	pstl1keep, 8e58 <__bss_size+0x8e52>
    2d34:	00000e4d 	.inst	0x00000e4d ; undefined
    2d38:	00ffff00 	.inst	0x00ffff00 ; undefined
    2d3c:	00571800 	.inst	0x00571800 ; undefined
    2d40:	074c0000 	.inst	0x074c0000 ; undefined
    2d44:	6e190000 	ext	v0.16b, v0.16b, v25.16b, #0
    2d48:	1e000000 	.inst	0x1e000000 ; undefined
    2d4c:	03f91f00 	.inst	0x03f91f00 ; undefined
    2d50:	1a200000 	.inst	0x1a200000 ; undefined
    2d54:	0000000e 	.inst	0x0000000e ; undefined
    2d58:	0064ffff 	.inst	0x0064ffff ; undefined
    2d5c:	00000000 	.inst	0x00000000 ; undefined
    2d60:	9c010000 	ldr	q0, 4d60 <__bss_size+0x4d5a>
    2d64:	000007d7 	.inst	0x000007d7 ; undefined
    2d68:	00040514 	.inst	0x00040514 ; undefined
    2d6c:	002ef700 	.inst	0x002ef700 ; NYI
    2d70:	04102000 	movprfx	z0.b, p0/z, z0.b
    2d74:	2f430000 	mla	v0.4h, v0.4h, v3.h[0]
    2d78:	1b200000 	.inst	0x1b200000 ; undefined
    2d7c:	ea000004 	ands	x4, x0, x0
    2d80:	0d00002f 	st1	{v15.b}[0], [x1]
    2d84:	000e1a48 	.inst	0x000e1a48 ; undefined
    2d88:	ffff0000 	.inst	0xffff0000 ; undefined
    2d8c:	000007ed 	.inst	0x000007ed ; undefined
    2d90:	0000079f 	.inst	0x0000079f ; undefined
    2d94:	0750010e 	.inst	0x0750010e ; undefined
    2d98:	345001f3 	cbz	w19, a2dd4 <__bss_size+0xa2dce>
    2d9c:	00572325 	.inst	0x00572325 ; undefined
    2da0:	0e1a6021 	tbl	v1.8b, {v1.16b-v4.16b}, v26.8b
    2da4:	ff000000 	.inst	0xff000000 ; undefined
    2da8:	0007edff 	.inst	0x0007edff ; undefined
    2dac:	1a6c0d00 	.inst	0x1a6c0d00 ; undefined
    2db0:	0000000e 	.inst	0x0000000e ; undefined
    2db4:	07edffff 	.inst	0x07edffff ; undefined
    2db8:	07c90000 	.inst	0x07c90000 ; undefined
    2dbc:	010e0000 	.inst	0x010e0000 ; undefined
    2dc0:	01f30750 	.inst	0x01f30750 ; undefined
    2dc4:	23253450 	.inst	0x23253450 ; undefined
    2dc8:	84210030 	.inst	0x84210030 ; undefined
    2dcc:	00000e1a 	.inst	0x00000e1a ; undefined
    2dd0:	edffff00 	.inst	0xedffff00 ; undefined
    2dd4:	00000007 	.inst	0x00000007 ; undefined
    2dd8:	0001f022 	.inst	0x0001f022 ; undefined
    2ddc:	0001f000 	.inst	0x0001f000 ; undefined
    2de0:	22110400 	.inst	0x22110400 ; undefined
    2de4:	00000533 	.inst	0x00000533 ; undefined
    2de8:	00000533 	.inst	0x00000533 ; undefined
    2dec:	d7220405 	.inst	0xd7220405 ; undefined
    2df0:	d7000009 	.inst	0xd7000009 ; undefined
    2df4:	04000009 	add	z9.b, p0/m, z9.b, z0.b
    2df8:	02432215 	.inst	0x02432215 ; undefined
    2dfc:	02430000 	.inst	0x02430000 ; undefined
    2e00:	13040000 	sbfiz	w0, w0, #28, #1
    2e04:	00095c22 	.inst	0x00095c22 ; undefined
    2e08:	00095c00 	.inst	0x00095c00 ; undefined
    2e0c:	220d0600 	.inst	0x220d0600 ; undefined
    2e10:	000009ac 	.inst	0x000009ac ; undefined
    2e14:	000009ac 	.inst	0x000009ac ; undefined
    2e18:	6d220e06 	stp	d6, d3, [x16, #-480]
    2e1c:	6d000008 	stp	d8, d0, [x0]
    2e20:	07000008 	.inst	0x07000008 ; undefined
    2e24:	00f42217 	.inst	0x00f42217 ; undefined
    2e28:	00f40000 	.inst	0x00f40000 ; undefined
    2e2c:	12040000 	and	w0, w0, #0x10000000
    2e30:	0008bf22 	.inst	0x0008bf22 ; undefined
    2e34:	0008bf00 	.inst	0x0008bf00 ; undefined
    2e38:	00070100 	.inst	0x00070100 ; undefined
    2e3c:	00000a76 	.inst	0x00000a76 ; undefined
    2e40:	0ad40004 	and	w4, w0, w20, ror #0
    2e44:	01080000 	.inst	0x01080000 ; undefined
    2e48:	00000064 	.inst	0x00000064 ; undefined
    2e4c:	000a6a0c 	.inst	0x000a6a0c ; undefined
    2e50:	00024b00 	.inst	0x00024b00 ; undefined
    2e54:	0e1cb000 	.inst	0x0e1cb000 ; undefined
    2e58:	ff000000 	.inst	0xff000000 ; undefined
    2e5c:	000854ff 	.inst	0x000854ff ; undefined
    2e60:	00000000 	.inst	0x00000000 ; undefined
    2e64:	000ff000 	.inst	0x000ff000 ; undefined
    2e68:	06010200 	.inst	0x06010200 ; undefined
    2e6c:	00000117 	.inst	0x00000117 ; undefined
    2e70:	04050202 	.inst	0x04050202 ; undefined
    2e74:	03000002 	.inst	0x03000002 ; undefined
    2e78:	6e690504 	uhadd	v4.8h, v8.8h, v9.8h
    2e7c:	08020074 	stxrb	w2, w20, [x3]
    2e80:	00023a05 	.inst	0x00023a05 ; undefined
    2e84:	04b50400 	sub	z0.s, z0.s, z21.s
    2e88:	2e020000 	ext	v0.8b, v0.8b, v2.8b, #0
    2e8c:	00000054 	.inst	0x00000054 ; undefined
    2e90:	15080102 	b	4203298 <__bss_size+0x4203292>
    2e94:	02000001 	.inst	0x02000001 ; undefined
    2e98:	013a0702 	.inst	0x013a0702 ; undefined
    2e9c:	31040000 	adds	w0, w0, #0x100
    2ea0:	02000002 	.inst	0x02000002 ; undefined
    2ea4:	00007234 	.inst	0x00007234 ; undefined
    2ea8:	00620500 	.inst	0x00620500 ; undefined
    2eac:	04020000 	.inst	0x04020000 ; undefined
    2eb0:	00012d07 	.inst	0x00012d07 ; undefined
    2eb4:	00eb0400 	.inst	0x00eb0400 ; undefined
    2eb8:	37020000 	tbnz	w0, #0, 6eb8 <__bss_size+0x6eb2>
    2ebc:	00000084 	.inst	0x00000084 ; undefined
    2ec0:	28070802 	stnp	w2, w2, [x0, #56]
    2ec4:	06000001 	.inst	0x06000001 ; undefined
    2ec8:	00000042 	.inst	0x00000042 ; undefined
    2ecc:	00a00803 	.inst	0x00a00803 ; undefined
    2ed0:	03090000 	.inst	0x03090000 ; undefined
    2ed4:	000e68b0 	.inst	0x000e68b0 ; undefined
    2ed8:	ffff0000 	.inst	0xffff0000 ; undefined
    2edc:	00540807 	.inst	0x00540807 ; undefined
    2ee0:	00060000 	.inst	0x00060000 ; undefined
    2ee4:	03000000 	.inst	0x03000000 ; undefined
    2ee8:	00006d09 	.inst	0x00006d09 ; undefined
    2eec:	c8030900 	stxr	w3, x0, [x8]
    2ef0:	00000e68 	.inst	0x00000e68 ; undefined
    2ef4:	06ffff00 	.inst	0x06ffff00 ; undefined
    2ef8:	00000179 	.inst	0x00000179 ; undefined
    2efc:	006d0a03 	.inst	0x006d0a03 ; undefined
    2f00:	03090000 	.inst	0x03090000 ; undefined
    2f04:	000e68c0 	.inst	0x000e68c0 ; undefined
    2f08:	ffff0000 	.inst	0xffff0000 ; undefined
    2f0c:	0000d006 	.inst	0x0000d006 ; undefined
    2f10:	6d0b0300 	stp	d0, d0, [x24, #176]
    2f14:	09000000 	.inst	0x09000000 ; undefined
    2f18:	0e68b803 	.inst	0x0e68b803 ; undefined
    2f1c:	ff000000 	.inst	0xff000000 ; undefined
    2f20:	01d906ff 	.inst	0x01d906ff ; undefined
    2f24:	0c030000 	.inst	0x0c030000 ; undefined
    2f28:	00000062 	.inst	0x00000062 ; undefined
    2f2c:	68c40309 	ldpsw	x9, x0, [x24], #32
    2f30:	0000000e 	.inst	0x0000000e ; undefined
    2f34:	2306ffff 	.inst	0x2306ffff ; undefined
    2f38:	03000000 	.inst	0x03000000 ; undefined
    2f3c:	0000620d 	.inst	0x0000620d ; undefined
    2f40:	cc030900 	.inst	0xcc030900 ; undefined
    2f44:	00000e68 	.inst	0x00000e68 ; undefined
    2f48:	06ffff00 	.inst	0x06ffff00 ; undefined
    2f4c:	00000215 	.inst	0x00000215 ; undefined
    2f50:	00620e03 	.inst	0x00620e03 ; undefined
    2f54:	03090000 	.inst	0x03090000 ; undefined
    2f58:	000e68bc 	.inst	0x000e68bc ; undefined
    2f5c:	ffff0000 	.inst	0xffff0000 ; undefined
    2f60:	00013a08 	.inst	0x00013a08 ; undefined
    2f64:	00013a00 	.inst	0x00013a00 ; undefined
    2f68:	00840900 	.inst	0x00840900 ; undefined
    2f6c:	09ff0000 	.inst	0x09ff0000 ; undefined
    2f70:	00000084 	.inst	0x00000084 ; undefined
    2f74:	0102000f 	.inst	0x0102000f ; undefined
    2f78:	00011e08 	.inst	0x00011e08 ; undefined
    2f7c:	0a650600 	bic	w0, w16, w5, lsr #1
    2f80:	04040000 	.inst	0x04040000 ; undefined
    2f84:	00000124 	.inst	0x00000124 ; undefined
    2f88:	58700309 	ldr	x9, e2fe8 <__bss_size+0xe2fe2>
    2f8c:	0000000e 	.inst	0x0000000e ; undefined
    2f90:	3806ffff 	strb	wzr, [sp, #111]!
    2f94:	0100000a 	.inst	0x0100000a ; undefined
    2f98:	00006208 	.inst	0x00006208 ; undefined
    2f9c:	80030900 	.inst	0x80030900 ; undefined
    2fa0:	00000e68 	.inst	0x00000e68 ; undefined
    2fa4:	06ffff00 	.inst	0x06ffff00 ; undefined
    2fa8:	00000a42 	.inst	0x00000a42 ; undefined
    2fac:	00620901 	.inst	0x00620901 ; undefined
    2fb0:	03090000 	.inst	0x03090000 ; undefined
    2fb4:	000e6884 	.inst	0x000e6884 ; undefined
    2fb8:	ffff0000 	.inst	0xffff0000 ; undefined
    2fbc:	0009ca0a 	.inst	0x0009ca0a ; undefined
    2fc0:	f06d0100 	adrp	x0, da025000 <__bss_size+0xda024ffa>
    2fc4:	00000e22 	.inst	0x00000e22 ; undefined
    2fc8:	14ffff00 	b	4002bc8 <__bss_size+0x4002bc2>
    2fcc:	00000002 	.inst	0x00000002 ; undefined
    2fd0:	01000000 	.inst	0x01000000 ; undefined
    2fd4:	00033d9c 	.inst	0x00033d9c ; undefined
    2fd8:	00630b00 	.inst	0x00630b00 ; undefined
    2fdc:	00496d01 	.inst	0x00496d01 ; undefined
    2fe0:	302a0000 	adr	x0, 56fe1 <__bss_size+0x56fdb>
    2fe4:	b90c0000 	str	w0, [x0, #3072]
    2fe8:	01000008 	.inst	0x01000008 ; undefined
    2fec:	0000626d 	.inst	0x0000626d ; undefined
    2ff0:	00306300 	.inst	0x00306300 ; NYI
    2ff4:	051c0d00 	mov	z0.b, p12/z, #104
    2ff8:	23600000 	.inst	0x23600000 ; undefined
    2ffc:	0000000e 	.inst	0x0000000e ; undefined
    3000:	003cffff 	.inst	0x003cffff ; NYI
    3004:	00000000 	.inst	0x00000000 ; undefined
    3008:	7f010000 	.inst	0x7f010000 ; undefined
    300c:	00000238 	.inst	0x00000238 ; undefined
    3010:	0005430e 	.inst	0x0005430e ; undefined
    3014:	00315000 	.inst	0x00315000 ; NYI
    3018:	053a0e00 	ext	z0.b, z0.b, z16.b, #211
    301c:	31990000 	.inst	0x31990000 ; undefined
    3020:	310e0000 	adds	w0, w0, #0x380
    3024:	bf000005 	.inst	0xbf000005 ; undefined
    3028:	0f000031 	.inst	0x0f000031 ; undefined
    302c:	00000528 	.inst	0x00000528 ; undefined
    3030:	000a2a10 	.inst	0x000a2a10 ; undefined
    3034:	0e236000 	subhn	v0.8b, v0.8h, v3.8h
    3038:	ff000000 	.inst	0xff000000 ; undefined
    303c:	00003cff 	.inst	0x00003cff ; undefined
    3040:	00000000 	.inst	0x00000000 ; undefined
    3044:	0a3b1100 	bic	w0, w8, w27, lsl #4
    3048:	44100000 	.inst	0x44100000 ; undefined
    304c:	6000000a 	.inst	0x6000000a ; undefined
    3050:	00000e23 	.inst	0x00000e23 ; undefined
    3054:	34ffff00 	cbz	w0, 3034 <__bss_size+0x302e>
    3058:	00000000 	.inst	0x00000000 ; undefined
    305c:	11000000 	add	w0, w0, #0x0
    3060:	00000a55 	.inst	0x00000a55 ; undefined
    3064:	0e238412 	add	v18.8b, v0.8b, v3.8b
    3068:	ff000000 	.inst	0xff000000 ; undefined
    306c:	000a6eff 	.inst	0x000a6eff ; undefined
    3070:	00000000 	.inst	0x00000000 ; undefined
    3074:	0005690d 	.inst	0x0005690d ; undefined
    3078:	0e244800 	.inst	0x0e244800 ; undefined
    307c:	ff000000 	.inst	0xff000000 ; undefined
    3080:	000078ff 	.inst	0x000078ff ; undefined
    3084:	00000000 	.inst	0x00000000 ; undefined
    3088:	bc8c0100 	.inst	0xbc8c0100 ; undefined
    308c:	13000002 	sbfx	w2, w0, #0, #1
    3090:	00000571 	.inst	0x00000571 ; undefined
    3094:	000e2448 	.inst	0x000e2448 ; undefined
    3098:	ffff0000 	.inst	0xffff0000 ; undefined
    309c:	00000068 	.inst	0x00000068 ; undefined
    30a0:	00000000 	.inst	0x00000000 ; undefined
    30a4:	7d0f3b01 	str	h1, [x24, #1948]
    30a8:	10000005 	adr	x5, 30a8 <__bss_size+0x30a2>
    30ac:	00000900 	.inst	0x00000900 ; undefined
    30b0:	000e2448 	.inst	0x000e2448 ; undefined
    30b4:	ffff0000 	.inst	0xffff0000 ; undefined
    30b8:	00000068 	.inst	0x00000068 ; undefined
    30bc:	00000000 	.inst	0x00000000 ; undefined
    30c0:	00091111 	.inst	0x00091111 ; undefined
    30c4:	091a1400 	.inst	0x091a1400 ; undefined
    30c8:	0c900000 	st4	{v0.8b-v3.8b}, [x0], x16
    30cc:	2b110000 	adds	w0, w0, w17
    30d0:	15000009 	b	40030f4 <__bss_size+0x40030ee>
    30d4:	000e2488 	.inst	0x000e2488 ; undefined
    30d8:	ffff0000 	.inst	0xffff0000 ; undefined
    30dc:	00000a6e 	.inst	0x00000a6e ; undefined
    30e0:	02500116 	.inst	0x02500116 ; undefined
    30e4:	01160083 	.inst	0x01160083 ; undefined
    30e8:	00850251 	.inst	0x00850251 ; undefined
    30ec:	03520116 	.inst	0x03520116 ; undefined
    30f0:	0026ca0a 	.inst	0x0026ca0a ; NYI
    30f4:	00000000 	.inst	0x00000000 ; undefined
    30f8:	0e240c17 	sqadd	v23.8b, v0.8b, v4.8b
    30fc:	ff000000 	.inst	0xff000000 ; undefined
    3100:	000180ff 	.inst	0x000180ff ; undefined
    3104:	0002dd00 	.inst	0x0002dd00 ; undefined
    3108:	50011600 	adr	x0, 53ca <__bss_size+0x53c4>
    310c:	16200802 	b	fffffffff8805114 <__end+0xfffff871e7b4>
    3110:	0c055101 	.inst	0x0c055101 ; undefined
    3114:	00ffffff 	.inst	0x00ffffff ; undefined
    3118:	24181700 	cmphs	p0.b, p5/z, z24.b, z24.b
    311c:	0000000e 	.inst	0x0000000e ; undefined
    3120:	0180ffff 	.inst	0x0180ffff ; undefined
    3124:	02fe0000 	.inst	0x02fe0000 ; undefined
    3128:	01160000 	.inst	0x01160000 ; undefined
    312c:	20080250 	.inst	0x20080250 ; undefined
    3130:	05510116 	mov	z22.h, p1/z, #8
    3134:	ffffff0c 	.inst	0xffffff0c ; undefined
    3138:	24170000 	cmphs	p0.b, p0/z, z0.b, z23.b
    313c:	00000e24 	.inst	0x00000e24 ; undefined
    3140:	80ffff00 	.inst	0x80ffff00 ; undefined
    3144:	1f000001 	fmadd	s1, s0, s0, s0
    3148:	16000003 	b	fffffffff8003154 <__end+0xfffff7f1c7f4>
    314c:	08025001 	stxrb	w2, w1, [x0]
    3150:	51011620 	sub	w0, w17, #0x45
    3154:	ffff0c05 	.inst	0xffff0c05 ; undefined
    3158:	150000ff 	b	4003554 <__bss_size+0x400354e>
    315c:	000e2430 	.inst	0x000e2430 ; undefined
    3160:	ffff0000 	.inst	0xffff0000 ; undefined
    3164:	00000180 	.inst	0x00000180 ; undefined
    3168:	02500116 	.inst	0x02500116 ; undefined
    316c:	01162008 	.inst	0x01162008 ; undefined
    3170:	ff0c0551 	.inst	0xff0c0551 ; undefined
    3174:	0000ffff 	.inst	0x0000ffff ; undefined
    3178:	0aff0a00 	bic	w0, w16, wzr, ror #2
    317c:	5d010000 	.inst	0x5d010000 ; undefined
    3180:	000e21f0 	.inst	0x000e21f0 ; undefined
    3184:	ffff0000 	.inst	0xffff0000 ; undefined
    3188:	000000f4 	.inst	0x000000f4 ; undefined
    318c:	00000000 	.inst	0x00000000 ; undefined
    3190:	04159c01 	lsrr	z1.b, p7/m, z1.b, z0.b
    3194:	6e0b0000 	ext	v0.16b, v0.16b, v11.16b, #0
    3198:	01006d75 	.inst	0x01006d75 ; undefined
    319c:	0000795d 	.inst	0x0000795d ; undefined
    31a0:	0031e200 	.inst	0x0031e200 ; NYI
    31a4:	00631800 	.inst	0x00631800 ; undefined
    31a8:	04155f01 	mla	z1.b, p7/m, z24.b, z21.b
    31ac:	91020000 	add	x0, x0, #0x80
    31b0:	00691968 	.inst	0x00691968 ; undefined
    31b4:	00626001 	.inst	0x00626001 ; undefined
    31b8:	32180000 	orr	w0, w0, #0x100
    31bc:	601a0000 	.inst	0x601a0000 ; undefined
    31c0:	1900000c 	.inst	0x1900000c ; undefined
    31c4:	6801006a 	.inst	0x6801006a ; undefined
    31c8:	00000062 	.inst	0x00000062 ; undefined
    31cc:	00003275 	.inst	0x00003275 ; undefined
    31d0:	00051c13 	.inst	0x00051c13 ; undefined
    31d4:	0e228000 	smlal	v0.8h, v0.8b, v2.8b
    31d8:	ff000000 	.inst	0xff000000 ; undefined
    31dc:	000044ff 	.inst	0x000044ff ; undefined
    31e0:	00000000 	.inst	0x00000000 ; undefined
    31e4:	0e690100 	saddl	v0.4s, v8.4h, v9.4h
    31e8:	00000543 	.inst	0x00000543 ; undefined
    31ec:	000032bb 	.inst	0x000032bb ; undefined
    31f0:	00053a0e 	.inst	0x00053a0e ; undefined
    31f4:	0032e200 	.inst	0x0032e200 ; NYI
    31f8:	05310e00 	ext	z0.b, z0.b, z16.b, #139
    31fc:	33060000 	bfi	w0, w0, #26, #1
    3200:	280e0000 	stnp	w0, w0, [x0, #112]
    3204:	2a000005 	orr	w5, w0, w0
    3208:	10000033 	adr	x19, 320c <__bss_size+0x3206>
    320c:	00000a2a 	.inst	0x00000a2a ; undefined
    3210:	000e2280 	.inst	0x000e2280 ; undefined
    3214:	ffff0000 	.inst	0xffff0000 ; undefined
    3218:	00000044 	.inst	0x00000044 ; undefined
    321c:	00000000 	.inst	0x00000000 ; undefined
    3220:	000a3b11 	.inst	0x000a3b11 ; undefined
    3224:	0a441000 	and	w0, w0, w4, lsr #4
    3228:	22800000 	.inst	0x22800000 ; undefined
    322c:	0000000e 	.inst	0x0000000e ; undefined
    3230:	0034ffff 	.inst	0x0034ffff ; NYI
    3234:	00000000 	.inst	0x00000000 ; undefined
    3238:	55110000 	.inst	0x55110000 ; undefined
    323c:	1200000a 	and	w10, w0, #0x1
    3240:	000e22a4 	.inst	0x000e22a4 ; undefined
    3244:	ffff0000 	.inst	0xffff0000 ; undefined
    3248:	00000a6e 	.inst	0x00000a6e ; undefined
    324c:	00000000 	.inst	0x00000000 ; undefined
    3250:	00540800 	.inst	0x00540800 ; undefined
    3254:	04250000 	add	z0.b, z0.b, z5.b
    3258:	84090000 	ld1sb	{z0.s}, p0/z, [x0, z9.s, uxtw]
    325c:	13000000 	sbfx	w0, w0, #0, #1
    3260:	0a4c0a00 	and	w0, w16, w12, lsr #2
    3264:	4c010000 	.inst	0x4c010000 ; undefined
    3268:	000e2100 	.inst	0x000e2100 ; undefined
    326c:	ffff0000 	.inst	0xffff0000 ; undefined
    3270:	000000f0 	.inst	0x000000f0 ; undefined
    3274:	00000000 	.inst	0x00000000 ; undefined
    3278:	051c9c01 	.inst	0x051c9c01 ; undefined
    327c:	b90c0000 	str	w0, [x0, #3072]
    3280:	01000008 	.inst	0x01000008 ; undefined
    3284:	0000624c 	.inst	0x0000624c ; undefined
    3288:	00334d00 	.inst	0x00334d00 ; NYI
    328c:	0a2d1b00 	bic	w0, w24, w13, lsl #6
    3290:	4d010000 	.inst	0x4d010000 ; undefined
    3294:	00000062 	.inst	0x00000062 ; undefined
    3298:	0b701c01 	.inst	0x0b701c01 ; undefined
    329c:	04be0000 	add	z0.s, z0.s, z30.s
    32a0:	78190000 	sturh	w0, [x0, #-112]
    32a4:	794e0100 	ldrh	w0, [x8, #1792]
    32a8:	d5000000 	msr	s0_0_c0_c0_0, x0
    32ac:	1a000033 	adc	w19, w1, w0
    32b0:	00000bb0 	.inst	0x00000bb0 ; undefined
    32b4:	01007919 	.inst	0x01007919 ; undefined
    32b8:	0000794f 	.inst	0x0000794f ; undefined
    32bc:	00344800 	.inst	0x00344800 ; NYI
    32c0:	21641700 	.inst	0x21641700 ; undefined
    32c4:	0000000e 	.inst	0x0000000e ; undefined
    32c8:	0a6effff 	.inst	0x0a6effff ; undefined
    32cc:	04a80000 	add	z0.s, z0.s, z8.s
    32d0:	01160000 	.inst	0x01160000 ; undefined
    32d4:	00860250 	.inst	0x00860250 ; undefined
    32d8:	01510116 	.inst	0x01510116 ; undefined
    32dc:	52011630 	eor	w16, w17, #0x8000001f
    32e0:	00008502 	.inst	0x00008502 ; undefined
    32e4:	0e217c15 	saba	v21.8b, v0.8b, v1.8b
    32e8:	ff000000 	.inst	0xff000000 ; undefined
    32ec:	000a6eff 	.inst	0x000a6eff ; undefined
    32f0:	52011600 	eor	w0, w16, #0x8000001f
    32f4:	00008502 	.inst	0x00008502 ; undefined
    32f8:	f01a0000 	adrp	x0, 34006000 <__bss_size+0x34005ffa>
    32fc:	1900000b 	.inst	0x1900000b ; undefined
    3300:	54010079 	.inst	0x54010079 ; undefined
    3304:	00000079 	.inst	0x00000079 ; undefined
    3308:	00003480 	.inst	0x00003480 ; undefined
    330c:	000c201a 	.inst	0x000c201a ; undefined
    3310:	00781900 	.inst	0x00781900 ; undefined
    3314:	00795501 	.inst	0x00795501 ; undefined
    3318:	34f30000 	cbz	w0, fffffffffffe9318 <__end+0xfffffff029b8>
    331c:	b8170000 	stur	w0, [x0, #-144]
    3320:	00000e21 	.inst	0x00000e21 ; undefined
    3324:	6effff00 	.inst	0x6effff00 ; undefined
    3328:	0500000a 	orr	z10.s, z10.s, #0x1
    332c:	16000005 	b	fffffffff8003340 <__end+0xfffff7f1c9e0>
    3330:	30015001 	adr	x1, 5d31 <__bss_size+0x5d2b>
    3334:	02510116 	.inst	0x02510116 ; undefined
    3338:	01160086 	.inst	0x01160086 ; undefined
    333c:	00850252 	.inst	0x00850252 ; undefined
    3340:	21d01500 	.inst	0x21d01500 ; undefined
    3344:	0000000e 	.inst	0x0000000e ; undefined
    3348:	0a6effff 	.inst	0x0a6effff ; undefined
    334c:	01160000 	.inst	0x01160000 ; undefined
    3350:	00850252 	.inst	0x00850252 ; undefined
    3354:	00000000 	.inst	0x00000000 ; undefined
    3358:	000a161d 	.inst	0x000a161d ; undefined
    335c:	01400100 	.inst	0x01400100 ; undefined
    3360:	00000569 	.inst	0x00000569 ; undefined
    3364:	0100781e 	.inst	0x0100781e ; undefined
    3368:	00006240 	.inst	0x00006240 ; undefined
    336c:	00791e00 	.inst	0x00791e00 ; undefined
    3370:	00624001 	.inst	0x00624001 ; undefined
    3374:	631e0000 	.inst	0x631e0000 ; undefined
    3378:	49400100 	.inst	0x49400100 ; undefined
    337c:	1f000000 	fmadd	s0, s0, s0, s0
    3380:	000008b9 	.inst	0x000008b9 ; undefined
    3384:	00624001 	.inst	0x00624001 ; undefined
    3388:	21200000 	.inst	0x21200000 ; undefined
    338c:	00000864 	.inst	0x00000864 ; undefined
    3390:	00624101 	.inst	0x00624101 ; undefined
    3394:	21200000 	.inst	0x21200000 ; undefined
    3398:	000008b0 	.inst	0x000008b0 ; undefined
    339c:	00624201 	.inst	0x00624201 ; undefined
    33a0:	00000000 	.inst	0x00000000 ; undefined
    33a4:	02b22200 	.inst	0x02b22200 ; undefined
    33a8:	3a010000 	adcs	w0, w0, w1
    33ac:	0a031d01 	and	w1, w8, w3, lsl #7
    33b0:	32010000 	orr	w0, w0, #0x80000000
    33b4:	00059f01 	.inst	0x00059f01 ; undefined
    33b8:	08b91f00 	.inst	0x08b91f00 ; undefined
    33bc:	32010000 	orr	w0, w0, #0x80000000
    33c0:	00000062 	.inst	0x00000062 ; undefined
    33c4:	00792320 	.inst	0x00792320 ; undefined
    33c8:	00793301 	.inst	0x00793301 ; undefined
    33cc:	23200000 	.inst	0x23200000 ; undefined
    33d0:	34010078 	cbz	w24, 53dc <__bss_size+0x53d6>
    33d4:	00000079 	.inst	0x00000079 ; undefined
    33d8:	0a000000 	and	w0, w0, w0
    33dc:	00000443 	.inst	0x00000443 ; undefined
    33e0:	1ea02a01 	.inst	0x1ea02a01 ; undefined
    33e4:	0000000e 	.inst	0x0000000e ; undefined
    33e8:	0084ffff 	.inst	0x0084ffff ; undefined
    33ec:	00000000 	.inst	0x00000000 ; undefined
    33f0:	9c010000 	ldr	q0, 53f0 <__bss_size+0x53ea>
    33f4:	00000606 	.inst	0x00000606 ; undefined
    33f8:	0008b90c 	.inst	0x0008b90c ; undefined
    33fc:	622a0100 	.inst	0x622a0100 ; undefined
    3400:	2b000000 	adds	w0, w0, w0
    3404:	1a000035 	adc	w21, w1, w0
    3408:	00000b10 	.inst	0x00000b10 ; undefined
    340c:	01007919 	.inst	0x01007919 ; undefined
    3410:	0000792b 	.inst	0x0000792b ; undefined
    3414:	00357700 	.inst	0x00357700 ; NYI
    3418:	0b401a00 	add	w0, w16, w0, lsr #6
    341c:	78190000 	sturh	w0, [x0, #-112]
    3420:	792c0100 	strh	w0, [x8, #5632]
    3424:	ae000000 	.inst	0xae000000 ; undefined
    3428:	15000035 	b	40034fc <__bss_size+0x40034f6>
    342c:	000e1efc 	.inst	0x000e1efc ; undefined
    3430:	ffff0000 	.inst	0xffff0000 ; undefined
    3434:	00000a6e 	.inst	0x00000a6e ; undefined
    3438:	02520116 	.inst	0x02520116 ; undefined
    343c:	00000087 	.inst	0x00000087 ; undefined
    3440:	bc0a0000 	stur	s0, [x0, #160]
    3444:	0100000a 	.inst	0x0100000a ; undefined
    3448:	0e1e2020 	tbl	v0.8b, {v1.16b, v2.16b}, v30.8b
    344c:	ff000000 	.inst	0xff000000 ; undefined
    3450:	000080ff 	.inst	0x000080ff ; undefined
    3454:	00000000 	.inst	0x00000000 ; undefined
    3458:	d69c0100 	.inst	0xd69c0100 ; undefined
    345c:	0c000006 	st4	{v6.8b-v9.8b}, [x0]
    3460:	000008b9 	.inst	0x000008b9 ; undefined
    3464:	00622001 	.inst	0x00622001 ; undefined
    3468:	360d0000 	tbz	w0, #1, ffffffffffffd468 <__end+0xfffffff16b08>
    346c:	cb240000 	sub	x0, x0, w4, uxtb
    3470:	34000007 	cbz	w7, 3470 <__bss_size+0x346a>
    3474:	00000e1e 	.inst	0x00000e1e ; undefined
    3478:	e0ffff00 	.inst	0xe0ffff00 ; undefined
    347c:	0100000a 	.inst	0x0100000a ; undefined
    3480:	07d72521 	.inst	0x07d72521 ; undefined
    3484:	25000000 	cmpge	p0.b, p0/z, z0.b, #0
    3488:	000007e2 	.inst	0x000007e2 ; undefined
    348c:	07ed2500 	.inst	0x07ed2500 ; undefined
    3490:	25640000 	.inst	0x25640000 ; undefined
    3494:	000007f8 	.inst	0x000007f8 ; undefined
    3498:	08030e14 	stxrb	w3, w20, [x16]
    349c:	36590000 	tbz	w0, #11, 549c <__bss_size+0x5496>
    34a0:	6d140000 	stp	d0, d0, [x0, #320]
    34a4:	e0000008 	.inst	0xe0000008 ; undefined
    34a8:	1100000a 	add	w10, w0, #0x0
    34ac:	00000872 	.inst	0x00000872 ; undefined
    34b0:	00087b10 	.inst	0x00087b10 ; undefined
    34b4:	0e1e5000 	tbx	v0.8b, {v0.16b-v2.16b}, v30.8b
    34b8:	ff000000 	.inst	0xff000000 ; undefined
    34bc:	000030ff 	.inst	0x000030ff ; undefined
    34c0:	00000000 	.inst	0x00000000 ; undefined
    34c4:	088c1100 	stllrb	w0, [x8]
    34c8:	60170000 	.inst	0x60170000 ; undefined
    34cc:	00000e1e 	.inst	0x00000e1e ; undefined
    34d0:	6effff00 	.inst	0x6effff00 ; undefined
    34d4:	b200000a 	orr	x10, x0, #0x100000001
    34d8:	16000006 	b	fffffffff80034f0 <__end+0xfffff7f1cb90>
    34dc:	83025001 	.inst	0x83025001 ; undefined
    34e0:	51011600 	sub	w0, w16, #0x45
    34e4:	16008502 	b	fffffffff80248ec <__end+0xfffff7f3df8c>
    34e8:	86025201 	.inst	0x86025201 ; undefined
    34ec:	74150000 	.inst	0x74150000 ; undefined
    34f0:	00000e1e 	.inst	0x00000e1e ; undefined
    34f4:	6effff00 	.inst	0x6effff00 ; undefined
    34f8:	1600000a 	b	fffffffff8003520 <__end+0xfffff7f1cbc0>
    34fc:	84025001 	ld1b	{z1.s}, p4/z, [x0, z2.s, uxtw]
    3500:	51011600 	sub	w0, w16, #0x45
    3504:	16008502 	b	fffffffff802490c <__end+0xfffff7f3dfac>
    3508:	86025201 	.inst	0x86025201 ; undefined
    350c:	00000000 	.inst	0x00000000 ; undefined
    3510:	db0a0000 	.inst	0xdb0a0000 ; undefined
    3514:	0100000a 	.inst	0x0100000a ; undefined
    3518:	0e1d6015 	tbl	v21.8b, {v0.16b-v3.16b}, v29.8b
    351c:	ff000000 	.inst	0xff000000 ; undefined
    3520:	0000bcff 	.inst	0x0000bcff ; undefined
    3524:	00000000 	.inst	0x00000000 ; undefined
    3528:	cb9c0100 	sub	x0, x8, x28, asr #0
    352c:	0c000007 	st4	{v7.8b-v10.8b}, [x0]
    3530:	000008b9 	.inst	0x000008b9 ; undefined
    3534:	00621501 	.inst	0x00621501 ; undefined
    3538:	36a50000 	tbz	w0, #20, ffffffffffffd538 <__end+0xfffffff16bd8>
    353c:	b0260000 	adrp	x0, 4c004000 <__bss_size+0x4c003ffa>
    3540:	01000008 	.inst	0x01000008 ; undefined
    3544:	00007916 	.inst	0x00007916 ; undefined
    3548:	0036f100 	.inst	0x0036f100 ; NYI
    354c:	07cb1300 	.inst	0x07cb1300 ; undefined
    3550:	1d900000 	.inst	0x1d900000 ; undefined
    3554:	0000000e 	.inst	0x0000000e ; undefined
    3558:	007cffff 	.inst	0x007cffff ; undefined
    355c:	00000000 	.inst	0x00000000 ; undefined
    3560:	17010000 	b	fffffffffc043560 <__end+0xfffffbf5cc00>
    3564:	0007e225 	.inst	0x0007e225 ; undefined
    3568:	f8250000 	ldadd	x5, x0, [x0]
    356c:	14000007 	b	3588 <__bss_size+0x3582>
    3570:	0008030e 	.inst	0x0008030e ; undefined
    3574:	00371c00 	.inst	0x00371c00 ; NYI
    3578:	07ed0e00 	.inst	0x07ed0e00 ; undefined
    357c:	37680000 	tbnz	w0, #13, 357c <__bss_size+0x3576>
    3580:	d70e0000 	.inst	0xd70e0000 ; undefined
    3584:	8b000007 	add	x7, x0, x0
    3588:	10000037 	adr	x23, 358c <__bss_size+0x3586>
    358c:	0000086d 	.inst	0x0000086d ; undefined
    3590:	000e1d90 	.inst	0x000e1d90 ; undefined
    3594:	ffff0000 	.inst	0xffff0000 ; undefined
    3598:	0000007c 	.inst	0x0000007c ; undefined
    359c:	00000000 	.inst	0x00000000 ; undefined
    35a0:	00087211 	.inst	0x00087211 ; undefined
    35a4:	087b1000 	.inst	0x087b1000 ; undefined
    35a8:	1dc00000 	.inst	0x1dc00000 ; undefined
    35ac:	0000000e 	.inst	0x0000000e ; undefined
    35b0:	0030ffff 	.inst	0x0030ffff ; NYI
    35b4:	00000000 	.inst	0x00000000 ; undefined
    35b8:	8c110000 	.inst	0x8c110000 ; undefined
    35bc:	17000008 	b	fffffffffc0035dc <__end+0xfffffbf1cc7c>
    35c0:	000e1dd0 	.inst	0x000e1dd0 ; undefined
    35c4:	ffff0000 	.inst	0xffff0000 ; undefined
    35c8:	00000a6e 	.inst	0x00000a6e ; undefined
    35cc:	000007a7 	.inst	0x000007a7 ; undefined
    35d0:	02500116 	.inst	0x02500116 ; undefined
    35d4:	01160083 	.inst	0x01160083 ; undefined
    35d8:	00850251 	.inst	0x00850251 ; undefined
    35dc:	02520116 	.inst	0x02520116 ; undefined
    35e0:	15000086 	b	40037f8 <__bss_size+0x40037f2>
    35e4:	000e1de4 	.inst	0x000e1de4 ; undefined
    35e8:	ffff0000 	.inst	0xffff0000 ; undefined
    35ec:	00000a6e 	.inst	0x00000a6e ; undefined
    35f0:	02500116 	.inst	0x02500116 ; undefined
    35f4:	01160084 	.inst	0x01160084 ; undefined
    35f8:	00850251 	.inst	0x00850251 ; undefined
    35fc:	02520116 	.inst	0x02520116 ; undefined
    3600:	00000086 	.inst	0x00000086 ; undefined
    3604:	1d000000 	.inst	0x1d000000 ; undefined
    3608:	000009eb 	.inst	0x000009eb ; undefined
    360c:	25010c01 	cmpge	p1.b, p3/z, z0.b, #1
    3610:	1f000008 	fmadd	s8, s0, s0, s0
    3614:	000008b0 	.inst	0x000008b0 ; undefined
    3618:	00620c01 	.inst	0x00620c01 ; undefined
    361c:	641f0000 	.inst	0x641f0000 ; undefined
    3620:	01000008 	.inst	0x01000008 ; undefined
    3624:	0000620c 	.inst	0x0000620c ; undefined
    3628:	01e61f00 	.inst	0x01e61f00 ; undefined
    362c:	0c010000 	.inst	0x0c010000 ; undefined
    3630:	00000062 	.inst	0x00000062 ; undefined
    3634:	0009dc1f 	.inst	0x0009dc1f ; undefined
    3638:	620c0100 	.inst	0x620c0100 ; undefined
    363c:	1f000000 	fmadd	s0, s0, s0, s0
    3640:	000008b9 	.inst	0x000008b9 ; undefined
    3644:	00620c01 	.inst	0x00620c01 ; undefined
    3648:	23200000 	.inst	0x23200000 ; undefined
    364c:	0d010079 	.inst	0x0d010079 ; undefined
    3650:	00000062 	.inst	0x00000062 ; undefined
    3654:	00782320 	.inst	0x00782320 ; undefined
    3658:	00620e01 	.inst	0x00620e01 ; undefined
    365c:	00000000 	.inst	0x00000000 ; undefined
    3660:	07cb2700 	.inst	0x07cb2700 ; undefined
    3664:	1cb00000 	ldr	s0, fffffffffff63664 <__end+0xffffffe7cd04>
    3668:	0000000e 	.inst	0x0000000e ; undefined
    366c:	00b0ffff 	.inst	0x00b0ffff ; undefined
    3670:	00000000 	.inst	0x00000000 ; undefined
    3674:	9c010000 	ldr	q0, 5674 <__bss_size+0x566e>
    3678:	000008dc 	.inst	0x000008dc ; undefined
    367c:	0007d70e 	.inst	0x0007d70e ; undefined
    3680:	0037ae00 	.inst	0x0037ae00 ; NYI
    3684:	07e20e00 	.inst	0x07e20e00 ; undefined
    3688:	37e70000 	tbnz	w0, #28, 1688 <__bss_size+0x1682>
    368c:	ed0e0000 	.inst	0xed0e0000 ; undefined
    3690:	20000007 	.inst	0x20000007 ; undefined
    3694:	0e000038 	tbl	v24.8b, {v1.16b}, v0.8b
    3698:	000007f8 	.inst	0x000007f8 ; undefined
    369c:	00003859 	.inst	0x00003859 ; undefined
    36a0:	0008030e 	.inst	0x0008030e ; undefined
    36a4:	0038a500 	.inst	0x0038a500 ; NYI
    36a8:	0ab01a00 	bic	w0, w16, w16, asr #6
    36ac:	0f280000 	.inst	0x0f280000 ; undefined
    36b0:	f1000008 	subs	x8, x0, #0x0
    36b4:	29000038 	stp	w24, w0, [x1]
    36b8:	000e1d00 	.inst	0x000e1d00 ; undefined
    36bc:	ffff0000 	.inst	0xffff0000 ; undefined
    36c0:	00000038 	.inst	0x00000038 ; undefined
    36c4:	00000000 	.inst	0x00000000 ; undefined
    36c8:	00081928 	.inst	0x00081928 ; undefined
    36cc:	00396200 	.inst	0x00396200 ; NYI
    36d0:	1d101700 	.inst	0x1d101700 ; undefined
    36d4:	0000000e 	.inst	0x0000000e ; undefined
    36d8:	0a6effff 	.inst	0x0a6effff ; undefined
    36dc:	08b90000 	.inst	0x08b90000 ; undefined
    36e0:	01160000 	.inst	0x01160000 ; undefined
    36e4:	00830250 	.inst	0x00830250 ; undefined
    36e8:	02510116 	.inst	0x02510116 ; undefined
    36ec:	01160085 	.inst	0x01160085 ; undefined
    36f0:	00860252 	.inst	0x00860252 ; undefined
    36f4:	1d241500 	.inst	0x1d241500 ; undefined
    36f8:	0000000e 	.inst	0x0000000e ; undefined
    36fc:	0a6effff 	.inst	0x0a6effff ; undefined
    3700:	01160000 	.inst	0x01160000 ; undefined
    3704:	00840250 	.inst	0x00840250 ; undefined
    3708:	02510116 	.inst	0x02510116 ; undefined
    370c:	01160085 	.inst	0x01160085 ; undefined
    3710:	00860252 	.inst	0x00860252 ; undefined
    3714:	00000000 	.inst	0x00000000 ; undefined
    3718:	00057127 	.inst	0x00057127 ; undefined
    371c:	0e1f3000 	tbx	v0.8b, {v0.16b, v1.16b}, v31.8b
    3720:	ff000000 	.inst	0xff000000 ; undefined
    3724:	000090ff 	.inst	0x000090ff ; undefined
    3728:	00000000 	.inst	0x00000000 ; undefined
    372c:	579c0100 	.inst	0x579c0100 ; undefined
    3730:	0e000009 	tbl	v9.8b, {v0.16b}, v0.8b
    3734:	0000057d 	.inst	0x0000057d ; undefined
    3738:	000039b7 	.inst	0x000039b7 ; undefined
    373c:	0e1f3c29 	umov	w9, v1.b[15]
    3740:	ff000000 	.inst	0xff000000 ; undefined
    3744:	000078ff 	.inst	0x000078ff ; undefined
    3748:	00000000 	.inst	0x00000000 ; undefined
    374c:	05892800 	.inst	0x05892800 ; undefined
    3750:	3a030000 	adcs	w0, w0, w3
    3754:	68290000 	.inst	0x68290000 ; undefined
    3758:	00000e1f 	.inst	0x00000e1f ; undefined
    375c:	30ffff00 	adr	x0, 373d <__bss_size+0x3737>
    3760:	00000000 	.inst	0x00000000 ; undefined
    3764:	28000000 	stnp	w0, w0, [x0]
    3768:	00000593 	.inst	0x00000593 ; undefined
    376c:	00003a3a 	.inst	0x00003a3a ; undefined
    3770:	0e1f8815 	.inst	0x0e1f8815 ; undefined
    3774:	ff000000 	.inst	0xff000000 ; undefined
    3778:	000a6eff 	.inst	0x000a6eff ; undefined
    377c:	50011600 	adr	x0, 5a3e <__bss_size+0x5a38>
    3780:	16008302 	b	fffffffff8024388 <__end+0xfffff7f3da28>
    3784:	85025101 	ld1w	{z1.s}, p4/z, [x8, z2.s, uxtw]
    3788:	52011600 	eor	w0, w16, #0x8000001f
    378c:	00008602 	.inst	0x00008602 ; undefined
    3790:	27000000 	.inst	0x27000000 ; undefined
    3794:	00000569 	.inst	0x00000569 ; undefined
    3798:	000e1fc0 	.inst	0x000e1fc0 ; undefined
    379c:	ffff0000 	.inst	0xffff0000 ; undefined
    37a0:	00000094 	.inst	0x00000094 ; undefined
    37a4:	00000000 	.inst	0x00000000 ; undefined
    37a8:	09eb9c01 	.inst	0x09eb9c01 ; undefined
    37ac:	71130000 	subs	w0, w0, #0x4c0
    37b0:	cc000005 	.inst	0xcc000005 ; undefined
    37b4:	00000e1f 	.inst	0x00000e1f ; undefined
    37b8:	6cffff00 	ldp	d0, d31, [x24], #-8
    37bc:	00000000 	.inst	0x00000000 ; undefined
    37c0:	01000000 	.inst	0x01000000 ; undefined
    37c4:	057d0e3b 	.inst	0x057d0e3b ; undefined
    37c8:	3a710000 	.inst	0x3a710000 ; undefined
    37cc:	00100000 	.inst	0x00100000 ; undefined
    37d0:	cc000009 	.inst	0xcc000009 ; undefined
    37d4:	00000e1f 	.inst	0x00000e1f ; undefined
    37d8:	6cffff00 	ldp	d0, d31, [x24], #-8
    37dc:	00000000 	.inst	0x00000000 ; undefined
    37e0:	11000000 	add	w0, w0, #0x0
    37e4:	00000911 	.inst	0x00000911 ; undefined
    37e8:	00091a10 	.inst	0x00091a10 ; undefined
    37ec:	0e1ff000 	.inst	0x0e1ff000 ; undefined
    37f0:	ff000000 	.inst	0xff000000 ; undefined
    37f4:	000030ff 	.inst	0x000030ff ; undefined
    37f8:	00000000 	.inst	0x00000000 ; undefined
    37fc:	092b1100 	.inst	0x092b1100 ; undefined
    3800:	10150000 	adr	x0, 2d800 <__bss_size+0x2d7fa>
    3804:	00000e20 	.inst	0x00000e20 ; undefined
    3808:	6effff00 	.inst	0x6effff00 ; undefined
    380c:	1600000a 	b	fffffffff8003834 <__end+0xfffff7f1ced4>
    3810:	83025001 	.inst	0x83025001 ; undefined
    3814:	51011600 	sub	w0, w16, #0x45
    3818:	16008502 	b	fffffffff8024c20 <__end+0xfffff7f3e2c0>
    381c:	0a035201 	and	w1, w16, w3, lsl #20
    3820:	000026ca 	.inst	0x000026ca ; undefined
    3824:	27000000 	.inst	0x27000000 ; undefined
    3828:	0000051c 	.inst	0x0000051c ; undefined
    382c:	000e2060 	.inst	0x000e2060 ; undefined
    3830:	ffff0000 	.inst	0xffff0000 ; undefined
    3834:	00000094 	.inst	0x00000094 ; undefined
    3838:	00000000 	.inst	0x00000000 ; undefined
    383c:	0a6e9c01 	.inst	0x0a6e9c01 ; undefined
    3840:	280e0000 	stnp	w0, w0, [x0, #112]
    3844:	97000005 	bl	fffffffffc003858 <__end+0xfffffbf1cef8>
    3848:	0e00003a 	tbl	v26.8b, {v1.16b}, v0.8b
    384c:	00000531 	.inst	0x00000531 ; undefined
    3850:	00003ae5 	.inst	0x00003ae5 ; undefined
    3854:	00053a0e 	.inst	0x00053a0e ; undefined
    3858:	003b3100 	.inst	0x003b3100 ; NYI
    385c:	05430e00 	eor	z0.d, z0.d, #0xffffffff8000ffff
    3860:	3b6a0000 	.inst	0x3b6a0000 ; undefined
    3864:	a0290000 	.inst	0xa0290000 ; undefined
    3868:	00000e20 	.inst	0x00000e20 ; undefined
    386c:	3cffff00 	.inst	0x3cffff00 ; undefined
    3870:	00000000 	.inst	0x00000000 ; undefined
    3874:	28000000 	stnp	w0, w0, [x0]
    3878:	0000054f 	.inst	0x0000054f ; undefined
    387c:	00003bdc 	.inst	0x00003bdc ; undefined
    3880:	0e20a029 	smlsl	v9.8h, v1.8b, v0.8b
    3884:	ff000000 	.inst	0xff000000 ; undefined
    3888:	000034ff 	.inst	0x000034ff ; undefined
    388c:	00000000 	.inst	0x00000000 ; undefined
    3890:	055b2800 	mov	z0.h, p11/z, #16384
    3894:	3c280000 	.inst	0x3c280000 ; undefined
    3898:	c4120000 	ld1sb	{z0.d}, p0/z, [x0, z18.d, uxtw]
    389c:	00000e20 	.inst	0x00000e20 ; undefined
    38a0:	6effff00 	.inst	0x6effff00 ; undefined
    38a4:	0000000a 	.inst	0x0000000a ; undefined
    38a8:	f22a0000 	ands	x0, x0, #0x40000000400000
    38ac:	f2000008 	ands	x8, x0, #0x100000001
    38b0:	03000008 	.inst	0x03000008 ; undefined
    38b4:	0c9d0012 	st4	{v18.8b-v21.8b}, [x0], x29
    38b8:	00040000 	.inst	0x00040000 ; undefined
    38bc:	00000ce4 	.inst	0x00000ce4 ; undefined
    38c0:	00640108 	.inst	0x00640108 ; undefined
    38c4:	5b0c0000 	.inst	0x5b0c0000 ; undefined
    38c8:	4b00000b 	sub	w11, w0, w0
    38cc:	10000002 	adr	x2, 38cc <__bss_size+0x38c6>
    38d0:	00000e25 	.inst	0x00000e25 ; undefined
    38d4:	e8ffff00 	.inst	0xe8ffff00 ; undefined
    38d8:	00000009 	.inst	0x00000009 ; undefined
    38dc:	74000000 	.inst	0x74000000 ; undefined
    38e0:	02000012 	.inst	0x02000012 ; undefined
    38e4:	01170601 	.inst	0x01170601 ; undefined
    38e8:	02020000 	.inst	0x02020000 ; undefined
    38ec:	00020405 	.inst	0x00020405 ; undefined
    38f0:	05040300 	.inst	0x05040300 ; undefined
    38f4:	00746e69 	.inst	0x00746e69 ; undefined
    38f8:	3a050802 	.inst	0x3a050802 ; undefined
    38fc:	02000002 	.inst	0x02000002 ; undefined
    3900:	01150801 	.inst	0x01150801 ; undefined
    3904:	02020000 	.inst	0x02020000 ; undefined
    3908:	00013a07 	.inst	0x00013a07 ; undefined
    390c:	02310400 	.inst	0x02310400 ; undefined
    3910:	34020000 	cbz	w0, 7910 <__bss_size+0x790a>
    3914:	00000062 	.inst	0x00000062 ; undefined
    3918:	2d070402 	stp	s2, s1, [x0, #56]
    391c:	04000001 	add	z1.b, p0/m, z1.b, z0.b
    3920:	000000eb 	.inst	0x000000eb ; undefined
    3924:	00743702 	.inst	0x00743702 ; undefined
    3928:	08020000 	stxrb	w2, w0, [x0]
    392c:	00012807 	.inst	0x00012807 ; undefined
    3930:	089e0400 	stllrb	w0, [x0]
    3934:	56020000 	.inst	0x56020000 ; undefined
    3938:	00000074 	.inst	0x00000074 ; undefined
    393c:	00034f05 	.inst	0x00034f05 ; undefined
    3940:	01550100 	.inst	0x01550100 ; undefined
    3944:	00000069 	.inst	0x00000069 ; undefined
    3948:	000e2e50 	.inst	0x000e2e50 ; undefined
    394c:	ffff0000 	.inst	0xffff0000 ; undefined
    3950:	000000a8 	.inst	0x000000a8 ; undefined
    3954:	00000000 	.inst	0x00000000 ; undefined
    3958:	01299c01 	.inst	0x01299c01 ; undefined
    395c:	54060000 	b.eq	f95c <__bss_size+0xf956>  // b.none
    3960:	01000008 	.inst	0x01000008 ; undefined
    3964:	01290156 	.inst	0x01290156 ; undefined
    3968:	02100000 	.inst	0x02100000 ; undefined
    396c:	21076091 	.inst	0x21076091 ; undefined
    3970:	6c00000b 	stnp	d11, d0, [x0]
    3974:	00000e2e 	.inst	0x00000e2e ; undefined
    3978:	80ffff00 	.inst	0x80ffff00 ; undefined
    397c:	01000011 	.inst	0x01000011 ; undefined
    3980:	00f90168 	.inst	0x00f90168 ; undefined
    3984:	2d080000 	stp	s0, s0, [x0, #64]
    3988:	9100000b 	add	x11, x0, #0x0
    398c:	0900003c 	.inst	0x0900003c ; undefined
    3990:	00001180 	.inst	0x00001180 ; undefined
    3994:	000b6e0a 	.inst	0x000b6e0a ; undefined
    3998:	2e780b00 	.inst	0x2e780b00 ; undefined
    399c:	0000000e 	.inst	0x0000000e ; undefined
    39a0:	0c5effff 	.inst	0x0c5effff ; undefined
    39a4:	010c0000 	.inst	0x010c0000 ; undefined
    39a8:	108f0250 	adr	x16, fffffffffff219f0 <__end+0xffffffe3b090>
    39ac:	0d000000 	st1	{v0.b}[0], [x0]
    39b0:	00000b19 	.inst	0x00000b19 ; undefined
    39b4:	000e2e98 	.inst	0x000e2e98 ; undefined
    39b8:	ffff0000 	.inst	0xffff0000 ; undefined
    39bc:	000011c0 	.inst	0x000011c0 ; undefined
    39c0:	0b016b01 	add	w1, w24, w1, lsl #26
    39c4:	000e2ef8 	.inst	0x000e2ef8 ; undefined
    39c8:	ffff0000 	.inst	0xffff0000 ; undefined
    39cc:	00000c69 	.inst	0x00000c69 ; undefined
    39d0:	0950010c 	.inst	0x0950010c ; undefined
    39d4:	0e548803 	.inst	0x0e548803 ; undefined
    39d8:	ff000000 	.inst	0xff000000 ; undefined
    39dc:	0e0000ff 	tbl	v31.8b, {v7.16b}, v0.8b
    39e0:	00000057 	.inst	0x00000057 ; undefined
    39e4:	00000139 	.inst	0x00000139 ; undefined
    39e8:	0000740f 	.inst	0x0000740f ; undefined
    39ec:	10000700 	adr	x0, 3acc <__bss_size+0x3ac6>
    39f0:	00000bb5 	.inst	0x00000bb5 ; undefined
    39f4:	80012801 	.inst	0x80012801 ; undefined
    39f8:	00000e2c 	.inst	0x00000e2c ; undefined
    39fc:	d0ffff00 	adrp	x0, fffffffffffe5000 <__end+0xffffffefe6a0>
    3a00:	00000001 	.inst	0x00000001 ; undefined
    3a04:	01000000 	.inst	0x01000000 ; undefined
    3a08:	00036b9c 	.inst	0x00036b9c ; undefined
    3a0c:	08540600 	ldxrb	w0, [x16]
    3a10:	29010000 	stp	w0, w0, [x0, #8]
    3a14:	00036b01 	.inst	0x00036b01 ; undefined
    3a18:	91031000 	add	x0, x0, #0xc4
    3a1c:	a0117f90 	.inst	0xa0117f90 ; undefined
    3a20:	f9000010 	str	x16, [x0]
    3a24:	12000002 	and	w2, w0, #0x1
    3a28:	41010069 	.inst	0x41010069 ; undefined
    3a2c:	00003b01 	.inst	0x00003b01 ; undefined
    3a30:	10d00900 	adr	x0, fffffffffffa3b50 <__end+0xffffffebd1f0>
    3a34:	38130000 	sturb	w0, [x0, #-208]
    3a38:	0100000b 	.inst	0x0100000b ; undefined
    3a3c:	00570142 	.inst	0x00570142 ; undefined
    3a40:	6b010000 	subs	w0, w0, w1
    3a44:	00646914 	.inst	0x00646914 ; undefined
    3a48:	57014301 	.inst	0x57014301 ; undefined
    3a4c:	f3000000 	.inst	0xf3000000 ; undefined
    3a50:	0700003c 	.inst	0x0700003c ; undefined
    3a54:	00000711 	.inst	0x00000711 ; undefined
    3a58:	000e2d24 	.inst	0x000e2d24 ; undefined
    3a5c:	ffff0000 	.inst	0xffff0000 ; undefined
    3a60:	00001100 	.inst	0x00001100 ; undefined
    3a64:	5c014f01 	ldr	d1, 6444 <__bss_size+0x643e>
    3a68:	08000002 	stxrb	w0, w2, [x0]
    3a6c:	0000071d 	.inst	0x0000071d ; undefined
    3a70:	00003d29 	.inst	0x00003d29 ; undefined
    3a74:	00110009 	.inst	0x00110009 ; undefined
    3a78:	0bc80a00 	.inst	0x0bc80a00 ; undefined
    3a7c:	21150000 	.inst	0x21150000 ; undefined
    3a80:	3400000b 	cbz	w11, 3a80 <__bss_size+0x3a7a>
    3a84:	00000e2d 	.inst	0x00000e2d ; undefined
    3a88:	40ffff00 	.inst	0x40ffff00 ; undefined
    3a8c:	01000011 	.inst	0x01000011 ; undefined
    3a90:	000209df 	.inst	0x000209df ; undefined
    3a94:	0b2d0800 	add	w0, w0, w13, uxtb #2
    3a98:	3d5f0000 	ldr	b0, [x0, #1984]
    3a9c:	40090000 	.inst	0x40090000 ; undefined
    3aa0:	0a000011 	and	w17, w0, w0
    3aa4:	00000b6e 	.inst	0x00000b6e ; undefined
    3aa8:	0e2d980b 	.inst	0x0e2d980b ; undefined
    3aac:	ff000000 	.inst	0xff000000 ; undefined
    3ab0:	000c5eff 	.inst	0x000c5eff ; undefined
    3ab4:	50010c00 	adr	x0, 5c36 <__bss_size+0x5c30>
    3ab8:	01b08f03 	.inst	0x01b08f03 ; undefined
    3abc:	16000000 	b	fffffffff8003abc <__end+0xfffff7f1d15c>
    3ac0:	00000b19 	.inst	0x00000b19 ; undefined
    3ac4:	000e2db0 	.inst	0x000e2db0 ; undefined
    3ac8:	ffff0000 	.inst	0xffff0000 ; undefined
    3acc:	00000018 	.inst	0x00000018 ; undefined
    3ad0:	00000000 	.inst	0x00000000 ; undefined
    3ad4:	fc17e201 	stur	d1, [x16, #-130]
    3ad8:	00000e2d 	.inst	0x00000e2d ; undefined
    3adc:	74ffff00 	.inst	0x74ffff00 ; undefined
    3ae0:	3f00000c 	.inst	0x3f00000c ; undefined
    3ae4:	0c000002 	st4	{v2.8b-v5.8b}, [x0]
    3ae8:	03095001 	.inst	0x03095001 ; undefined
    3aec:	000e5328 	.inst	0x000e5328 ; undefined
    3af0:	ffff0000 	.inst	0xffff0000 ; undefined
    3af4:	2e440b00 	.inst	0x2e440b00 ; undefined
    3af8:	0000000e 	.inst	0x0000000e ; undefined
    3afc:	0c69ffff 	.inst	0x0c69ffff ; undefined
    3b00:	010c0000 	.inst	0x010c0000 ; undefined
    3b04:	e8030950 	.inst	0xe8030950 ; undefined
    3b08:	00000e52 	.inst	0x00000e52 ; undefined
    3b0c:	00ffff00 	.inst	0x00ffff00 ; undefined
    3b10:	60170000 	.inst	0x60170000 ; undefined
    3b14:	00000e2d 	.inst	0x00000e2d ; undefined
    3b18:	74ffff00 	.inst	0x74ffff00 ; undefined
    3b1c:	8100000c 	.inst	0x8100000c ; undefined
    3b20:	0c000002 	st4	{v2.8b-v5.8b}, [x0]
    3b24:	03095001 	.inst	0x03095001 ; undefined
    3b28:	000e5460 	.inst	0x000e5460 ; undefined
    3b2c:	ffff0000 	.inst	0xffff0000 ; undefined
    3b30:	0251010c 	.inst	0x0251010c ; undefined
    3b34:	1700008a 	b	fffffffffc003d5c <__end+0xfffffbf1d3fc>
    3b38:	000e2d68 	.inst	0x000e2d68 ; undefined
    3b3c:	ffff0000 	.inst	0xffff0000 ; undefined
    3b40:	0000037b 	.inst	0x0000037b ; undefined
    3b44:	00000299 	.inst	0x00000299 ; undefined
    3b48:	0250010c 	.inst	0x0250010c ; undefined
    3b4c:	1700008a 	b	fffffffffc003d74 <__end+0xfffffbf1d414>
    3b50:	000e2d78 	.inst	0x000e2d78 ; undefined
    3b54:	ffff0000 	.inst	0xffff0000 ; undefined
    3b58:	00000c7f 	.inst	0x00000c7f ; undefined
    3b5c:	000002b8 	.inst	0x000002b8 ; undefined
    3b60:	0950010c 	.inst	0x0950010c ; undefined
    3b64:	0e547003 	.inst	0x0e547003 ; undefined
    3b68:	ff000000 	.inst	0xff000000 ; undefined
    3b6c:	801700ff 	.inst	0x801700ff ; undefined
    3b70:	00000e2d 	.inst	0x00000e2d ; undefined
    3b74:	eaffff00 	bics	x0, x24, xzr, ror #63
    3b78:	d0000005 	adrp	x5, 5000 <__bss_size+0x4ffa>
    3b7c:	0c000002 	st4	{v2.8b-v5.8b}, [x0]
    3b80:	8a025001 	and	x1, x0, x2, lsl #20
    3b84:	00180000 	.inst	0x00180000 ; undefined
    3b88:	00000e2e 	.inst	0x00000e2e ; undefined
    3b8c:	8affff00 	bic	x0, x24, xzr, ror #63
    3b90:	0b00000c 	add	w12, w0, w0
    3b94:	000e2e34 	.inst	0x000e2e34 ; undefined
    3b98:	ffff0000 	.inst	0xffff0000 ; undefined
    3b9c:	00000c74 	.inst	0x00000c74 ; undefined
    3ba0:	0250010c 	.inst	0x0250010c ; undefined
    3ba4:	010c0089 	.inst	0x010c0089 ; undefined
    3ba8:	008b0251 	.inst	0x008b0251 ; undefined
    3bac:	07000000 	.inst	0x07000000 ; undefined
    3bb0:	00000b21 	.inst	0x00000b21 ; undefined
    3bb4:	000e2ca0 	.inst	0x000e2ca0 ; undefined
    3bb8:	ffff0000 	.inst	0xffff0000 ; undefined
    3bbc:	00001030 	.inst	0x00001030 ; undefined
    3bc0:	3b013701 	.inst	0x3b013701 ; undefined
    3bc4:	08000003 	stxrb	w0, w3, [x0]
    3bc8:	00000b2d 	.inst	0x00000b2d ; undefined
    3bcc:	00003dc3 	.inst	0x00003dc3 ; undefined
    3bd0:	00103009 	.inst	0x00103009 ; undefined
    3bd4:	0b6e0a00 	.inst	0x0b6e0a00 ; undefined
    3bd8:	c00b0000 	.inst	0xc00b0000 ; undefined
    3bdc:	00000e2c 	.inst	0x00000e2c ; undefined
    3be0:	5effff00 	frsqrts	d0, d24, d31
    3be4:	0c00000c 	st4	{v12.8b-v15.8b}, [x0]
    3be8:	8f035001 	.inst	0x8f035001 ; undefined
    3bec:	000001d0 	.inst	0x000001d0 ; undefined
    3bf0:	0b190d00 	add	w0, w8, w25, lsl #3
    3bf4:	2ce00000 	ldp	s0, s0, [x0], #-256
    3bf8:	0000000e 	.inst	0x0000000e ; undefined
    3bfc:	1070ffff 	adr	xzr, e5bf8 <__bss_size+0xe5bf2>
    3c00:	3a010000 	adcs	w0, w0, w1
    3c04:	2e500b01 	.inst	0x2e500b01 ; undefined
    3c08:	0000000e 	.inst	0x0000000e ; undefined
    3c0c:	0c69ffff 	.inst	0x0c69ffff ; undefined
    3c10:	010c0000 	.inst	0x010c0000 ; undefined
    3c14:	30030950 	adr	x16, 9d3d <__bss_size+0x9d37>
    3c18:	00000e54 	.inst	0x00000e54 ; undefined
    3c1c:	00ffff00 	.inst	0x00ffff00 ; undefined
    3c20:	00570e00 	.inst	0x00570e00 ; undefined
    3c24:	037b0000 	.inst	0x037b0000 ; undefined
    3c28:	740f0000 	.inst	0x740f0000 ; undefined
    3c2c:	19000000 	.inst	0x19000000 ; undefined
    3c30:	0b421900 	add	w0, w8, w2, lsr #6
    3c34:	17010000 	b	fffffffffc043c34 <__end+0xfffffbf5d2d4>
    3c38:	0e2b1001 	saddw	v1.8h, v0.8h, v11.8b
    3c3c:	ff000000 	.inst	0xff000000 ; undefined
    3c40:	000164ff 	.inst	0x000164ff ; undefined
    3c44:	00000000 	.inst	0x00000000 ; undefined
    3c48:	ea9c0100 	ands	x0, x8, x28, asr #0
    3c4c:	1a000005 	adc	w5, w0, w0
    3c50:	01006469 	.inst	0x01006469 ; undefined
    3c54:	00570117 	.inst	0x00570117 ; undefined
    3c58:	3e7c0000 	.inst	0x3e7c0000 ; undefined
    3c5c:	4c170000 	.inst	0x4c170000 ; undefined
    3c60:	00000e2b 	.inst	0x00000e2b ; undefined
    3c64:	7fffff00 	.inst	0x7fffff00 ; undefined
    3c68:	c700000c 	.inst	0xc700000c ; undefined
    3c6c:	0c000003 	st4	{v3.8b-v6.8b}, [x0]
    3c70:	03095001 	.inst	0x03095001 ; undefined
    3c74:	000e53e8 	.inst	0x000e53e8 ; undefined
    3c78:	ffff0000 	.inst	0xffff0000 ; undefined
    3c7c:	2b581b00 	adds	w0, w24, w24, lsr #6
    3c80:	0000000e 	.inst	0x0000000e ; undefined
    3c84:	0c95ffff 	.inst	0x0c95ffff ; undefined
    3c88:	03df0000 	.inst	0x03df0000 ; undefined
    3c8c:	010c0000 	.inst	0x010c0000 ; undefined
    3c90:	20080250 	.inst	0x20080250 ; undefined
    3c94:	2b801700 	adds	w0, w24, w0, asr #5
    3c98:	0000000e 	.inst	0x0000000e ; undefined
    3c9c:	0c7fffff 	.inst	0x0c7fffff ; undefined
    3ca0:	03fe0000 	.inst	0x03fe0000 ; undefined
    3ca4:	010c0000 	.inst	0x010c0000 ; undefined
    3ca8:	d0030950 	adrp	x16, 612d000 <__bss_size+0x612cffa>
    3cac:	00000e53 	.inst	0x00000e53 ; undefined
    3cb0:	00ffff00 	.inst	0x00ffff00 ; undefined
    3cb4:	0e2b8c1b 	cmtst	v27.8b, v0.8b, v11.8b
    3cb8:	ff000000 	.inst	0xff000000 ; undefined
    3cbc:	000c95ff 	.inst	0x000c95ff ; undefined
    3cc0:	00041600 	.inst	0x00041600 ; undefined
    3cc4:	50010c00 	adr	x0, 5e46 <__bss_size+0x5e40>
    3cc8:	00200802 	.inst	0x00200802 ; NYI
    3ccc:	0e2bac17 	sminp	v23.8b, v0.8b, v11.8b
    3cd0:	ff000000 	.inst	0xff000000 ; undefined
    3cd4:	000c7fff 	.inst	0x000c7fff ; undefined
    3cd8:	00043500 	.inst	0x00043500 ; undefined
    3cdc:	50010c00 	adr	x0, 5e5e <__bss_size+0x5e58>
    3ce0:	54000309 	b.ls	3d40 <__bss_size+0x3d3a>  // b.plast
    3ce4:	0000000e 	.inst	0x0000000e ; undefined
    3ce8:	1b00ffff 	mneg	wzr, wzr, w0
    3cec:	000e2bb8 	.inst	0x000e2bb8 ; undefined
    3cf0:	ffff0000 	.inst	0xffff0000 ; undefined
    3cf4:	00000c95 	.inst	0x00000c95 ; undefined
    3cf8:	0000044d 	.inst	0x0000044d ; undefined
    3cfc:	0250010c 	.inst	0x0250010c ; undefined
    3d00:	17002008 	b	fffffffffc00bd20 <__end+0xfffffbf253c0>
    3d04:	000e2bc4 	.inst	0x000e2bc4 ; undefined
    3d08:	ffff0000 	.inst	0xffff0000 ; undefined
    3d0c:	00000c7f 	.inst	0x00000c7f ; undefined
    3d10:	0000046c 	.inst	0x0000046c ; undefined
    3d14:	0950010c 	.inst	0x0950010c ; undefined
    3d18:	0e53f803 	.inst	0x0e53f803 ; undefined
    3d1c:	ff000000 	.inst	0xff000000 ; undefined
    3d20:	d01b00ff 	adrp	xzr, 36021000 <__bss_size+0x36020ffa>
    3d24:	00000e2b 	.inst	0x00000e2b ; undefined
    3d28:	95ffff00 	bl	8003928 <__bss_size+0x8003922>
    3d2c:	8400000c 	ld1sb	{z12.s}, p0/z, [x0, z0.s, uxtw]
    3d30:	0c000004 	st4	{v4.8b-v7.8b}, [x0]
    3d34:	08025001 	stxrb	w2, w1, [x0]
    3d38:	dc170020 	.inst	0xdc170020 ; undefined
    3d3c:	00000e2b 	.inst	0x00000e2b ; undefined
    3d40:	7fffff00 	.inst	0x7fffff00 ; undefined
    3d44:	a300000c 	.inst	0xa300000c ; undefined
    3d48:	0c000004 	st4	{v4.8b-v7.8b}, [x0]
    3d4c:	03095001 	.inst	0x03095001 ; undefined
    3d50:	000e53f0 	.inst	0x000e53f0 ; undefined
    3d54:	ffff0000 	.inst	0xffff0000 ; undefined
    3d58:	2be81b00 	.inst	0x2be81b00 ; undefined
    3d5c:	0000000e 	.inst	0x0000000e ; undefined
    3d60:	0c95ffff 	.inst	0x0c95ffff ; undefined
    3d64:	04bb0000 	add	z0.s, z0.s, z27.s
    3d68:	010c0000 	.inst	0x010c0000 ; undefined
    3d6c:	20080250 	.inst	0x20080250 ; undefined
    3d70:	2bf41700 	.inst	0x2bf41700 ; undefined
    3d74:	0000000e 	.inst	0x0000000e ; undefined
    3d78:	0c7fffff 	.inst	0x0c7fffff ; undefined
    3d7c:	04da0000 	and	z0.d, p0/m, z0.d, z0.d
    3d80:	010c0000 	.inst	0x010c0000 ; undefined
    3d84:	e0030950 	.inst	0xe0030950 ; undefined
    3d88:	00000e53 	.inst	0x00000e53 ; undefined
    3d8c:	00ffff00 	.inst	0x00ffff00 ; undefined
    3d90:	0e2c001b 	saddl	v27.8h, v0.8b, v12.8b
    3d94:	ff000000 	.inst	0xff000000 ; undefined
    3d98:	000c95ff 	.inst	0x000c95ff ; undefined
    3d9c:	0004f200 	.inst	0x0004f200 ; undefined
    3da0:	50010c00 	adr	x0, 5f22 <__bss_size+0x5f1c>
    3da4:	00200802 	.inst	0x00200802 ; NYI
    3da8:	0e2c0c17 	sqadd	v23.8b, v0.8b, v12.8b
    3dac:	ff000000 	.inst	0xff000000 ; undefined
    3db0:	000c7fff 	.inst	0x000c7fff ; undefined
    3db4:	00051100 	.inst	0x00051100 ; undefined
    3db8:	50010c00 	adr	x0, 5f3a <__bss_size+0x5f34>
    3dbc:	53c80309 	.inst	0x53c80309 ; undefined
    3dc0:	0000000e 	.inst	0x0000000e ; undefined
    3dc4:	1b00ffff 	mneg	wzr, wzr, w0
    3dc8:	000e2c18 	.inst	0x000e2c18 ; undefined
    3dcc:	ffff0000 	.inst	0xffff0000 ; undefined
    3dd0:	00000c95 	.inst	0x00000c95 ; undefined
    3dd4:	00000529 	.inst	0x00000529 ; undefined
    3dd8:	0250010c 	.inst	0x0250010c ; undefined
    3ddc:	17002008 	b	fffffffffc00bdfc <__end+0xfffffbf2549c>
    3de0:	000e2c2c 	.inst	0x000e2c2c ; undefined
    3de4:	ffff0000 	.inst	0xffff0000 ; undefined
    3de8:	00000c7f 	.inst	0x00000c7f ; undefined
    3dec:	00000548 	.inst	0x00000548 ; undefined
    3df0:	0950010c 	.inst	0x0950010c ; undefined
    3df4:	0e53b803 	.inst	0x0e53b803 ; undefined
    3df8:	ff000000 	.inst	0xff000000 ; undefined
    3dfc:	381b00ff 	sturb	wzr, [x7, #-80]
    3e00:	00000e2c 	.inst	0x00000e2c ; undefined
    3e04:	95ffff00 	bl	8003a04 <__bss_size+0x80039fe>
    3e08:	6000000c 	.inst	0x6000000c ; undefined
    3e0c:	0c000005 	st4	{v5.8b-v8.8b}, [x0]
    3e10:	08025001 	stxrb	w2, w1, [x0]
    3e14:	44170020 	.inst	0x44170020 ; undefined
    3e18:	00000e2c 	.inst	0x00000e2c ; undefined
    3e1c:	7fffff00 	.inst	0x7fffff00 ; undefined
    3e20:	7f00000c 	.inst	0x7f00000c ; undefined
    3e24:	0c000005 	st4	{v5.8b-v8.8b}, [x0]
    3e28:	03095001 	.inst	0x03095001 ; undefined
    3e2c:	000e53d8 	.inst	0x000e53d8 ; undefined
    3e30:	ffff0000 	.inst	0xffff0000 ; undefined
    3e34:	2c501b00 	ldnp	s0, s6, [x24, #128]
    3e38:	0000000e 	.inst	0x0000000e ; undefined
    3e3c:	0c95ffff 	.inst	0x0c95ffff ; undefined
    3e40:	05970000 	mov	z0.s, p7/z, #0
    3e44:	010c0000 	.inst	0x010c0000 ; undefined
    3e48:	20080250 	.inst	0x20080250 ; undefined
    3e4c:	2c5c1700 	ldnp	s0, s5, [x24, #224]
    3e50:	0000000e 	.inst	0x0000000e ; undefined
    3e54:	0c7fffff 	.inst	0x0c7fffff ; undefined
    3e58:	05b60000 	.inst	0x05b60000 ; undefined
    3e5c:	010c0000 	.inst	0x010c0000 ; undefined
    3e60:	c0030950 	.inst	0xc0030950 ; undefined
    3e64:	00000e53 	.inst	0x00000e53 ; undefined
    3e68:	00ffff00 	.inst	0x00ffff00 ; undefined
    3e6c:	0e2c681b 	.inst	0x0e2c681b ; undefined
    3e70:	ff000000 	.inst	0xff000000 ; undefined
    3e74:	000c95ff 	.inst	0x000c95ff ; undefined
    3e78:	0005ce00 	.inst	0x0005ce00 ; undefined
    3e7c:	50010c00 	adr	x0, 5ffe <__bss_size+0x5ff8>
    3e80:	00200802 	.inst	0x00200802 ; NYI
    3e84:	0e2c740b 	sabd	v11.8b, v0.8b, v12.8b
    3e88:	ff000000 	.inst	0xff000000 ; undefined
    3e8c:	000c69ff 	.inst	0x000c69ff ; undefined
    3e90:	50010c00 	adr	x0, 6012 <__bss_size+0x600c>
    3e94:	54080309 	b.ls	13ef4 <__bss_size+0x13eee>  // b.plast
    3e98:	0000000e 	.inst	0x0000000e ; undefined
    3e9c:	0000ffff 	.inst	0x0000ffff ; undefined
    3ea0:	000bce1c 	.inst	0x000bce1c ; undefined
    3ea4:	30ec0100 	adr	x0, fffffffffffdbec5 <__end+0xffffffef5565>
    3ea8:	00000e2a 	.inst	0x00000e2a ; undefined
    3eac:	dcffff00 	.inst	0xdcffff00 ; undefined
    3eb0:	00000000 	.inst	0x00000000 ; undefined
    3eb4:	01000000 	.inst	0x01000000 ; undefined
    3eb8:	0007119c 	.inst	0x0007119c ; undefined
    3ebc:	64691d00 	.inst	0x64691d00 ; undefined
    3ec0:	57ec0100 	.inst	0x57ec0100 ; undefined
    3ec4:	4f000000 	.inst	0x4f000000 ; undefined
    3ec8:	1e000040 	.inst	0x1e000040 ; undefined
    3ecc:	00000854 	.inst	0x00000854 ; undefined
    3ed0:	0129ed01 	.inst	0x0129ed01 ; undefined
    3ed4:	02100000 	.inst	0x02100000 ; undefined
    3ed8:	a41f6091 	ldff1b	{z17.b}, p0/z, [x4, xzr]
    3edc:	01000006 	.inst	0x01000006 ; undefined
    3ee0:	00570109 	.inst	0x00570109 ; undefined
    3ee4:	409c0000 	.inst	0x409c0000 ; undefined
    3ee8:	141f0000 	b	7c3ee8 <__bss_size+0x7c3ee2>
    3eec:	0100000b 	.inst	0x0100000b ; undefined
    3ef0:	0057010a 	.inst	0x0057010a ; undefined
    3ef4:	40e50000 	.inst	0x40e50000 ; undefined
    3ef8:	21150000 	.inst	0x21150000 ; undefined
    3efc:	5000000b 	adr	x11, 3efe <__bss_size+0x3ef8>
    3f00:	00000e2a 	.inst	0x00000e2a ; undefined
    3f04:	c0ffff00 	.inst	0xc0ffff00 ; undefined
    3f08:	0100000f 	.inst	0x0100000f ; undefined
    3f0c:	000684ff 	.inst	0x000684ff ; undefined
    3f10:	0b2d0800 	add	w0, w0, w13, uxtb #2
    3f14:	41850000 	.inst	0x41850000 ; undefined
    3f18:	c0090000 	.inst	0xc0090000 ; undefined
    3f1c:	0a00000f 	and	w15, w0, w0
    3f20:	00000b6e 	.inst	0x00000b6e ; undefined
    3f24:	0e2a5c0b 	sqrshl	v11.8b, v0.8b, v10.8b
    3f28:	ff000000 	.inst	0xff000000 ; undefined
    3f2c:	000c5eff 	.inst	0x000c5eff ; undefined
    3f30:	50010c00 	adr	x0, 60b2 <__bss_size+0x60ac>
    3f34:	00108f02 	.inst	0x00108f02 ; undefined
    3f38:	190d0000 	.inst	0x190d0000 ; undefined
    3f3c:	8000000b 	.inst	0x8000000b ; undefined
    3f40:	00000e2a 	.inst	0x00000e2a ; undefined
    3f44:	00ffff00 	.inst	0x00ffff00 ; undefined
    3f48:	01000010 	.inst	0x01000010 ; undefined
    3f4c:	d4170102 	hvc	#0xb808
    3f50:	00000e2a 	.inst	0x00000e2a ; undefined
    3f54:	7fffff00 	.inst	0x7fffff00 ; undefined
    3f58:	b700000c 	tbnz	x12, #32, 3f58 <__bss_size+0x3f52>
    3f5c:	0c000006 	st4	{v6.8b-v9.8b}, [x0]
    3f60:	03095001 	.inst	0x03095001 ; undefined
    3f64:	000e53b0 	.inst	0x000e53b0 ; undefined
    3f68:	ffff0000 	.inst	0xffff0000 ; undefined
    3f6c:	2aec1700 	orn	w0, w24, w12, ror #5
    3f70:	0000000e 	.inst	0x0000000e ; undefined
    3f74:	0c7fffff 	.inst	0x0c7fffff ; undefined
    3f78:	06d60000 	.inst	0x06d60000 ; undefined
    3f7c:	010c0000 	.inst	0x010c0000 ; undefined
    3f80:	a8030950 	stnp	x16, x2, [x10, #48]
    3f84:	00000e53 	.inst	0x00000e53 ; undefined
    3f88:	00ffff00 	.inst	0x00ffff00 ; undefined
    3f8c:	0e2b0017 	saddl	v23.8h, v0.8b, v11.8b
    3f90:	ff000000 	.inst	0xff000000 ; undefined
    3f94:	000c69ff 	.inst	0x000c69ff ; undefined
    3f98:	0006f500 	.inst	0x0006f500 ; undefined
    3f9c:	50010c00 	adr	x0, 611e <__bss_size+0x6118>
    3fa0:	53700309 	.inst	0x53700309 ; undefined
    3fa4:	0000000e 	.inst	0x0000000e ; undefined
    3fa8:	0b00ffff 	.inst	0x0b00ffff ; undefined
    3fac:	000e2b0c 	.inst	0x000e2b0c ; undefined
    3fb0:	ffff0000 	.inst	0xffff0000 ; undefined
    3fb4:	00000c69 	.inst	0x00000c69 ; undefined
    3fb8:	0950010c 	.inst	0x0950010c ; undefined
    3fbc:	0e533803 	zip1	v3.4h, v0.4h, v19.4h
    3fc0:	ff000000 	.inst	0xff000000 ; undefined
    3fc4:	200000ff 	.inst	0x200000ff ; undefined
    3fc8:	00000be8 	.inst	0x00000be8 ; undefined
    3fcc:	3401cc01 	cbz	w1, 794c <__bss_size+0x7946>
    3fd0:	21000007 	.inst	0x21000007 ; undefined
    3fd4:	01006469 	.inst	0x01006469 ; undefined
    3fd8:	000057cc 	.inst	0x000057cc ; undefined
    3fdc:	08542200 	ldxrb	w0, [x16]
    3fe0:	cd010000 	.inst	0xcd010000 ; undefined
    3fe4:	00000129 	.inst	0x00000129 ; undefined
    3fe8:	08230010 	.inst	0x08230010 ; undefined
    3fec:	01000004 	.inst	0x01000004 ; undefined
    3ff0:	000069ae 	.inst	0x000069ae ; undefined
    3ff4:	0e28d000 	.inst	0x0e28d000 ; undefined
    3ff8:	ff000000 	.inst	0xff000000 ; undefined
    3ffc:	0000a0ff 	.inst	0x0000a0ff ; undefined
    4000:	00000000 	.inst	0x00000000 ; undefined
    4004:	d39c0100 	.inst	0xd39c0100 ; undefined
    4008:	1e000007 	.inst	0x1e000007 ; undefined
    400c:	00000854 	.inst	0x00000854 ; undefined
    4010:	07d3af01 	.inst	0x07d3af01 ; undefined
    4014:	02100000 	.inst	0x02100000 ; undefined
    4018:	21156091 	.inst	0x21156091 ; undefined
    401c:	ec00000b 	.inst	0xec00000b ; undefined
    4020:	00000e28 	.inst	0x00000e28 ; undefined
    4024:	e0ffff00 	.inst	0xe0ffff00 ; undefined
    4028:	0100000e 	.inst	0x0100000e ; undefined
    402c:	0007a4c0 	.inst	0x0007a4c0 ; undefined
    4030:	0b2d0800 	add	w0, w0, w13, uxtb #2
    4034:	42110000 	.inst	0x42110000 ; undefined
    4038:	e0090000 	.inst	0xe0090000 ; undefined
    403c:	0a00000e 	and	w14, w0, w0
    4040:	00000b6e 	.inst	0x00000b6e ; undefined
    4044:	0e28fc0b 	frecps	v11.2s, v0.2s, v8.2s
    4048:	ff000000 	.inst	0xff000000 ; undefined
    404c:	000c5eff 	.inst	0x000c5eff ; undefined
    4050:	50010c00 	adr	x0, 61d2 <__bss_size+0x61cc>
    4054:	00108f02 	.inst	0x00108f02 ; undefined
    4058:	19240000 	.inst	0x19240000 ; undefined
    405c:	2000000b 	.inst	0x2000000b ; undefined
    4060:	00000e29 	.inst	0x00000e29 ; undefined
    4064:	20ffff00 	.inst	0x20ffff00 ; undefined
    4068:	0100000f 	.inst	0x0100000f ; undefined
    406c:	29700bc3 	ldp	w3, w2, [x30, #-128]
    4070:	0000000e 	.inst	0x0000000e ; undefined
    4074:	0c69ffff 	.inst	0x0c69ffff ; undefined
    4078:	010c0000 	.inst	0x010c0000 ; undefined
    407c:	b0030950 	adrp	x16, 612d000 <__bss_size+0x612cffa>
    4080:	00000e52 	.inst	0x00000e52 ; undefined
    4084:	00ffff00 	.inst	0x00ffff00 ; undefined
    4088:	00570e00 	.inst	0x00570e00 ; undefined
    408c:	07e30000 	.inst	0x07e30000 ; undefined
    4090:	740f0000 	.inst	0x740f0000 ; undefined
    4094:	06000000 	.inst	0x06000000 ; undefined
    4098:	03372300 	.inst	0x03372300 ; undefined
    409c:	90010000 	adrp	x0, 2004000 <__bss_size+0x2003ffa>
    40a0:	00000069 	.inst	0x00000069 ; undefined
    40a4:	000e2830 	.inst	0x000e2830 ; undefined
    40a8:	ffff0000 	.inst	0xffff0000 ; undefined
    40ac:	000000a0 	.inst	0x000000a0 ; undefined
    40b0:	00000000 	.inst	0x00000000 ; undefined
    40b4:	08829c01 	stlrb	w1, [x0]
    40b8:	541e0000 	b.eq	400b8 <__bss_size+0x400b2>  // b.none
    40bc:	01000008 	.inst	0x01000008 ; undefined
    40c0:	0007d391 	.inst	0x0007d391 ; undefined
    40c4:	91021000 	add	x0, x0, #0x84
    40c8:	0b211560 	.inst	0x0b211560 ; undefined
    40cc:	284c0000 	ldnp	w0, w0, [x0, #96]
    40d0:	0000000e 	.inst	0x0000000e ; undefined
    40d4:	0e70ffff 	.inst	0x0e70ffff ; undefined
    40d8:	a2010000 	.inst	0xa2010000 ; undefined
    40dc:	00000853 	.inst	0x00000853 ; undefined
    40e0:	000b2d08 	.inst	0x000b2d08 ; undefined
    40e4:	00427300 	.inst	0x00427300 ; undefined
    40e8:	0e700900 	.inst	0x0e700900 ; undefined
    40ec:	6e0a0000 	ext	v0.16b, v0.16b, v10.16b, #0
    40f0:	0b00000b 	add	w11, w0, w0
    40f4:	000e285c 	.inst	0x000e285c ; undefined
    40f8:	ffff0000 	.inst	0xffff0000 ; undefined
    40fc:	00000c5e 	.inst	0x00000c5e ; undefined
    4100:	0250010c 	.inst	0x0250010c ; undefined
    4104:	0000108f 	.inst	0x0000108f ; undefined
    4108:	0b192400 	add	w0, w0, w25, lsl #9
    410c:	28800000 	stp	w0, w0, [x0], #0
    4110:	0000000e 	.inst	0x0000000e ; undefined
    4114:	0eb0ffff 	frsqrts	v31.2s, v31.2s, v16.2s
    4118:	a5010000 	ld1rqw	{z0.s}, p0/z, [x0, x1, lsl #2]
    411c:	0e28d00b 	.inst	0x0e28d00b ; undefined
    4120:	ff000000 	.inst	0xff000000 ; undefined
    4124:	000c69ff 	.inst	0x000c69ff ; undefined
    4128:	50010c00 	adr	x0, 62aa <__bss_size+0x62a4>
    412c:	52780309 	.inst	0x52780309 ; undefined
    4130:	0000000e 	.inst	0x0000000e ; undefined
    4134:	0000ffff 	.inst	0x0000ffff ; undefined
    4138:	0002e123 	.inst	0x0002e123 ; undefined
    413c:	69720100 	.inst	0x69720100 ; undefined
    4140:	90000000 	adrp	x0, 4000 <__bss_size+0x3ffa>
    4144:	00000e27 	.inst	0x00000e27 ; undefined
    4148:	98ffff00 	ldrsw	x0, 4128 <__bss_size+0x4122>
    414c:	00000000 	.inst	0x00000000 ; undefined
    4150:	01000000 	.inst	0x01000000 ; undefined
    4154:	0009219c 	.inst	0x0009219c ; undefined
    4158:	08541e00 	ldxrb	w0, [x16]
    415c:	73010000 	.inst	0x73010000 ; undefined
    4160:	000007d3 	.inst	0x000007d3 ; undefined
    4164:	60910210 	.inst	0x60910210 ; undefined
    4168:	000b2115 	.inst	0x000b2115 ; undefined
    416c:	0e27a800 	.inst	0x0e27a800 ; undefined
    4170:	ff000000 	.inst	0xff000000 ; undefined
    4174:	000e00ff 	.inst	0x000e00ff ; undefined
    4178:	f2840100 	movk	x0, #0x2008
    417c:	08000008 	stxrb	w0, w8, [x0]
    4180:	00000b2d 	.inst	0x00000b2d ; undefined
    4184:	000042d5 	.inst	0x000042d5 ; undefined
    4188:	000e0009 	.inst	0x000e0009 ; undefined
    418c:	0b6e0a00 	.inst	0x0b6e0a00 ; undefined
    4190:	b80b0000 	stur	w0, [x0, #176]
    4194:	00000e27 	.inst	0x00000e27 ; undefined
    4198:	5effff00 	frsqrts	d0, d24, d31
    419c:	0c00000c 	st4	{v12.8b-v15.8b}, [x0]
    41a0:	8f025001 	.inst	0x8f025001 ; undefined
    41a4:	00000010 	.inst	0x00000010 ; undefined
    41a8:	000b1924 	.inst	0x000b1924 ; undefined
    41ac:	0e27d800 	.inst	0x0e27d800 ; undefined
    41b0:	ff000000 	.inst	0xff000000 ; undefined
    41b4:	000e40ff 	.inst	0x000e40ff ; undefined
    41b8:	0b870100 	add	w0, w8, w7, asr #0
    41bc:	000e2828 	.inst	0x000e2828 ; undefined
    41c0:	ffff0000 	.inst	0xffff0000 ; undefined
    41c4:	00000c69 	.inst	0x00000c69 ; undefined
    41c8:	0950010c 	.inst	0x0950010c ; undefined
    41cc:	0e524003 	.inst	0x0e524003 ; undefined
    41d0:	ff000000 	.inst	0xff000000 ; undefined
    41d4:	230000ff 	.inst	0x230000ff ; undefined
    41d8:	00000367 	.inst	0x00000367 ; undefined
    41dc:	00695301 	.inst	0x00695301 ; undefined
    41e0:	26e00000 	.inst	0x26e00000 ; undefined
    41e4:	0000000e 	.inst	0x0000000e ; undefined
    41e8:	00a8ffff 	.inst	0x00a8ffff ; undefined
    41ec:	00000000 	.inst	0x00000000 ; undefined
    41f0:	9c010000 	ldr	q0, 61f0 <__bss_size+0x61ea>
    41f4:	000009c0 	.inst	0x000009c0 ; undefined
    41f8:	0008541e 	.inst	0x0008541e ; undefined
    41fc:	29540100 	ldp	w0, w0, [x8, #160]
    4200:	10000001 	adr	x1, 4200 <__bss_size+0x41fa>
    4204:	15609102 	b	582860c <__bss_size+0x5828606>
    4208:	00000b21 	.inst	0x00000b21 ; undefined
    420c:	000e26fc 	.inst	0x000e26fc ; undefined
    4210:	ffff0000 	.inst	0xffff0000 ; undefined
    4214:	00000d90 	.inst	0x00000d90 ; undefined
    4218:	09916601 	.inst	0x09916601 ; undefined
    421c:	2d080000 	stp	s0, s0, [x0, #64]
    4220:	3700000b 	tbnz	w11, #0, 4220 <__bss_size+0x421a>
    4224:	09000043 	.inst	0x09000043 ; undefined
    4228:	00000d90 	.inst	0x00000d90 ; undefined
    422c:	000b6e0a 	.inst	0x000b6e0a ; undefined
    4230:	27080b00 	.inst	0x27080b00 ; undefined
    4234:	0000000e 	.inst	0x0000000e ; undefined
    4238:	0c5effff 	.inst	0x0c5effff ; undefined
    423c:	010c0000 	.inst	0x010c0000 ; undefined
    4240:	108f0250 	adr	x16, fffffffffff22288 <__end+0xffffffe3b928>
    4244:	24000000 	cmphs	p0.b, p0/z, z0.b, z0.b
    4248:	00000b19 	.inst	0x00000b19 ; undefined
    424c:	000e2728 	.inst	0x000e2728 ; undefined
    4250:	ffff0000 	.inst	0xffff0000 ; undefined
    4254:	00000dd0 	.inst	0x00000dd0 ; undefined
    4258:	880b6901 	stxr	w11, w1, [x8]
    425c:	00000e27 	.inst	0x00000e27 ; undefined
    4260:	69ffff00 	ldpsw	x0, xzr, [x24, #-4]!
    4264:	0c00000c 	st4	{v12.8b-v15.8b}, [x0]
    4268:	03095001 	.inst	0x03095001 ; undefined
    426c:	000e5210 	.inst	0x000e5210 ; undefined
    4270:	ffff0000 	.inst	0xffff0000 ; undefined
    4274:	c5230000 	ld1sw	{z0.d}, p0/z, [x0, z3.d, uxtw #2]
    4278:	01000002 	.inst	0x01000002 ; undefined
    427c:	00006930 	.inst	0x00006930 ; undefined
    4280:	0e262000 	ssubl	v0.8h, v0.8b, v6.8b
    4284:	ff000000 	.inst	0xff000000 ; undefined
    4288:	0000bcff 	.inst	0x0000bcff ; undefined
    428c:	00000000 	.inst	0x00000000 ; undefined
    4290:	7e9c0100 	.inst	0x7e9c0100 ; undefined
    4294:	1e00000a 	.inst	0x1e00000a ; undefined
    4298:	00000854 	.inst	0x00000854 ; undefined
    429c:	01293101 	.inst	0x01293101 ; undefined
    42a0:	02100000 	.inst	0x02100000 ; undefined
    42a4:	21156091 	.inst	0x21156091 ; undefined
    42a8:	3c00000b 	stur	b11, [x0]
    42ac:	00000e26 	.inst	0x00000e26 ; undefined
    42b0:	20ffff00 	.inst	0x20ffff00 ; undefined
    42b4:	0100000d 	.inst	0x0100000d ; undefined
    42b8:	000a3043 	.inst	0x000a3043 ; undefined
    42bc:	0b2d0800 	add	w0, w0, w13, uxtb #2
    42c0:	43990000 	.inst	0x43990000 ; undefined
    42c4:	20090000 	.inst	0x20090000 ; undefined
    42c8:	0a00000d 	and	w13, w0, w0
    42cc:	00000b6e 	.inst	0x00000b6e ; undefined
    42d0:	0e26480b 	.inst	0x0e26480b ; undefined
    42d4:	ff000000 	.inst	0xff000000 ; undefined
    42d8:	000c5eff 	.inst	0x000c5eff ; undefined
    42dc:	50010c00 	adr	x0, 645e <__bss_size+0x6458>
    42e0:	00108f02 	.inst	0x00108f02 ; undefined
    42e4:	19240000 	.inst	0x19240000 ; undefined
    42e8:	6800000b 	.inst	0x6800000b ; undefined
    42ec:	00000e26 	.inst	0x00000e26 ; undefined
    42f0:	60ffff00 	.inst	0x60ffff00 ; undefined
    42f4:	0100000d 	.inst	0x0100000d ; undefined
    42f8:	26d01746 	.inst	0x26d01746 ; undefined
    42fc:	0000000e 	.inst	0x0000000e ; undefined
    4300:	0c69ffff 	.inst	0x0c69ffff ; undefined
    4304:	0a620000 	bic	w0, w0, w2, lsr #0
    4308:	010c0000 	.inst	0x010c0000 ; undefined
    430c:	c0030950 	.inst	0xc0030950 ; undefined
    4310:	00000e51 	.inst	0x00000e51 ; undefined
    4314:	00ffff00 	.inst	0x00ffff00 ; undefined
    4318:	0e26dc0b 	fmulx	v11.2s, v0.2s, v6.2s
    431c:	ff000000 	.inst	0xff000000 ; undefined
    4320:	000c69ff 	.inst	0x000c69ff ; undefined
    4324:	50010c00 	adr	x0, 64a6 <__bss_size+0x64a0>
    4328:	51f00309 	.inst	0x51f00309 ; undefined
    432c:	0000000e 	.inst	0x0000000e ; undefined
    4330:	0000ffff 	.inst	0x0000ffff ; undefined
    4334:	000ba125 	.inst	0x000ba125 ; undefined
    4338:	80130100 	.inst	0x80130100 ; undefined
    433c:	00000e25 	.inst	0x00000e25 ; undefined
    4340:	9cffff00 	ldr	q0, 4320 <__bss_size+0x431a>
    4344:	00000000 	.inst	0x00000000 ; undefined
    4348:	01000000 	.inst	0x01000000 ; undefined
    434c:	000b199c 	.inst	0x000b199c ; undefined
    4350:	08541e00 	ldxrb	w0, [x16]
    4354:	14010000 	b	44354 <__bss_size+0x4434e>
    4358:	00000129 	.inst	0x00000129 ; undefined
    435c:	60910210 	.inst	0x60910210 ; undefined
    4360:	000b2115 	.inst	0x000b2115 ; undefined
    4364:	0e25a800 	.inst	0x0e25a800 ; undefined
    4368:	ff000000 	.inst	0xff000000 ; undefined
    436c:	000cc0ff 	.inst	0x000cc0ff ; undefined
    4370:	ea260100 	bics	x0, x8, x6
    4374:	0800000a 	stxrb	w0, w10, [x0]
    4378:	00000b2d 	.inst	0x00000b2d ; undefined
    437c:	000043fb 	.inst	0x000043fb ; undefined
    4380:	000cc009 	.inst	0x000cc009 ; undefined
    4384:	0b6e0a00 	.inst	0x0b6e0a00 ; undefined
    4388:	b00b0000 	adrp	x0, 16005000 <__bss_size+0x16004ffa>
    438c:	00000e25 	.inst	0x00000e25 ; undefined
    4390:	5effff00 	frsqrts	d0, d24, d31
    4394:	0c00000c 	st4	{v12.8b-v15.8b}, [x0]
    4398:	8f025001 	.inst	0x8f025001 ; undefined
    439c:	00000010 	.inst	0x00000010 ; undefined
    43a0:	000b1924 	.inst	0x000b1924 ; undefined
    43a4:	0e25d000 	.inst	0x0e25d000 ; undefined
    43a8:	ff000000 	.inst	0xff000000 ; undefined
    43ac:	000cf0ff 	.inst	0x000cf0ff ; undefined
    43b0:	0b290100 	add	w0, w8, w9, uxtb
    43b4:	000e261c 	.inst	0x000e261c ; undefined
    43b8:	ffff0000 	.inst	0xffff0000 ; undefined
    43bc:	00000c69 	.inst	0x00000c69 ; undefined
    43c0:	0950010c 	.inst	0x0950010c ; undefined
    43c4:	0e519003 	.inst	0x0e519003 ; undefined
    43c8:	ff000000 	.inst	0xff000000 ; undefined
    43cc:	260000ff 	.inst	0x260000ff ; undefined
    43d0:	000009ac 	.inst	0x000009ac ; undefined
    43d4:	20010e01 	.inst	0x20010e01 ; undefined
    43d8:	0000095c 	.inst	0x0000095c ; undefined
    43dc:	44010701 	.inst	0x44010701 ; undefined
    43e0:	2700000b 	.inst	0x2700000b ; undefined
    43e4:	000009c2 	.inst	0x000009c2 ; undefined
    43e8:	0b440701 	add	w1, w24, w4, lsr #1
    43ec:	78280000 	ldaddh	w8, w0, [x0]
    43f0:	01000009 	.inst	0x01000009 ; undefined
    43f4:	00007b08 	.inst	0x00007b08 ; undefined
    43f8:	08290000 	.inst	0x08290000 ; undefined
    43fc:	00000057 	.inst	0x00000057 ; undefined
    4400:	000b212a 	.inst	0x000b212a ; undefined
    4404:	0e251000 	saddw	v0.8h, v0.8h, v5.8b
    4408:	ff000000 	.inst	0xff000000 ; undefined
    440c:	000040ff 	.inst	0x000040ff ; undefined
    4410:	00000000 	.inst	0x00000000 ; undefined
    4414:	8d9c0100 	.inst	0x8d9c0100 ; undefined
    4418:	0800000b 	stxrb	w0, w11, [x0]
    441c:	00000b2d 	.inst	0x00000b2d ; undefined
    4420:	00004472 	.inst	0x00004472 ; undefined
    4424:	000b382b 	.inst	0x000b382b ; undefined
    4428:	0044ab00 	.inst	0x0044ab00 ; undefined
    442c:	251c0b00 	cmpge	p0.b, p2/z, z24.b, #-4
    4430:	0000000e 	.inst	0x0000000e ; undefined
    4434:	0c5effff 	.inst	0x0c5effff ; undefined
    4438:	010c0000 	.inst	0x010c0000 ; undefined
    443c:	01f30350 	.inst	0x01f30350 ; undefined
    4440:	2c000050 	stnp	s16, s0, [x2]
    4444:	00000b19 	.inst	0x00000b19 ; undefined
    4448:	000e2550 	.inst	0x000e2550 ; undefined
    444c:	ffff0000 	.inst	0xffff0000 ; undefined
    4450:	00000024 	.inst	0x00000024 ; undefined
    4454:	00000000 	.inst	0x00000000 ; undefined
    4458:	112a9c01 	add	w1, w0, #0xaa7
    445c:	70000007 	adr	x7, 445f <__bss_size+0x4459>
    4460:	00000e29 	.inst	0x00000e29 ; undefined
    4464:	bcffff00 	.inst	0xbcffff00 ; undefined
    4468:	00000000 	.inst	0x00000000 ; undefined
    446c:	01000000 	.inst	0x01000000 ; undefined
    4470:	000c5e9c 	.inst	0x000c5e9c ; undefined
    4474:	071d0800 	.inst	0x071d0800 ; undefined
    4478:	44f80000 	sdot	z0.d, z0.h, z8.h[1]
    447c:	272d0000 	.inst	0x272d0000 ; undefined
    4480:	02000007 	.inst	0x02000007 ; undefined
    4484:	21156091 	.inst	0x21156091 ; undefined
    4488:	9000000b 	adrp	x11, 4000 <__bss_size+0x3ffa>
    448c:	00000e29 	.inst	0x00000e29 ; undefined
    4490:	50ffff00 	adr	x0, 4472 <__bss_size+0x446c>
    4494:	0100000f 	.inst	0x0100000f ; undefined
    4498:	000c10df 	.inst	0x000c10df ; undefined
    449c:	0b2d0800 	add	w0, w0, w13, uxtb #2
    44a0:	45450000 	.inst	0x45450000 ; undefined
    44a4:	50090000 	adr	x0, 164a6 <__bss_size+0x164a0>
    44a8:	0a00000f 	and	w15, w0, w0
    44ac:	00000b6e 	.inst	0x00000b6e ; undefined
    44b0:	0e299c0b 	mul	v11.8b, v0.8b, v9.8b
    44b4:	ff000000 	.inst	0xff000000 ; undefined
    44b8:	000c5eff 	.inst	0x000c5eff ; undefined
    44bc:	50010c00 	adr	x0, 663e <__bss_size+0x6638>
    44c0:	00108f02 	.inst	0x00108f02 ; undefined
    44c4:	19240000 	.inst	0x19240000 ; undefined
    44c8:	c000000b 	.inst	0xc000000b ; undefined
    44cc:	00000e29 	.inst	0x00000e29 ; undefined
    44d0:	90ffff00 	adrp	x0, fffffffffffe4000 <__end+0xffffffefd6a0>
    44d4:	0100000f 	.inst	0x0100000f ; undefined
    44d8:	2a1817e2 	mov	w2, w24, lsl #5
    44dc:	0000000e 	.inst	0x0000000e ; undefined
    44e0:	0c74ffff 	.inst	0x0c74ffff ; undefined
    44e4:	0c420000 	.inst	0x0c420000 ; undefined
    44e8:	010c0000 	.inst	0x010c0000 ; undefined
    44ec:	28030950 	stnp	w16, w2, [x10, #24]
    44f0:	00000e53 	.inst	0x00000e53 ; undefined
    44f4:	00ffff00 	.inst	0x00ffff00 ; undefined
    44f8:	0e2a2c0b 	sqsub	v11.8b, v0.8b, v10.8b
    44fc:	ff000000 	.inst	0xff000000 ; undefined
    4500:	000c69ff 	.inst	0x000c69ff ; undefined
    4504:	50010c00 	adr	x0, 6686 <__bss_size+0x6680>
    4508:	52e80309 	.inst	0x52e80309 ; undefined
    450c:	0000000e 	.inst	0x0000000e ; undefined
    4510:	0000ffff 	.inst	0x0000ffff ; undefined
    4514:	000b232e 	.inst	0x000b232e ; undefined
    4518:	000b2300 	.inst	0x000b2300 ; undefined
    451c:	2e050100 	ext	v0.8b, v8.8b, v5.8b, #0
    4520:	00000533 	.inst	0x00000533 ; undefined
    4524:	00000533 	.inst	0x00000533 ; undefined
    4528:	f02e0403 	adrp	x3, 5c087000 <__bss_size+0x5c086ffa>
    452c:	f0000001 	adrp	x1, 7000 <__bss_size+0x6ffa>
    4530:	04000001 	add	z1.b, p0/m, z1.b, z0.b
    4534:	020e2e11 	.inst	0x020e2e11 ; undefined
    4538:	020e0000 	.inst	0x020e0000 ; undefined
    453c:	14040000 	b	10453c <__bss_size+0x104536>
    4540:	0002432e 	.inst	0x0002432e ; undefined
    4544:	00024300 	.inst	0x00024300 ; undefined
    4548:	2e130400 	.inst	0x2e130400 ; undefined
    454c:	000009d7 	.inst	0x000009d7 ; undefined
    4550:	000009d7 	.inst	0x000009d7 ; undefined
    4554:	bc001504 	str	s4, [x8], #1
    4558:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    455c:	000f9600 	.inst	0x000f9600 ; undefined
    4560:	64010800 	.inst	0x64010800 ; undefined
    4564:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
    4568:	00000c23 	.inst	0x00000c23 ; undefined
    456c:	0000024b 	.inst	0x0000024b ; undefined
    4570:	000e2f00 	.inst	0x000e2f00 ; undefined
    4574:	ffff0000 	.inst	0xffff0000 ; undefined
    4578:	00000050 	.inst	0x00000050 ; undefined
    457c:	00000000 	.inst	0x00000000 ; undefined
    4580:	000015d1 	.inst	0x000015d1 ; undefined
    4584:	17060102 	b	fffffffffc18498c <__end+0xfffffc09e02c>
    4588:	02000001 	.inst	0x02000001 ; undefined
    458c:	02040502 	.inst	0x02040502 ; undefined
    4590:	04030000 	subr	z0.b, p0/m, z0.b, z0.b
    4594:	746e6905 	.inst	0x746e6905 ; undefined
    4598:	05080200 	.inst	0x05080200 ; undefined
    459c:	0000023a 	.inst	0x0000023a ; undefined
    45a0:	15080102 	b	42049a8 <__bss_size+0x42049a2>
    45a4:	02000001 	.inst	0x02000001 ; undefined
    45a8:	013a0702 	.inst	0x013a0702 ; undefined
    45ac:	31040000 	adds	w0, w0, #0x100
    45b0:	02000002 	.inst	0x02000002 ; undefined
    45b4:	00006234 	.inst	0x00006234 ; undefined
    45b8:	07040200 	.inst	0x07040200 ; undefined
    45bc:	0000012d 	.inst	0x0000012d ; undefined
    45c0:	28070802 	stnp	w2, w2, [x0, #56]
    45c4:	05000001 	orr	z1.s, z1.s, #0x1
    45c8:	00000c0e 	.inst	0x00000c0e ; undefined
    45cc:	00570b01 	.inst	0x00570b01 ; undefined
    45d0:	2f400000 	mla	v0.4h, v0.4h, v0.h[0]
    45d4:	0000000e 	.inst	0x0000000e ; undefined
    45d8:	0010ffff 	.inst	0x0010ffff ; undefined
    45dc:	00000000 	.inst	0x00000000 ; undefined
    45e0:	9c010000 	ldr	q0, 65e0 <__bss_size+0x65da>
    45e4:	00038206 	.inst	0x00038206 ; undefined
    45e8:	20070100 	.inst	0x20070100 ; undefined
    45ec:	00000e2f 	.inst	0x00000e2f ; undefined
    45f0:	18ffff00 	ldr	w0, 45d0 <__bss_size+0x45ca>
    45f4:	00000000 	.inst	0x00000000 ; undefined
    45f8:	01000000 	.inst	0x01000000 ; undefined
    45fc:	03b8069c 	.inst	0x03b8069c ; undefined
    4600:	03010000 	.inst	0x03010000 ; undefined
    4604:	000e2f00 	.inst	0x000e2f00 ; undefined
    4608:	ffff0000 	.inst	0xffff0000 ; undefined
    460c:	00000018 	.inst	0x00000018 ; undefined
    4610:	00000000 	.inst	0x00000000 ; undefined
    4614:	cc009c01 	.inst	0xcc009c01 ; undefined
    4618:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    461c:	000ffb00 	.inst	0x000ffb00 ; undefined
    4620:	64010800 	.inst	0x64010800 ; undefined
    4624:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
    4628:	00000ccb 	.inst	0x00000ccb ; undefined
    462c:	0000024b 	.inst	0x0000024b ; undefined
    4630:	000e2f50 	.inst	0x000e2f50 ; undefined
    4634:	ffff0000 	.inst	0xffff0000 ; undefined
    4638:	00000064 	.inst	0x00000064 ; undefined
    463c:	00000000 	.inst	0x00000000 ; undefined
    4640:	000016d6 	.inst	0x000016d6 ; undefined
    4644:	17060102 	b	fffffffffc184a4c <__end+0xfffffc09e0ec>
    4648:	02000001 	.inst	0x02000001 ; undefined
    464c:	02040502 	.inst	0x02040502 ; undefined
    4650:	04030000 	subr	z0.b, p0/m, z0.b, z0.b
    4654:	746e6905 	.inst	0x746e6905 ; undefined
    4658:	05080200 	.inst	0x05080200 ; undefined
    465c:	0000023a 	.inst	0x0000023a ; undefined
    4660:	15080102 	b	4204a68 <__bss_size+0x4204a62>
    4664:	02000001 	.inst	0x02000001 ; undefined
    4668:	013a0702 	.inst	0x013a0702 ; undefined
    466c:	31040000 	adds	w0, w0, #0x100
    4670:	02000002 	.inst	0x02000002 ; undefined
    4674:	00006234 	.inst	0x00006234 ; undefined
    4678:	07040200 	.inst	0x07040200 ; undefined
    467c:	0000012d 	.inst	0x0000012d ; undefined
    4680:	28070802 	stnp	w2, w2, [x0, #56]
    4684:	05000001 	orr	z1.s, z1.s, #0x1
    4688:	00000c85 	.inst	0x00000c85 ; undefined
    468c:	00570b01 	.inst	0x00570b01 ; undefined
    4690:	2fa00000 	mla	v0.2s, v0.2s, v0.s[1]
    4694:	0000000e 	.inst	0x0000000e ; undefined
    4698:	0014ffff 	.inst	0x0014ffff ; undefined
    469c:	00000000 	.inst	0x00000000 ; undefined
    46a0:	9c010000 	ldr	q0, 66a0 <__bss_size+0x669a>
    46a4:	000ca906 	.inst	0x000ca906 ; undefined
    46a8:	80070100 	.inst	0x80070100 ; undefined
    46ac:	00000e2f 	.inst	0x00000e2f ; undefined
    46b0:	14ffff00 	b	40042b0 <__bss_size+0x40042aa>
    46b4:	00000000 	.inst	0x00000000 ; undefined
    46b8:	01000000 	.inst	0x01000000 ; undefined
    46bc:	0d1d079c 	.inst	0x0d1d079c ; undefined
    46c0:	03010000 	.inst	0x03010000 ; undefined
    46c4:	000e2f50 	.inst	0x000e2f50 ; undefined
    46c8:	ffff0000 	.inst	0xffff0000 ; undefined
    46cc:	00000024 	.inst	0x00000024 ; undefined
    46d0:	00000000 	.inst	0x00000000 ; undefined
    46d4:	2d089c01 	stp	s1, s7, [x0, #68]
    46d8:	01000006 	.inst	0x01000006 ; undefined
    46dc:	00005703 	.inst	0x00005703 ; undefined
    46e0:	0045a700 	.inst	0x0045a700 ; undefined
    46e4:	d7000000 	.inst	0xd7000000 ; undefined
    46e8:	04000003 	add	z3.b, p0/m, z3.b, z0.b
    46ec:	00108700 	.inst	0x00108700 ; undefined
    46f0:	64010800 	.inst	0x64010800 ; undefined
    46f4:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
    46f8:	00000db8 	.inst	0x00000db8 ; undefined
    46fc:	0000024b 	.inst	0x0000024b ; undefined
    4700:	000e2fc0 	.inst	0x000e2fc0 ; undefined
    4704:	ffff0000 	.inst	0xffff0000 ; undefined
    4708:	0000018c 	.inst	0x0000018c ; undefined
    470c:	00000000 	.inst	0x00000000 ; undefined
    4710:	000017cb 	.inst	0x000017cb ; undefined
    4714:	17060102 	b	fffffffffc184b1c <__end+0xfffffc09e1bc>
    4718:	02000001 	.inst	0x02000001 ; undefined
    471c:	02040502 	.inst	0x02040502 ; undefined
    4720:	04030000 	subr	z0.b, p0/m, z0.b, z0.b
    4724:	746e6905 	.inst	0x746e6905 ; undefined
    4728:	05080200 	.inst	0x05080200 ; undefined
    472c:	0000023a 	.inst	0x0000023a ; undefined
    4730:	0004b504 	.inst	0x0004b504 ; undefined
    4734:	592e0200 	.inst	0x592e0200 ; undefined
    4738:	05000000 	orr	z0.s, z0.s, #0x1
    473c:	00000049 	.inst	0x00000049 ; undefined
    4740:	15080102 	b	4204b48 <__bss_size+0x4204b42>
    4744:	02000001 	.inst	0x02000001 ; undefined
    4748:	013a0702 	.inst	0x013a0702 ; undefined
    474c:	31040000 	adds	w0, w0, #0x100
    4750:	02000002 	.inst	0x02000002 ; undefined
    4754:	00007734 	.inst	0x00007734 ; undefined
    4758:	00670500 	.inst	0x00670500 ; undefined
    475c:	04020000 	.inst	0x04020000 ; undefined
    4760:	00012d07 	.inst	0x00012d07 ; undefined
    4764:	00eb0400 	.inst	0x00eb0400 ; undefined
    4768:	37020000 	tbnz	w0, #0, 8768 <__bss_size+0x8762>
    476c:	0000008e 	.inst	0x0000008e ; undefined
    4770:	00007e05 	.inst	0x00007e05 ; undefined
    4774:	07080200 	.inst	0x07080200 ; undefined
    4778:	00000128 	.inst	0x00000128 ; undefined
    477c:	00089e04 	.inst	0x00089e04 ; undefined
    4780:	8e560200 	.inst	0x8e560200 ; undefined
    4784:	05000000 	orr	z0.s, z0.s, #0x1
    4788:	00000095 	.inst	0x00000095 ; undefined
    478c:	00004206 	.inst	0x00004206 ; undefined
    4790:	ba080300 	adcs	x0, x24, x8
    4794:	09000000 	.inst	0x09000000 ; undefined
    4798:	0e68b003 	sqdmlsl	v3.4s, v0.4h, v8.4h
    479c:	ff000000 	.inst	0xff000000 ; undefined
    47a0:	590807ff 	.inst	0x590807ff ; undefined
    47a4:	06000000 	.inst	0x06000000 ; undefined
    47a8:	00000000 	.inst	0x00000000 ; undefined
    47ac:	00720903 	.inst	0x00720903 ; undefined
    47b0:	03090000 	.inst	0x03090000 ; undefined
    47b4:	000e68c8 	.inst	0x000e68c8 ; undefined
    47b8:	ffff0000 	.inst	0xffff0000 ; undefined
    47bc:	00017906 	.inst	0x00017906 ; undefined
    47c0:	720a0300 	ands	w0, w24, #0x400000
    47c4:	09000000 	.inst	0x09000000 ; undefined
    47c8:	0e68c003 	smull	v3.4s, v0.4h, v8.4h
    47cc:	ff000000 	.inst	0xff000000 ; undefined
    47d0:	00d006ff 	.inst	0x00d006ff ; undefined
    47d4:	0b030000 	add	w0, w0, w3
    47d8:	00000072 	.inst	0x00000072 ; undefined
    47dc:	68b80309 	.inst	0x68b80309 ; undefined
    47e0:	0000000e 	.inst	0x0000000e ; undefined
    47e4:	d906ffff 	.inst	0xd906ffff ; undefined
    47e8:	03000001 	.inst	0x03000001 ; undefined
    47ec:	0000670c 	.inst	0x0000670c ; undefined
    47f0:	c4030900 	ld1sb	{z0.d}, p2/z, [x8, z3.d, uxtw]
    47f4:	00000e68 	.inst	0x00000e68 ; undefined
    47f8:	06ffff00 	.inst	0x06ffff00 ; undefined
    47fc:	00000023 	.inst	0x00000023 ; undefined
    4800:	00670d03 	.inst	0x00670d03 ; undefined
    4804:	03090000 	.inst	0x03090000 ; undefined
    4808:	000e68cc 	.inst	0x000e68cc ; undefined
    480c:	ffff0000 	.inst	0xffff0000 ; undefined
    4810:	00021506 	.inst	0x00021506 ; undefined
    4814:	670e0300 	.inst	0x670e0300 ; undefined
    4818:	09000000 	.inst	0x09000000 ; undefined
    481c:	0e68bc03 	addp	v3.4h, v0.4h, v8.4h
    4820:	ff000000 	.inst	0xff000000 ; undefined
    4824:	0db108ff 	st2	{v31.b, v0.b}[2], [x7], x17
    4828:	01100000 	.inst	0x01100000 ; undefined
    482c:	0001630c 	.inst	0x0001630c ; undefined
    4830:	0d4a0900 	.inst	0x0d4a0900 ; undefined
    4834:	0d010000 	.inst	0x0d010000 ; undefined
    4838:	00000095 	.inst	0x00000095 ; undefined
    483c:	0d9d0900 	st1	{v0.b}[2], [x8], x29
    4840:	0e010000 	tbl	v0.8b, {v0.16b}, v1.8b
    4844:	00000095 	.inst	0x00000095 ; undefined
    4848:	3e0a0008 	.inst	0x3e0a0008 ; undefined
    484c:	73000001 	.inst	0x73000001 ; undefined
    4850:	0b000001 	add	w1, w0, w0
    4854:	0000008e 	.inst	0x0000008e ; undefined
    4858:	16060001 	b	fffffffff818485c <__end+0xfffff809defc>
    485c:	0100000e 	.inst	0x0100000e ; undefined
    4860:	0001630f 	.inst	0x0001630f ; undefined
    4864:	d0030900 	adrp	x0, 6126000 <__bss_size+0x6125ffa>
    4868:	00000e68 	.inst	0x00000e68 ; undefined
    486c:	06ffff00 	.inst	0x06ffff00 ; undefined
    4870:	00000d3b 	.inst	0x00000d3b ; undefined
    4874:	00a01101 	.inst	0x00a01101 ; undefined
    4878:	03090000 	.inst	0x03090000 ; undefined
    487c:	000e68a8 	.inst	0x000e68a8 ; undefined
    4880:	ffff0000 	.inst	0xffff0000 ; undefined
    4884:	000d8e06 	.inst	0x000d8e06 ; undefined
    4888:	a0120100 	.inst	0xa0120100 ; undefined
    488c:	09000000 	.inst	0x09000000 ; undefined
    4890:	0e68a003 	smlsl	v3.4s, v0.4h, v8.4h
    4894:	ff000000 	.inst	0xff000000 ; undefined
    4898:	0d7206ff 	.inst	0x0d7206ff ; undefined
    489c:	13010000 	sbfiz	w0, w0, #31, #1
    48a0:	00000089 	.inst	0x00000089 ; undefined
    48a4:	68980309 	.inst	0x68980309 ; undefined
    48a8:	0000000e 	.inst	0x0000000e ; undefined
    48ac:	1e06ffff 	.inst	0x1e06ffff ; undefined
    48b0:	0100000e 	.inst	0x0100000e ; undefined
    48b4:	00005414 	.inst	0x00005414 ; undefined
    48b8:	90030900 	adrp	x0, 6124000 <__bss_size+0x6123ffa>
    48bc:	00000e68 	.inst	0x00000e68 ; undefined
    48c0:	06ffff00 	.inst	0x06ffff00 ; undefined
    48c4:	00000d58 	.inst	0x00000d58 ; undefined
    48c8:	00891501 	.inst	0x00891501 ; undefined
    48cc:	03090000 	.inst	0x03090000 ; undefined
    48d0:	000e6888 	.inst	0x000e6888 ; undefined
    48d4:	ffff0000 	.inst	0xffff0000 ; undefined
    48d8:	00051d0c 	.inst	0x00051d0c ; undefined
    48dc:	c04b0100 	.inst	0xc04b0100 ; undefined
    48e0:	00000e30 	.inst	0x00000e30 ; undefined
    48e4:	8cffff00 	.inst	0x8cffff00 ; undefined
    48e8:	00000000 	.inst	0x00000000 ; undefined
    48ec:	01000000 	.inst	0x01000000 ; undefined
    48f0:	0dfa0d9c 	ld2	{v28.b, v29.b}[3], [x12], x26
    48f4:	32010000 	orr	w0, w0, #0x80000000
    48f8:	000e3060 	.inst	0x000e3060 ; undefined
    48fc:	ffff0000 	.inst	0xffff0000 ; undefined
    4900:	00000060 	.inst	0x00000060 ; undefined
    4904:	00000000 	.inst	0x00000000 ; undefined
    4908:	027d9c01 	.inst	0x027d9c01 ; undefined
    490c:	8c0e0000 	.inst	0x8c0e0000 ; undefined
    4910:	00000e30 	.inst	0x00000e30 ; undefined
    4914:	a3ffff00 	.inst	0xa3ffff00 ; undefined
    4918:	47000003 	.inst	0x47000003 ; undefined
    491c:	0f000002 	.inst	0x0f000002 ; undefined
    4920:	40035001 	.inst	0x40035001 ; undefined
    4924:	010f2448 	.inst	0x010f2448 ; undefined
    4928:	3c400351 	ldur	b17, [x26]
    492c:	ac0e0024 	stnp	q4, q0, [x1, #448]
    4930:	00000e30 	.inst	0x00000e30 ; undefined
    4934:	a3ffff00 	.inst	0xa3ffff00 ; undefined
    4938:	69000003 	.inst	0x69000003 ; undefined
    493c:	0f000002 	.inst	0x0f000002 ; undefined
    4940:	0c055001 	.inst	0x0c055001 ; undefined
    4944:	10010000 	adr	x0, 6944 <__bss_size+0x693e>
    4948:	0351010f 	.inst	0x0351010f ; undefined
    494c:	00243c40 	.inst	0x00243c40 ; NYI
    4950:	0e30bc10 	addp	v16.8b, v0.8b, v16.8b
    4954:	ff000000 	.inst	0xff000000 ; undefined
    4958:	0003aeff 	.inst	0x0003aeff ; undefined
    495c:	50010f00 	adr	x0, 6b3e <__bss_size+0x6b38>
    4960:	00003a01 	.inst	0x00003a01 ; undefined
    4964:	000d600d 	.inst	0x000d600d ; undefined
    4968:	20280100 	.inst	0x20280100 ; undefined
    496c:	00000e30 	.inst	0x00000e30 ; undefined
    4970:	34ffff00 	cbz	w0, 4950 <__bss_size+0x494a>
    4974:	00000000 	.inst	0x00000000 ; undefined
    4978:	01000000 	.inst	0x01000000 ; undefined
    497c:	0003149c 	.inst	0x0003149c ; undefined
    4980:	30300e00 	adr	x0, 64b41 <__bss_size+0x64b3b>
    4984:	0000000e 	.inst	0x0000000e ; undefined
    4988:	03b9ffff 	.inst	0x03b9ffff ; undefined
    498c:	02b40000 	.inst	0x02b40000 ; undefined
    4990:	010f0000 	.inst	0x010f0000 ; undefined
    4994:	ff080450 	.inst	0xff080450 ; undefined
    4998:	0e002440 	.inst	0x0e002440 ; undefined
    499c:	000e3038 	.inst	0x000e3038 ; undefined
    49a0:	ffff0000 	.inst	0xffff0000 ; undefined
    49a4:	000003b9 	.inst	0x000003b9 ; undefined
    49a8:	000002cd 	.inst	0x000002cd ; undefined
    49ac:	0350010f 	.inst	0x0350010f ; undefined
    49b0:	00ff000a 	.inst	0x00ff000a ; undefined
    49b4:	0e30400e 	addhn	v14.8b, v0.8h, v16.8h
    49b8:	ff000000 	.inst	0xff000000 ; undefined
    49bc:	0003b9ff 	.inst	0x0003b9ff ; undefined
    49c0:	0002e500 	.inst	0x0002e500 ; undefined
    49c4:	50010f00 	adr	x0, 6ba6 <__bss_size+0x6ba0>
    49c8:	00ff0802 	.inst	0x00ff0802 ; undefined
    49cc:	0e30480e 	.inst	0x0e30480e ; undefined
    49d0:	ff000000 	.inst	0xff000000 ; undefined
    49d4:	0003b9ff 	.inst	0x0003b9ff ; undefined
    49d8:	00030000 	.inst	0x00030000 ; undefined
    49dc:	50010f00 	adr	x0, 6bbe <__bss_size+0x6bb8>
    49e0:	ffff0c05 	.inst	0xffff0c05 ; undefined
    49e4:	100000ff 	adr	xzr, 4a00 <__bss_size+0x49fa>
    49e8:	000e3050 	.inst	0x000e3050 ; undefined
    49ec:	ffff0000 	.inst	0xffff0000 ; undefined
    49f0:	000003b9 	.inst	0x000003b9 ; undefined
    49f4:	0150010f 	.inst	0x0150010f ; undefined
    49f8:	0d000030 	st1	{v16.b}[0], [x1]
    49fc:	00000d69 	.inst	0x00000d69 ; undefined
    4a00:	2ff02101 	.inst	0x2ff02101 ; undefined
    4a04:	0000000e 	.inst	0x0000000e ; undefined
    4a08:	0024ffff 	.inst	0x0024ffff ; NYI
    4a0c:	00000000 	.inst	0x00000000 ; undefined
    4a10:	9c010000 	ldr	q0, 6a10 <__bss_size+0x6a0a>
    4a14:	0000035f 	.inst	0x0000035f ; undefined
    4a18:	0e300011 	saddl	v17.8h, v0.8b, v16.8b
    4a1c:	ff000000 	.inst	0xff000000 ; undefined
    4a20:	000014ff 	.inst	0x000014ff ; undefined
    4a24:	00000000 	.inst	0x00000000 ; undefined
    4a28:	0e091200 	tbx	v0.8b, {v16.16b}, v9.8b
    4a2c:	23010000 	.inst	0x23010000 ; undefined
    4a30:	00000089 	.inst	0x00000089 ; undefined
    4a34:	13789102 	.inst	0x13789102 ; undefined
    4a38:	000e3010 	.inst	0x000e3010 ; undefined
    4a3c:	ffff0000 	.inst	0xffff0000 ; undefined
    4a40:	000003c4 	.inst	0x000003c4 ; undefined
    4a44:	850c0000 	.inst	0x850c0000 ; undefined
    4a48:	0100000d 	.inst	0x0100000d ; undefined
    4a4c:	0e2fc01b 	smull	v27.8h, v0.8b, v15.8b
    4a50:	ff000000 	.inst	0xff000000 ; undefined
    4a54:	000018ff 	.inst	0x000018ff ; undefined
    4a58:	00000000 	.inst	0x00000000 ; undefined
    4a5c:	0d9c0100 	st1	{v0.b}[0], [x8], x28
    4a60:	0000029e 	.inst	0x0000029e ; undefined
    4a64:	2fe01701 	.inst	0x2fe01701 ; undefined
    4a68:	0000000e 	.inst	0x0000000e ; undefined
    4a6c:	000cffff 	.inst	0x000cffff ; undefined
    4a70:	00000000 	.inst	0x00000000 ; undefined
    4a74:	9c010000 	ldr	q0, 6a74 <__bss_size+0x6a6e>
    4a78:	000003a3 	.inst	0x000003a3 ; undefined
    4a7c:	0e2fec13 	.inst	0x0e2fec13 ; undefined
    4a80:	ff000000 	.inst	0xff000000 ; undefined
    4a84:	0003cfff 	.inst	0x0003cfff ; undefined
    4a88:	6d140000 	stp	d0, d0, [x0, #320]
    4a8c:	6d000008 	stp	d8, d0, [x0]
    4a90:	04000008 	add	z8.b, p0/m, z8.b, z0.b
    4a94:	06ac1417 	.inst	0x06ac1417 ; undefined
    4a98:	06ac0000 	.inst	0x06ac0000 ; undefined
    4a9c:	14050000 	b	144a9c <__bss_size+0x144a96>
    4aa0:	00044314 	.inst	0x00044314 ; undefined
    4aa4:	00044300 	.inst	0x00044300 ; undefined
    4aa8:	140b0600 	b	2c62a8 <__bss_size+0x2c62a2>
    4aac:	00000aff 	.inst	0x00000aff ; undefined
    4ab0:	00000aff 	.inst	0x00000aff ; undefined
    4ab4:	13140c06 	sbfiz	w6, w0, #12, #4
    4ab8:	13000005 	sbfx	w5, w0, #0, #1
    4abc:	07000005 	.inst	0x07000005 ; undefined
    4ac0:	08640004 	.inst	0x08640004 ; undefined
    4ac4:	00040000 	.inst	0x00040000 ; undefined
    4ac8:	00001195 	.inst	0x00001195 ; undefined
    4acc:	00640108 	.inst	0x00640108 ; undefined
    4ad0:	810c0000 	.inst	0x810c0000 ; undefined
    4ad4:	4b00000f 	sub	w15, w0, w0
    4ad8:	50000002 	adr	x2, 4ada <__bss_size+0x4ad4>
    4adc:	00000e31 	.inst	0x00000e31 ; undefined
    4ae0:	b8ffff00 	.inst	0xb8ffff00 ; undefined
    4ae4:	00000004 	.inst	0x00000004 ; undefined
    4ae8:	83000000 	.inst	0x83000000 ; undefined
    4aec:	02000019 	.inst	0x02000019 ; undefined
    4af0:	01170601 	.inst	0x01170601 ; undefined
    4af4:	02020000 	.inst	0x02020000 ; undefined
    4af8:	00020405 	.inst	0x00020405 ; undefined
    4afc:	05040300 	.inst	0x05040300 ; undefined
    4b00:	00746e69 	.inst	0x00746e69 ; undefined
    4b04:	3a050802 	.inst	0x3a050802 ; undefined
    4b08:	02000002 	.inst	0x02000002 ; undefined
    4b0c:	01150801 	.inst	0x01150801 ; undefined
    4b10:	02020000 	.inst	0x02020000 ; undefined
    4b14:	00013a07 	.inst	0x00013a07 ; undefined
    4b18:	02310400 	.inst	0x02310400 ; undefined
    4b1c:	34020000 	cbz	w0, 8b1c <__bss_size+0x8b16>
    4b20:	00000062 	.inst	0x00000062 ; undefined
    4b24:	2d070402 	stp	s2, s1, [x0, #56]
    4b28:	04000001 	add	z1.b, p0/m, z1.b, z0.b
    4b2c:	000000eb 	.inst	0x000000eb ; undefined
    4b30:	00743702 	.inst	0x00743702 ; undefined
    4b34:	08020000 	stxrb	w2, w0, [x0]
    4b38:	00012807 	.inst	0x00012807 ; undefined
    4b3c:	089e0400 	stllrb	w0, [x0]
    4b40:	56020000 	.inst	0x56020000 ; undefined
    4b44:	00000074 	.inst	0x00000074 ; undefined
    4b48:	00119205 	.inst	0x00119205 ; undefined
    4b4c:	69060100 	.inst	0x69060100 ; undefined
    4b50:	05000000 	orr	z0.s, z0.s, #0x1
    4b54:	00000e8a 	.inst	0x00000e8a ; undefined
    4b58:	00690601 	.inst	0x00690601 ; undefined
    4b5c:	31060000 	adds	w0, w0, #0x180
    4b60:	0100000e 	.inst	0x0100000e ; undefined
    4b64:	00007b08 	.inst	0x00007b08 ; undefined
    4b68:	78030900 	sttrh	w0, [x8, #48]
    4b6c:	00000e68 	.inst	0x00000e68 ; undefined
    4b70:	06ffff00 	.inst	0x06ffff00 ; undefined
    4b74:	00000eed 	.inst	0x00000eed ; undefined
    4b78:	007b0901 	.inst	0x007b0901 ; undefined
    4b7c:	03090000 	.inst	0x03090000 ; undefined
    4b80:	000e6870 	.inst	0x000e6870 ; undefined
    4b84:	ffff0000 	.inst	0xffff0000 ; undefined
    4b88:	000ed206 	.inst	0x000ed206 ; undefined
    4b8c:	7b0b0100 	.inst	0x7b0b0100 ; undefined
    4b90:	09000000 	.inst	0x09000000 ; undefined
    4b94:	0e692003 	ssubl	v3.4s, v0.4h, v9.4h
    4b98:	ff000000 	.inst	0xff000000 ; undefined
    4b9c:	111f06ff 	add	wsp, w23, #0x7c1
    4ba0:	0c010000 	.inst	0x0c010000 ; undefined
    4ba4:	0000007b 	.inst	0x0000007b ; undefined
    4ba8:	69300309 	.inst	0x69300309 ; undefined
    4bac:	0000000e 	.inst	0x0000000e ; undefined
    4bb0:	bf06ffff 	.inst	0xbf06ffff ; undefined
    4bb4:	01000010 	.inst	0x01000010 ; undefined
    4bb8:	00007b0e 	.inst	0x00007b0e ; undefined
    4bbc:	10030900 	adr	x0, acdc <__bss_size+0xacd6>
    4bc0:	00000e69 	.inst	0x00000e69 ; undefined
    4bc4:	06ffff00 	.inst	0x06ffff00 ; undefined
    4bc8:	00001173 	.inst	0x00001173 ; undefined
    4bcc:	007b0f01 	.inst	0x007b0f01 ; undefined
    4bd0:	03090000 	.inst	0x03090000 ; undefined
    4bd4:	000e6958 	.inst	0x000e6958 ; undefined
    4bd8:	ffff0000 	.inst	0xffff0000 ; undefined
    4bdc:	00119a06 	.inst	0x00119a06 ; undefined
    4be0:	7b110100 	.inst	0x7b110100 ; undefined
    4be4:	09000000 	.inst	0x09000000 ; undefined
    4be8:	0e691803 	.inst	0x0e691803 ; undefined
    4bec:	ff000000 	.inst	0xff000000 ; undefined
    4bf0:	0eaf06ff 	shadd	v31.2s, v23.2s, v15.2s
    4bf4:	12010000 	and	w0, w0, #0x80000000
    4bf8:	0000007b 	.inst	0x0000007b ; undefined
    4bfc:	69080309 	.inst	0x69080309 ; undefined
    4c00:	0000000e 	.inst	0x0000000e ; undefined
    4c04:	5e06ffff 	.inst	0x5e06ffff ; undefined
    4c08:	01000010 	.inst	0x01000010 ; undefined
    4c0c:	00005713 	.inst	0x00005713 ; undefined
    4c10:	00030900 	.inst	0x00030900 ; undefined
    4c14:	00000e69 	.inst	0x00000e69 ; undefined
    4c18:	06ffff00 	.inst	0x06ffff00 ; undefined
    4c1c:	00000e90 	.inst	0x00000e90 ; undefined
    4c20:	007b1401 	.inst	0x007b1401 ; undefined
    4c24:	03090000 	.inst	0x03090000 ; undefined
    4c28:	000e6948 	.inst	0x000e6948 ; undefined
    4c2c:	ffff0000 	.inst	0xffff0000 ; undefined
    4c30:	000e3e06 	.inst	0x000e3e06 ; undefined
    4c34:	7b160100 	.inst	0x7b160100 ; undefined
    4c38:	09000000 	.inst	0x09000000 ; undefined
    4c3c:	0e68f803 	.inst	0x0e68f803 ; undefined
    4c40:	ff000000 	.inst	0xff000000 ; undefined
    4c44:	115406ff 	add	wsp, w23, #0x501, lsl #12
    4c48:	17010000 	b	fffffffffc044c48 <__end+0xfffffbf5e2e8>
    4c4c:	0000007b 	.inst	0x0000007b ; undefined
    4c50:	68f00309 	ldpsw	x9, x0, [x24], #-128
    4c54:	0000000e 	.inst	0x0000000e ; undefined
    4c58:	6006ffff 	.inst	0x6006ffff ; undefined
    4c5c:	0100000f 	.inst	0x0100000f ; undefined
    4c60:	00007b19 	.inst	0x00007b19 ; undefined
    4c64:	40030900 	.inst	0x40030900 ; undefined
    4c68:	00000e69 	.inst	0x00000e69 ; undefined
    4c6c:	06ffff00 	.inst	0x06ffff00 ; undefined
    4c70:	000010e0 	.inst	0x000010e0 ; undefined
    4c74:	007b1a01 	.inst	0x007b1a01 ; undefined
    4c78:	03090000 	.inst	0x03090000 ; undefined
    4c7c:	000e6928 	.inst	0x000e6928 ; undefined
    4c80:	ffff0000 	.inst	0xffff0000 ; undefined
    4c84:	000f1706 	.inst	0x000f1706 ; undefined
    4c88:	571b0100 	.inst	0x571b0100 ; undefined
    4c8c:	09000000 	.inst	0x09000000 ; undefined
    4c90:	0e695003 	sabal	v3.4s, v0.4h, v9.4h
    4c94:	ff000000 	.inst	0xff000000 ; undefined
    4c98:	101906ff 	adr	xzr, 36d74 <__bss_size+0x36d6e>
    4c9c:	1c010000 	ldr	s0, 6c9c <__bss_size+0x6c96>
    4ca0:	0000007b 	.inst	0x0000007b ; undefined
    4ca4:	69380309 	.inst	0x69380309 ; undefined
    4ca8:	0000000e 	.inst	0x0000000e ; undefined
    4cac:	9407ffff 	bl	204ca8 <__bss_size+0x204ca2>
    4cb0:	01000002 	.inst	0x01000002 ; undefined
    4cb4:	0e358096 	smlal	v22.8h, v4.8b, v21.8b
    4cb8:	ff000000 	.inst	0xff000000 ; undefined
    4cbc:	000088ff 	.inst	0x000088ff ; undefined
    4cc0:	00000000 	.inst	0x00000000 ; undefined
    4cc4:	5d9c0100 	.inst	0x5d9c0100 ; undefined
    4cc8:	08000002 	stxrb	w0, w2, [x0]
    4ccc:	00000412 	.inst	0x00000412 ; undefined
    4cd0:	000e358c 	.inst	0x000e358c ; undefined
    4cd4:	ffff0000 	.inst	0xffff0000 ; undefined
    4cd8:	00001310 	.inst	0x00001310 ; undefined
    4cdc:	022c9801 	.inst	0x022c9801 ; undefined
    4ce0:	10090000 	adr	x0, 16ce0 <__bss_size+0x16cda>
    4ce4:	0a000013 	and	w19, w0, w0
    4ce8:	00000819 	.inst	0x00000819 ; undefined
    4cec:	fa080000 	sbcs	x0, x0, x8
    4cf0:	c0000003 	.inst	0xc0000003 ; undefined
    4cf4:	00000e35 	.inst	0x00000e35 ; undefined
    4cf8:	70ffff00 	adr	x0, 4cdb <__bss_size+0x4cd5>
    4cfc:	01000013 	.inst	0x01000013 ; undefined
    4d00:	00024f99 	.inst	0x00024f99 ; undefined
    4d04:	13700900 	.inst	0x13700900 ; undefined
    4d08:	3e0a0000 	.inst	0x3e0a0000 ; undefined
    4d0c:	00000008 	.inst	0x00000008 ; undefined
    4d10:	358c0b00 	cbnz	w0, fffffffffff1ce70 <__end+0xffffffe36510>
    4d14:	0000000e 	.inst	0x0000000e ; undefined
    4d18:	042affff 	uqdecb	wzr, all, mul #11
    4d1c:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
    4d20:	0000086d 	.inst	0x0000086d ; undefined
    4d24:	007b6a01 	.inst	0x007b6a01 ; undefined
    4d28:	34400000 	cbz	w0, 84d28 <__bss_size+0x84d22>
    4d2c:	0000000e 	.inst	0x0000000e ; undefined
    4d30:	0138ffff 	.inst	0x0138ffff ; undefined
    4d34:	00000000 	.inst	0x00000000 ; undefined
    4d38:	9c010000 	ldr	q0, 6d38 <__bss_size+0x6d32>
    4d3c:	000003fa 	.inst	0x000003fa ; undefined
    4d40:	0010880d 	.inst	0x0010880d ; undefined
    4d44:	7b6a0100 	.inst	0x7b6a0100 ; undefined
    4d48:	e0000000 	.inst	0xe0000000 ; undefined
    4d4c:	0e000045 	tbl	v5.8b, {v2.16b}, v0.8b
    4d50:	006e656c 	.inst	0x006e656c ; undefined
    4d54:	00576a01 	.inst	0x00576a01 ; undefined
    4d58:	46550000 	.inst	0x46550000 ; undefined
    4d5c:	770f0000 	.inst	0x770f0000 ; undefined
    4d60:	0100000e 	.inst	0x0100000e ; undefined
    4d64:	0000576f 	.inst	0x0000576f ; undefined
    4d68:	0046ca00 	.inst	0x0046ca00 ; undefined
    4d6c:	114a0f00 	add	w0, w24, #0x283, lsl #12
    4d70:	75010000 	.inst	0x75010000 ; undefined
    4d74:	0000007b 	.inst	0x0000007b ; undefined
    4d78:	00004729 	.inst	0x00004729 ; undefined
    4d7c:	0011030f 	.inst	0x0011030f ; undefined
    4d80:	7b760100 	.inst	0x7b760100 ; undefined
    4d84:	89000000 	.inst	0x89000000 ; undefined
    4d88:	0f000047 	.inst	0x0f000047 ; undefined
    4d8c:	00001113 	.inst	0x00001113 ; undefined
    4d90:	007b8901 	.inst	0x007b8901 ; undefined
    4d94:	48040000 	stxrh	w4, w0, [x0]
    4d98:	25080000 	cmpge	p0.b, p0/z, z0.b, #8
    4d9c:	a0000007 	.inst	0xa0000007 ; undefined
    4da0:	00000e34 	.inst	0x00000e34 ; undefined
    4da4:	e0ffff00 	.inst	0xe0ffff00 ; undefined
    4da8:	01000012 	.inst	0x01000012 ; undefined
    4dac:	0002f57d 	.inst	0x0002f57d ; undefined
    4db0:	07351000 	.inst	0x07351000 ; undefined
    4db4:	11000000 	add	w0, w0, #0x0
    4db8:	000e34fc 	.inst	0x000e34fc ; undefined
    4dbc:	ffff0000 	.inst	0xffff0000 ; undefined
    4dc0:	00000846 	.inst	0x00000846 ; undefined
    4dc4:	0000030d 	.inst	0x0000030d ; undefined
    4dc8:	02500112 	.inst	0x02500112 ; undefined
    4dcc:	11000086 	add	w6, w4, #0x0
    4dd0:	000e350c 	.inst	0x000e350c ; undefined
    4dd4:	ffff0000 	.inst	0xffff0000 ; undefined
    4dd8:	00000851 	.inst	0x00000851 ; undefined
    4ddc:	00000332 	.inst	0x00000332 ; undefined
    4de0:	09500112 	.inst	0x09500112 ; undefined
    4de4:	0e57a803 	.inst	0x0e57a803 ; undefined
    4de8:	ff000000 	.inst	0xff000000 ; undefined
    4dec:	510112ff 	sub	wsp, w23, #0x44
    4df0:	00008802 	.inst	0x00008802 ; undefined
    4df4:	0e351c11 	and	v17.8b, v0.8b, v21.8b
    4df8:	ff000000 	.inst	0xff000000 ; undefined
    4dfc:	000851ff 	.inst	0x000851ff ; undefined
    4e00:	00035700 	.inst	0x00035700 ; undefined
    4e04:	50011200 	adr	x0, 7046 <__bss_size+0x7040>
    4e08:	57d00309 	.inst	0x57d00309 ; undefined
    4e0c:	0000000e 	.inst	0x0000000e ; undefined
    4e10:	0112ffff 	.inst	0x0112ffff ; undefined
    4e14:	00830251 	.inst	0x00830251 ; undefined
    4e18:	352c1100 	cbnz	w0, 5d038 <__bss_size+0x5d032>
    4e1c:	0000000e 	.inst	0x0000000e ; undefined
    4e20:	0851ffff 	ldaxrb	wzr, [sp]
    4e24:	037c0000 	.inst	0x037c0000 ; undefined
    4e28:	01120000 	.inst	0x01120000 ; undefined
    4e2c:	f8030950 	sttr	x16, [x10, #48]
    4e30:	00000e57 	.inst	0x00000e57 ; undefined
    4e34:	12ffff00 	.inst	0x12ffff00 ; undefined
    4e38:	87025101 	.inst	0x87025101 ; undefined
    4e3c:	3c110000 	stur	b0, [x0, #-240]
    4e40:	00000e35 	.inst	0x00000e35 ; undefined
    4e44:	51ffff00 	.inst	0x51ffff00 ; undefined
    4e48:	a1000008 	.inst	0xa1000008 ; undefined
    4e4c:	12000003 	and	w3, w0, #0x1
    4e50:	03095001 	.inst	0x03095001 ; undefined
    4e54:	000e5820 	.inst	0x000e5820 ; undefined
    4e58:	ffff0000 	.inst	0xffff0000 ; undefined
    4e5c:	02510112 	.inst	0x02510112 ; undefined
    4e60:	11000084 	add	w4, w4, #0x0
    4e64:	000e354c 	.inst	0x000e354c ; undefined
    4e68:	ffff0000 	.inst	0xffff0000 ; undefined
    4e6c:	00000851 	.inst	0x00000851 ; undefined
    4e70:	000003c6 	.inst	0x000003c6 ; undefined
    4e74:	09500112 	.inst	0x09500112 ; undefined
    4e78:	0e584803 	.inst	0x0e584803 ; undefined
    4e7c:	ff000000 	.inst	0xff000000 ; undefined
    4e80:	510112ff 	sub	wsp, w23, #0x44
    4e84:	00008502 	.inst	0x00008502 ; undefined
    4e88:	0e355411 	srshl	v17.8b, v0.8b, v21.8b
    4e8c:	ff000000 	.inst	0xff000000 ; undefined
    4e90:	000846ff 	.inst	0x000846ff ; undefined
    4e94:	0003de00 	.inst	0x0003de00 ; undefined
    4e98:	50011200 	adr	x0, 70da <__bss_size+0x70d4>
    4e9c:	00008602 	.inst	0x00008602 ; undefined
    4ea0:	0e357813 	.inst	0x0e357813 ; undefined
    4ea4:	ff000000 	.inst	0xff000000 ; undefined
    4ea8:	00085cff 	.inst	0x00085cff ; undefined
    4eac:	50011200 	adr	x0, 70ee <__bss_size+0x70e8>
    4eb0:	57400309 	.inst	0x57400309 ; undefined
    4eb4:	0000000e 	.inst	0x0000000e ; undefined
    4eb8:	0000ffff 	.inst	0x0000ffff ; undefined
    4ebc:	000fd514 	.inst	0x000fd514 ; undefined
    4ec0:	01630100 	.inst	0x01630100 ; undefined
    4ec4:	00000412 	.inst	0x00000412 ; undefined
    4ec8:	00113815 	.inst	0x00113815 ; undefined
    4ecc:	69660100 	.inst	0x69660100 ; undefined
    4ed0:	00000000 	.inst	0x00000000 ; undefined
    4ed4:	0010a014 	.inst	0x0010a014 ; undefined
    4ed8:	01580100 	.inst	0x01580100 ; undefined
    4edc:	0000042a 	.inst	0x0000042a ; undefined
    4ee0:	00103815 	.inst	0x00103815 ; undefined
    4ee4:	69590100 	.inst	0x69590100 ; undefined
    4ee8:	00000000 	.inst	0x00000000 ; undefined
    4eec:	000ffd07 	.inst	0x000ffd07 ; undefined
    4ef0:	a0310100 	.inst	0xa0310100 ; undefined
    4ef4:	00000e31 	.inst	0x00000e31 ; undefined
    4ef8:	fcffff00 	.inst	0xfcffff00 ; undefined
    4efc:	00000001 	.inst	0x00000001 ; undefined
    4f00:	01000000 	.inst	0x01000000 ; undefined
    4f04:	0006f49c 	.inst	0x0006f49c ; undefined
    4f08:	07720800 	.inst	0x07720800 ; undefined
    4f0c:	31c00000 	.inst	0x31c00000 ; undefined
    4f10:	0000000e 	.inst	0x0000000e ; undefined
    4f14:	11f0ffff 	.inst	0x11f0ffff ; undefined
    4f18:	35010000 	cbnz	w0, 6f18 <__bss_size+0x6f12>
    4f1c:	00000478 	.inst	0x00000478 ; undefined
    4f20:	00078216 	.inst	0x00078216 ; undefined
    4f24:	00483a00 	.inst	0x00483a00 ; undefined
    4f28:	11f00900 	.inst	0x11f00900 ; undefined
    4f2c:	c80a0000 	stxr	w10, x0, [x0]
    4f30:	0a000007 	and	w7, w0, w0
    4f34:	000007d1 	.inst	0x000007d1 ; undefined
    4f38:	72170000 	ands	w0, w0, #0x200
    4f3c:	ec000007 	.inst	0xec000007 ; undefined
    4f40:	00000e31 	.inst	0x00000e31 ; undefined
    4f44:	1cffff00 	ldr	s0, 4f24 <__bss_size+0x4f1e>
    4f48:	00000000 	.inst	0x00000000 ; undefined
    4f4c:	01000000 	.inst	0x01000000 ; undefined
    4f50:	0004b939 	.inst	0x0004b939 ; undefined
    4f54:	07821600 	.inst	0x07821600 ; undefined
    4f58:	48780000 	.inst	0x48780000 ; undefined
    4f5c:	ec180000 	.inst	0xec180000 ; undefined
    4f60:	00000e31 	.inst	0x00000e31 ; undefined
    4f64:	1cffff00 	ldr	s0, 4f44 <__bss_size+0x4f3e>
    4f68:	00000000 	.inst	0x00000000 ; undefined
    4f6c:	0a000000 	and	w0, w0, w0
    4f70:	000007c8 	.inst	0x000007c8 ; undefined
    4f74:	0007d10a 	.inst	0x0007d10a ; undefined
    4f78:	08000000 	stxrb	w0, w0, [x0]
    4f7c:	00000772 	.inst	0x00000772 ; undefined
    4f80:	000e3210 	.inst	0x000e3210 ; undefined
    4f84:	ffff0000 	.inst	0xffff0000 ; undefined
    4f88:	00001230 	.inst	0x00001230 ; undefined
    4f8c:	04ea3d01 	.inst	0x04ea3d01 ; undefined
    4f90:	82160000 	.inst	0x82160000 ; undefined
    4f94:	b6000007 	tbz	x7, #32, 4f94 <__bss_size+0x4f8e>
    4f98:	09000048 	.inst	0x09000048 ; undefined
    4f9c:	00001230 	.inst	0x00001230 ; undefined
    4fa0:	0007c80a 	.inst	0x0007c80a ; undefined
    4fa4:	07d10a00 	.inst	0x07d10a00 ; undefined
    4fa8:	00000000 	.inst	0x00000000 ; undefined
    4fac:	00077208 	.inst	0x00077208 ; undefined
    4fb0:	0e323c00 	cmge	v0.8b, v0.8b, v18.8b
    4fb4:	ff000000 	.inst	0xff000000 ; undefined
    4fb8:	001260ff 	.inst	0x001260ff ; undefined
    4fbc:	1b410100 	.inst	0x1b410100 ; undefined
    4fc0:	16000005 	b	fffffffff8004fd4 <__end+0xfffff7f1e674>
    4fc4:	00000782 	.inst	0x00000782 ; undefined
    4fc8:	000048fe 	.inst	0x000048fe ; undefined
    4fcc:	00126009 	.inst	0x00126009 ; undefined
    4fd0:	07c80a00 	.inst	0x07c80a00 ; undefined
    4fd4:	d10a0000 	sub	x0, x0, #0x280
    4fd8:	00000007 	.inst	0x00000007 ; undefined
    4fdc:	07720800 	.inst	0x07720800 ; undefined
    4fe0:	32680000 	.inst	0x32680000 ; undefined
    4fe4:	0000000e 	.inst	0x0000000e ; undefined
    4fe8:	12a0ffff 	mov	wzr, #0xf800ffff            	// #-134152193
    4fec:	45010000 	.inst	0x45010000 ; undefined
    4ff0:	0000054c 	.inst	0x0000054c ; undefined
    4ff4:	00078216 	.inst	0x00078216 ; undefined
    4ff8:	00492f00 	.inst	0x00492f00 ; undefined
    4ffc:	12a00900 	mov	w0, #0xffb7ffff            	// #-4718593
    5000:	c80a0000 	stxr	w10, x0, [x0]
    5004:	0a000007 	and	w7, w0, w0
    5008:	000007d1 	.inst	0x000007d1 ; undefined
    500c:	b0110000 	adrp	x0, 22006000 <__bss_size+0x22005ffa>
    5010:	00000e32 	.inst	0x00000e32 ; undefined
    5014:	46ffff00 	.inst	0x46ffff00 ; undefined
    5018:	64000008 	.inst	0x64000008 ; undefined
    501c:	12000005 	and	w5, w0, #0x1
    5020:	83025001 	.inst	0x83025001 ; undefined
    5024:	c4110000 	ld1sb	{z0.d}, p0/z, [x0, z17.d, uxtw]
    5028:	00000e32 	.inst	0x00000e32 ; undefined
    502c:	51ffff00 	.inst	0x51ffff00 ; undefined
    5030:	83000008 	.inst	0x83000008 ; undefined
    5034:	12000005 	and	w5, w0, #0x1
    5038:	03095001 	.inst	0x03095001 ; undefined
    503c:	000e5500 	.inst	0x000e5500 ; undefined
    5040:	ffff0000 	.inst	0xffff0000 ; undefined
    5044:	32d41100 	.inst	0x32d41100 ; undefined
    5048:	0000000e 	.inst	0x0000000e ; undefined
    504c:	0851ffff 	ldaxrb	wzr, [sp]
    5050:	05a20000 	.inst	0x05a20000 ; undefined
    5054:	01120000 	.inst	0x01120000 ; undefined
    5058:	30030950 	adr	x16, b181 <__bss_size+0xb17b>
    505c:	00000e55 	.inst	0x00000e55 ; undefined
    5060:	00ffff00 	.inst	0x00ffff00 ; undefined
    5064:	0e32e811 	.inst	0x0e32e811 ; undefined
    5068:	ff000000 	.inst	0xff000000 ; undefined
    506c:	000851ff 	.inst	0x000851ff ; undefined
    5070:	0005c100 	.inst	0x0005c100 ; undefined
    5074:	50011200 	adr	x0, 72b6 <__bss_size+0x72b0>
    5078:	55600309 	.inst	0x55600309 ; undefined
    507c:	0000000e 	.inst	0x0000000e ; undefined
    5080:	1100ffff 	add	wsp, wsp, #0x3f
    5084:	000e32fc 	.inst	0x000e32fc ; undefined
    5088:	ffff0000 	.inst	0xffff0000 ; undefined
    508c:	00000851 	.inst	0x00000851 ; undefined
    5090:	000005e0 	.inst	0x000005e0 ; undefined
    5094:	09500112 	.inst	0x09500112 ; undefined
    5098:	0e559003 	.inst	0x0e559003 ; undefined
    509c:	ff000000 	.inst	0xff000000 ; undefined
    50a0:	0c1100ff 	.inst	0x0c1100ff ; undefined
    50a4:	00000e33 	.inst	0x00000e33 ; undefined
    50a8:	51ffff00 	.inst	0x51ffff00 ; undefined
    50ac:	ff000008 	.inst	0xff000008 ; undefined
    50b0:	12000005 	and	w5, w0, #0x1
    50b4:	03095001 	.inst	0x03095001 ; undefined
    50b8:	000e55c0 	.inst	0x000e55c0 ; undefined
    50bc:	ffff0000 	.inst	0xffff0000 ; undefined
    50c0:	331c1100 	bfi	w0, w8, #4, #5
    50c4:	0000000e 	.inst	0x0000000e ; undefined
    50c8:	0851ffff 	ldaxrb	wzr, [sp]
    50cc:	061e0000 	.inst	0x061e0000 ; undefined
    50d0:	01120000 	.inst	0x01120000 ; undefined
    50d4:	f0030950 	adrp	x16, 6130000 <__bss_size+0x612fffa>
    50d8:	00000e55 	.inst	0x00000e55 ; undefined
    50dc:	00ffff00 	.inst	0x00ffff00 ; undefined
    50e0:	0e332c11 	sqsub	v17.8b, v0.8b, v19.8b
    50e4:	ff000000 	.inst	0xff000000 ; undefined
    50e8:	000851ff 	.inst	0x000851ff ; undefined
    50ec:	00063d00 	.inst	0x00063d00 ; undefined
    50f0:	50011200 	adr	x0, 7332 <__bss_size+0x732c>
    50f4:	56200309 	.inst	0x56200309 ; undefined
    50f8:	0000000e 	.inst	0x0000000e ; undefined
    50fc:	1100ffff 	add	wsp, wsp, #0x3f
    5100:	000e333c 	.inst	0x000e333c ; undefined
    5104:	ffff0000 	.inst	0xffff0000 ; undefined
    5108:	00000851 	.inst	0x00000851 ; undefined
    510c:	0000065c 	.inst	0x0000065c ; undefined
    5110:	09500112 	.inst	0x09500112 ; undefined
    5114:	0e565003 	.inst	0x0e565003 ; undefined
    5118:	ff000000 	.inst	0xff000000 ; undefined
    511c:	4c1100ff 	.inst	0x4c1100ff ; undefined
    5120:	00000e33 	.inst	0x00000e33 ; undefined
    5124:	51ffff00 	.inst	0x51ffff00 ; undefined
    5128:	7b000008 	.inst	0x7b000008 ; undefined
    512c:	12000006 	and	w6, w0, #0x1
    5130:	03095001 	.inst	0x03095001 ; undefined
    5134:	000e5680 	.inst	0x000e5680 ; undefined
    5138:	ffff0000 	.inst	0xffff0000 ; undefined
    513c:	335c1100 	.inst	0x335c1100 ; undefined
    5140:	0000000e 	.inst	0x0000000e ; undefined
    5144:	0851ffff 	ldaxrb	wzr, [sp]
    5148:	069a0000 	.inst	0x069a0000 ; undefined
    514c:	01120000 	.inst	0x01120000 ; undefined
    5150:	b0030950 	adrp	x16, 612e000 <__bss_size+0x612dffa>
    5154:	00000e56 	.inst	0x00000e56 ; undefined
    5158:	00ffff00 	.inst	0x00ffff00 ; undefined
    515c:	0e336c11 	smin	v17.8b, v0.8b, v19.8b
    5160:	ff000000 	.inst	0xff000000 ; undefined
    5164:	000851ff 	.inst	0x000851ff ; undefined
    5168:	0006b900 	.inst	0x0006b900 ; undefined
    516c:	50011200 	adr	x0, 73ae <__bss_size+0x73a8>
    5170:	56e00309 	.inst	0x56e00309 ; undefined
    5174:	0000000e 	.inst	0x0000000e ; undefined
    5178:	1100ffff 	add	wsp, wsp, #0x3f
    517c:	000e337c 	.inst	0x000e337c ; undefined
    5180:	ffff0000 	.inst	0xffff0000 ; undefined
    5184:	00000851 	.inst	0x00000851 ; undefined
    5188:	000006d8 	.inst	0x000006d8 ; undefined
    518c:	09500112 	.inst	0x09500112 ; undefined
    5190:	0e571003 	.inst	0x0e571003 ; undefined
    5194:	ff000000 	.inst	0xff000000 ; undefined
    5198:	9c1900ff 	ldr	q31, 371b4 <__bss_size+0x371ae>
    519c:	00000e33 	.inst	0x00000e33 ; undefined
    51a0:	46ffff00 	.inst	0x46ffff00 ; undefined
    51a4:	12000008 	and	w8, w0, #0x1
    51a8:	03095001 	.inst	0x03095001 ; undefined
    51ac:	000e54c0 	.inst	0x000e54c0 ; undefined
    51b0:	ffff0000 	.inst	0xffff0000 ; undefined
    51b4:	410c0000 	.inst	0x410c0000 ; undefined
    51b8:	0100000f 	.inst	0x0100000f ; undefined
    51bc:	0000692d 	.inst	0x0000692d ; undefined
    51c0:	0e319000 	.inst	0x0e319000 ; undefined
    51c4:	ff000000 	.inst	0xff000000 ; undefined
    51c8:	000010ff 	.inst	0x000010ff ; undefined
    51cc:	00000000 	.inst	0x00000000 ; undefined
    51d0:	259c0100 	cmpge	p0.s, p0/z, z8.s, #-4
    51d4:	0d000007 	st1	{v7.b}[0], [x0]
    51d8:	000009c2 	.inst	0x000009c2 ; undefined
    51dc:	007b2d01 	.inst	0x007b2d01 ; undefined
    51e0:	49600000 	.inst	0x49600000 ; undefined
    51e4:	1a000000 	adc	w0, w0, w0
    51e8:	00000ef8 	.inst	0x00000ef8 ; undefined
    51ec:	00692901 	.inst	0x00692901 ; undefined
    51f0:	41010000 	.inst	0x41010000 ; undefined
    51f4:	1b000007 	madd	w7, w0, w0, w0
    51f8:	000009c2 	.inst	0x000009c2 ; undefined
    51fc:	007b2901 	.inst	0x007b2901 ; undefined
    5200:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
    5204:	00000e5f 	.inst	0x00000e5f ; undefined
    5208:	00692501 	.inst	0x00692501 ; undefined
    520c:	31700000 	adds	w0, w0, #0xc00, lsl #12
    5210:	0000000e 	.inst	0x0000000e ; undefined
    5214:	000cffff 	.inst	0x000cffff ; undefined
    5218:	00000000 	.inst	0x00000000 ; undefined
    521c:	9c010000 	ldr	q0, 721c <__bss_size+0x7216>
    5220:	00000772 	.inst	0x00000772 ; undefined
    5224:	0009c20d 	.inst	0x0009c20d ; undefined
    5228:	7b250100 	.inst	0x7b250100 ; undefined
    522c:	99000000 	.inst	0x99000000 ; undefined
    5230:	00000049 	.inst	0x00000049 ; undefined
    5234:	0010941a 	.inst	0x0010941a ; undefined
    5238:	7b1e0100 	.inst	0x7b1e0100 ; undefined
    523c:	01000000 	.inst	0x01000000 ; undefined
    5240:	000007a4 	.inst	0x000007a4 ; undefined
    5244:	0009c21b 	.inst	0x0009c21b ; undefined
    5248:	7b1e0100 	.inst	0x7b1e0100 ; undefined
    524c:	15000000 	b	400524c <__bss_size+0x4005246>
    5250:	00000fcb 	.inst	0x00000fcb ; undefined
    5254:	00691f01 	.inst	0x00691f01 ; undefined
    5258:	11150000 	add	w0, w0, #0x540
    525c:	01000010 	.inst	0x01000010 ; undefined
    5260:	00006920 	.inst	0x00006920 ; undefined
    5264:	721c0000 	ands	w0, w0, #0x10
    5268:	50000007 	adr	x7, 526a <__bss_size+0x5264>
    526c:	00000e31 	.inst	0x00000e31 ; undefined
    5270:	14ffff00 	b	4004e70 <__bss_size+0x4004e6a>
    5274:	00000000 	.inst	0x00000000 ; undefined
    5278:	01000000 	.inst	0x01000000 ; undefined
    527c:	0007d99c 	.inst	0x0007d99c ; undefined
    5280:	07821600 	.inst	0x07821600 ; undefined
    5284:	49d20000 	.inst	0x49d20000 ; undefined
    5288:	8d1d0000 	.inst	0x8d1d0000 ; undefined
    528c:	0b000007 	add	w7, w0, w0
    5290:	1e00004a 	.inst	0x1e00004a ; undefined
    5294:	00000798 	.inst	0x00000798 ; undefined
    5298:	1c005101 	ldr	s1, 5cb8 <__bss_size+0x5cb2>
    529c:	00000725 	.inst	0x00000725 ; undefined
    52a0:	000e3180 	.inst	0x000e3180 ; undefined
    52a4:	ffff0000 	.inst	0xffff0000 ; undefined
    52a8:	00000010 	.inst	0x00000010 ; undefined
    52ac:	00000000 	.inst	0x00000000 ; undefined
    52b0:	07fe9c01 	.inst	0x07fe9c01 ; undefined
    52b4:	35160000 	cbnz	w0, 312b4 <__bss_size+0x312ae>
    52b8:	4e000007 	tbl	v7.16b, {v0.16b}, v0.16b
    52bc:	0000004a 	.inst	0x0000004a ; undefined
    52c0:	0004121c 	.inst	0x0004121c ; undefined
    52c4:	0e33a000 	smlsl	v0.8h, v0.8b, v19.8b
    52c8:	ff000000 	.inst	0xff000000 ; undefined
    52cc:	00006cff 	.inst	0x00006cff ; undefined
    52d0:	00000000 	.inst	0x00000000 ; undefined
    52d4:	239c0100 	.inst	0x239c0100 ; undefined
    52d8:	1d000008 	.inst	0x1d000008 ; undefined
    52dc:	0000041e 	.inst	0x0000041e ; undefined
    52e0:	00004a87 	.inst	0x00004a87 ; undefined
    52e4:	03fa1c00 	.inst	0x03fa1c00 ; undefined
    52e8:	34100000 	cbz	w0, 252e8 <__bss_size+0x252e2>
    52ec:	0000000e 	.inst	0x0000000e ; undefined
    52f0:	0028ffff 	.inst	0x0028ffff ; NYI
    52f4:	00000000 	.inst	0x00000000 ; undefined
    52f8:	9c010000 	ldr	q0, 72f8 <__bss_size+0x72f2>
    52fc:	00000846 	.inst	0x00000846 ; undefined
    5300:	0004061f 	.inst	0x0004061f ; undefined
    5304:	001eff00 	.inst	0x001eff00 ; undefined
    5308:	0000f420 	.inst	0x0000f420 ; undefined
    530c:	0000f400 	.inst	0x0000f400 ; undefined
    5310:	20120300 	.inst	0x20120300 ; undefined
    5314:	000001f0 	.inst	0x000001f0 ; undefined
    5318:	000001f0 	.inst	0x000001f0 ; undefined
    531c:	33201103 	.inst	0x33201103 ; undefined
    5320:	33000005 	bfxil	w5, w0, #0, #1
    5324:	04000005 	add	z5.b, p0/m, z5.b, z0.b
    5328:	002a0004 	.inst	0x002a0004 ; NYI
    532c:	00020000 	.inst	0x00020000 ; undefined
    5330:	00001353 	.inst	0x00001353 ; undefined
    5334:	1b980108 	.inst	0x1b980108 ; undefined
    5338:	00000000 	.inst	0x00000000 ; undefined
    533c:	0000000e 	.inst	0x0000000e ; undefined
    5340:	00c0ffff 	.inst	0x00c0ffff ; undefined
    5344:	0000000e 	.inst	0x0000000e ; undefined
    5348:	11bbffff 	.inst	0x11bbffff ; undefined
    534c:	024b0000 	.inst	0x024b0000 ; undefined
    5350:	11f30000 	.inst	0x11f30000 ; undefined
    5354:	80010000 	.inst	0x80010000 ; undefined
    5358:	0000002a 	.inst	0x0000002a ; undefined
    535c:	13670002 	.inst	0x13670002 ; undefined
    5360:	01080000 	.inst	0x01080000 ; undefined
    5364:	00001c2c 	.inst	0x00001c2c ; undefined
    5368:	000e3608 	.inst	0x000e3608 ; undefined
    536c:	ffff0000 	.inst	0xffff0000 ; undefined
    5370:	000e3634 	.inst	0x000e3634 ; undefined
    5374:	ffff0000 	.inst	0xffff0000 ; undefined
    5378:	00001201 	.inst	0x00001201 ; undefined
    537c:	0000024b 	.inst	0x0000024b ; undefined
    5380:	000011f3 	.inst	0x000011f3 ; undefined
    5384:	002a8001 	.inst	0x002a8001 ; NYI
    5388:	00020000 	.inst	0x00020000 ; undefined
    538c:	0000137b 	.inst	0x0000137b ; undefined
    5390:	1ca70108 	ldr	s8, fffffffffff533b0 <__end+0xffffffe6ca50>
    5394:	36380000 	tbz	w0, #7, 5394 <__bss_size+0x538e>
    5398:	0000000e 	.inst	0x0000000e ; undefined
    539c:	37f8ffff 	tbnz	wzr, #31, 7398 <__bss_size+0x7392>
    53a0:	0000000e 	.inst	0x0000000e ; undefined
    53a4:	1241ffff 	.inst	0x1241ffff ; undefined
    53a8:	024b0000 	.inst	0x024b0000 ; undefined
    53ac:	11f30000 	.inst	0x11f30000 ; undefined
    53b0:	80010000 	.inst	0x80010000 ; undefined
    53b4:	0000002a 	.inst	0x0000002a ; undefined
    53b8:	138f0002 	extr	w2, w0, w15, #0
    53bc:	01080000 	.inst	0x01080000 ; undefined
    53c0:	00001d8d 	.inst	0x00001d8d ; undefined
    53c4:	000e3800 	.inst	0x000e3800 ; undefined
    53c8:	ffff0000 	.inst	0xffff0000 ; undefined
    53cc:	000e4800 	.inst	0x000e4800 ; undefined
    53d0:	ffff0000 	.inst	0xffff0000 ; undefined
    53d4:	0000128d 	.inst	0x0000128d ; undefined
    53d8:	0000024b 	.inst	0x0000024b ; undefined
    53dc:	000011f3 	.inst	0x000011f3 ; undefined
    53e0:	002a8001 	.inst	0x002a8001 ; NYI
    53e4:	00020000 	.inst	0x00020000 ; undefined
    53e8:	000013a3 	.inst	0x000013a3 ; undefined
    53ec:	1e270108 	fmov	s8, w8
    53f0:	48000000 	stxrh	w0, w0, [x0]
    53f4:	0000000e 	.inst	0x0000000e ; undefined
    53f8:	4848ffff 	ldaxrh	wzr, [sp]
    53fc:	0000000e 	.inst	0x0000000e ; undefined
    5400:	12d2ffff 	.inst	0x12d2ffff ; undefined
    5404:	024b0000 	.inst	0x024b0000 ; undefined
    5408:	11f30000 	.inst	0x11f30000 ; undefined
    540c:	80010000 	.inst	0x80010000 ; undefined

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
       0:	25011101 	cmpge	p1.b, p4/z, z8.b, #1
       4:	030b130e 	.inst	0x030b130e ; undefined
       8:	110e1b0e 	add	w14, w24, #0x386
       c:	10071201 	adr	x1, e24c <__bss_size+0xe246>
      10:	02000017 	.inst	0x02000017 ; undefined
      14:	0b0b0024 	add	w4, w1, w11
      18:	0e030b3e 	.inst	0x0e030b3e ; undefined
      1c:	24030000 	cmphs	p0.b, p0/z, z0.b, z3.b
      20:	3e0b0b00 	.inst	0x3e0b0b00 ; undefined
      24:	0008030b 	.inst	0x0008030b ; undefined
      28:	00160400 	.inst	0x00160400 ; undefined
      2c:	0b3a0e03 	add	w3, w16, w26, uxtb #3
      30:	13490b3b 	.inst	0x13490b3b ; undefined
      34:	35050000 	cbnz	w0, a034 <__bss_size+0xa02e>
      38:	00134900 	.inst	0x00134900 ; undefined
      3c:	00340600 	.inst	0x00340600 ; NYI
      40:	0b3a0e03 	add	w3, w16, w26, uxtb #3
      44:	13490b3b 	.inst	0x13490b3b ; undefined
      48:	1802193f 	ldr	wzr, 436c <__bss_size+0x4366>
      4c:	0f070000 	.inst	0x0f070000 ; undefined
      50:	490b0b00 	.inst	0x490b0b00 ; undefined
      54:	08000013 	stxrb	w0, w19, [x0]
      58:	0e030113 	tbl	v19.8b, {v8.16b}, v3.8b
      5c:	0b3a0b0b 	add	w11, w24, w26, uxtb #2
      60:	13010b3b 	sbfx	w27, w25, #1, #2
      64:	0d090000 	.inst	0x0d090000 ; undefined
      68:	490e0300 	.inst	0x490e0300 ; undefined
      6c:	340b3813 	cbz	w19, 1676c <__bss_size+0x16766>
      70:	0a000019 	and	w25, w0, w0
      74:	0b0b000f 	add	w15, w0, w11
      78:	2e0b0000 	ext	v0.8b, v0.8b, v11.8b, #0
      7c:	03193f01 	.inst	0x03193f01 ; undefined
      80:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
      84:	1119270b 	add	w11, w24, #0x649
      88:	40071201 	.inst	0x40071201 ; undefined
      8c:	19429718 	.inst	0x19429718 ; undefined
      90:	00001301 	.inst	0x00001301 ; undefined
      94:	0300050c 	.inst	0x0300050c ; undefined
      98:	3b0b3a08 	.inst	0x3b0b3a08 ; undefined
      9c:	0213490b 	.inst	0x0213490b ; undefined
      a0:	0d000017 	st1	{v23.b}[0], [x0]
      a4:	00000018 	.inst	0x00000018 ; undefined
      a8:	0300340e 	.inst	0x0300340e ; undefined
      ac:	3b0b3a08 	.inst	0x3b0b3a08 ; undefined
      b0:	0213490b 	.inst	0x0213490b ; undefined
      b4:	0f000018 	.inst	0x0f000018 ; undefined
      b8:	01018289 	.inst	0x01018289 ; undefined
      bc:	13310111 	.inst	0x13310111 ; undefined
      c0:	8a100000 	and	x0, x0, x16
      c4:	02000182 	.inst	0x02000182 ; undefined
      c8:	18429118 	ldr	w24, 852e8 <__bss_size+0x852e2>
      cc:	26110000 	.inst	0x26110000 ; undefined
      d0:	00134900 	.inst	0x00134900 ; undefined
      d4:	00341200 	.inst	0x00341200 ; NYI
      d8:	0b3a0803 	add	w3, w0, w26, uxtb #2
      dc:	13490b3b 	.inst	0x13490b3b ; undefined
      e0:	00001702 	.inst	0x00001702 ; undefined
      e4:	31011d13 	adds	w19, w8, #0x47
      e8:	55015213 	.inst	0x55015213 ; undefined
      ec:	590b5817 	.inst	0x590b5817 ; undefined
      f0:	0013010b 	.inst	0x0013010b ; undefined
      f4:	00051400 	.inst	0x00051400 ; undefined
      f8:	17021331 	b	fffffffffc084dbc <__end+0xfffffbf9e45c>
      fc:	0b150000 	add	w0, w0, w21
     100:	00175501 	.inst	0x00175501 ; undefined
     104:	00341600 	.inst	0x00341600 ; NYI
     108:	00001331 	.inst	0x00001331 ; undefined
     10c:	01828917 	.inst	0x01828917 ; undefined
     110:	31011101 	adds	w1, w8, #0x44
     114:	00130113 	.inst	0x00130113 ; undefined
     118:	00051800 	.inst	0x00051800 ; undefined
     11c:	00001331 	.inst	0x00001331 ; undefined
     120:	31011d19 	adds	w25, w8, #0x47
     124:	55015213 	.inst	0x55015213 ; undefined
     128:	590b5817 	.inst	0x590b5817 ; undefined
     12c:	1a00000b 	adc	w11, w0, w0
     130:	1331010b 	.inst	0x1331010b ; undefined
     134:	00001755 	.inst	0x00001755 ; undefined
     138:	31011d1b 	adds	w27, w8, #0x47
     13c:	12011113 	and	w19, w8, #0x8000000f
     140:	590b5807 	.inst	0x590b5807 ; undefined
     144:	0013010b 	.inst	0x0013010b ; undefined
     148:	82891c00 	.inst	0x82891c00 ; undefined
     14c:	01110001 	.inst	0x01110001 ; undefined
     150:	00001331 	.inst	0x00001331 ; undefined
     154:	4901011d 	.inst	0x4901011d ; undefined
     158:	00130113 	.inst	0x00130113 ; undefined
     15c:	00211e00 	.inst	0x00211e00 ; NYI
     160:	0b2f1349 	add	w9, w26, w15, uxtb #4
     164:	2e1f0000 	ext	v0.8b, v0.8b, v31.8b, #0
     168:	03193f01 	.inst	0x03193f01 ; undefined
     16c:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     170:	2019270b 	.inst	0x2019270b ; undefined
     174:	0013010b 	.inst	0x0013010b ; undefined
     178:	00052000 	.inst	0x00052000 ; undefined
     17c:	0b3a0803 	add	w3, w0, w26, uxtb #2
     180:	13490b3b 	.inst	0x13490b3b ; undefined
     184:	34210000 	cbz	w0, 42184 <__bss_size+0x4217e>
     188:	3a080300 	adcs	w0, w24, w8
     18c:	490b3b0b 	.inst	0x490b3b0b ; undefined
     190:	22000013 	.inst	0x22000013 ; undefined
     194:	01018289 	.inst	0x01018289 ; undefined
     198:	42950111 	.inst	0x42950111 ; undefined
     19c:	01133119 	.inst	0x01133119 ; undefined
     1a0:	23000013 	.inst	0x23000013 ; undefined
     1a4:	01018289 	.inst	0x01018289 ; undefined
     1a8:	42950111 	.inst	0x42950111 ; undefined
     1ac:	00133119 	.inst	0x00133119 ; undefined
     1b0:	012e2400 	.inst	0x012e2400 ; undefined
     1b4:	0e03193f 	uzp1	v31.8b, v9.8b, v3.8b
     1b8:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     1bc:	07120111 	.inst	0x07120111 ; undefined
     1c0:	42971840 	.inst	0x42971840 ; undefined
     1c4:	00130119 	.inst	0x00130119 ; undefined
     1c8:	011d2500 	.inst	0x011d2500 ; undefined
     1cc:	01111331 	.inst	0x01111331 ; undefined
     1d0:	0b580712 	add	w18, w24, w24, lsr #1
     1d4:	00000b59 	.inst	0x00000b59 ; undefined
     1d8:	31000526 	adds	w6, w9, #0x1
     1dc:	000b1c13 	.inst	0x000b1c13 ; undefined
     1e0:	012e2700 	.inst	0x012e2700 ; undefined
     1e4:	0803193f 	stxrb	w3, wzr, [x9]
     1e8:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     1ec:	0b201927 	.inst	0x0b201927 ; undefined
     1f0:	00001301 	.inst	0x00001301 ; undefined
     1f4:	03000528 	.inst	0x03000528 ; undefined
     1f8:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     1fc:	0013490b 	.inst	0x0013490b ; undefined
     200:	012e2900 	.inst	0x012e2900 ; undefined
     204:	0803193f 	stxrb	w3, wzr, [x9]
     208:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     20c:	13491927 	.inst	0x13491927 ; undefined
     210:	13010b20 	sbfx	w0, w25, #1, #2
     214:	342a0000 	cbz	w0, 54214 <__bss_size+0x5420e>
     218:	3a0e0300 	adcs	w0, w24, w14
     21c:	490b3b0b 	.inst	0x490b3b0b ; undefined
     220:	2b000013 	adds	w19, w0, w0
     224:	193f012e 	.inst	0x193f012e ; undefined
     228:	0b3a0803 	add	w3, w0, w26, uxtb #2
     22c:	19270b3b 	.inst	0x19270b3b ; undefined
     230:	01111349 	.inst	0x01111349 ; undefined
     234:	18400712 	ldr	w18, 80314 <__bss_size+0x8030e>
     238:	01194297 	.inst	0x01194297 ; undefined
     23c:	2c000013 	stnp	s19, s0, [x0]
     240:	193f012e 	.inst	0x193f012e ; undefined
     244:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     248:	13490b3b 	.inst	0x13490b3b ; undefined
     24c:	07120111 	.inst	0x07120111 ; undefined
     250:	42971840 	.inst	0x42971840 ; undefined
     254:	00130119 	.inst	0x00130119 ; undefined
     258:	00342d00 	.inst	0x00342d00 ; NYI
     25c:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     260:	13490b3b 	.inst	0x13490b3b ; undefined
     264:	00001702 	.inst	0x00001702 ; undefined
     268:	55010b2e 	.inst	0x55010b2e ; undefined
     26c:	00130117 	.inst	0x00130117 ; undefined
     270:	012e2f00 	.inst	0x012e2f00 ; undefined
     274:	01111331 	.inst	0x01111331 ; undefined
     278:	18400712 	ldr	w18, 80358 <__bss_size+0x80352>
     27c:	01194297 	.inst	0x01194297 ; undefined
     280:	30000013 	adr	x19, 281 <__bss_size+0x27b>
     284:	13310005 	.inst	0x13310005 ; undefined
     288:	00001802 	.inst	0x00001802 ; undefined
     28c:	31003431 	adds	w17, w1, #0xd
     290:	00170213 	.inst	0x00170213 ; undefined
     294:	00343200 	.inst	0x00343200 ; NYI
     298:	18021331 	ldr	w17, 44fc <__bss_size+0x44f6>
     29c:	2e330000 	uaddl	v0.8h, v0.8b, v19.8b
     2a0:	3c193f00 	str	b0, [x24, #-109]!
     2a4:	030e6e19 	.inst	0x030e6e19 ; undefined
     2a8:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     2ac:	0000000b 	.inst	0x0000000b ; undefined
     2b0:	25011101 	cmpge	p1.b, p4/z, z8.b, #1
     2b4:	030b130e 	.inst	0x030b130e ; undefined
     2b8:	550e1b0e 	.inst	0x550e1b0e ; undefined
     2bc:	10011117 	adr	x23, 24dc <__bss_size+0x24d6>
     2c0:	02000017 	.inst	0x02000017 ; undefined
     2c4:	0b0b0024 	add	w4, w1, w11
     2c8:	0e030b3e 	.inst	0x0e030b3e ; undefined
     2cc:	24030000 	cmphs	p0.b, p0/z, z0.b, z3.b
     2d0:	3e0b0b00 	.inst	0x3e0b0b00 ; undefined
     2d4:	0008030b 	.inst	0x0008030b ; undefined
     2d8:	00160400 	.inst	0x00160400 ; undefined
     2dc:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     2e0:	13490b3b 	.inst	0x13490b3b ; undefined
     2e4:	35050000 	cbnz	w0, a2e4 <__bss_size+0xa2de>
     2e8:	00134900 	.inst	0x00134900 ; undefined
     2ec:	00340600 	.inst	0x00340600 ; NYI
     2f0:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     2f4:	13490b3b 	.inst	0x13490b3b ; undefined
     2f8:	1802193f 	ldr	wzr, 461c <__bss_size+0x4616>
     2fc:	0f070000 	.inst	0x0f070000 ; undefined
     300:	490b0b00 	.inst	0x490b0b00 ; undefined
     304:	08000013 	stxrb	w0, w19, [x0]
     308:	193f012e 	.inst	0x193f012e ; undefined
     30c:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     310:	01110b3b 	.inst	0x01110b3b ; undefined
     314:	18400712 	ldr	w18, 803f4 <__bss_size+0x803ee>
     318:	01194297 	.inst	0x01194297 ; undefined
     31c:	09000013 	.inst	0x09000013 ; undefined
     320:	01018289 	.inst	0x01018289 ; undefined
     324:	13310111 	.inst	0x13310111 ; undefined
     328:	00001301 	.inst	0x00001301 ; undefined
     32c:	01828a0a 	.inst	0x01828a0a ; undefined
     330:	91180200 	add	x0, x16, #0x600
     334:	00001842 	.inst	0x00001842 ; undefined
     338:	0182890b 	.inst	0x0182890b ; undefined
     33c:	31011100 	adds	w0, w8, #0x44
     340:	0c000013 	st4	{v19.8b-v22.8b}, [x0]
     344:	01018289 	.inst	0x01018289 ; undefined
     348:	13310111 	.inst	0x13310111 ; undefined
     34c:	2e0d0000 	ext	v0.8b, v0.8b, v13.8b, #0
     350:	3c193f00 	str	b0, [x24, #-109]!
     354:	030e6e19 	.inst	0x030e6e19 ; undefined
     358:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     35c:	0000000b 	.inst	0x0000000b ; undefined
     360:	25011101 	cmpge	p1.b, p4/z, z8.b, #1
     364:	030b130e 	.inst	0x030b130e ; undefined
     368:	110e1b0e 	add	w14, w24, #0x386
     36c:	10071201 	adr	x1, e5ac <__bss_size+0xe5a6>
     370:	02000017 	.inst	0x02000017 ; undefined
     374:	0b0b0024 	add	w4, w1, w11
     378:	0e030b3e 	.inst	0x0e030b3e ; undefined
     37c:	24030000 	cmphs	p0.b, p0/z, z0.b, z3.b
     380:	3e0b0b00 	.inst	0x3e0b0b00 ; undefined
     384:	0008030b 	.inst	0x0008030b ; undefined
     388:	00160400 	.inst	0x00160400 ; undefined
     38c:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     390:	13490b3b 	.inst	0x13490b3b ; undefined
     394:	35050000 	cbnz	w0, a394 <__bss_size+0xa38e>
     398:	00134900 	.inst	0x00134900 ; undefined
     39c:	00340600 	.inst	0x00340600 ; NYI
     3a0:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     3a4:	13490b3b 	.inst	0x13490b3b ; undefined
     3a8:	1802193f 	ldr	wzr, 46cc <__bss_size+0x46c6>
     3ac:	0f070000 	.inst	0x0f070000 ; undefined
     3b0:	490b0b00 	.inst	0x490b0b00 ; undefined
     3b4:	08000013 	stxrb	w0, w19, [x0]
     3b8:	193f012e 	.inst	0x193f012e ; undefined
     3bc:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     3c0:	01870b3b 	.inst	0x01870b3b ; undefined
     3c4:	12011119 	and	w25, w8, #0x8000000f
     3c8:	97184007 	bl	fffffffffc6103e4 <__end+0xfffffc529a84>
     3cc:	13011942 	sbfx	w2, w10, #1, #6
     3d0:	0b090000 	add	w0, w0, w9
     3d4:	01175501 	.inst	0x01175501 ; undefined
     3d8:	0a000013 	and	w19, w0, w0
     3dc:	0e030034 	tbl	v20.8b, {v1.16b}, v3.8b
     3e0:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     3e4:	17021349 	b	fffffffffc085108 <__end+0xfffffbf9e7a8>
     3e8:	1d0b0000 	.inst	0x1d0b0000 ; undefined
     3ec:	52133101 	eor	w1, w8, #0x3ffe000
     3f0:	58175501 	ldr	x1, 2ee90 <__bss_size+0x2ee8a>
     3f4:	010b590b 	.inst	0x010b590b ; undefined
     3f8:	0c000013 	st4	{v19.8b-v22.8b}, [x0]
     3fc:	13310005 	.inst	0x13310005 ; undefined
     400:	00001702 	.inst	0x00001702 ; undefined
     404:	31010b0d 	adds	w13, w24, #0x42
     408:	01175513 	.inst	0x01175513 ; undefined
     40c:	0e000013 	tbl	v19.8b, {v0.16b}, v0.8b
     410:	1331011d 	.inst	0x1331011d ; undefined
     414:	17550152 	b	fffffffffd54095c <__end+0xfffffd459ffc>
     418:	0b590b58 	add	w24, w26, w25, lsr #2
     41c:	890f0000 	.inst	0x890f0000 ; undefined
     420:	11010182 	add	w2, w12, #0x40
     424:	01133101 	.inst	0x01133101 ; undefined
     428:	10000013 	adr	x19, 428 <__bss_size+0x422>
     42c:	0001828a 	.inst	0x0001828a ; undefined
     430:	42911802 	.inst	0x42911802 ; undefined
     434:	11000018 	add	w24, w0, #0x0
     438:	01018289 	.inst	0x01018289 ; undefined
     43c:	13310111 	.inst	0x13310111 ; undefined
     440:	34120000 	cbz	w0, 24440 <__bss_size+0x2443a>
     444:	00133100 	.inst	0x00133100 ; undefined
     448:	82891300 	.inst	0x82891300 ; undefined
     44c:	01110001 	.inst	0x01110001 ; undefined
     450:	00001331 	.inst	0x00001331 ; undefined
     454:	31011d14 	adds	w20, w8, #0x47
     458:	12011113 	and	w19, w8, #0x8000000f
     45c:	590b5807 	.inst	0x590b5807 ; undefined
     460:	0013010b 	.inst	0x0013010b ; undefined
     464:	010b1500 	.inst	0x010b1500 ; undefined
     468:	07120111 	.inst	0x07120111 ; undefined
     46c:	2e160000 	ext	v0.8b, v0.8b, v22.8b, #0
     470:	03193f01 	.inst	0x03193f01 ; undefined
     474:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     478:	2019270b 	.inst	0x2019270b ; undefined
     47c:	0013010b 	.inst	0x0013010b ; undefined
     480:	00051700 	.inst	0x00051700 ; undefined
     484:	0b3a0803 	add	w3, w0, w26, uxtb #2
     488:	13490b3b 	.inst	0x13490b3b ; undefined
     48c:	2e180000 	ext	v0.8b, v0.8b, v24.8b, #0
     490:	03193f01 	.inst	0x03193f01 ; undefined
     494:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     498:	010b200b 	.inst	0x010b200b ; undefined
     49c:	19000013 	.inst	0x19000013 ; undefined
     4a0:	08030034 	stxrb	w3, w20, [x1]
     4a4:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     4a8:	00001349 	.inst	0x00001349 ; undefined
     4ac:	00010b1a 	.inst	0x00010b1a ; undefined
     4b0:	00341b00 	.inst	0x00341b00 ; NYI
     4b4:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     4b8:	13490b3b 	.inst	0x13490b3b ; undefined
     4bc:	2e1c0000 	ext	v0.8b, v0.8b, v28.8b, #0
     4c0:	03193f01 	.inst	0x03193f01 ; undefined
     4c4:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     4c8:	1201110b 	and	w11, w8, #0x8000000f
     4cc:	97184007 	bl	fffffffffc6104e8 <__end+0xfffffc529b88>
     4d0:	13011942 	sbfx	w2, w10, #1, #6
     4d4:	2e1d0000 	ext	v0.8b, v0.8b, v29.8b, #0
     4d8:	03193f00 	.inst	0x03193f00 ; undefined
     4dc:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     4e0:	000b200b 	.inst	0x000b200b ; undefined
     4e4:	012e1e00 	.inst	0x012e1e00 ; undefined
     4e8:	01111331 	.inst	0x01111331 ; undefined
     4ec:	18400712 	ldr	w18, 805cc <__bss_size+0x805c6>
     4f0:	01194297 	.inst	0x01194297 ; undefined
     4f4:	1f000013 	fmadd	s19, s0, s0, s0
     4f8:	01018289 	.inst	0x01018289 ; undefined
     4fc:	42950111 	.inst	0x42950111 ; undefined
     500:	00133119 	.inst	0x00133119 ; undefined
     504:	00342000 	.inst	0x00342000 ; NYI
     508:	17021331 	b	fffffffffc0851cc <__end+0xfffffbf9e86c>
     50c:	89210000 	.inst	0x89210000 ; undefined
     510:	11000182 	add	w2, w12, #0x0
     514:	19429501 	.inst	0x19429501 ; undefined
     518:	00001331 	.inst	0x00001331 ; undefined
     51c:	31000522 	adds	w2, w9, #0x1
     520:	00180213 	.inst	0x00180213 ; undefined
     524:	010b2300 	.inst	0x010b2300 ; undefined
     528:	00001755 	.inst	0x00001755 ; undefined
     52c:	01828924 	.inst	0x01828924 ; undefined
     530:	95011101 	bl	4044934 <__bss_size+0x404492e>
     534:	13311942 	.inst	0x13311942 ; undefined
     538:	00001301 	.inst	0x00001301 ; undefined
     53c:	3f002e25 	.inst	0x3f002e25 ; undefined
     540:	6e193c19 	mov	v25.b[12], v0.b[7]
     544:	3a0e030e 	adcs	w14, w24, w14
     548:	000b3b0b 	.inst	0x000b3b0b ; undefined
     54c:	11010000 	add	w0, w0, #0x40
     550:	130e2501 	sbfiz	w1, w8, #18, #10
     554:	1b0e030b 	madd	w11, w24, w14, w0
     558:	1201110e 	and	w14, w8, #0x8000000f
     55c:	00171007 	.inst	0x00171007 ; undefined
     560:	00240200 	.inst	0x00240200 ; NYI
     564:	0b3e0b0b 	add	w11, w24, w30, uxtb #2
     568:	00000e03 	.inst	0x00000e03 ; undefined
     56c:	0b002403 	add	w3, w0, w0, lsl #9
     570:	030b3e0b 	.inst	0x030b3e0b ; undefined
     574:	04000008 	add	z8.b, p0/m, z8.b, z0.b
     578:	193f012e 	.inst	0x193f012e ; undefined
     57c:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     580:	01110b3b 	.inst	0x01110b3b ; undefined
     584:	18400712 	ldr	w18, 80664 <__bss_size+0x8065e>
     588:	01194297 	.inst	0x01194297 ; undefined
     58c:	05000013 	orr	z19.s, z19.s, #0x1
     590:	01018289 	.inst	0x01018289 ; undefined
     594:	13310111 	.inst	0x13310111 ; undefined
     598:	8a060000 	and	x0, x0, x6
     59c:	02000182 	.inst	0x02000182 ; undefined
     5a0:	18429118 	ldr	w24, 857c0 <__bss_size+0x857ba>
     5a4:	2e070000 	ext	v0.8b, v0.8b, v7.8b, #0
     5a8:	03193f01 	.inst	0x03193f01 ; undefined
     5ac:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     5b0:	8719270b 	.inst	0x8719270b ; undefined
     5b4:	01111901 	.inst	0x01111901 ; undefined
     5b8:	18400712 	ldr	w18, 80698 <__bss_size+0x80692>
     5bc:	01194297 	.inst	0x01194297 ; undefined
     5c0:	08000013 	stxrb	w0, w19, [x0]
     5c4:	08030005 	stxrb	w3, w5, [x0]
     5c8:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     5cc:	17021349 	b	fffffffffc0852f0 <__end+0xfffffbf9e990>
     5d0:	89090000 	.inst	0x89090000 ; undefined
     5d4:	11010182 	add	w2, w12, #0x40
     5d8:	01133101 	.inst	0x01133101 ; undefined
     5dc:	0a000013 	and	w19, w0, w0
     5e0:	0b0b000f 	add	w15, w0, w11
     5e4:	00001349 	.inst	0x00001349 ; undefined
     5e8:	0182890b 	.inst	0x0182890b ; undefined
     5ec:	31011100 	adds	w0, w8, #0x44
     5f0:	0c000013 	st4	{v19.8b-v22.8b}, [x0]
     5f4:	00018289 	.inst	0x00018289 ; undefined
     5f8:	42950111 	.inst	0x42950111 ; undefined
     5fc:	00133119 	.inst	0x00133119 ; undefined
     600:	82890d00 	.inst	0x82890d00 ; undefined
     604:	01110101 	.inst	0x01110101 ; undefined
     608:	31194295 	adds	w21, w20, #0x650
     60c:	0e000013 	tbl	v19.8b, {v0.16b}, v0.8b
     610:	193f002e 	.inst	0x193f002e ; undefined
     614:	0e6e193c 	.inst	0x0e6e193c ; undefined
     618:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     61c:	00000b3b 	.inst	0x00000b3b ; undefined
     620:	01110100 	.inst	0x01110100 ; undefined
     624:	0b130e25 	add	w5, w17, w19, lsl #3
     628:	0e1b0e03 	dup	v3.8b, w16
     62c:	07120111 	.inst	0x07120111 ; undefined
     630:	00001710 	.inst	0x00001710 ; undefined
     634:	0b002402 	add	w2, w0, w0, lsl #9
     638:	030b3e0b 	.inst	0x030b3e0b ; undefined
     63c:	0300000e 	.inst	0x0300000e ; undefined
     640:	0b0b0024 	add	w4, w1, w11
     644:	08030b3e 	stxrb	w3, w30, [x25]
     648:	16040000 	b	fffffffff8100648 <__end+0xfffff8019ce8>
     64c:	3a0e0300 	adcs	w0, w24, w14
     650:	490b3b0b 	.inst	0x490b3b0b ; undefined
     654:	05000013 	orr	z19.s, z19.s, #0x1
     658:	193f012e 	.inst	0x193f012e ; undefined
     65c:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     660:	19270b3b 	.inst	0x19270b3b ; undefined
     664:	07120111 	.inst	0x07120111 ; undefined
     668:	42971840 	.inst	0x42971840 ; undefined
     66c:	00130119 	.inst	0x00130119 ; undefined
     670:	00050600 	.inst	0x00050600 ; undefined
     674:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     678:	13490b3b 	.inst	0x13490b3b ; undefined
     67c:	00001702 	.inst	0x00001702 ; undefined
     680:	3f002e07 	.inst	0x3f002e07 ; undefined
     684:	3a0e0319 	adcs	w25, w24, w14
     688:	110b3b0b 	add	w11, w24, #0x2ce
     68c:	40071201 	.inst	0x40071201 ; undefined
     690:	19429718 	.inst	0x19429718 ; undefined
     694:	2e080000 	ext	v0.8b, v0.8b, v8.8b, #0
     698:	03193f00 	.inst	0x03193f00 ; undefined
     69c:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     6a0:	1113490b 	add	w11, w8, #0x4d2
     6a4:	40071201 	.inst	0x40071201 ; undefined
     6a8:	19429718 	.inst	0x19429718 ; undefined
     6ac:	01000000 	.inst	0x01000000 ; undefined
     6b0:	0e250111 	saddl	v17.8h, v8.8b, v5.8b
     6b4:	0e030b13 	.inst	0x0e030b13 ; undefined
     6b8:	01110e1b 	.inst	0x01110e1b ; undefined
     6bc:	17100712 	b	fffffffffc402304 <__end+0xfffffc31b9a4>
     6c0:	24020000 	cmphs	p0.b, p0/z, z0.b, z2.b
     6c4:	3e0b0b00 	.inst	0x3e0b0b00 ; undefined
     6c8:	000e030b 	.inst	0x000e030b ; undefined
     6cc:	00240300 	.inst	0x00240300 ; NYI
     6d0:	0b3e0b0b 	add	w11, w24, w30, uxtb #2
     6d4:	00000803 	.inst	0x00000803 ; undefined
     6d8:	03001604 	.inst	0x03001604 ; undefined
     6dc:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     6e0:	0013490b 	.inst	0x0013490b ; undefined
     6e4:	00350500 	.inst	0x00350500 ; NYI
     6e8:	00001349 	.inst	0x00001349 ; undefined
     6ec:	3f012e06 	.inst	0x3f012e06 ; undefined
     6f0:	3a0e0319 	adcs	w25, w24, w14
     6f4:	270b3b0b 	.inst	0x270b3b0b ; undefined
     6f8:	12011119 	and	w25, w8, #0x8000000f
     6fc:	97184007 	bl	fffffffffc610718 <__end+0xfffffc529db8>
     700:	13011942 	sbfx	w2, w10, #1, #6
     704:	05070000 	.inst	0x05070000 ; undefined
     708:	3a080300 	adcs	w0, w24, w8
     70c:	490b3b0b 	.inst	0x490b3b0b ; undefined
     710:	00170213 	.inst	0x00170213 ; undefined
     714:	00050800 	.inst	0x00050800 ; undefined
     718:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     71c:	13490b3b 	.inst	0x13490b3b ; undefined
     720:	00001802 	.inst	0x00001802 ; undefined
     724:	31011d09 	adds	w9, w8, #0x47
     728:	55015213 	.inst	0x55015213 ; undefined
     72c:	590b5817 	.inst	0x590b5817 ; undefined
     730:	0a00000b 	and	w11, w0, w0
     734:	13310005 	.inst	0x13310005 ; undefined
     738:	00001702 	.inst	0x00001702 ; undefined
     73c:	3f012e0b 	.inst	0x3f012e0b ; undefined
     740:	3a0e0319 	adcs	w25, w24, w14
     744:	270b3b0b 	.inst	0x270b3b0b ; undefined
     748:	010b2019 	.inst	0x010b2019 ; undefined
     74c:	0c000013 	st4	{v19.8b-v22.8b}, [x0]
     750:	08030005 	stxrb	w3, w5, [x0]
     754:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     758:	00001349 	.inst	0x00001349 ; undefined
     75c:	0300340d 	.inst	0x0300340d ; undefined
     760:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     764:	0213490b 	.inst	0x0213490b ; undefined
     768:	0e000017 	tbl	v23.8b, {v0.16b}, v0.8b
     76c:	0b0b000f 	add	w15, w0, w11
     770:	00001349 	.inst	0x00001349 ; undefined
     774:	31012e0f 	adds	w15, w16, #0x4b
     778:	12011113 	and	w19, w8, #0x8000000f
     77c:	97184007 	bl	fffffffffc610798 <__end+0xfffffc529e38>
     780:	00001942 	.inst	0x00001942 ; undefined
     784:	01110100 	.inst	0x01110100 ; undefined
     788:	0b130e25 	add	w5, w17, w19, lsl #3
     78c:	0e1b0e03 	dup	v3.8b, w16
     790:	07120111 	.inst	0x07120111 ; undefined
     794:	00001710 	.inst	0x00001710 ; undefined
     798:	0b002402 	add	w2, w0, w0, lsl #9
     79c:	030b3e0b 	.inst	0x030b3e0b ; undefined
     7a0:	0300000e 	.inst	0x0300000e ; undefined
     7a4:	0b0b0024 	add	w4, w1, w11
     7a8:	08030b3e 	stxrb	w3, w30, [x25]
     7ac:	2e040000 	ext	v0.8b, v0.8b, v4.8b, #0
     7b0:	03193f01 	.inst	0x03193f01 ; undefined
     7b4:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     7b8:	1201110b 	and	w11, w8, #0x8000000f
     7bc:	97184007 	bl	fffffffffc6107d8 <__end+0xfffffc529e78>
     7c0:	13011942 	sbfx	w2, w10, #1, #6
     7c4:	89050000 	.inst	0x89050000 ; undefined
     7c8:	11010182 	add	w2, w12, #0x40
     7cc:	19429501 	.inst	0x19429501 ; undefined
     7d0:	00001331 	.inst	0x00001331 ; undefined
     7d4:	01828a06 	.inst	0x01828a06 ; undefined
     7d8:	91180200 	add	x0, x16, #0x600
     7dc:	00001842 	.inst	0x00001842 ; undefined
     7e0:	01828907 	.inst	0x01828907 ; undefined
     7e4:	31011101 	adds	w1, w8, #0x44
     7e8:	00130113 	.inst	0x00130113 ; undefined
     7ec:	002e0800 	.inst	0x002e0800 ; NYI
     7f0:	193c193f 	.inst	0x193c193f ; undefined
     7f4:	0e030e6e 	dup	v14.8b, w19
     7f8:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     7fc:	01000000 	.inst	0x01000000 ; undefined
     800:	0e250111 	saddl	v17.8h, v8.8b, v5.8b
     804:	0e030b13 	.inst	0x0e030b13 ; undefined
     808:	01110e1b 	.inst	0x01110e1b ; undefined
     80c:	17100712 	b	fffffffffc402454 <__end+0xfffffc31baf4>
     810:	24020000 	cmphs	p0.b, p0/z, z0.b, z2.b
     814:	3e0b0b00 	.inst	0x3e0b0b00 ; undefined
     818:	000e030b 	.inst	0x000e030b ; undefined
     81c:	00240300 	.inst	0x00240300 ; NYI
     820:	0b3e0b0b 	add	w11, w24, w30, uxtb #2
     824:	00000803 	.inst	0x00000803 ; undefined
     828:	03001604 	.inst	0x03001604 ; undefined
     82c:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     830:	0013490b 	.inst	0x0013490b ; undefined
     834:	012e0500 	.inst	0x012e0500 ; undefined
     838:	0e03193f 	uzp1	v31.8b, v9.8b, v3.8b
     83c:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     840:	01111349 	.inst	0x01111349 ; undefined
     844:	18400712 	ldr	w18, 80924 <__bss_size+0x8091e>
     848:	01194297 	.inst	0x01194297 ; undefined
     84c:	06000013 	.inst	0x06000013 ; undefined
     850:	1331001d 	.inst	0x1331001d ; undefined
     854:	07120111 	.inst	0x07120111 ; undefined
     858:	0b590b58 	add	w24, w26, w25, lsr #2
     85c:	2e070000 	ext	v0.8b, v0.8b, v7.8b, #0
     860:	03193f00 	.inst	0x03193f00 ; undefined
     864:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     868:	000b200b 	.inst	0x000b200b ; undefined
     86c:	012e0800 	.inst	0x012e0800 ; undefined
     870:	0e03193f 	uzp1	v31.8b, v9.8b, v3.8b
     874:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     878:	01111927 	.inst	0x01111927 ; undefined
     87c:	18400712 	ldr	w18, 8095c <__bss_size+0x80956>
     880:	01194297 	.inst	0x01194297 ; undefined
     884:	09000013 	.inst	0x09000013 ; undefined
     888:	0e030005 	tbl	v5.8b, {v0.16b}, v3.8b
     88c:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     890:	18021349 	ldr	w9, 4af8 <__bss_size+0x4af2>
     894:	2e0a0000 	ext	v0.8b, v0.8b, v10.8b, #0
     898:	03193f01 	.inst	0x03193f01 ; undefined
     89c:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     8a0:	1201110b 	and	w11, w8, #0x8000000f
     8a4:	97184007 	bl	fffffffffc6108c0 <__end+0xfffffc529f60>
     8a8:	13011942 	sbfx	w2, w10, #1, #6
     8ac:	340b0000 	cbz	w0, 168ac <__bss_size+0x168a6>
     8b0:	3a080300 	adcs	w0, w24, w8
     8b4:	490b3b0b 	.inst	0x490b3b0b ; undefined
     8b8:	0c000013 	st4	{v19.8b-v22.8b}, [x0]
     8bc:	01018289 	.inst	0x01018289 ; undefined
     8c0:	13310111 	.inst	0x13310111 ; undefined
     8c4:	00001301 	.inst	0x00001301 ; undefined
     8c8:	01828a0d 	.inst	0x01828a0d ; undefined
     8cc:	91180200 	add	x0, x16, #0x600
     8d0:	00001842 	.inst	0x00001842 ; undefined
     8d4:	0182890e 	.inst	0x0182890e ; undefined
     8d8:	31011101 	adds	w1, w8, #0x44
     8dc:	0f000013 	.inst	0x0f000013 ; undefined
     8e0:	1331002e 	.inst	0x1331002e ; undefined
     8e4:	07120111 	.inst	0x07120111 ; undefined
     8e8:	42971840 	.inst	0x42971840 ; undefined
     8ec:	10000019 	adr	x25, 8ec <__bss_size+0x8e6>
     8f0:	193f002e 	.inst	0x193f002e ; undefined
     8f4:	0e6e193c 	.inst	0x0e6e193c ; undefined
     8f8:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     8fc:	00000b3b 	.inst	0x00000b3b ; undefined
     900:	01110100 	.inst	0x01110100 ; undefined
     904:	0b130e25 	add	w5, w17, w19, lsl #3
     908:	0e1b0e03 	dup	v3.8b, w16
     90c:	07120111 	.inst	0x07120111 ; undefined
     910:	00001710 	.inst	0x00001710 ; undefined
     914:	0b002402 	add	w2, w0, w0, lsl #9
     918:	030b3e0b 	.inst	0x030b3e0b ; undefined
     91c:	0300000e 	.inst	0x0300000e ; undefined
     920:	0b0b0024 	add	w4, w1, w11
     924:	08030b3e 	stxrb	w3, w30, [x25]
     928:	16040000 	b	fffffffff8100928 <__end+0xfffff8019fc8>
     92c:	3a0e0300 	adcs	w0, w24, w14
     930:	490b3b0b 	.inst	0x490b3b0b ; undefined
     934:	05000013 	orr	z19.s, z19.s, #0x1
     938:	13490035 	.inst	0x13490035 ; undefined
     93c:	34060000 	cbz	w0, c93c <__bss_size+0xc936>
     940:	3a0e0300 	adcs	w0, w24, w14
     944:	490b3b0b 	.inst	0x490b3b0b ; undefined
     948:	02193f13 	.inst	0x02193f13 ; undefined
     94c:	07000018 	.inst	0x07000018 ; undefined
     950:	0b0b000f 	add	w15, w0, w11
     954:	00001349 	.inst	0x00001349 ; undefined
     958:	3f012e08 	.inst	0x3f012e08 ; undefined
     95c:	3a0e0319 	adcs	w25, w24, w14
     960:	270b3b0b 	.inst	0x270b3b0b ; undefined
     964:	12011119 	and	w25, w8, #0x8000000f
     968:	97184007 	bl	fffffffffc610984 <__end+0xfffffc52a024>
     96c:	13011942 	sbfx	w2, w10, #1, #6
     970:	05090000 	.inst	0x05090000 ; undefined
     974:	3a080300 	adcs	w0, w24, w8
     978:	490b3b0b 	.inst	0x490b3b0b ; undefined
     97c:	00170213 	.inst	0x00170213 ; undefined
     980:	00050a00 	.inst	0x00050a00 ; undefined
     984:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     988:	13490b3b 	.inst	0x13490b3b ; undefined
     98c:	00001702 	.inst	0x00001702 ; undefined
     990:	0300340b 	.inst	0x0300340b ; undefined
     994:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     998:	0213490b 	.inst	0x0213490b ; undefined
     99c:	0c000017 	st4	{v23.8b-v26.8b}, [x0]
     9a0:	08030034 	stxrb	w3, w20, [x1]
     9a4:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     9a8:	17021349 	b	fffffffffc0856cc <__end+0xfffffbf9ed6c>
     9ac:	890d0000 	.inst	0x890d0000 ; undefined
     9b0:	11010182 	add	w2, w12, #0x40
     9b4:	01133101 	.inst	0x01133101 ; undefined
     9b8:	0e000013 	tbl	v19.8b, {v0.16b}, v0.8b
     9bc:	0001828a 	.inst	0x0001828a ; undefined
     9c0:	42911802 	.inst	0x42911802 ; undefined
     9c4:	0f000018 	.inst	0x0f000018 ; undefined
     9c8:	01018289 	.inst	0x01018289 ; undefined
     9cc:	13310111 	.inst	0x13310111 ; undefined
     9d0:	2e100000 	ext	v0.8b, v0.8b, v16.8b, #0
     9d4:	03193f01 	.inst	0x03193f01 ; undefined
     9d8:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     9dc:	4919270b 	.inst	0x4919270b ; undefined
     9e0:	12011113 	and	w19, w8, #0x8000000f
     9e4:	97184007 	bl	fffffffffc610a00 <__end+0xfffffc52a0a0>
     9e8:	13011942 	sbfx	w2, w10, #1, #6
     9ec:	34110000 	cbz	w0, 229ec <__bss_size+0x229e6>
     9f0:	3a0e0300 	adcs	w0, w24, w14
     9f4:	490b3b0b 	.inst	0x490b3b0b ; undefined
     9f8:	0b018813 	.inst	0x0b018813 ; undefined
     9fc:	00001802 	.inst	0x00001802 ; undefined
     a00:	55010b12 	.inst	0x55010b12 ; undefined
     a04:	00130117 	.inst	0x00130117 ; undefined
     a08:	011d1300 	.inst	0x011d1300 ; undefined
     a0c:	01521331 	.inst	0x01521331 ; undefined
     a10:	0b581755 	add	w21, w26, w24, lsr #5
     a14:	13010b59 	sbfx	w25, w26, #1, #2
     a18:	05140000 	mov	z0.b, p4/z, #0
     a1c:	02133100 	.inst	0x02133100 ; undefined
     a20:	15000017 	b	4000a7c <__bss_size+0x4000a76>
     a24:	1755010b 	b	fffffffffd540e50 <__end+0xfffffd45a4f0>
     a28:	34160000 	cbz	w0, 2ca28 <__bss_size+0x2ca22>
     a2c:	00133100 	.inst	0x00133100 ; undefined
     a30:	82891700 	.inst	0x82891700 ; undefined
     a34:	01110001 	.inst	0x01110001 ; undefined
     a38:	00001331 	.inst	0x00001331 ; undefined
     a3c:	49010118 	.inst	0x49010118 ; undefined
     a40:	00130113 	.inst	0x00130113 ; undefined
     a44:	00211900 	.inst	0x00211900 ; NYI
     a48:	0b2f1349 	add	w9, w26, w15, uxtb #4
     a4c:	2e1a0000 	ext	v0.8b, v0.8b, v26.8b, #0
     a50:	03193f01 	.inst	0x03193f01 ; undefined
     a54:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     a58:	2019270b 	.inst	0x2019270b ; undefined
     a5c:	0013010b 	.inst	0x0013010b ; undefined
     a60:	00051b00 	.inst	0x00051b00 ; undefined
     a64:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     a68:	13490b3b 	.inst	0x13490b3b ; undefined
     a6c:	341c0000 	cbz	w0, 38a6c <__bss_size+0x38a66>
     a70:	3a0e0300 	adcs	w0, w24, w14
     a74:	490b3b0b 	.inst	0x490b3b0b ; undefined
     a78:	1d000013 	.inst	0x1d000013 ; undefined
     a7c:	0e030034 	tbl	v20.8b, {v1.16b}, v3.8b
     a80:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     a84:	0b1c1349 	add	w9, w26, w28, lsl #4
     a88:	341e0000 	cbz	w0, 3ca88 <__bss_size+0x3ca82>
     a8c:	3a0e0300 	adcs	w0, w24, w14
     a90:	490b3b0b 	.inst	0x490b3b0b ; undefined
     a94:	00180213 	.inst	0x00180213 ; undefined
     a98:	012e1f00 	.inst	0x012e1f00 ; undefined
     a9c:	01111331 	.inst	0x01111331 ; undefined
     aa0:	18400712 	ldr	w18, 80b80 <__bss_size+0x80b7a>
     aa4:	01194297 	.inst	0x01194297 ; undefined
     aa8:	20000013 	.inst	0x20000013 ; undefined
     aac:	13310034 	.inst	0x13310034 ; undefined
     ab0:	00001702 	.inst	0x00001702 ; undefined
     ab4:	01828921 	.inst	0x01828921 ; undefined
     ab8:	95011100 	bl	4044eb8 <__bss_size+0x4044eb2>
     abc:	13311942 	.inst	0x13311942 ; undefined
     ac0:	2e220000 	uaddl	v0.8h, v0.8b, v2.8b
     ac4:	3c193f00 	str	b0, [x24, #-109]!
     ac8:	030e6e19 	.inst	0x030e6e19 ; undefined
     acc:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     ad0:	0000000b 	.inst	0x0000000b ; undefined
     ad4:	25011101 	cmpge	p1.b, p4/z, z8.b, #1
     ad8:	030b130e 	.inst	0x030b130e ; undefined
     adc:	110e1b0e 	add	w14, w24, #0x386
     ae0:	10071201 	adr	x1, ed20 <__bss_size+0xed1a>
     ae4:	02000017 	.inst	0x02000017 ; undefined
     ae8:	0b0b0024 	add	w4, w1, w11
     aec:	0e030b3e 	.inst	0x0e030b3e ; undefined
     af0:	24030000 	cmphs	p0.b, p0/z, z0.b, z3.b
     af4:	3e0b0b00 	.inst	0x3e0b0b00 ; undefined
     af8:	0008030b 	.inst	0x0008030b ; undefined
     afc:	00160400 	.inst	0x00160400 ; undefined
     b00:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     b04:	13490b3b 	.inst	0x13490b3b ; undefined
     b08:	35050000 	cbnz	w0, ab08 <__bss_size+0xab02>
     b0c:	00134900 	.inst	0x00134900 ; undefined
     b10:	00340600 	.inst	0x00340600 ; NYI
     b14:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     b18:	13490b3b 	.inst	0x13490b3b ; undefined
     b1c:	1802193f 	ldr	wzr, 4e40 <__bss_size+0x4e3a>
     b20:	0f070000 	.inst	0x0f070000 ; undefined
     b24:	490b0b00 	.inst	0x490b0b00 ; undefined
     b28:	08000013 	stxrb	w0, w19, [x0]
     b2c:	13490101 	.inst	0x13490101 ; undefined
     b30:	00001301 	.inst	0x00001301 ; undefined
     b34:	49002109 	.inst	0x49002109 ; undefined
     b38:	000b2f13 	.inst	0x000b2f13 ; undefined
     b3c:	012e0a00 	.inst	0x012e0a00 ; undefined
     b40:	0e03193f 	uzp1	v31.8b, v9.8b, v3.8b
     b44:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     b48:	01111927 	.inst	0x01111927 ; undefined
     b4c:	18400712 	ldr	w18, 80c2c <__bss_size+0x80c26>
     b50:	01194297 	.inst	0x01194297 ; undefined
     b54:	0b000013 	add	w19, w0, w0
     b58:	08030005 	stxrb	w3, w5, [x0]
     b5c:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     b60:	17021349 	b	fffffffffc085884 <__end+0xfffffbf9ef24>
     b64:	050c0000 	.inst	0x050c0000 ; undefined
     b68:	3a0e0300 	adcs	w0, w24, w14
     b6c:	490b3b0b 	.inst	0x490b3b0b ; undefined
     b70:	00170213 	.inst	0x00170213 ; undefined
     b74:	011d0d00 	.inst	0x011d0d00 ; undefined
     b78:	01111331 	.inst	0x01111331 ; undefined
     b7c:	0b580712 	add	w18, w24, w24, lsr #1
     b80:	13010b59 	sbfx	w25, w26, #1, #2
     b84:	050e0000 	.inst	0x050e0000 ; undefined
     b88:	02133100 	.inst	0x02133100 ; undefined
     b8c:	0f000017 	.inst	0x0f000017 ; undefined
     b90:	13310005 	.inst	0x13310005 ; undefined
     b94:	0b100000 	add	w0, w0, w16
     b98:	11133101 	add	w1, w8, #0x4cc
     b9c:	00071201 	.inst	0x00071201 ; undefined
     ba0:	00341100 	.inst	0x00341100 ; NYI
     ba4:	00001331 	.inst	0x00001331 ; undefined
     ba8:	01828912 	.inst	0x01828912 ; undefined
     bac:	31011100 	adds	w0, w8, #0x44
     bb0:	13000013 	sbfx	w19, w0, #0, #1
     bb4:	1331011d 	.inst	0x1331011d ; undefined
     bb8:	07120111 	.inst	0x07120111 ; undefined
     bbc:	0b590b58 	add	w24, w26, w25, lsr #2
     bc0:	0b140000 	add	w0, w0, w20
     bc4:	55133101 	.inst	0x55133101 ; undefined
     bc8:	15000017 	b	4000c24 <__bss_size+0x4000c1e>
     bcc:	01018289 	.inst	0x01018289 ; undefined
     bd0:	13310111 	.inst	0x13310111 ; undefined
     bd4:	8a160000 	and	x0, x0, x22
     bd8:	02000182 	.inst	0x02000182 ; undefined
     bdc:	18429118 	ldr	w24, 85dfc <__bss_size+0x85df6>
     be0:	89170000 	.inst	0x89170000 ; undefined
     be4:	11010182 	add	w2, w12, #0x40
     be8:	01133101 	.inst	0x01133101 ; undefined
     bec:	18000013 	ldr	w19, bec <__bss_size+0xbe6>
     bf0:	08030034 	stxrb	w3, w20, [x1]
     bf4:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     bf8:	18021349 	ldr	w9, 4e60 <__bss_size+0x4e5a>
     bfc:	34190000 	cbz	w0, 32bfc <__bss_size+0x32bf6>
     c00:	3a080300 	adcs	w0, w24, w8
     c04:	490b3b0b 	.inst	0x490b3b0b ; undefined
     c08:	00170213 	.inst	0x00170213 ; undefined
     c0c:	010b1a00 	.inst	0x010b1a00 ; undefined
     c10:	00001755 	.inst	0x00001755 ; undefined
     c14:	0300341b 	.inst	0x0300341b ; undefined
     c18:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     c1c:	1c13490b 	ldr	s11, 2753c <__bss_size+0x27536>
     c20:	1c00000b 	ldr	s11, c20 <__bss_size+0xc1a>
     c24:	1755010b 	b	fffffffffd541050 <__end+0xfffffd45a6f0>
     c28:	00001301 	.inst	0x00001301 ; undefined
     c2c:	3f012e1d 	.inst	0x3f012e1d ; undefined
     c30:	3a0e0319 	adcs	w25, w24, w14
     c34:	270b3b0b 	.inst	0x270b3b0b ; undefined
     c38:	010b2019 	.inst	0x010b2019 ; undefined
     c3c:	1e000013 	.inst	0x1e000013 ; undefined
     c40:	08030005 	stxrb	w3, w5, [x0]
     c44:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     c48:	00001349 	.inst	0x00001349 ; undefined
     c4c:	0300051f 	.inst	0x0300051f ; undefined
     c50:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     c54:	0013490b 	.inst	0x0013490b ; undefined
     c58:	010b2000 	.inst	0x010b2000 ; undefined
     c5c:	34210000 	cbz	w0, 42c5c <__bss_size+0x42c56>
     c60:	3a0e0300 	adcs	w0, w24, w14
     c64:	490b3b0b 	.inst	0x490b3b0b ; undefined
     c68:	22000013 	.inst	0x22000013 ; undefined
     c6c:	193f002e 	.inst	0x193f002e ; undefined
     c70:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     c74:	0b200b3b 	add	w27, w25, w0, uxtb #2
     c78:	34230000 	cbz	w0, 46c78 <__bss_size+0x46c72>
     c7c:	3a080300 	adcs	w0, w24, w8
     c80:	490b3b0b 	.inst	0x490b3b0b ; undefined
     c84:	24000013 	cmphi	p3.b, p0/z, z0.b, z0.b
     c88:	1331011d 	.inst	0x1331011d ; undefined
     c8c:	17550152 	b	fffffffffd5411d4 <__end+0xfffffd45a874>
     c90:	0b590b58 	add	w24, w26, w25, lsr #2
     c94:	05250000 	ext	z0.b, z0.b, z0.b, #40
     c98:	1c133100 	ldr	s0, 272b8 <__bss_size+0x272b2>
     c9c:	2600000b 	.inst	0x2600000b ; undefined
     ca0:	0e030034 	tbl	v20.8b, {v1.16b}, v3.8b
     ca4:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     ca8:	17021349 	b	fffffffffc0859cc <__end+0xfffffbf9f06c>
     cac:	2e270000 	uaddl	v0.8h, v0.8b, v7.8b
     cb0:	11133101 	add	w1, w8, #0x4cc
     cb4:	40071201 	.inst	0x40071201 ; undefined
     cb8:	19429718 	.inst	0x19429718 ; undefined
     cbc:	00001301 	.inst	0x00001301 ; undefined
     cc0:	31003428 	adds	w8, w1, #0xd
     cc4:	00170213 	.inst	0x00170213 ; undefined
     cc8:	010b2900 	.inst	0x010b2900 ; undefined
     ccc:	07120111 	.inst	0x07120111 ; undefined
     cd0:	2e2a0000 	uaddl	v0.8h, v0.8b, v10.8b
     cd4:	3c193f00 	str	b0, [x24, #-109]!
     cd8:	030e6e19 	.inst	0x030e6e19 ; undefined
     cdc:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     ce0:	0000000b 	.inst	0x0000000b ; undefined
     ce4:	25011101 	cmpge	p1.b, p4/z, z8.b, #1
     ce8:	030b130e 	.inst	0x030b130e ; undefined
     cec:	110e1b0e 	add	w14, w24, #0x386
     cf0:	10071201 	adr	x1, ef30 <__bss_size+0xef2a>
     cf4:	02000017 	.inst	0x02000017 ; undefined
     cf8:	0b0b0024 	add	w4, w1, w11
     cfc:	0e030b3e 	.inst	0x0e030b3e ; undefined
     d00:	24030000 	cmphs	p0.b, p0/z, z0.b, z3.b
     d04:	3e0b0b00 	.inst	0x3e0b0b00 ; undefined
     d08:	0008030b 	.inst	0x0008030b ; undefined
     d0c:	00160400 	.inst	0x00160400 ; undefined
     d10:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     d14:	13490b3b 	.inst	0x13490b3b ; undefined
     d18:	2e050000 	ext	v0.8b, v0.8b, v5.8b, #0
     d1c:	03193f01 	.inst	0x03193f01 ; undefined
     d20:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     d24:	11134905 	add	w5, w8, #0x4d2
     d28:	40071201 	.inst	0x40071201 ; undefined
     d2c:	19429718 	.inst	0x19429718 ; undefined
     d30:	00001301 	.inst	0x00001301 ; undefined
     d34:	03003406 	.inst	0x03003406 ; undefined
     d38:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     d3c:	88134905 	stxr	w19, w5, [x8]
     d40:	18020b01 	ldr	w1, 4ea0 <__bss_size+0x4e9a>
     d44:	1d070000 	.inst	0x1d070000 ; undefined
     d48:	52133101 	eor	w1, w8, #0x3ffe000
     d4c:	58175501 	ldr	x1, 2f7ec <__bss_size+0x2f7e6>
     d50:	0105590b 	.inst	0x0105590b ; undefined
     d54:	08000013 	stxrb	w0, w19, [x0]
     d58:	13310005 	.inst	0x13310005 ; undefined
     d5c:	00001702 	.inst	0x00001702 ; undefined
     d60:	55010b09 	.inst	0x55010b09 ; undefined
     d64:	0a000017 	and	w23, w0, w0
     d68:	13310034 	.inst	0x13310034 ; undefined
     d6c:	890b0000 	.inst	0x890b0000 ; undefined
     d70:	11010182 	add	w2, w12, #0x40
     d74:	00133101 	.inst	0x00133101 ; undefined
     d78:	828a0c00 	.inst	0x828a0c00 ; undefined
     d7c:	18020001 	ldr	w1, 4d7c <__bss_size+0x4d76>
     d80:	00184291 	.inst	0x00184291 ; undefined
     d84:	001d0d00 	.inst	0x001d0d00 ; undefined
     d88:	01521331 	.inst	0x01521331 ; undefined
     d8c:	0b581755 	add	w21, w26, w24, lsr #5
     d90:	00000559 	.inst	0x00000559 ; undefined
     d94:	4901010e 	.inst	0x4901010e ; undefined
     d98:	00130113 	.inst	0x00130113 ; undefined
     d9c:	00210f00 	.inst	0x00210f00 ; NYI
     da0:	0b2f1349 	add	w9, w26, w15, uxtb #4
     da4:	2e100000 	ext	v0.8b, v0.8b, v16.8b, #0
     da8:	03193f01 	.inst	0x03193f01 ; undefined
     dac:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     db0:	12011105 	and	w5, w8, #0x8000000f
     db4:	97184007 	bl	fffffffffc610dd0 <__end+0xfffffc52a470>
     db8:	13011942 	sbfx	w2, w10, #1, #6
     dbc:	0b110000 	add	w0, w0, w17
     dc0:	01175501 	.inst	0x01175501 ; undefined
     dc4:	12000013 	and	w19, w0, #0x1
     dc8:	08030034 	stxrb	w3, w20, [x1]
     dcc:	053b0b3a 	ext	z26.b, z26.b, z25.b, #218
     dd0:	00001349 	.inst	0x00001349 ; undefined
     dd4:	03003413 	.inst	0x03003413 ; undefined
     dd8:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     ddc:	02134905 	.inst	0x02134905 ; undefined
     de0:	14000018 	b	e40 <__bss_size+0xe3a>
     de4:	08030034 	stxrb	w3, w20, [x1]
     de8:	053b0b3a 	ext	z26.b, z26.b, z25.b, #218
     dec:	17021349 	b	fffffffffc085b10 <__end+0xfffffbf9f1b0>
     df0:	1d150000 	.inst	0x1d150000 ; undefined
     df4:	52133101 	eor	w1, w8, #0x3ffe000
     df8:	58175501 	ldr	x1, 2f898 <__bss_size+0x2f892>
     dfc:	010b590b 	.inst	0x010b590b ; undefined
     e00:	16000013 	b	fffffffff8000e4c <__end+0xfffff7f1a4ec>
     e04:	1331001d 	.inst	0x1331001d ; undefined
     e08:	07120111 	.inst	0x07120111 ; undefined
     e0c:	0b590b58 	add	w24, w26, w25, lsr #2
     e10:	89170000 	.inst	0x89170000 ; undefined
     e14:	11010182 	add	w2, w12, #0x40
     e18:	01133101 	.inst	0x01133101 ; undefined
     e1c:	18000013 	ldr	w19, e1c <__bss_size+0xe16>
     e20:	00018289 	.inst	0x00018289 ; undefined
     e24:	13310111 	.inst	0x13310111 ; undefined
     e28:	2e190000 	ext	v0.8b, v0.8b, v25.8b, #0
     e2c:	03193f01 	.inst	0x03193f01 ; undefined
     e30:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     e34:	11192705 	add	w5, w24, #0x649
     e38:	40071201 	.inst	0x40071201 ; undefined
     e3c:	19429718 	.inst	0x19429718 ; undefined
     e40:	00001301 	.inst	0x00001301 ; undefined
     e44:	0300051a 	.inst	0x0300051a ; undefined
     e48:	3b0b3a08 	.inst	0x3b0b3a08 ; undefined
     e4c:	02134905 	.inst	0x02134905 ; undefined
     e50:	1b000017 	madd	w23, w0, w0, w0
     e54:	01018289 	.inst	0x01018289 ; undefined
     e58:	42950111 	.inst	0x42950111 ; undefined
     e5c:	01133119 	.inst	0x01133119 ; undefined
     e60:	1c000013 	ldr	s19, e60 <__bss_size+0xe5a>
     e64:	193f012e 	.inst	0x193f012e ; undefined
     e68:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     e6c:	19270b3b 	.inst	0x19270b3b ; undefined
     e70:	07120111 	.inst	0x07120111 ; undefined
     e74:	42971840 	.inst	0x42971840 ; undefined
     e78:	00130119 	.inst	0x00130119 ; undefined
     e7c:	00051d00 	.inst	0x00051d00 ; undefined
     e80:	0b3a0803 	add	w3, w0, w26, uxtb #2
     e84:	13490b3b 	.inst	0x13490b3b ; undefined
     e88:	00001702 	.inst	0x00001702 ; undefined
     e8c:	0300341e 	.inst	0x0300341e ; undefined
     e90:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     e94:	8813490b 	stxr	w19, w11, [x8]
     e98:	18020b01 	ldr	w1, 4ff8 <__bss_size+0x4ff2>
     e9c:	341f0000 	cbz	w0, 3ee9c <__bss_size+0x3ee96>
     ea0:	3a0e0300 	adcs	w0, w24, w14
     ea4:	49053b0b 	.inst	0x49053b0b ; undefined
     ea8:	00170213 	.inst	0x00170213 ; undefined
     eac:	012e2000 	.inst	0x012e2000 ; undefined
     eb0:	0e03193f 	uzp1	v31.8b, v9.8b, v3.8b
     eb4:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     eb8:	0b201927 	.inst	0x0b201927 ; undefined
     ebc:	00001301 	.inst	0x00001301 ; undefined
     ec0:	03000521 	.inst	0x03000521 ; undefined
     ec4:	3b0b3a08 	.inst	0x3b0b3a08 ; undefined
     ec8:	0013490b 	.inst	0x0013490b ; undefined
     ecc:	00342200 	.inst	0x00342200 ; NYI
     ed0:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     ed4:	13490b3b 	.inst	0x13490b3b ; undefined
     ed8:	000b0188 	.inst	0x000b0188 ; undefined
     edc:	012e2300 	.inst	0x012e2300 ; undefined
     ee0:	0e03193f 	uzp1	v31.8b, v9.8b, v3.8b
     ee4:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     ee8:	01111349 	.inst	0x01111349 ; undefined
     eec:	18400712 	ldr	w18, 80fcc <__bss_size+0x80fc6>
     ef0:	01194297 	.inst	0x01194297 ; undefined
     ef4:	24000013 	cmphi	p3.b, p0/z, z0.b, z0.b
     ef8:	1331001d 	.inst	0x1331001d ; undefined
     efc:	17550152 	b	fffffffffd541444 <__end+0xfffffd45aae4>
     f00:	0b590b58 	add	w24, w26, w25, lsr #2
     f04:	2e250000 	uaddl	v0.8h, v0.8b, v5.8b
     f08:	03193f01 	.inst	0x03193f01 ; undefined
     f0c:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     f10:	1201110b 	and	w11, w8, #0x8000000f
     f14:	97184007 	bl	fffffffffc610f30 <__end+0xfffffc52a5d0>
     f18:	13011942 	sbfx	w2, w10, #1, #6
     f1c:	2e260000 	uaddl	v0.8h, v0.8b, v6.8b
     f20:	03193f00 	.inst	0x03193f00 ; undefined
     f24:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
     f28:	000b200b 	.inst	0x000b200b ; undefined
     f2c:	00052700 	.inst	0x00052700 ; undefined
     f30:	0b3a0e03 	add	w3, w16, w26, uxtb #3
     f34:	13490b3b 	.inst	0x13490b3b ; undefined
     f38:	34280000 	cbz	w0, 50f38 <__bss_size+0x50f32>
     f3c:	3a0e0300 	adcs	w0, w24, w14
     f40:	490b3b0b 	.inst	0x490b3b0b ; undefined
     f44:	29000013 	stp	w19, w0, [x0]
     f48:	0b0b000f 	add	w15, w0, w11
     f4c:	00001349 	.inst	0x00001349 ; undefined
     f50:	31012e2a 	adds	w10, w17, #0x4b
     f54:	12011113 	and	w19, w8, #0x8000000f
     f58:	97184007 	bl	fffffffffc610f74 <__end+0xfffffc52a614>
     f5c:	13011942 	sbfx	w2, w10, #1, #6
     f60:	342b0000 	cbz	w0, 56f60 <__bss_size+0x56f5a>
     f64:	02133100 	.inst	0x02133100 ; undefined
     f68:	2c000017 	stnp	s23, s0, [x0]
     f6c:	1331002e 	.inst	0x1331002e ; undefined
     f70:	07120111 	.inst	0x07120111 ; undefined
     f74:	42971840 	.inst	0x42971840 ; undefined
     f78:	2d000019 	stp	s25, s0, [x0]
     f7c:	13310034 	.inst	0x13310034 ; undefined
     f80:	00001802 	.inst	0x00001802 ; undefined
     f84:	3f002e2e 	.inst	0x3f002e2e ; undefined
     f88:	6e193c19 	mov	v25.b[12], v0.b[7]
     f8c:	3a0e030e 	adcs	w14, w24, w14
     f90:	000b3b0b 	.inst	0x000b3b0b ; undefined
     f94:	11010000 	add	w0, w0, #0x40
     f98:	130e2501 	sbfiz	w1, w8, #18, #10
     f9c:	1b0e030b 	madd	w11, w24, w14, w0
     fa0:	1201110e 	and	w14, w8, #0x8000000f
     fa4:	00171007 	.inst	0x00171007 ; undefined
     fa8:	00240200 	.inst	0x00240200 ; NYI
     fac:	0b3e0b0b 	add	w11, w24, w30, uxtb #2
     fb0:	00000e03 	.inst	0x00000e03 ; undefined
     fb4:	0b002403 	add	w3, w0, w0, lsl #9
     fb8:	030b3e0b 	.inst	0x030b3e0b ; undefined
     fbc:	04000008 	add	z8.b, p0/m, z8.b, z0.b
     fc0:	0e030016 	tbl	v22.8b, {v0.16b}, v3.8b
     fc4:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
     fc8:	00001349 	.inst	0x00001349 ; undefined
     fcc:	3f002e05 	.inst	0x3f002e05 ; undefined
     fd0:	3a0e0319 	adcs	w25, w24, w14
     fd4:	490b3b0b 	.inst	0x490b3b0b ; undefined
     fd8:	12011113 	and	w19, w8, #0x8000000f
     fdc:	97184007 	bl	fffffffffc610ff8 <__end+0xfffffc52a698>
     fe0:	00001942 	.inst	0x00001942 ; undefined
     fe4:	3f002e06 	.inst	0x3f002e06 ; undefined
     fe8:	3a0e0319 	adcs	w25, w24, w14
     fec:	110b3b0b 	add	w11, w24, #0x2ce
     ff0:	40071201 	.inst	0x40071201 ; undefined
     ff4:	19429718 	.inst	0x19429718 ; undefined
     ff8:	01000000 	.inst	0x01000000 ; undefined
     ffc:	0e250111 	saddl	v17.8h, v8.8b, v5.8b
    1000:	0e030b13 	.inst	0x0e030b13 ; undefined
    1004:	01110e1b 	.inst	0x01110e1b ; undefined
    1008:	17100712 	b	fffffffffc402c50 <__end+0xfffffc31c2f0>
    100c:	24020000 	cmphs	p0.b, p0/z, z0.b, z2.b
    1010:	3e0b0b00 	.inst	0x3e0b0b00 ; undefined
    1014:	000e030b 	.inst	0x000e030b ; undefined
    1018:	00240300 	.inst	0x00240300 ; NYI
    101c:	0b3e0b0b 	add	w11, w24, w30, uxtb #2
    1020:	00000803 	.inst	0x00000803 ; undefined
    1024:	03001604 	.inst	0x03001604 ; undefined
    1028:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
    102c:	0013490b 	.inst	0x0013490b ; undefined
    1030:	002e0500 	.inst	0x002e0500 ; NYI
    1034:	0e03193f 	uzp1	v31.8b, v9.8b, v3.8b
    1038:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
    103c:	01111349 	.inst	0x01111349 ; undefined
    1040:	18400712 	ldr	w18, 81120 <__bss_size+0x8111a>
    1044:	00194297 	.inst	0x00194297 ; undefined
    1048:	002e0600 	.inst	0x002e0600 ; NYI
    104c:	0e03193f 	uzp1	v31.8b, v9.8b, v3.8b
    1050:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
    1054:	07120111 	.inst	0x07120111 ; undefined
    1058:	42971840 	.inst	0x42971840 ; undefined
    105c:	07000019 	.inst	0x07000019 ; undefined
    1060:	193f012e 	.inst	0x193f012e ; undefined
    1064:	0b3a0e03 	add	w3, w16, w26, uxtb #3
    1068:	19270b3b 	.inst	0x19270b3b ; undefined
    106c:	07120111 	.inst	0x07120111 ; undefined
    1070:	42971840 	.inst	0x42971840 ; undefined
    1074:	08000019 	stxrb	w0, w25, [x0]
    1078:	0e030005 	tbl	v5.8b, {v0.16b}, v3.8b
    107c:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
    1080:	17021349 	b	fffffffffc085da4 <__end+0xfffffbf9f444>
    1084:	01000000 	.inst	0x01000000 ; undefined
    1088:	0e250111 	saddl	v17.8h, v8.8b, v5.8b
    108c:	0e030b13 	.inst	0x0e030b13 ; undefined
    1090:	01110e1b 	.inst	0x01110e1b ; undefined
    1094:	17100712 	b	fffffffffc402cdc <__end+0xfffffc31c37c>
    1098:	24020000 	cmphs	p0.b, p0/z, z0.b, z2.b
    109c:	3e0b0b00 	.inst	0x3e0b0b00 ; undefined
    10a0:	000e030b 	.inst	0x000e030b ; undefined
    10a4:	00240300 	.inst	0x00240300 ; NYI
    10a8:	0b3e0b0b 	add	w11, w24, w30, uxtb #2
    10ac:	00000803 	.inst	0x00000803 ; undefined
    10b0:	03001604 	.inst	0x03001604 ; undefined
    10b4:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
    10b8:	0013490b 	.inst	0x0013490b ; undefined
    10bc:	00350500 	.inst	0x00350500 ; NYI
    10c0:	00001349 	.inst	0x00001349 ; undefined
    10c4:	03003406 	.inst	0x03003406 ; undefined
    10c8:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
    10cc:	3f13490b 	.inst	0x3f13490b ; undefined
    10d0:	00180219 	.inst	0x00180219 ; undefined
    10d4:	000f0700 	.inst	0x000f0700 ; undefined
    10d8:	13490b0b 	.inst	0x13490b0b ; undefined
    10dc:	13080000 	sbfiz	w0, w0, #24, #1
    10e0:	0b0e0301 	add	w1, w24, w14
    10e4:	3b0b3a0b 	.inst	0x3b0b3a0b ; undefined
    10e8:	0013010b 	.inst	0x0013010b ; undefined
    10ec:	000d0900 	.inst	0x000d0900 ; undefined
    10f0:	0b3a0e03 	add	w3, w16, w26, uxtb #3
    10f4:	13490b3b 	.inst	0x13490b3b ; undefined
    10f8:	00000b38 	.inst	0x00000b38 ; undefined
    10fc:	4901010a 	.inst	0x4901010a ; undefined
    1100:	00130113 	.inst	0x00130113 ; undefined
    1104:	00210b00 	.inst	0x00210b00 ; NYI
    1108:	0b2f1349 	add	w9, w26, w15, uxtb #4
    110c:	2e0c0000 	ext	v0.8b, v0.8b, v12.8b, #0
    1110:	03193f00 	.inst	0x03193f00 ; undefined
    1114:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
    1118:	1201110b 	and	w11, w8, #0x8000000f
    111c:	97184007 	bl	fffffffffc611138 <__end+0xfffffc52a7d8>
    1120:	00001942 	.inst	0x00001942 ; undefined
    1124:	3f012e0d 	.inst	0x3f012e0d ; undefined
    1128:	3a0e0319 	adcs	w25, w24, w14
    112c:	110b3b0b 	add	w11, w24, #0x2ce
    1130:	40071201 	.inst	0x40071201 ; undefined
    1134:	19429718 	.inst	0x19429718 ; undefined
    1138:	00001301 	.inst	0x00001301 ; undefined
    113c:	0182890e 	.inst	0x0182890e ; undefined
    1140:	31011101 	adds	w1, w8, #0x44
    1144:	00130113 	.inst	0x00130113 ; undefined
    1148:	828a0f00 	.inst	0x828a0f00 ; undefined
    114c:	18020001 	ldr	w1, 514c <__bss_size+0x5146>
    1150:	00184291 	.inst	0x00184291 ; undefined
    1154:	82891000 	.inst	0x82891000 ; undefined
    1158:	01110101 	.inst	0x01110101 ; undefined
    115c:	00001331 	.inst	0x00001331 ; undefined
    1160:	11010b11 	add	w17, w24, #0x42
    1164:	00071201 	.inst	0x00071201 ; undefined
    1168:	00341200 	.inst	0x00341200 ; NYI
    116c:	0b3a0e03 	add	w3, w16, w26, uxtb #3
    1170:	13490b3b 	.inst	0x13490b3b ; undefined
    1174:	00001802 	.inst	0x00001802 ; undefined
    1178:	01828913 	.inst	0x01828913 ; undefined
    117c:	31011100 	adds	w0, w8, #0x44
    1180:	14000013 	b	11cc <__bss_size+0x11c6>
    1184:	193f002e 	.inst	0x193f002e ; undefined
    1188:	0e6e193c 	.inst	0x0e6e193c ; undefined
    118c:	0b3a0e03 	add	w3, w16, w26, uxtb #3
    1190:	00000b3b 	.inst	0x00000b3b ; undefined
    1194:	01110100 	.inst	0x01110100 ; undefined
    1198:	0b130e25 	add	w5, w17, w19, lsl #3
    119c:	0e1b0e03 	dup	v3.8b, w16
    11a0:	07120111 	.inst	0x07120111 ; undefined
    11a4:	00001710 	.inst	0x00001710 ; undefined
    11a8:	0b002402 	add	w2, w0, w0, lsl #9
    11ac:	030b3e0b 	.inst	0x030b3e0b ; undefined
    11b0:	0300000e 	.inst	0x0300000e ; undefined
    11b4:	0b0b0024 	add	w4, w1, w11
    11b8:	08030b3e 	stxrb	w3, w30, [x25]
    11bc:	16040000 	b	fffffffff81011bc <__end+0xfffff801a85c>
    11c0:	3a0e0300 	adcs	w0, w24, w14
    11c4:	490b3b0b 	.inst	0x490b3b0b ; undefined
    11c8:	05000013 	orr	z19.s, z19.s, #0x1
    11cc:	0e030034 	tbl	v20.8b, {v1.16b}, v3.8b
    11d0:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
    11d4:	193f1349 	.inst	0x193f1349 ; undefined
    11d8:	0000193c 	.inst	0x0000193c ; undefined
    11dc:	03003406 	.inst	0x03003406 ; undefined
    11e0:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
    11e4:	3f13490b 	.inst	0x3f13490b ; undefined
    11e8:	00180219 	.inst	0x00180219 ; undefined
    11ec:	012e0700 	.inst	0x012e0700 ; undefined
    11f0:	0e03193f 	uzp1	v31.8b, v9.8b, v3.8b
    11f4:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
    11f8:	07120111 	.inst	0x07120111 ; undefined
    11fc:	42971840 	.inst	0x42971840 ; undefined
    1200:	00130119 	.inst	0x00130119 ; undefined
    1204:	011d0800 	.inst	0x011d0800 ; undefined
    1208:	01521331 	.inst	0x01521331 ; undefined
    120c:	0b581755 	add	w21, w26, w24, lsr #5
    1210:	13010b59 	sbfx	w25, w26, #1, #2
    1214:	0b090000 	add	w0, w0, w9
    1218:	00175501 	.inst	0x00175501 ; undefined
    121c:	00340a00 	.inst	0x00340a00 ; NYI
    1220:	00001331 	.inst	0x00001331 ; undefined
    1224:	0182890b 	.inst	0x0182890b ; undefined
    1228:	31011100 	adds	w0, w8, #0x44
    122c:	0c000013 	st4	{v19.8b-v22.8b}, [x0]
    1230:	193f012e 	.inst	0x193f012e ; undefined
    1234:	0b3a0e03 	add	w3, w16, w26, uxtb #3
    1238:	19270b3b 	.inst	0x19270b3b ; undefined
    123c:	01111349 	.inst	0x01111349 ; undefined
    1240:	18400712 	ldr	w18, 81320 <__bss_size+0x8131a>
    1244:	01194297 	.inst	0x01194297 ; undefined
    1248:	0d000013 	st1	{v19.b}[0], [x0]
    124c:	0e030005 	tbl	v5.8b, {v0.16b}, v3.8b
    1250:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
    1254:	17021349 	b	fffffffffc085f78 <__end+0xfffffbf9f618>
    1258:	050e0000 	.inst	0x050e0000 ; undefined
    125c:	3a080300 	adcs	w0, w24, w8
    1260:	490b3b0b 	.inst	0x490b3b0b ; undefined
    1264:	00170213 	.inst	0x00170213 ; undefined
    1268:	00340f00 	.inst	0x00340f00 ; NYI
    126c:	0b3a0e03 	add	w3, w16, w26, uxtb #3
    1270:	13490b3b 	.inst	0x13490b3b ; undefined
    1274:	00001702 	.inst	0x00001702 ; undefined
    1278:	31000510 	adds	w16, w8, #0x1
    127c:	11000013 	add	w19, w0, #0x0
    1280:	01018289 	.inst	0x01018289 ; undefined
    1284:	13310111 	.inst	0x13310111 ; undefined
    1288:	00001301 	.inst	0x00001301 ; undefined
    128c:	01828a12 	.inst	0x01828a12 ; undefined
    1290:	91180200 	add	x0, x16, #0x600
    1294:	00001842 	.inst	0x00001842 ; undefined
    1298:	01828913 	.inst	0x01828913 ; undefined
    129c:	31011101 	adds	w1, w8, #0x44
    12a0:	14000013 	b	12ec <__bss_size+0x12e6>
    12a4:	193f012e 	.inst	0x193f012e ; undefined
    12a8:	0b3a0e03 	add	w3, w16, w26, uxtb #3
    12ac:	0b200b3b 	add	w27, w25, w0, uxtb #2
    12b0:	00001301 	.inst	0x00001301 ; undefined
    12b4:	03003415 	.inst	0x03003415 ; undefined
    12b8:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
    12bc:	0013490b 	.inst	0x0013490b ; undefined
    12c0:	00051600 	.inst	0x00051600 ; undefined
    12c4:	17021331 	b	fffffffffc085f88 <__end+0xfffffbf9f628>
    12c8:	1d170000 	.inst	0x1d170000 ; undefined
    12cc:	11133101 	add	w1, w8, #0x4cc
    12d0:	58071201 	ldr	x1, f510 <__bss_size+0xf50a>
    12d4:	010b590b 	.inst	0x010b590b ; undefined
    12d8:	18000013 	ldr	w19, 12d8 <__bss_size+0x12d2>
    12dc:	0111010b 	.inst	0x0111010b ; undefined
    12e0:	00000712 	.inst	0x00000712 ; undefined
    12e4:	01828919 	.inst	0x01828919 ; undefined
    12e8:	95011101 	bl	40456ec <__bss_size+0x40456e6>
    12ec:	13311942 	.inst	0x13311942 ; undefined
    12f0:	2e1a0000 	ext	v0.8b, v0.8b, v26.8b, #0
    12f4:	03193f01 	.inst	0x03193f01 ; undefined
    12f8:	3b0b3a0e 	.inst	0x3b0b3a0e ; undefined
    12fc:	4919270b 	.inst	0x4919270b ; undefined
    1300:	010b2013 	.inst	0x010b2013 ; undefined
    1304:	1b000013 	madd	w19, w0, w0, w0
    1308:	0e030005 	tbl	v5.8b, {v0.16b}, v3.8b
    130c:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
    1310:	00001349 	.inst	0x00001349 ; undefined
    1314:	31012e1c 	adds	w28, w16, #0x4b
    1318:	12011113 	and	w19, w8, #0x8000000f
    131c:	97184007 	bl	fffffffffc611338 <__end+0xfffffc52a9d8>
    1320:	13011942 	sbfx	w2, w10, #1, #6
    1324:	341d0000 	cbz	w0, 3b324 <__bss_size+0x3b31e>
    1328:	02133100 	.inst	0x02133100 ; undefined
    132c:	1e000017 	.inst	0x1e000017 ; undefined
    1330:	13310034 	.inst	0x13310034 ; undefined
    1334:	00001802 	.inst	0x00001802 ; undefined
    1338:	3100341f 	cmn	w0, #0xd
    133c:	00051c13 	.inst	0x00051c13 ; undefined
    1340:	002e2000 	.inst	0x002e2000 ; NYI
    1344:	193c193f 	.inst	0x193c193f ; undefined
    1348:	0e030e6e 	dup	v14.8b, w19
    134c:	0b3b0b3a 	add	w26, w25, w27, uxtb #2
    1350:	01000000 	.inst	0x01000000 ; undefined
    1354:	06100011 	.inst	0x06100011 ; undefined
    1358:	01120111 	.inst	0x01120111 ; undefined
    135c:	0e1b0e03 	dup	v3.8b, w16
    1360:	05130e25 	mov	z5.b, p3/z, #113
    1364:	01000000 	.inst	0x01000000 ; undefined
    1368:	06100011 	.inst	0x06100011 ; undefined
    136c:	01120111 	.inst	0x01120111 ; undefined
    1370:	0e1b0e03 	dup	v3.8b, w16
    1374:	05130e25 	mov	z5.b, p3/z, #113
    1378:	01000000 	.inst	0x01000000 ; undefined
    137c:	06100011 	.inst	0x06100011 ; undefined
    1380:	01120111 	.inst	0x01120111 ; undefined
    1384:	0e1b0e03 	dup	v3.8b, w16
    1388:	05130e25 	mov	z5.b, p3/z, #113
    138c:	01000000 	.inst	0x01000000 ; undefined
    1390:	06100011 	.inst	0x06100011 ; undefined
    1394:	01120111 	.inst	0x01120111 ; undefined
    1398:	0e1b0e03 	dup	v3.8b, w16
    139c:	05130e25 	mov	z5.b, p3/z, #113
    13a0:	01000000 	.inst	0x01000000 ; undefined
    13a4:	06100011 	.inst	0x06100011 ; undefined
    13a8:	01120111 	.inst	0x01120111 ; undefined
    13ac:	0e1b0e03 	dup	v3.8b, w16
    13b0:	05130e25 	mov	z5.b, p3/z, #113
    13b4:	Address 0x00000000000013b4 is out of bounds.


Disassembly of section .debug_loc:

0000000000000000 <.debug_loc>:
       0:	00000d90 	.inst	0x00000d90 ; undefined
       4:	00000000 	.inst	0x00000000 ; undefined
       8:	00000ddb 	.inst	0x00000ddb ; undefined
       c:	00000000 	.inst	0x00000000 ; undefined
      10:	db500001 	.inst	0xdb500001 ; undefined
      14:	0000000d 	.inst	0x0000000d ; undefined
      18:	e4000000 	.inst	0xe4000000 ; undefined
      1c:	0000000d 	.inst	0x0000000d ; undefined
      20:	04000000 	add	z0.b, p0/m, z0.b, z0.b
      24:	5001f300 	adr	x0, 3e86 <__bss_size+0x3e80>
      28:	0000009f 	.inst	0x0000009f ; undefined
	...
      38:	0005f000 	.inst	0x0005f000 ; undefined
      3c:	00000000 	.inst	0x00000000 ; undefined
      40:	00062000 	.inst	0x00062000 ; undefined
      44:	00000000 	.inst	0x00000000 ; undefined
      48:	50000100 	adr	x0, 6a <__bss_size+0x64>
      4c:	00000620 	.inst	0x00000620 ; undefined
      50:	00000000 	.inst	0x00000000 ; undefined
      54:	00000628 	.inst	0x00000628 ; undefined
      58:	00000000 	.inst	0x00000000 ; undefined
      5c:	01890003 	.inst	0x01890003 ; undefined
      60:	0006449f 	.inst	0x0006449f ; undefined
      64:	00000000 	.inst	0x00000000 ; undefined
      68:	00064c00 	.inst	0x00064c00 ; undefined
      6c:	00000000 	.inst	0x00000000 ; undefined
      70:	89000300 	.inst	0x89000300 ; undefined
      74:	06709f01 	.inst	0x06709f01 ; undefined
      78:	00000000 	.inst	0x00000000 ; undefined
      7c:	06900000 	.inst	0x06900000 ; undefined
      80:	00000000 	.inst	0x00000000 ; undefined
      84:	00010000 	.inst	0x00010000 ; undefined
      88:	00069054 	.inst	0x00069054 ; undefined
      8c:	00000000 	.inst	0x00000000 ; undefined
      90:	0006e400 	.inst	0x0006e400 ; undefined
      94:	00000000 	.inst	0x00000000 ; undefined
      98:	89000300 	.inst	0x89000300 ; undefined
      9c:	06e89f02 	.inst	0x06e89f02 ; undefined
      a0:	00000000 	.inst	0x00000000 ; undefined
      a4:	07800000 	.inst	0x07800000 ; undefined
      a8:	00000000 	.inst	0x00000000 ; undefined
      ac:	00010000 	.inst	0x00010000 ; undefined
      b0:	00078c69 	.inst	0x00078c69 ; undefined
      b4:	00000000 	.inst	0x00000000 ; undefined
      b8:	00079800 	.inst	0x00079800 ; undefined
      bc:	00000000 	.inst	0x00000000 ; undefined
      c0:	89000300 	.inst	0x89000300 ; undefined
      c4:	07989f03 	.inst	0x07989f03 ; undefined
      c8:	00000000 	.inst	0x00000000 ; undefined
      cc:	07d00000 	.inst	0x07d00000 ; undefined
      d0:	00000000 	.inst	0x00000000 ; undefined
      d4:	00010000 	.inst	0x00010000 ; undefined
      d8:	0007d869 	.inst	0x0007d869 ; undefined
      dc:	00000000 	.inst	0x00000000 ; undefined
      e0:	00088c00 	.inst	0x00088c00 ; undefined
      e4:	00000000 	.inst	0x00000000 ; undefined
      e8:	69000100 	.inst	0x69000100 ; undefined
      ec:	0000088c 	.inst	0x0000088c ; undefined
      f0:	00000000 	.inst	0x00000000 ; undefined
      f4:	000008a0 	.inst	0x000008a0 ; undefined
      f8:	00000000 	.inst	0x00000000 ; undefined
      fc:	a0540001 	.inst	0xa0540001 ; undefined
     100:	00000008 	.inst	0x00000008 ; undefined
     104:	8c000000 	.inst	0x8c000000 ; undefined
     108:	0000000d 	.inst	0x0000000d ; undefined
     10c:	01000000 	.inst	0x01000000 ; undefined
     110:	00006900 	.inst	0x00006900 ; undefined
	...
     120:	06180000 	.inst	0x06180000 ; undefined
     124:	00000000 	.inst	0x00000000 ; undefined
     128:	06200000 	.inst	0x06200000 ; undefined
     12c:	00000000 	.inst	0x00000000 ; undefined
     130:	000c0000 	.inst	0x000c0000 ; undefined
     134:	93680893 	sbfiz	x19, x4, #24, #3
     138:	67089308 	.inst	0x67089308 ; undefined
     13c:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     140:	00000620 	.inst	0x00000620 ; undefined
     144:	00000000 	.inst	0x00000000 ; undefined
     148:	00000654 	.inst	0x00000654 ; undefined
     14c:	00000000 	.inst	0x00000000 ; undefined
     150:	9366000d 	sbfiz	x13, x0, #26, #1
     154:	08936808 	stllrb	w8, [x0]
     158:	93670893 	sbfiz	x19, x4, #25, #3
     15c:	54049304 	b.mi	93bc <__bss_size+0x93b6>  // b.first
     160:	00000006 	.inst	0x00000006 ; undefined
     164:	58000000 	ldr	x0, 164 <__bss_size+0x15e>
     168:	00000006 	.inst	0x00000006 ; undefined
     16c:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
     170:	68089300 	.inst	0x68089300 ; undefined
     174:	08930893 	stllrb	w19, [x4]
     178:	93049367 	.inst	0x93049367 ; undefined
     17c:	00066404 	.inst	0x00066404 ; undefined
     180:	00000000 	.inst	0x00000000 ; undefined
     184:	0006fc00 	.inst	0x0006fc00 ; undefined
     188:	00000000 	.inst	0x00000000 ; undefined
     18c:	66000d00 	.inst	0x66000d00 ; undefined
     190:	93680893 	sbfiz	x19, x4, #24, #3
     194:	67089308 	.inst	0x67089308 ; undefined
     198:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     19c:	000006fc 	.inst	0x000006fc ; undefined
     1a0:	00000000 	.inst	0x00000000 ; undefined
     1a4:	00000704 	.inst	0x00000704 ; undefined
     1a8:	00000000 	.inst	0x00000000 ; undefined
     1ac:	00720012 	.inst	0x00720012 ; undefined
     1b0:	9f1af809 	.inst	0x9f1af809 ; undefined
     1b4:	93680893 	sbfiz	x19, x4, #24, #3
     1b8:	67089308 	.inst	0x67089308 ; undefined
     1bc:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     1c0:	00000704 	.inst	0x00000704 ; undefined
     1c4:	00000000 	.inst	0x00000000 ; undefined
     1c8:	000007c8 	.inst	0x000007c8 ; undefined
     1cc:	00000000 	.inst	0x00000000 ; undefined
     1d0:	9366000d 	sbfiz	x13, x0, #26, #1
     1d4:	08936808 	stllrb	w8, [x0]
     1d8:	93670893 	sbfiz	x19, x4, #25, #3
     1dc:	c8049304 	stlxr	w4, x4, [x24]
     1e0:	00000007 	.inst	0x00000007 ; undefined
     1e4:	cc000000 	.inst	0xcc000000 ; undefined
     1e8:	00000007 	.inst	0x00000007 ; undefined
     1ec:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
     1f0:	68089300 	.inst	0x68089300 ; undefined
     1f4:	08930893 	stllrb	w19, [x4]
     1f8:	93049367 	.inst	0x93049367 ; undefined
     1fc:	0007d804 	.inst	0x0007d804 ; undefined
     200:	00000000 	.inst	0x00000000 ; undefined
     204:	00080000 	.inst	0x00080000 ; undefined
     208:	00000000 	.inst	0x00000000 ; undefined
     20c:	66000d00 	.inst	0x66000d00 ; undefined
     210:	93680893 	sbfiz	x19, x4, #24, #3
     214:	67089308 	.inst	0x67089308 ; undefined
     218:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     21c:	00000800 	.inst	0x00000800 ; undefined
     220:	00000000 	.inst	0x00000000 ; undefined
     224:	00000808 	.inst	0x00000808 ; undefined
     228:	00000000 	.inst	0x00000000 ; undefined
     22c:	00720012 	.inst	0x00720012 ; undefined
     230:	9f1af809 	.inst	0x9f1af809 ; undefined
     234:	93680893 	sbfiz	x19, x4, #24, #3
     238:	67089308 	.inst	0x67089308 ; undefined
     23c:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     240:	00000808 	.inst	0x00000808 ; undefined
     244:	00000000 	.inst	0x00000000 ; undefined
     248:	000008cc 	.inst	0x000008cc ; undefined
     24c:	00000000 	.inst	0x00000000 ; undefined
     250:	9366000d 	sbfiz	x13, x0, #26, #1
     254:	08936808 	stllrb	w8, [x0]
     258:	93670893 	sbfiz	x19, x4, #25, #3
     25c:	cc049304 	.inst	0xcc049304 ; undefined
     260:	00000008 	.inst	0x00000008 ; undefined
     264:	d4000000 	.inst	0xd4000000 ; undefined
     268:	00000008 	.inst	0x00000008 ; undefined
     26c:	12000000 	and	w0, w0, #0x1
     270:	09007100 	.inst	0x09007100 ; undefined
     274:	939f1af8 	.inst	0x939f1af8 ; undefined
     278:	08936808 	stllrb	w8, [x0]
     27c:	93670893 	sbfiz	x19, x4, #25, #3
     280:	d4049304 	.inst	0xd4049304 ; undefined
     284:	00000008 	.inst	0x00000008 ; undefined
     288:	fc000000 	stur	d0, [x0]
     28c:	00000008 	.inst	0x00000008 ; undefined
     290:	0d000000 	st1	{v0.b}[0], [x0]
     294:	08936600 	stllrb	w0, [x16]
     298:	93089368 	.inst	0x93089368 ; undefined
     29c:	04936708 	mls	z8.s, p1/m, z24.s, z19.s
     2a0:	08fc0493 	.inst	0x08fc0493 ; undefined
     2a4:	00000000 	.inst	0x00000000 ; undefined
     2a8:	09040000 	.inst	0x09040000 ; undefined
     2ac:	00000000 	.inst	0x00000000 ; undefined
     2b0:	00120000 	.inst	0x00120000 ; undefined
     2b4:	f8090072 	stur	x18, [x3, #144]
     2b8:	08939f1a 	stlrb	w26, [x24]
     2bc:	93089368 	.inst	0x93089368 ; undefined
     2c0:	04936708 	mls	z8.s, p1/m, z24.s, z19.s
     2c4:	09040493 	.inst	0x09040493 ; undefined
     2c8:	00000000 	.inst	0x00000000 ; undefined
     2cc:	0a800000 	and	w0, w0, w0, asr #0
     2d0:	00000000 	.inst	0x00000000 ; undefined
     2d4:	000d0000 	.inst	0x000d0000 ; undefined
     2d8:	68089366 	.inst	0x68089366 ; undefined
     2dc:	08930893 	stllrb	w19, [x4]
     2e0:	93049367 	.inst	0x93049367 ; undefined
     2e4:	000a8004 	.inst	0x000a8004 ; undefined
     2e8:	00000000 	.inst	0x00000000 ; undefined
     2ec:	000a8800 	.inst	0x000a8800 ; undefined
     2f0:	00000000 	.inst	0x00000000 ; undefined
     2f4:	72001200 	ands	w0, w16, #0x1f
     2f8:	1af80900 	.inst	0x1af80900 ; undefined
     2fc:	6808939f 	.inst	0x6808939f ; undefined
     300:	08930893 	stllrb	w19, [x4]
     304:	93049367 	.inst	0x93049367 ; undefined
     308:	000a8804 	.inst	0x000a8804 ; undefined
     30c:	00000000 	.inst	0x00000000 ; undefined
     310:	000bd400 	.inst	0x000bd400 ; undefined
     314:	00000000 	.inst	0x00000000 ; undefined
     318:	66000d00 	.inst	0x66000d00 ; undefined
     31c:	93680893 	sbfiz	x19, x4, #24, #3
     320:	67089308 	.inst	0x67089308 ; undefined
     324:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     328:	00000bd4 	.inst	0x00000bd4 ; undefined
     32c:	00000000 	.inst	0x00000000 ; undefined
     330:	00000be0 	.inst	0x00000be0 ; undefined
     334:	00000000 	.inst	0x00000000 ; undefined
     338:	9366000d 	sbfiz	x13, x0, #26, #1
     33c:	08936808 	stllrb	w8, [x0]
     340:	93520893 	sbfiz	x19, x4, #46, #3
     344:	e0049304 	.inst	0xe0049304 ; undefined
     348:	0000000b 	.inst	0x0000000b ; undefined
     34c:	ec000000 	.inst	0xec000000 ; undefined
     350:	0000000b 	.inst	0x0000000b ; undefined
     354:	12000000 	and	w0, w0, #0x1
     358:	09007300 	.inst	0x09007300 ; undefined
     35c:	939f1af8 	.inst	0x939f1af8 ; undefined
     360:	08936808 	stllrb	w8, [x0]
     364:	93520893 	sbfiz	x19, x4, #46, #3
     368:	ec049304 	.inst	0xec049304 ; undefined
     36c:	0000000b 	.inst	0x0000000b ; undefined
     370:	f0000000 	adrp	x0, 3000 <__bss_size+0x2ffa>
     374:	0000000b 	.inst	0x0000000b ; undefined
     378:	0d000000 	st1	{v0.b}[0], [x0]
     37c:	08936600 	stllrb	w0, [x16]
     380:	93089368 	.inst	0x93089368 ; undefined
     384:	04935208 	mla	z8.s, p4/m, z16.s, z19.s
     388:	0bf00493 	.inst	0x0bf00493 ; undefined
     38c:	00000000 	.inst	0x00000000 ; undefined
     390:	0cd40000 	ld4	{v0.8b-v3.8b}, [x0], x20
     394:	00000000 	.inst	0x00000000 ; undefined
     398:	000d0000 	.inst	0x000d0000 ; undefined
     39c:	68089366 	.inst	0x68089366 ; undefined
     3a0:	08930893 	stllrb	w19, [x4]
     3a4:	93049367 	.inst	0x93049367 ; undefined
     3a8:	000cd404 	.inst	0x000cd404 ; undefined
     3ac:	00000000 	.inst	0x00000000 ; undefined
     3b0:	000ce000 	.inst	0x000ce000 ; undefined
     3b4:	00000000 	.inst	0x00000000 ; undefined
     3b8:	66000d00 	.inst	0x66000d00 ; undefined
     3bc:	93680893 	sbfiz	x19, x4, #24, #3
     3c0:	52089308 	eor	w8, w24, #0x1f001f00
     3c4:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     3c8:	00000ce0 	.inst	0x00000ce0 ; undefined
     3cc:	00000000 	.inst	0x00000000 ; undefined
     3d0:	00000cec 	.inst	0x00000cec ; undefined
     3d4:	00000000 	.inst	0x00000000 ; undefined
     3d8:	00730012 	.inst	0x00730012 ; undefined
     3dc:	9f1af809 	.inst	0x9f1af809 ; undefined
     3e0:	93680893 	sbfiz	x19, x4, #24, #3
     3e4:	52089308 	eor	w8, w24, #0x1f001f00
     3e8:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     3ec:	00000cec 	.inst	0x00000cec ; undefined
     3f0:	00000000 	.inst	0x00000000 ; undefined
     3f4:	00000cf0 	.inst	0x00000cf0 ; undefined
     3f8:	00000000 	.inst	0x00000000 ; undefined
     3fc:	9366000d 	sbfiz	x13, x0, #26, #1
     400:	08936808 	stllrb	w8, [x0]
     404:	93520893 	sbfiz	x19, x4, #46, #3
     408:	f0049304 	adrp	x4, 9263000 <__bss_size+0x9262ffa>
     40c:	0000000c 	.inst	0x0000000c ; undefined
     410:	f4000000 	.inst	0xf4000000 ; undefined
     414:	0000000c 	.inst	0x0000000c ; undefined
     418:	0d000000 	st1	{v0.b}[0], [x0]
     41c:	08936600 	stllrb	w0, [x16]
     420:	93089368 	.inst	0x93089368 ; undefined
     424:	04936708 	mls	z8.s, p1/m, z24.s, z19.s
     428:	0cf40493 	.inst	0x0cf40493 ; undefined
     42c:	00000000 	.inst	0x00000000 ; undefined
     430:	0d000000 	st1	{v0.b}[0], [x0]
     434:	00000000 	.inst	0x00000000 ; undefined
     438:	000d0000 	.inst	0x000d0000 ; undefined
     43c:	68089366 	.inst	0x68089366 ; undefined
     440:	08930893 	stllrb	w19, [x4]
     444:	93049352 	.inst	0x93049352 ; undefined
     448:	000d0004 	.inst	0x000d0004 ; undefined
     44c:	00000000 	.inst	0x00000000 ; undefined
     450:	000d0c00 	.inst	0x000d0c00 ; undefined
     454:	00000000 	.inst	0x00000000 ; undefined
     458:	73001200 	.inst	0x73001200 ; undefined
     45c:	1af80900 	.inst	0x1af80900 ; undefined
     460:	6808939f 	.inst	0x6808939f ; undefined
     464:	08930893 	stllrb	w19, [x4]
     468:	93049352 	.inst	0x93049352 ; undefined
     46c:	000d0c04 	.inst	0x000d0c04 ; undefined
     470:	00000000 	.inst	0x00000000 ; undefined
     474:	000d1000 	.inst	0x000d1000 ; undefined
     478:	00000000 	.inst	0x00000000 ; undefined
     47c:	66000d00 	.inst	0x66000d00 ; undefined
     480:	93680893 	sbfiz	x19, x4, #24, #3
     484:	52089308 	eor	w8, w24, #0x1f001f00
     488:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     48c:	00000d10 	.inst	0x00000d10 ; undefined
     490:	00000000 	.inst	0x00000000 ; undefined
     494:	00000d14 	.inst	0x00000d14 ; undefined
     498:	00000000 	.inst	0x00000000 ; undefined
     49c:	9366000d 	sbfiz	x13, x0, #26, #1
     4a0:	08936808 	stllrb	w8, [x0]
     4a4:	93670893 	sbfiz	x19, x4, #25, #3
     4a8:	14049304 	b	1250b8 <__bss_size+0x1250b2>
     4ac:	0000000d 	.inst	0x0000000d ; undefined
     4b0:	20000000 	.inst	0x20000000 ; undefined
     4b4:	0000000d 	.inst	0x0000000d ; undefined
     4b8:	0d000000 	st1	{v0.b}[0], [x0]
     4bc:	08936600 	stllrb	w0, [x16]
     4c0:	93089368 	.inst	0x93089368 ; undefined
     4c4:	04935208 	mla	z8.s, p4/m, z16.s, z19.s
     4c8:	0d200493 	st2	{v19.b, v20.b}[1], [x4]
     4cc:	00000000 	.inst	0x00000000 ; undefined
     4d0:	0d2c0000 	.inst	0x0d2c0000 ; undefined
     4d4:	00000000 	.inst	0x00000000 ; undefined
     4d8:	00120000 	.inst	0x00120000 ; undefined
     4dc:	f8090073 	stur	x19, [x3, #144]
     4e0:	08939f1a 	stlrb	w26, [x24]
     4e4:	93089368 	.inst	0x93089368 ; undefined
     4e8:	04935208 	mla	z8.s, p4/m, z16.s, z19.s
     4ec:	0d2c0493 	.inst	0x0d2c0493 ; undefined
     4f0:	00000000 	.inst	0x00000000 ; undefined
     4f4:	0d300000 	.inst	0x0d300000 ; undefined
     4f8:	00000000 	.inst	0x00000000 ; undefined
     4fc:	000d0000 	.inst	0x000d0000 ; undefined
     500:	68089366 	.inst	0x68089366 ; undefined
     504:	08930893 	stllrb	w19, [x4]
     508:	93049352 	.inst	0x93049352 ; undefined
     50c:	000d3004 	.inst	0x000d3004 ; undefined
     510:	00000000 	.inst	0x00000000 ; undefined
     514:	000d3400 	.inst	0x000d3400 ; undefined
     518:	00000000 	.inst	0x00000000 ; undefined
     51c:	66000d00 	.inst	0x66000d00 ; undefined
     520:	93680893 	sbfiz	x19, x4, #24, #3
     524:	67089308 	.inst	0x67089308 ; undefined
     528:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
     52c:	00000d34 	.inst	0x00000d34 ; undefined
     530:	00000000 	.inst	0x00000000 ; undefined
     534:	00000d40 	.inst	0x00000d40 ; undefined
     538:	00000000 	.inst	0x00000000 ; undefined
     53c:	9366000d 	sbfiz	x13, x0, #26, #1
     540:	08936808 	stllrb	w8, [x0]
     544:	93510893 	sbfiz	x19, x4, #47, #3
     548:	40049304 	.inst	0x40049304 ; undefined
     54c:	0000000d 	.inst	0x0000000d ; undefined
     550:	4c000000 	st4	{v0.16b-v3.16b}, [x0]
     554:	0000000d 	.inst	0x0000000d ; undefined
     558:	12000000 	and	w0, w0, #0x1
     55c:	09007200 	.inst	0x09007200 ; undefined
     560:	939f1af8 	.inst	0x939f1af8 ; undefined
     564:	08936808 	stllrb	w8, [x0]
     568:	93510893 	sbfiz	x19, x4, #47, #3
     56c:	4c049304 	.inst	0x4c049304 ; undefined
     570:	0000000d 	.inst	0x0000000d ; undefined
     574:	50000000 	adr	x0, 576 <__bss_size+0x570>
     578:	0000000d 	.inst	0x0000000d ; undefined
     57c:	0d000000 	st1	{v0.b}[0], [x0]
     580:	08936600 	stllrb	w0, [x16]
     584:	93089368 	.inst	0x93089368 ; undefined
     588:	04935108 	mla	z8.s, p4/m, z8.s, z19.s
     58c:	0d500493 	.inst	0x0d500493 ; undefined
     590:	00000000 	.inst	0x00000000 ; undefined
     594:	0d800000 	st1	{v0.b}[0], [x0], x0
     598:	00000000 	.inst	0x00000000 ; undefined
     59c:	000d0000 	.inst	0x000d0000 ; undefined
     5a0:	68089366 	.inst	0x68089366 ; undefined
     5a4:	08930893 	stllrb	w19, [x4]
     5a8:	93049352 	.inst	0x93049352 ; undefined
     5ac:	000d8004 	.inst	0x000d8004 ; undefined
     5b0:	00000000 	.inst	0x00000000 ; undefined
     5b4:	000d8c00 	.inst	0x000d8c00 ; undefined
     5b8:	00000000 	.inst	0x00000000 ; undefined
     5bc:	66000d00 	.inst	0x66000d00 ; undefined
     5c0:	93680893 	sbfiz	x19, x4, #24, #3
     5c4:	51089308 	sub	w8, w24, #0x224
     5c8:	04930493 	umulh	z19.s, p1/m, z19.s, z4.s
	...
     5dc:	00000624 	.inst	0x00000624 ; undefined
     5e0:	00000000 	.inst	0x00000000 ; undefined
     5e4:	00000650 	.inst	0x00000650 ; undefined
     5e8:	00000000 	.inst	0x00000000 ; undefined
     5ec:	64630001 	fmla	z1.h, z0.h, z3.h[4]
     5f0:	00000006 	.inst	0x00000006 ; undefined
     5f4:	70000000 	adr	x0, 5f7 <__bss_size+0x5f1>
     5f8:	00000006 	.inst	0x00000006 ; undefined
     5fc:	01000000 	.inst	0x01000000 ; undefined
     600:	06706300 	.inst	0x06706300 ; undefined
     604:	00000000 	.inst	0x00000000 ; undefined
     608:	06900000 	.inst	0x06900000 ; undefined
     60c:	00000000 	.inst	0x00000000 ; undefined
     610:	00010000 	.inst	0x00010000 ; undefined
     614:	00069050 	.inst	0x00069050 ; undefined
     618:	00000000 	.inst	0x00000000 ; undefined
     61c:	0006e400 	.inst	0x0006e400 ; undefined
     620:	00000000 	.inst	0x00000000 ; undefined
     624:	89000200 	.inst	0x89000200 ; undefined
     628:	0006e801 	.inst	0x0006e801 ; undefined
     62c:	00000000 	.inst	0x00000000 ; undefined
     630:	00070000 	.inst	0x00070000 ; undefined
     634:	00000000 	.inst	0x00000000 ; undefined
     638:	50000100 	adr	x0, 65a <__bss_size+0x654>
     63c:	00000780 	.inst	0x00000780 ; undefined
     640:	00000000 	.inst	0x00000000 ; undefined
     644:	0000078c 	.inst	0x0000078c ; undefined
     648:	00000000 	.inst	0x00000000 ; undefined
     64c:	8c630001 	.inst	0x8c630001 ; undefined
     650:	00000007 	.inst	0x00000007 ; undefined
     654:	04000000 	add	z0.b, p0/m, z0.b, z0.b
     658:	00000008 	.inst	0x00000008 ; undefined
     65c:	01000000 	.inst	0x01000000 ; undefined
     660:	088c5000 	stllrb	w0, [x0]
     664:	00000000 	.inst	0x00000000 ; undefined
     668:	08a30000 	.inst	0x08a30000 ; undefined
     66c:	00000000 	.inst	0x00000000 ; undefined
     670:	00010000 	.inst	0x00010000 ; undefined
     674:	0008c450 	.inst	0x0008c450 ; undefined
     678:	00000000 	.inst	0x00000000 ; undefined
     67c:	0008d000 	.inst	0x0008d000 ; undefined
     680:	00000000 	.inst	0x00000000 ; undefined
     684:	50000100 	adr	x0, 6a6 <__bss_size+0x6a0>
     688:	000008f0 	.inst	0x000008f0 ; undefined
     68c:	00000000 	.inst	0x00000000 ; undefined
     690:	00000900 	.inst	0x00000900 ; undefined
     694:	00000000 	.inst	0x00000000 ; undefined
     698:	74500001 	.inst	0x74500001 ; undefined
     69c:	0000000a 	.inst	0x0000000a ; undefined
     6a0:	84000000 	ld1sb	{z0.s}, p0/z, [x0, z0.s, uxtw]
     6a4:	0000000a 	.inst	0x0000000a ; undefined
     6a8:	01000000 	.inst	0x01000000 ; undefined
     6ac:	0bd05000 	.inst	0x0bd05000 ; undefined
     6b0:	00000000 	.inst	0x00000000 ; undefined
     6b4:	0be40000 	.inst	0x0be40000 ; undefined
     6b8:	00000000 	.inst	0x00000000 ; undefined
     6bc:	00010000 	.inst	0x00010000 ; undefined
     6c0:	000cd050 	.inst	0x000cd050 ; undefined
     6c4:	00000000 	.inst	0x00000000 ; undefined
     6c8:	000ce400 	.inst	0x000ce400 ; undefined
     6cc:	00000000 	.inst	0x00000000 ; undefined
     6d0:	50000100 	adr	x0, 6f2 <__bss_size+0x6ec>
     6d4:	00000cf0 	.inst	0x00000cf0 ; undefined
     6d8:	00000000 	.inst	0x00000000 ; undefined
     6dc:	00000d04 	.inst	0x00000d04 ; undefined
     6e0:	00000000 	.inst	0x00000000 ; undefined
     6e4:	10500001 	adr	x1, a06e4 <__bss_size+0xa06de>
     6e8:	0000000d 	.inst	0x0000000d ; undefined
     6ec:	24000000 	cmphs	p0.b, p0/z, z0.b, z0.b
     6f0:	0000000d 	.inst	0x0000000d ; undefined
     6f4:	01000000 	.inst	0x01000000 ; undefined
     6f8:	0d305000 	.inst	0x0d305000 ; undefined
     6fc:	00000000 	.inst	0x00000000 ; undefined
     700:	0d440000 	.inst	0x0d440000 ; undefined
     704:	00000000 	.inst	0x00000000 ; undefined
     708:	00010000 	.inst	0x00010000 ; undefined
     70c:	000d5050 	.inst	0x000d5050 ; undefined
     710:	00000000 	.inst	0x00000000 ; undefined
     714:	000d5400 	.inst	0x000d5400 ; undefined
     718:	00000000 	.inst	0x00000000 ; undefined
     71c:	50000100 	adr	x0, 73e <__bss_size+0x738>
     720:	00000d5c 	.inst	0x00000d5c ; undefined
     724:	00000000 	.inst	0x00000000 ; undefined
     728:	00000d60 	.inst	0x00000d60 ; undefined
     72c:	00000000 	.inst	0x00000000 ; undefined
     730:	68500001 	.inst	0x68500001 ; undefined
     734:	0000000d 	.inst	0x0000000d ; undefined
     738:	6c000000 	stnp	d0, d0, [x0]
     73c:	0000000d 	.inst	0x0000000d ; undefined
     740:	01000000 	.inst	0x01000000 ; undefined
     744:	0d745000 	.inst	0x0d745000 ; undefined
     748:	00000000 	.inst	0x00000000 ; undefined
     74c:	0d780000 	.inst	0x0d780000 ; undefined
     750:	00000000 	.inst	0x00000000 ; undefined
     754:	00010000 	.inst	0x00010000 ; undefined
     758:	000d8050 	.inst	0x000d8050 ; undefined
     75c:	00000000 	.inst	0x00000000 ; undefined
     760:	000d8400 	.inst	0x000d8400 ; undefined
     764:	00000000 	.inst	0x00000000 ; undefined
     768:	50000100 	adr	x0, 78a <__bss_size+0x784>
	...
     77c:	00000664 	.inst	0x00000664 ; undefined
     780:	00000000 	.inst	0x00000000 ; undefined
     784:	000006e8 	.inst	0x000006e8 ; undefined
     788:	00000000 	.inst	0x00000000 ; undefined
     78c:	9f300002 	.inst	0x9f300002 ; undefined
     790:	0000078c 	.inst	0x0000078c ; undefined
     794:	00000000 	.inst	0x00000000 ; undefined
     798:	000007a0 	.inst	0x000007a0 ; undefined
     79c:	00000000 	.inst	0x00000000 ; undefined
     7a0:	9f310002 	.inst	0x9f310002 ; undefined
     7a4:	0000088c 	.inst	0x0000088c ; undefined
     7a8:	00000000 	.inst	0x00000000 ; undefined
     7ac:	000008a0 	.inst	0x000008a0 ; undefined
     7b0:	00000000 	.inst	0x00000000 ; undefined
     7b4:	9f300002 	.inst	0x9f300002 ; undefined
	...
     7c8:	00000664 	.inst	0x00000664 ; undefined
     7cc:	00000000 	.inst	0x00000000 ; undefined
     7d0:	000006e8 	.inst	0x000006e8 ; undefined
     7d4:	00000000 	.inst	0x00000000 ; undefined
     7d8:	9f300002 	.inst	0x9f300002 ; undefined
     7dc:	000006e8 	.inst	0x000006e8 ; undefined
     7e0:	00000000 	.inst	0x00000000 ; undefined
     7e4:	00000780 	.inst	0x00000780 ; undefined
     7e8:	00000000 	.inst	0x00000000 ; undefined
     7ec:	8c510001 	.inst	0x8c510001 ; undefined
     7f0:	00000007 	.inst	0x00000007 ; undefined
     7f4:	a0000000 	.inst	0xa0000000 ; undefined
     7f8:	00000007 	.inst	0x00000007 ; undefined
     7fc:	02000000 	.inst	0x02000000 ; undefined
     800:	a09f3000 	.inst	0xa09f3000 ; undefined
     804:	00000007 	.inst	0x00000007 ; undefined
     808:	24000000 	cmphs	p0.b, p0/z, z0.b, z0.b
     80c:	00000008 	.inst	0x00000008 ; undefined
     810:	01000000 	.inst	0x01000000 ; undefined
     814:	088c5100 	stllrb	w0, [x8]
     818:	00000000 	.inst	0x00000000 ; undefined
     81c:	08a00000 	.inst	0x08a00000 ; undefined
     820:	00000000 	.inst	0x00000000 ; undefined
     824:	00020000 	.inst	0x00020000 ; undefined
     828:	08a09f30 	.inst	0x08a09f30 ; undefined
     82c:	00000000 	.inst	0x00000000 ; undefined
     830:	08a30000 	.inst	0x08a30000 ; undefined
     834:	00000000 	.inst	0x00000000 ; undefined
     838:	00010000 	.inst	0x00010000 ; undefined
     83c:	0008c451 	.inst	0x0008c451 ; undefined
     840:	00000000 	.inst	0x00000000 ; undefined
     844:	0008cc00 	.inst	0x0008cc00 ; undefined
     848:	00000000 	.inst	0x00000000 ; undefined
     84c:	51000100 	sub	w0, w8, #0x0
     850:	000008f0 	.inst	0x000008f0 ; undefined
     854:	00000000 	.inst	0x00000000 ; undefined
     858:	000009a8 	.inst	0x000009a8 ; undefined
     85c:	00000000 	.inst	0x00000000 ; undefined
     860:	08510001 	ldxrb	w1, [x0]
     864:	0000000a 	.inst	0x0000000a ; undefined
     868:	18000000 	ldr	w0, 868 <__bss_size+0x862>
     86c:	0000000a 	.inst	0x0000000a ; undefined
     870:	01000000 	.inst	0x01000000 ; undefined
     874:	0a445100 	and	w0, w8, w4, lsr #20
     878:	00000000 	.inst	0x00000000 ; undefined
     87c:	0b200000 	add	w0, w0, w0, uxtb
     880:	00000000 	.inst	0x00000000 ; undefined
     884:	00010000 	.inst	0x00010000 ; undefined
     888:	000ba451 	.inst	0x000ba451 ; undefined
     88c:	00000000 	.inst	0x00000000 ; undefined
     890:	000c2000 	.inst	0x000c2000 ; undefined
     894:	00000000 	.inst	0x00000000 ; undefined
     898:	51000100 	sub	w0, w8, #0x0
     89c:	00000ca4 	.inst	0x00000ca4 ; undefined
     8a0:	00000000 	.inst	0x00000000 ; undefined
     8a4:	00000d34 	.inst	0x00000d34 ; undefined
     8a8:	00000000 	.inst	0x00000000 ; undefined
     8ac:	50510001 	adr	x1, a28ae <__bss_size+0xa28a8>
     8b0:	0000000d 	.inst	0x0000000d ; undefined
     8b4:	80000000 	.inst	0x80000000 ; undefined
     8b8:	0000000d 	.inst	0x0000000d ; undefined
     8bc:	01000000 	.inst	0x01000000 ; undefined
     8c0:	00005100 	.inst	0x00005100 ; undefined
	...
     8d0:	0a8c0000 	and	w0, w0, w12, asr #0
     8d4:	00000000 	.inst	0x00000000 ; undefined
     8d8:	0ab40000 	bic	w0, w0, w20, asr #0
     8dc:	00000000 	.inst	0x00000000 ; undefined
     8e0:	00040000 	.inst	0x00040000 ; undefined
     8e4:	9f01b88f 	.inst	0x9f01b88f ; undefined
     8e8:	00000ab4 	.inst	0x00000ab4 ; undefined
     8ec:	00000000 	.inst	0x00000000 ; undefined
     8f0:	00000ad0 	.inst	0x00000ad0 ; undefined
     8f4:	00000000 	.inst	0x00000000 ; undefined
     8f8:	d0550001 	adrp	x1, aa002000 <__bss_size+0xaa001ffa>
     8fc:	0000000a 	.inst	0x0000000a ; undefined
     900:	40000000 	.inst	0x40000000 ; undefined
     904:	0000000b 	.inst	0x0000000b ; undefined
     908:	01000000 	.inst	0x01000000 ; undefined
     90c:	0ba45700 	.inst	0x0ba45700 ; undefined
     910:	00000000 	.inst	0x00000000 ; undefined
     914:	0bb80000 	.inst	0x0bb80000 ; undefined
     918:	00000000 	.inst	0x00000000 ; undefined
     91c:	00010000 	.inst	0x00010000 ; undefined
     920:	000bb857 	.inst	0x000bb857 ; undefined
     924:	00000000 	.inst	0x00000000 ; undefined
     928:	000bbc00 	.inst	0x000bbc00 ; undefined
     92c:	00000000 	.inst	0x00000000 ; undefined
     930:	8f000400 	.inst	0x8f000400 ; undefined
     934:	bc9f01b8 	.inst	0xbc9f01b8 ; undefined
     938:	0000000b 	.inst	0x0000000b ; undefined
     93c:	d0000000 	adrp	x0, 2000 <__bss_size+0x1ffa>
     940:	0000000b 	.inst	0x0000000b ; undefined
     944:	01000000 	.inst	0x01000000 ; undefined
     948:	00005700 	.inst	0x00005700 ; undefined
	...
     958:	0a8c0000 	and	w0, w0, w12, asr #0
     95c:	00000000 	.inst	0x00000000 ; undefined
     960:	0bd00000 	.inst	0x0bd00000 ; undefined
     964:	00000000 	.inst	0x00000000 ; undefined
     968:	00020000 	.inst	0x00020000 ; undefined
     96c:	00009f3a 	.inst	0x00009f3a ; undefined
	...
     97c:	0aac0000 	bic	w0, w0, w12, asr #0
     980:	00000000 	.inst	0x00000000 ; undefined
     984:	0ab00000 	bic	w0, w0, w16, asr #0
     988:	00000000 	.inst	0x00000000 ; undefined
     98c:	00010000 	.inst	0x00010000 ; undefined
     990:	000bb853 	.inst	0x000bb853 ; undefined
     994:	00000000 	.inst	0x00000000 ; undefined
     998:	000bc000 	.inst	0x000bc000 ; undefined
     99c:	00000000 	.inst	0x00000000 ; undefined
     9a0:	53000100 	ubfx	w0, w8, #0, #1
	...
     9b4:	00000908 	.inst	0x00000908 ; undefined
     9b8:	00000000 	.inst	0x00000000 ; undefined
     9bc:	0000093c 	.inst	0x0000093c ; undefined
     9c0:	00000000 	.inst	0x00000000 ; undefined
     9c4:	b88f0004 	ldursw	x4, [x0, #240]
     9c8:	093c9f01 	.inst	0x093c9f01 ; undefined
     9cc:	00000000 	.inst	0x00000000 ; undefined
     9d0:	09780000 	.inst	0x09780000 ; undefined
     9d4:	00000000 	.inst	0x00000000 ; undefined
     9d8:	00010000 	.inst	0x00010000 ; undefined
     9dc:	00097855 	.inst	0x00097855 ; undefined
     9e0:	00000000 	.inst	0x00000000 ; undefined
     9e4:	0009c800 	.inst	0x0009c800 ; undefined
     9e8:	00000000 	.inst	0x00000000 ; undefined
     9ec:	57000100 	.inst	0x57000100 ; undefined
     9f0:	00000a08 	.inst	0x00000a08 ; undefined
     9f4:	00000000 	.inst	0x00000000 ; undefined
     9f8:	00000a10 	.inst	0x00000a10 ; undefined
     9fc:	00000000 	.inst	0x00000000 ; undefined
     a00:	10550001 	adr	x1, aaa00 <__bss_size+0xaa9fa>
     a04:	0000000a 	.inst	0x0000000a ; undefined
     a08:	18000000 	ldr	w0, a08 <__bss_size+0xa02>
     a0c:	0000000a 	.inst	0x0000000a ; undefined
     a10:	01000000 	.inst	0x01000000 ; undefined
     a14:	0a445700 	and	w0, w24, w4, lsr #21
     a18:	00000000 	.inst	0x00000000 ; undefined
     a1c:	0a480000 	and	w0, w0, w8, lsr #0
     a20:	00000000 	.inst	0x00000000 ; undefined
     a24:	00040000 	.inst	0x00040000 ; undefined
     a28:	9f01b88f 	.inst	0x9f01b88f ; undefined
     a2c:	00000a48 	.inst	0x00000a48 ; undefined
     a30:	00000000 	.inst	0x00000000 ; undefined
     a34:	00000a4c 	.inst	0x00000a4c ; undefined
     a38:	00000000 	.inst	0x00000000 ; undefined
     a3c:	4c570001 	.inst	0x4c570001 ; undefined
     a40:	0000000a 	.inst	0x0000000a ; undefined
     a44:	58000000 	ldr	x0, a44 <__bss_size+0xa3e>
     a48:	0000000a 	.inst	0x0000000a ; undefined
     a4c:	04000000 	add	z0.b, p0/m, z0.b, z0.b
     a50:	01b88f00 	.inst	0x01b88f00 ; undefined
     a54:	000a589f 	.inst	0x000a589f ; undefined
     a58:	00000000 	.inst	0x00000000 ; undefined
     a5c:	000a6800 	.inst	0x000a6800 ; undefined
     a60:	00000000 	.inst	0x00000000 ; undefined
     a64:	57000100 	.inst	0x57000100 ; undefined
	...
     a78:	00000908 	.inst	0x00000908 ; undefined
     a7c:	00000000 	.inst	0x00000000 ; undefined
     a80:	00000a00 	.inst	0x00000a00 ; undefined
     a84:	00000000 	.inst	0x00000000 ; undefined
     a88:	9f400002 	.inst	0x9f400002 ; undefined
     a8c:	00000a08 	.inst	0x00000a08 ; undefined
     a90:	00000000 	.inst	0x00000000 ; undefined
     a94:	00000a38 	.inst	0x00000a38 ; undefined
     a98:	00000000 	.inst	0x00000000 ; undefined
     a9c:	9f400002 	.inst	0x9f400002 ; undefined
     aa0:	00000a44 	.inst	0x00000a44 ; undefined
     aa4:	00000000 	.inst	0x00000000 ; undefined
     aa8:	00000a68 	.inst	0x00000a68 ; undefined
     aac:	00000000 	.inst	0x00000000 ; undefined
     ab0:	9f400002 	.inst	0x9f400002 ; undefined
	...
     ac4:	00000928 	.inst	0x00000928 ; undefined
     ac8:	00000000 	.inst	0x00000000 ; undefined
     acc:	0000092c 	.inst	0x0000092c ; undefined
     ad0:	00000000 	.inst	0x00000000 ; undefined
     ad4:	44530001 	.inst	0x44530001 ; undefined
     ad8:	0000000a 	.inst	0x0000000a ; undefined
     adc:	4c000000 	st4	{v0.16b-v3.16b}, [x0]
     ae0:	0000000a 	.inst	0x0000000a ; undefined
     ae4:	01000000 	.inst	0x01000000 ; undefined
     ae8:	00005300 	.inst	0x00005300 ; undefined
	...
     af8:	06300000 	.inst	0x06300000 ; undefined
     afc:	00000000 	.inst	0x00000000 ; undefined
     b00:	06480000 	.inst	0x06480000 ; undefined
     b04:	00000000 	.inst	0x00000000 ; undefined
     b08:	00010000 	.inst	0x00010000 ; undefined
     b0c:	00078063 	.inst	0x00078063 ; undefined
     b10:	00000000 	.inst	0x00000000 ; undefined
     b14:	00078c00 	.inst	0x00078c00 ; undefined
     b18:	00000000 	.inst	0x00000000 ; undefined
     b1c:	63000100 	.inst	0x63000100 ; undefined
	...
     b30:	00000690 	.inst	0x00000690 ; undefined
     b34:	00000000 	.inst	0x00000000 ; undefined
     b38:	000006f0 	.inst	0x000006f0 ; undefined
     b3c:	00000000 	.inst	0x00000000 ; undefined
     b40:	00500001 	.inst	0x00500001 ; undefined
	...
     b50:	90000000 	adrp	x0, 0 <__bss_size-0x6>
     b54:	00000006 	.inst	0x00000006 ; undefined
     b58:	9c000000 	ldr	q0, b58 <__bss_size+0xb52>
     b5c:	00000006 	.inst	0x00000006 ; undefined
     b60:	01000000 	.inst	0x01000000 ; undefined
     b64:	06ac5000 	.inst	0x06ac5000 ; undefined
     b68:	00000000 	.inst	0x00000000 ; undefined
     b6c:	06d80000 	.inst	0x06d80000 ; undefined
     b70:	00000000 	.inst	0x00000000 ; undefined
     b74:	00010000 	.inst	0x00010000 ; undefined
     b78:	00000050 	.inst	0x00000050 ; undefined
	...
     b88:	00069000 	.inst	0x00069000 ; undefined
     b8c:	00000000 	.inst	0x00000000 ; undefined
     b90:	0006a400 	.inst	0x0006a400 ; undefined
     b94:	00000000 	.inst	0x00000000 ; undefined
     b98:	50000100 	adr	x0, bba <__bss_size+0xbb4>
     b9c:	000006c4 	.inst	0x000006c4 ; undefined
     ba0:	00000000 	.inst	0x00000000 ; undefined
     ba4:	000006f0 	.inst	0x000006f0 ; undefined
     ba8:	00000000 	.inst	0x00000000 ; undefined
     bac:	00500001 	.inst	0x00500001 ; undefined
	...
     bbc:	08000000 	stxrb	w0, w0, [x0]
     bc0:	00000007 	.inst	0x00000007 ; undefined
     bc4:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
     bc8:	00000007 	.inst	0x00000007 ; undefined
     bcc:	04000000 	add	z0.b, p0/m, z0.b, z0.b
     bd0:	01b88f00 	.inst	0x01b88f00 ; undefined
     bd4:	00070c9f 	.inst	0x00070c9f ; undefined
     bd8:	00000000 	.inst	0x00000000 ; undefined
     bdc:	00071400 	.inst	0x00071400 ; undefined
     be0:	00000000 	.inst	0x00000000 ; undefined
     be4:	55000100 	.inst	0x55000100 ; undefined
     be8:	00000714 	.inst	0x00000714 ; undefined
     bec:	00000000 	.inst	0x00000000 ; undefined
     bf0:	00000720 	.inst	0x00000720 ; undefined
     bf4:	00000000 	.inst	0x00000000 ; undefined
     bf8:	b98f0004 	ldrsw	x4, [x0, #3840]
     bfc:	07209f01 	.inst	0x07209f01 ; undefined
     c00:	00000000 	.inst	0x00000000 ; undefined
     c04:	07500000 	.inst	0x07500000 ; undefined
     c08:	00000000 	.inst	0x00000000 ; undefined
     c0c:	00010000 	.inst	0x00010000 ; undefined
     c10:	000cb855 	.inst	0x000cb855 ; undefined
     c14:	00000000 	.inst	0x00000000 ; undefined
     c18:	000cc000 	.inst	0x000cc000 ; undefined
     c1c:	00000000 	.inst	0x00000000 ; undefined
     c20:	55000100 	.inst	0x55000100 ; undefined
	...
     c34:	00000714 	.inst	0x00000714 ; undefined
     c38:	00000000 	.inst	0x00000000 ; undefined
     c3c:	0000074c 	.inst	0x0000074c ; undefined
     c40:	00000000 	.inst	0x00000000 ; undefined
     c44:	4c530001 	.inst	0x4c530001 ; undefined
     c48:	00000007 	.inst	0x00000007 ; undefined
     c4c:	50000000 	adr	x0, c4e <__bss_size+0xc48>
     c50:	00000007 	.inst	0x00000007 ; undefined
     c54:	01000000 	.inst	0x01000000 ; undefined
     c58:	0cb85400 	.inst	0x0cb85400 ; undefined
     c5c:	00000000 	.inst	0x00000000 ; undefined
     c60:	0cc00000 	ld4	{v0.8b-v3.8b}, [x0], x0
     c64:	00000000 	.inst	0x00000000 ; undefined
     c68:	00010000 	.inst	0x00010000 ; undefined
     c6c:	00000053 	.inst	0x00000053 ; undefined
	...
     c7c:	00072400 	.inst	0x00072400 ; undefined
     c80:	00000000 	.inst	0x00000000 ; undefined
     c84:	00076000 	.inst	0x00076000 ; undefined
     c88:	00000000 	.inst	0x00000000 ; undefined
     c8c:	55000100 	.inst	0x55000100 ; undefined
     c90:	00000760 	.inst	0x00000760 ; undefined
     c94:	00000000 	.inst	0x00000000 ; undefined
     c98:	00000780 	.inst	0x00000780 ; undefined
     c9c:	00000000 	.inst	0x00000000 ; undefined
     ca0:	f0570001 	adrp	x1, ae003000 <__bss_size+0xae002ffa>
     ca4:	0000000b 	.inst	0x0000000b ; undefined
     ca8:	40000000 	.inst	0x40000000 ; undefined
     cac:	0000000c 	.inst	0x0000000c ; undefined
     cb0:	01000000 	.inst	0x01000000 ; undefined
     cb4:	0ca45700 	.inst	0x0ca45700 ; undefined
     cb8:	00000000 	.inst	0x00000000 ; undefined
     cbc:	0cb80000 	.inst	0x0cb80000 ; undefined
     cc0:	00000000 	.inst	0x00000000 ; undefined
     cc4:	00010000 	.inst	0x00010000 ; undefined
     cc8:	000cb857 	.inst	0x000cb857 ; undefined
     ccc:	00000000 	.inst	0x00000000 ; undefined
     cd0:	000cc000 	.inst	0x000cc000 ; undefined
     cd4:	00000000 	.inst	0x00000000 ; undefined
     cd8:	55000100 	.inst	0x55000100 ; undefined
     cdc:	00000cc0 	.inst	0x00000cc0 ; undefined
     ce0:	00000000 	.inst	0x00000000 ; undefined
     ce4:	00000cd0 	.inst	0x00000cd0 ; undefined
     ce8:	00000000 	.inst	0x00000000 ; undefined
     cec:	00570001 	.inst	0x00570001 ; undefined
	...
     cfc:	24000000 	cmphs	p0.b, p0/z, z0.b, z0.b
     d00:	00000007 	.inst	0x00000007 ; undefined
     d04:	80000000 	.inst	0x80000000 ; undefined
     d08:	00000007 	.inst	0x00000007 ; undefined
     d0c:	02000000 	.inst	0x02000000 ; undefined
     d10:	f09f3a00 	adrp	x0, ffffffff3e743000 <__end+0xffff3e65c6a0>
     d14:	0000000b 	.inst	0x0000000b ; undefined
     d18:	d0000000 	adrp	x0, 2000 <__bss_size+0x1ffa>
     d1c:	0000000c 	.inst	0x0000000c ; undefined
     d20:	02000000 	.inst	0x02000000 ; undefined
     d24:	009f3a00 	.inst	0x009f3a00 ; undefined
	...
     d34:	24000000 	cmphs	p0.b, p0/z, z0.b, z0.b
     d38:	00000007 	.inst	0x00000007 ; undefined
     d3c:	4c000000 	st4	{v0.16b-v3.16b}, [x0]
     d40:	00000007 	.inst	0x00000007 ; undefined
     d44:	01000000 	.inst	0x01000000 ; undefined
     d48:	074c5300 	.inst	0x074c5300 ; undefined
     d4c:	00000000 	.inst	0x00000000 ; undefined
     d50:	07500000 	.inst	0x07500000 ; undefined
     d54:	00000000 	.inst	0x00000000 ; undefined
     d58:	00010000 	.inst	0x00010000 ; undefined
     d5c:	000cb854 	.inst	0x000cb854 ; undefined
     d60:	00000000 	.inst	0x00000000 ; undefined
     d64:	000cc000 	.inst	0x000cc000 ; undefined
     d68:	00000000 	.inst	0x00000000 ; undefined
     d6c:	53000100 	ubfx	w0, w8, #0, #1
	...
     d80:	00000860 	.inst	0x00000860 ; undefined
     d84:	00000000 	.inst	0x00000000 ; undefined
     d88:	0000087c 	.inst	0x0000087c ; undefined
     d8c:	00000000 	.inst	0x00000000 ; undefined
     d90:	7c6a0001 	.inst	0x7c6a0001 ; undefined
     d94:	00000008 	.inst	0x00000008 ; undefined
     d98:	80000000 	.inst	0x80000000 ; undefined
     d9c:	00000008 	.inst	0x00000008 ; undefined
     da0:	03000000 	.inst	0x03000000 ; undefined
     da4:	9f7f8a00 	.inst	0x9f7f8a00 ; undefined
     da8:	000008a8 	.inst	0x000008a8 ; undefined
     dac:	00000000 	.inst	0x00000000 ; undefined
     db0:	000008bc 	.inst	0x000008bc ; undefined
     db4:	00000000 	.inst	0x00000000 ; undefined
     db8:	bc6a0001 	.inst	0xbc6a0001 ; undefined
     dbc:	00000008 	.inst	0x00000008 ; undefined
     dc0:	c4000000 	ld1sb	{z0.d}, p0/z, [x0, z0.d, uxtw]
     dc4:	00000008 	.inst	0x00000008 ; undefined
     dc8:	03000000 	.inst	0x03000000 ; undefined
     dcc:	9f7f8a00 	.inst	0x9f7f8a00 ; undefined
	...
     de0:	0000080c 	.inst	0x0000080c ; undefined
     de4:	00000000 	.inst	0x00000000 ; undefined
     de8:	0000088c 	.inst	0x0000088c ; undefined
     dec:	00000000 	.inst	0x00000000 ; undefined
     df0:	9f300002 	.inst	0x9f300002 ; undefined
     df4:	000008a8 	.inst	0x000008a8 ; undefined
     df8:	00000000 	.inst	0x00000000 ; undefined
     dfc:	000008c4 	.inst	0x000008c4 ; undefined
     e00:	00000000 	.inst	0x00000000 ; undefined
     e04:	9f300002 	.inst	0x9f300002 ; undefined
     e08:	00000a68 	.inst	0x00000a68 ; undefined
     e0c:	00000000 	.inst	0x00000000 ; undefined
     e10:	00000a74 	.inst	0x00000a74 ; undefined
     e14:	00000000 	.inst	0x00000000 ; undefined
     e18:	9f300002 	.inst	0x9f300002 ; undefined
	...
     e2c:	0000080c 	.inst	0x0000080c ; undefined
     e30:	00000000 	.inst	0x00000000 ; undefined
     e34:	00000824 	.inst	0x00000824 ; undefined
     e38:	00000000 	.inst	0x00000000 ; undefined
     e3c:	24510001 	cmphs	p1.h, p0/z, z0.h, z17.h
     e40:	00000008 	.inst	0x00000008 ; undefined
     e44:	30000000 	adr	x0, e45 <__bss_size+0xe3f>
     e48:	00000008 	.inst	0x00000008 ; undefined
     e4c:	01000000 	.inst	0x01000000 ; undefined
     e50:	08305300 	.inst	0x08305300 ; undefined
     e54:	00000000 	.inst	0x00000000 ; undefined
     e58:	08380000 	.inst	0x08380000 ; undefined
     e5c:	00000000 	.inst	0x00000000 ; undefined
     e60:	00010000 	.inst	0x00010000 ; undefined
     e64:	00083851 	.inst	0x00083851 ; undefined
     e68:	00000000 	.inst	0x00000000 ; undefined
     e6c:	00084400 	.inst	0x00084400 ; undefined
     e70:	00000000 	.inst	0x00000000 ; undefined
     e74:	53000100 	ubfx	w0, w8, #0, #1
     e78:	00000844 	.inst	0x00000844 ; undefined
     e7c:	00000000 	.inst	0x00000000 ; undefined
     e80:	00000850 	.inst	0x00000850 ; undefined
     e84:	00000000 	.inst	0x00000000 ; undefined
     e88:	506c0001 	adr	x1, d8e8a <__bss_size+0xd8e84>
     e8c:	00000008 	.inst	0x00000008 ; undefined
     e90:	54000000 	b.eq	e90 <__bss_size+0xe8a>  // b.none
     e94:	00000008 	.inst	0x00000008 ; undefined
     e98:	03000000 	.inst	0x03000000 ; undefined
     e9c:	9f018c00 	.inst	0x9f018c00 ; undefined
     ea0:	00000854 	.inst	0x00000854 ; undefined
     ea4:	00000000 	.inst	0x00000000 ; undefined
     ea8:	00000868 	.inst	0x00000868 ; undefined
     eac:	00000000 	.inst	0x00000000 ; undefined
     eb0:	686c0001 	.inst	0x686c0001 ; undefined
     eb4:	0000000a 	.inst	0x0000000a ; undefined
     eb8:	6c000000 	stnp	d0, d0, [x0]
     ebc:	0000000a 	.inst	0x0000000a ; undefined
     ec0:	03000000 	.inst	0x03000000 ; undefined
     ec4:	9f7f7100 	.inst	0x9f7f7100 ; undefined
     ec8:	00000a6c 	.inst	0x00000a6c ; undefined
     ecc:	00000000 	.inst	0x00000000 ; undefined
     ed0:	00000a74 	.inst	0x00000a74 ; undefined
     ed4:	00000000 	.inst	0x00000000 ; undefined
     ed8:	006c0001 	.inst	0x006c0001 ; undefined
	...
     ee8:	48000000 	stxrh	w0, w0, [x0]
     eec:	00000008 	.inst	0x00000008 ; undefined
     ef0:	68000000 	.inst	0x68000000 ; undefined
     ef4:	00000008 	.inst	0x00000008 ; undefined
     ef8:	02000000 	.inst	0x02000000 ; undefined
     efc:	009f3000 	.inst	0x009f3000 ; undefined
	...
     f0c:	68000000 	.inst	0x68000000 ; undefined
     f10:	00000008 	.inst	0x00000008 ; undefined
     f14:	7c000000 	stur	h0, [x0]
     f18:	00000008 	.inst	0x00000008 ; undefined
     f1c:	01000000 	.inst	0x01000000 ; undefined
     f20:	08a86300 	.inst	0x08a86300 ; undefined
     f24:	00000000 	.inst	0x00000000 ; undefined
     f28:	08bc0000 	.inst	0x08bc0000 ; undefined
     f2c:	00000000 	.inst	0x00000000 ; undefined
     f30:	00010000 	.inst	0x00010000 ; undefined
     f34:	00000063 	.inst	0x00000063 ; undefined
	...
     f44:	0008a000 	.inst	0x0008a000 ; undefined
     f48:	00000000 	.inst	0x00000000 ; undefined
     f4c:	0008a800 	.inst	0x0008a800 ; undefined
     f50:	00000000 	.inst	0x00000000 ; undefined
     f54:	08000300 	stxrb	w0, w0, [x24]
     f58:	00009f25 	.inst	0x00009f25 ; undefined
	...
     f68:	08d80000 	ldlarb	w0, [x0]
     f6c:	00000000 	.inst	0x00000000 ; undefined
     f70:	08f00000 	.inst	0x08f00000 ; undefined
     f74:	00000000 	.inst	0x00000000 ; undefined
     f78:	00010000 	.inst	0x00010000 ; undefined
     f7c:	000a3863 	.inst	0x000a3863 ; undefined
     f80:	00000000 	.inst	0x00000000 ; undefined
     f84:	000a4400 	.inst	0x000a4400 ; undefined
     f88:	00000000 	.inst	0x00000000 ; undefined
     f8c:	63000100 	.inst	0x63000100 ; undefined
	...
     fa0:	000009e0 	.inst	0x000009e0 ; undefined
     fa4:	00000000 	.inst	0x00000000 ; undefined
     fa8:	000009e4 	.inst	0x000009e4 ; undefined
     fac:	00000000 	.inst	0x00000000 ; undefined
     fb0:	b98f0004 	ldrsw	x4, [x0, #3840]
     fb4:	09e89f01 	.inst	0x09e89f01 ; undefined
     fb8:	00000000 	.inst	0x00000000 ; undefined
     fbc:	09fc0000 	.inst	0x09fc0000 ; undefined
     fc0:	00000000 	.inst	0x00000000 ; undefined
     fc4:	00010000 	.inst	0x00010000 ; undefined
     fc8:	0009fc63 	.inst	0x0009fc63 ; undefined
     fcc:	00000000 	.inst	0x00000000 ; undefined
     fd0:	000a0000 	.inst	0x000a0000 ; undefined
     fd4:	00000000 	.inst	0x00000000 ; undefined
     fd8:	83000300 	.inst	0x83000300 ; undefined
     fdc:	0a189f7f 	.inst	0x0a189f7f ; undefined
     fe0:	00000000 	.inst	0x00000000 ; undefined
     fe4:	0a2c0000 	bic	w0, w0, w12
     fe8:	00000000 	.inst	0x00000000 ; undefined
     fec:	00010000 	.inst	0x00010000 ; undefined
     ff0:	000a2c63 	.inst	0x000a2c63 ; undefined
     ff4:	00000000 	.inst	0x00000000 ; undefined
     ff8:	000a3800 	.inst	0x000a3800 ; undefined
     ffc:	00000000 	.inst	0x00000000 ; undefined
    1000:	83000300 	.inst	0x83000300 ; undefined
    1004:	00009f7f 	.inst	0x00009f7f ; undefined
	...
    1014:	09940000 	.inst	0x09940000 ; undefined
    1018:	00000000 	.inst	0x00000000 ; undefined
    101c:	09a80000 	.inst	0x09a80000 ; undefined
    1020:	00000000 	.inst	0x00000000 ; undefined
    1024:	00010000 	.inst	0x00010000 ; undefined
    1028:	0009a851 	.inst	0x0009a851 ; undefined
    102c:	00000000 	.inst	0x00000000 ; undefined
    1030:	0009b000 	.inst	0x0009b000 ; undefined
    1034:	00000000 	.inst	0x00000000 ; undefined
    1038:	53000100 	ubfx	w0, w8, #0, #1
    103c:	000009b0 	.inst	0x000009b0 ; undefined
    1040:	00000000 	.inst	0x00000000 ; undefined
    1044:	000009b8 	.inst	0x000009b8 ; undefined
    1048:	00000000 	.inst	0x00000000 ; undefined
    104c:	b8510001 	ldur	w1, [x0, #-240]
    1050:	00000009 	.inst	0x00000009 ; undefined
    1054:	c4000000 	ld1sb	{z0.d}, p0/z, [x0, z0.d, uxtw]
    1058:	00000009 	.inst	0x00000009 ; undefined
    105c:	01000000 	.inst	0x01000000 ; undefined
    1060:	09c45300 	.inst	0x09c45300 ; undefined
    1064:	00000000 	.inst	0x00000000 ; undefined
    1068:	09d00000 	.inst	0x09d00000 ; undefined
    106c:	00000000 	.inst	0x00000000 ; undefined
    1070:	00010000 	.inst	0x00010000 ; undefined
    1074:	0009d06b 	.inst	0x0009d06b ; undefined
    1078:	00000000 	.inst	0x00000000 ; undefined
    107c:	0009d400 	.inst	0x0009d400 ; undefined
    1080:	00000000 	.inst	0x00000000 ; undefined
    1084:	8b000300 	add	x0, x24, x0
    1088:	09d49f01 	.inst	0x09d49f01 ; undefined
    108c:	00000000 	.inst	0x00000000 ; undefined
    1090:	09e40000 	.inst	0x09e40000 ; undefined
    1094:	00000000 	.inst	0x00000000 ; undefined
    1098:	00010000 	.inst	0x00010000 ; undefined
    109c:	000a586b 	.inst	0x000a586b ; undefined
    10a0:	00000000 	.inst	0x00000000 ; undefined
    10a4:	000a5c00 	.inst	0x000a5c00 ; undefined
    10a8:	00000000 	.inst	0x00000000 ; undefined
    10ac:	71000300 	subs	w0, w24, #0x0
    10b0:	0a5c9f7f 	.inst	0x0a5c9f7f ; undefined
    10b4:	00000000 	.inst	0x00000000 ; undefined
    10b8:	0a640000 	bic	w0, w0, w4, lsr #0
    10bc:	00000000 	.inst	0x00000000 ; undefined
    10c0:	00010000 	.inst	0x00010000 ; undefined
    10c4:	000a646b 	.inst	0x000a646b ; undefined
    10c8:	00000000 	.inst	0x00000000 ; undefined
    10cc:	000a6800 	.inst	0x000a6800 ; undefined
    10d0:	00000000 	.inst	0x00000000 ; undefined
    10d4:	71000300 	subs	w0, w24, #0x0
    10d8:	00009f7f 	.inst	0x00009f7f ; undefined
	...
    10e8:	09e80000 	.inst	0x09e80000 ; undefined
    10ec:	00000000 	.inst	0x00000000 ; undefined
    10f0:	09fc0000 	.inst	0x09fc0000 ; undefined
    10f4:	00000000 	.inst	0x00000000 ; undefined
    10f8:	00010000 	.inst	0x00010000 ; undefined
    10fc:	000a186a 	.inst	0x000a186a ; undefined
    1100:	00000000 	.inst	0x00000000 ; undefined
    1104:	000a2c00 	.inst	0x000a2c00 ; undefined
    1108:	00000000 	.inst	0x00000000 ; undefined
    110c:	6a000100 	ands	w0, w8, w0
	...
    1120:	00000b58 	.inst	0x00000b58 ; undefined
    1124:	00000000 	.inst	0x00000000 ; undefined
    1128:	00000b5c 	.inst	0x00000b5c ; undefined
    112c:	00000000 	.inst	0x00000000 ; undefined
    1130:	b98f0004 	ldrsw	x4, [x0, #3840]
    1134:	0b609f01 	.inst	0x0b609f01 ; undefined
    1138:	00000000 	.inst	0x00000000 ; undefined
    113c:	0b740000 	.inst	0x0b740000 ; undefined
    1140:	00000000 	.inst	0x00000000 ; undefined
    1144:	00010000 	.inst	0x00010000 ; undefined
    1148:	000b7463 	.inst	0x000b7463 ; undefined
    114c:	00000000 	.inst	0x00000000 ; undefined
    1150:	000b7800 	.inst	0x000b7800 ; undefined
    1154:	00000000 	.inst	0x00000000 ; undefined
    1158:	83000300 	.inst	0x83000300 ; undefined
    115c:	0b789f7f 	.inst	0x0b789f7f ; undefined
    1160:	00000000 	.inst	0x00000000 ; undefined
    1164:	0b980000 	add	w0, w0, w24, asr #0
    1168:	00000000 	.inst	0x00000000 ; undefined
    116c:	00010000 	.inst	0x00010000 ; undefined
    1170:	000b9863 	.inst	0x000b9863 ; undefined
    1174:	00000000 	.inst	0x00000000 ; undefined
    1178:	000ba400 	.inst	0x000ba400 ; undefined
    117c:	00000000 	.inst	0x00000000 ; undefined
    1180:	83000300 	.inst	0x83000300 ; undefined
    1184:	00009f7f 	.inst	0x00009f7f ; undefined
	...
    1194:	0b0c0000 	add	w0, w0, w12
    1198:	00000000 	.inst	0x00000000 ; undefined
    119c:	0b200000 	add	w0, w0, w0, uxtb
    11a0:	00000000 	.inst	0x00000000 ; undefined
    11a4:	00010000 	.inst	0x00010000 ; undefined
    11a8:	000b2051 	.inst	0x000b2051 ; undefined
    11ac:	00000000 	.inst	0x00000000 ; undefined
    11b0:	000b2800 	.inst	0x000b2800 ; undefined
    11b4:	00000000 	.inst	0x00000000 ; undefined
    11b8:	53000100 	ubfx	w0, w8, #0, #1
    11bc:	00000b28 	.inst	0x00000b28 ; undefined
    11c0:	00000000 	.inst	0x00000000 ; undefined
    11c4:	00000b30 	.inst	0x00000b30 ; undefined
    11c8:	00000000 	.inst	0x00000000 ; undefined
    11cc:	30510001 	adr	x1, a31cd <__bss_size+0xa31c7>
    11d0:	0000000b 	.inst	0x0000000b ; undefined
    11d4:	3c000000 	stur	b0, [x0]
    11d8:	0000000b 	.inst	0x0000000b ; undefined
    11dc:	01000000 	.inst	0x01000000 ; undefined
    11e0:	0b3c5300 	add	w0, w24, w28, uxtw #4
    11e4:	00000000 	.inst	0x00000000 ; undefined
    11e8:	0b480000 	add	w0, w0, w8, lsr #0
    11ec:	00000000 	.inst	0x00000000 ; undefined
    11f0:	00010000 	.inst	0x00010000 ; undefined
    11f4:	000b486b 	.inst	0x000b486b ; undefined
    11f8:	00000000 	.inst	0x00000000 ; undefined
    11fc:	000b4c00 	.inst	0x000b4c00 ; undefined
    1200:	00000000 	.inst	0x00000000 ; undefined
    1204:	8b000300 	add	x0, x24, x0
    1208:	0b4c9f01 	.inst	0x0b4c9f01 ; undefined
    120c:	00000000 	.inst	0x00000000 ; undefined
    1210:	0b5c0000 	add	w0, w0, w28, lsr #0
    1214:	00000000 	.inst	0x00000000 ; undefined
    1218:	00010000 	.inst	0x00010000 ; undefined
    121c:	000bc06b 	.inst	0x000bc06b ; undefined
    1220:	00000000 	.inst	0x00000000 ; undefined
    1224:	000bc400 	.inst	0x000bc400 ; undefined
    1228:	00000000 	.inst	0x00000000 ; undefined
    122c:	51000100 	sub	w0, w8, #0x0
    1230:	00000bc4 	.inst	0x00000bc4 ; undefined
    1234:	00000000 	.inst	0x00000000 ; undefined
    1238:	00000bcc 	.inst	0x00000bcc ; undefined
    123c:	00000000 	.inst	0x00000000 ; undefined
    1240:	cc6b0001 	.inst	0xcc6b0001 ; undefined
    1244:	0000000b 	.inst	0x0000000b ; undefined
    1248:	d0000000 	adrp	x0, 3000 <__bss_size+0x2ffa>
    124c:	0000000b 	.inst	0x0000000b ; undefined
    1250:	03000000 	.inst	0x03000000 ; undefined
    1254:	9f7f7100 	.inst	0x9f7f7100 ; undefined
	...
    1268:	00000b60 	.inst	0x00000b60 ; undefined
    126c:	00000000 	.inst	0x00000000 ; undefined
    1270:	00000b74 	.inst	0x00000b74 ; undefined
    1274:	00000000 	.inst	0x00000000 ; undefined
    1278:	786a0001 	ldaddlh	w10, w1, [x0]
    127c:	0000000b 	.inst	0x0000000b ; undefined
    1280:	98000000 	ldrsw	x0, 1280 <__bss_size+0x127a>
    1284:	0000000b 	.inst	0x0000000b ; undefined
    1288:	01000000 	.inst	0x01000000 ; undefined
    128c:	00006a00 	.inst	0x00006a00 ; undefined
	...
    129c:	0c580000 	.inst	0x0c580000 ; undefined
    12a0:	00000000 	.inst	0x00000000 ; undefined
    12a4:	0c5c0000 	.inst	0x0c5c0000 ; undefined
    12a8:	00000000 	.inst	0x00000000 ; undefined
    12ac:	00040000 	.inst	0x00040000 ; undefined
    12b0:	9f01b98f 	.inst	0x9f01b98f ; undefined
    12b4:	00000c60 	.inst	0x00000c60 ; undefined
    12b8:	00000000 	.inst	0x00000000 ; undefined
    12bc:	00000c74 	.inst	0x00000c74 ; undefined
    12c0:	00000000 	.inst	0x00000000 ; undefined
    12c4:	74630001 	.inst	0x74630001 ; undefined
    12c8:	0000000c 	.inst	0x0000000c ; undefined
    12cc:	78000000 	sturh	w0, [x0]
    12d0:	0000000c 	.inst	0x0000000c ; undefined
    12d4:	03000000 	.inst	0x03000000 ; undefined
    12d8:	9f7f8300 	.inst	0x9f7f8300 ; undefined
    12dc:	00000c78 	.inst	0x00000c78 ; undefined
    12e0:	00000000 	.inst	0x00000000 ; undefined
    12e4:	00000c98 	.inst	0x00000c98 ; undefined
    12e8:	00000000 	.inst	0x00000000 ; undefined
    12ec:	98630001 	ldrsw	x1, c72ec <__bss_size+0xc72e6>
    12f0:	0000000c 	.inst	0x0000000c ; undefined
    12f4:	a4000000 	ld1rqb	{z0.b}, p0/z, [x0, x0]
    12f8:	0000000c 	.inst	0x0000000c ; undefined
    12fc:	03000000 	.inst	0x03000000 ; undefined
    1300:	9f7f8300 	.inst	0x9f7f8300 ; undefined
	...
    1314:	00000c0c 	.inst	0x00000c0c ; undefined
    1318:	00000000 	.inst	0x00000000 ; undefined
    131c:	00000c20 	.inst	0x00000c20 ; undefined
    1320:	00000000 	.inst	0x00000000 ; undefined
    1324:	20510001 	.inst	0x20510001 ; undefined
    1328:	0000000c 	.inst	0x0000000c ; undefined
    132c:	28000000 	stnp	w0, w0, [x0]
    1330:	0000000c 	.inst	0x0000000c ; undefined
    1334:	01000000 	.inst	0x01000000 ; undefined
    1338:	0c285300 	.inst	0x0c285300 ; undefined
    133c:	00000000 	.inst	0x00000000 ; undefined
    1340:	0c300000 	.inst	0x0c300000 ; undefined
    1344:	00000000 	.inst	0x00000000 ; undefined
    1348:	00010000 	.inst	0x00010000 ; undefined
    134c:	000c3051 	.inst	0x000c3051 ; undefined
    1350:	00000000 	.inst	0x00000000 ; undefined
    1354:	000c3c00 	.inst	0x000c3c00 ; undefined
    1358:	00000000 	.inst	0x00000000 ; undefined
    135c:	53000100 	ubfx	w0, w8, #0, #1
    1360:	00000c3c 	.inst	0x00000c3c ; undefined
    1364:	00000000 	.inst	0x00000000 ; undefined
    1368:	00000c48 	.inst	0x00000c48 ; undefined
    136c:	00000000 	.inst	0x00000000 ; undefined
    1370:	486b0001 	.inst	0x486b0001 ; undefined
    1374:	0000000c 	.inst	0x0000000c ; undefined
    1378:	4c000000 	st4	{v0.16b-v3.16b}, [x0]
    137c:	0000000c 	.inst	0x0000000c ; undefined
    1380:	03000000 	.inst	0x03000000 ; undefined
    1384:	9f018b00 	.inst	0x9f018b00 ; undefined
    1388:	00000c4c 	.inst	0x00000c4c ; undefined
    138c:	00000000 	.inst	0x00000000 ; undefined
    1390:	00000c5c 	.inst	0x00000c5c ; undefined
    1394:	00000000 	.inst	0x00000000 ; undefined
    1398:	c06b0001 	.inst	0xc06b0001 ; undefined
    139c:	0000000c 	.inst	0x0000000c ; undefined
    13a0:	c4000000 	ld1sb	{z0.d}, p0/z, [x0, z0.d, uxtw]
    13a4:	0000000c 	.inst	0x0000000c ; undefined
    13a8:	03000000 	.inst	0x03000000 ; undefined
    13ac:	9f7f7100 	.inst	0x9f7f7100 ; undefined
    13b0:	00000cc4 	.inst	0x00000cc4 ; undefined
    13b4:	00000000 	.inst	0x00000000 ; undefined
    13b8:	00000ccc 	.inst	0x00000ccc ; undefined
    13bc:	00000000 	.inst	0x00000000 ; undefined
    13c0:	cc6b0001 	.inst	0xcc6b0001 ; undefined
    13c4:	0000000c 	.inst	0x0000000c ; undefined
    13c8:	d0000000 	adrp	x0, 3000 <__bss_size+0x2ffa>
    13cc:	0000000c 	.inst	0x0000000c ; undefined
    13d0:	03000000 	.inst	0x03000000 ; undefined
    13d4:	9f7f7100 	.inst	0x9f7f7100 ; undefined
	...
    13e8:	00000c60 	.inst	0x00000c60 ; undefined
    13ec:	00000000 	.inst	0x00000000 ; undefined
    13f0:	00000c74 	.inst	0x00000c74 ; undefined
    13f4:	00000000 	.inst	0x00000000 ; undefined
    13f8:	786a0001 	ldaddlh	w10, w1, [x0]
    13fc:	0000000c 	.inst	0x0000000c ; undefined
    1400:	98000000 	ldrsw	x0, 1400 <__bss_size+0x13fa>
    1404:	0000000c 	.inst	0x0000000c ; undefined
    1408:	01000000 	.inst	0x01000000 ; undefined
    140c:	00006a00 	.inst	0x00006a00 ; undefined
	...
    141c:	04100000 	mul	z0.b, p0/m, z0.b, z0.b
    1420:	00000000 	.inst	0x00000000 ; undefined
    1424:	04280000 	add	z0.b, z0.b, z8.b
    1428:	00000000 	.inst	0x00000000 ; undefined
    142c:	00010000 	.inst	0x00010000 ; undefined
    1430:	00042850 	.inst	0x00042850 ; undefined
    1434:	00000000 	.inst	0x00000000 ; undefined
    1438:	00043c00 	.inst	0x00043c00 ; undefined
    143c:	00000000 	.inst	0x00000000 ; undefined
    1440:	64000100 	.inst	0x64000100 ; undefined
    1444:	0000043c 	.inst	0x0000043c ; undefined
    1448:	00000000 	.inst	0x00000000 ; undefined
    144c:	00000440 	.inst	0x00000440 ; undefined
    1450:	00000000 	.inst	0x00000000 ; undefined
    1454:	7f840003 	.inst	0x7f840003 ; undefined
    1458:	0004549f 	.inst	0x0004549f ; undefined
    145c:	00000000 	.inst	0x00000000 ; undefined
    1460:	00046c00 	.inst	0x00046c00 ; undefined
    1464:	00000000 	.inst	0x00000000 ; undefined
    1468:	64000100 	.inst	0x64000100 ; undefined
    146c:	0000046c 	.inst	0x0000046c ; undefined
    1470:	00000000 	.inst	0x00000000 ; undefined
    1474:	00000474 	.inst	0x00000474 ; undefined
    1478:	00000000 	.inst	0x00000000 ; undefined
    147c:	7f840003 	.inst	0x7f840003 ; undefined
    1480:	0000009f 	.inst	0x0000009f ; undefined
	...
    1490:	00042800 	.inst	0x00042800 ; undefined
    1494:	00000000 	.inst	0x00000000 ; undefined
    1498:	00043800 	.inst	0x00043800 ; undefined
    149c:	00000000 	.inst	0x00000000 ; undefined
    14a0:	63000100 	.inst	0x63000100 ; undefined
    14a4:	00000454 	.inst	0x00000454 ; undefined
    14a8:	00000000 	.inst	0x00000000 ; undefined
    14ac:	00000468 	.inst	0x00000468 ; undefined
    14b0:	00000000 	.inst	0x00000000 ; undefined
    14b4:	00630001 	.inst	0x00630001 ; undefined
	...
    14c4:	e0000000 	.inst	0xe0000000 ; undefined
    14c8:	00000003 	.inst	0x00000003 ; undefined
    14cc:	f8000000 	stur	x0, [x0]
    14d0:	00000003 	.inst	0x00000003 ; undefined
    14d4:	02000000 	.inst	0x02000000 ; undefined
    14d8:	009f3a00 	.inst	0x009f3a00 ; undefined
	...
    14e8:	70000000 	adr	x0, 14eb <__bss_size+0x14e5>
    14ec:	00000003 	.inst	0x00000003 ; undefined
    14f0:	88000000 	stxr	w0, w0, [x0]
    14f4:	00000003 	.inst	0x00000003 ; undefined
    14f8:	01000000 	.inst	0x01000000 ; undefined
    14fc:	03885000 	.inst	0x03885000 ; undefined
    1500:	00000000 	.inst	0x00000000 ; undefined
    1504:	039c0000 	.inst	0x039c0000 ; undefined
    1508:	00000000 	.inst	0x00000000 ; undefined
    150c:	00010000 	.inst	0x00010000 ; undefined
    1510:	00039c64 	.inst	0x00039c64 ; undefined
    1514:	00000000 	.inst	0x00000000 ; undefined
    1518:	0003a000 	.inst	0x0003a000 ; undefined
    151c:	00000000 	.inst	0x00000000 ; undefined
    1520:	84000300 	ld1sb	{z0.s}, p0/z, [x24, z0.s, uxtw]
    1524:	03ac9f7f 	.inst	0x03ac9f7f ; undefined
    1528:	00000000 	.inst	0x00000000 ; undefined
    152c:	03c40000 	.inst	0x03c40000 ; undefined
    1530:	00000000 	.inst	0x00000000 ; undefined
    1534:	00010000 	.inst	0x00010000 ; undefined
    1538:	0003c464 	.inst	0x0003c464 ; undefined
    153c:	00000000 	.inst	0x00000000 ; undefined
    1540:	0003cc00 	.inst	0x0003cc00 ; undefined
    1544:	00000000 	.inst	0x00000000 ; undefined
    1548:	84000300 	ld1sb	{z0.s}, p0/z, [x24, z0.s, uxtw]
    154c:	00009f7f 	.inst	0x00009f7f ; undefined
	...
    155c:	03880000 	.inst	0x03880000 ; undefined
    1560:	00000000 	.inst	0x00000000 ; undefined
    1564:	03980000 	.inst	0x03980000 ; undefined
    1568:	00000000 	.inst	0x00000000 ; undefined
    156c:	00010000 	.inst	0x00010000 ; undefined
    1570:	0003ac63 	.inst	0x0003ac63 ; undefined
    1574:	00000000 	.inst	0x00000000 ; undefined
    1578:	0003c000 	.inst	0x0003c000 ; undefined
    157c:	00000000 	.inst	0x00000000 ; undefined
    1580:	63000100 	.inst	0x63000100 ; undefined
	...
    1594:	00000100 	.inst	0x00000100 ; undefined
    1598:	00000000 	.inst	0x00000000 ; undefined
    159c:	0000010c 	.inst	0x0000010c ; undefined
    15a0:	00000000 	.inst	0x00000000 ; undefined
    15a4:	0c500001 	.inst	0x0c500001 ; undefined
    15a8:	00000001 	.inst	0x00000001 ; undefined
    15ac:	20000000 	.inst	0x20000000 ; undefined
    15b0:	00000001 	.inst	0x00000001 ; undefined
    15b4:	01000000 	.inst	0x01000000 ; undefined
    15b8:	00005200 	.inst	0x00005200 ; undefined
	...
    15c8:	00400000 	.inst	0x00400000 ; undefined
    15cc:	00000000 	.inst	0x00000000 ; undefined
    15d0:	005c0000 	.inst	0x005c0000 ; undefined
    15d4:	00000000 	.inst	0x00000000 ; undefined
    15d8:	00010000 	.inst	0x00010000 ; undefined
    15dc:	00005c50 	.inst	0x00005c50 ; undefined
    15e0:	00000000 	.inst	0x00000000 ; undefined
    15e4:	0000cc00 	.inst	0x0000cc00 ; undefined
    15e8:	00000000 	.inst	0x00000000 ; undefined
    15ec:	66000100 	.inst	0x66000100 ; undefined
    15f0:	000000cc 	.inst	0x000000cc ; undefined
    15f4:	00000000 	.inst	0x00000000 ; undefined
    15f8:	000000d4 	.inst	0x000000d4 ; undefined
    15fc:	00000000 	.inst	0x00000000 ; undefined
    1600:	01f30004 	.inst	0x01f30004 ; undefined
    1604:	00009f50 	.inst	0x00009f50 ; undefined
	...
    1614:	00700000 	.inst	0x00700000 ; undefined
    1618:	00000000 	.inst	0x00000000 ; undefined
    161c:	00740000 	.inst	0x00740000 ; undefined
    1620:	00000000 	.inst	0x00000000 ; undefined
    1624:	00020000 	.inst	0x00020000 ; undefined
    1628:	00749f30 	.inst	0x00749f30 ; undefined
    162c:	00000000 	.inst	0x00000000 ; undefined
    1630:	00c80000 	.inst	0x00c80000 ; undefined
    1634:	00000000 	.inst	0x00000000 ; undefined
    1638:	00010000 	.inst	0x00010000 ; undefined
    163c:	00000064 	.inst	0x00000064 ; undefined
	...
    164c:	00007000 	.inst	0x00007000 ; undefined
    1650:	00000000 	.inst	0x00000000 ; undefined
    1654:	00007400 	.inst	0x00007400 ; undefined
    1658:	00000000 	.inst	0x00000000 ; undefined
    165c:	40000200 	.inst	0x40000200 ; undefined
    1660:	0000749f 	.inst	0x0000749f ; undefined
    1664:	00000000 	.inst	0x00000000 ; undefined
    1668:	00008000 	.inst	0x00008000 ; undefined
    166c:	00000000 	.inst	0x00000000 ; undefined
    1670:	63000100 	.inst	0x63000100 ; undefined
    1674:	00000080 	.inst	0x00000080 ; undefined
    1678:	00000000 	.inst	0x00000000 ; undefined
    167c:	00000088 	.inst	0x00000088 ; undefined
    1680:	00000000 	.inst	0x00000000 ; undefined
    1684:	7f830003 	.inst	0x7f830003 ; undefined
    1688:	0000889f 	.inst	0x0000889f ; undefined
    168c:	00000000 	.inst	0x00000000 ; undefined
    1690:	0000b800 	.inst	0x0000b800 ; undefined
    1694:	00000000 	.inst	0x00000000 ; undefined
    1698:	63000100 	.inst	0x63000100 ; undefined
    169c:	000000b8 	.inst	0x000000b8 ; undefined
    16a0:	00000000 	.inst	0x00000000 ; undefined
    16a4:	000000c0 	.inst	0x000000c0 ; undefined
    16a8:	00000000 	.inst	0x00000000 ; undefined
    16ac:	7f830003 	.inst	0x7f830003 ; undefined
    16b0:	0000c09f 	.inst	0x0000c09f ; undefined
    16b4:	00000000 	.inst	0x00000000 ; undefined
    16b8:	0000c800 	.inst	0x0000c800 ; undefined
    16bc:	00000000 	.inst	0x00000000 ; undefined
    16c0:	63000100 	.inst	0x63000100 ; undefined
	...
    16d4:	00000074 	.inst	0x00000074 ; undefined
    16d8:	00000000 	.inst	0x00000000 ; undefined
    16dc:	0000007f 	.inst	0x0000007f ; undefined
    16e0:	00000000 	.inst	0x00000000 ; undefined
    16e4:	7f510001 	.inst	0x7f510001 ; undefined
    16e8:	00000000 	.inst	0x00000000 ; undefined
    16ec:	84000000 	ld1sb	{z0.s}, p0/z, [x0, z0.s, uxtw]
    16f0:	00000000 	.inst	0x00000000 ; undefined
    16f4:	0b000000 	add	w0, w0, w0
    16f8:	85008600 	.inst	0x85008600 ; undefined
    16fc:	1aff0800 	.inst	0x1aff0800 ; undefined
    1700:	9f1a3f25 	.inst	0x9f1a3f25 ; undefined
    1704:	00000090 	.inst	0x00000090 ; undefined
    1708:	00000000 	.inst	0x00000000 ; undefined
    170c:	00000094 	.inst	0x00000094 ; undefined
    1710:	00000000 	.inst	0x00000000 ; undefined
    1714:	00710005 	.inst	0x00710005 ; undefined
    1718:	949f1a3f 	bl	27c8014 <__bss_size+0x27c800e>
    171c:	00000000 	.inst	0x00000000 ; undefined
    1720:	b7000000 	tbnz	x0, #32, 1720 <__bss_size+0x171a>
    1724:	00000000 	.inst	0x00000000 ; undefined
    1728:	01000000 	.inst	0x01000000 ; undefined
    172c:	00b75100 	.inst	0x00b75100 ; undefined
    1730:	00000000 	.inst	0x00000000 ; undefined
    1734:	00bc0000 	.inst	0x00bc0000 ; undefined
    1738:	00000000 	.inst	0x00000000 ; undefined
    173c:	000b0000 	.inst	0x000b0000 ; undefined
    1740:	00850086 	.inst	0x00850086 ; undefined
    1744:	251aff08 	.inst	0x251aff08 ; undefined
    1748:	009f1a3f 	.inst	0x009f1a3f ; undefined
	...
    1758:	74000000 	.inst	0x74000000 ; undefined
    175c:	00000000 	.inst	0x00000000 ; undefined
    1760:	7c000000 	stur	h0, [x0]
    1764:	00000000 	.inst	0x00000000 ; undefined
    1768:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    176c:	00d77000 	.inst	0x00d77000 ; undefined
    1770:	00007c9f 	.inst	0x00007c9f ; undefined
    1774:	00000000 	.inst	0x00000000 ; undefined
    1778:	00007f00 	.inst	0x00007f00 ; undefined
    177c:	00000000 	.inst	0x00000000 ; undefined
    1780:	50000100 	adr	x0, 17a2 <__bss_size+0x179c>
    1784:	0000007f 	.inst	0x0000007f ; undefined
    1788:	00000000 	.inst	0x00000000 ; undefined
    178c:	00000080 	.inst	0x00000080 ; undefined
    1790:	00000000 	.inst	0x00000000 ; undefined
    1794:	0086000d 	.inst	0x0086000d ; undefined
    1798:	ff080085 	.inst	0xff080085 ; undefined
    179c:	1a3f251a 	.inst	0x1a3f251a ; undefined
    17a0:	ac9f5723 	stp	q3, q21, [x25], #992
    17a4:	00000000 	.inst	0x00000000 ; undefined
    17a8:	b4000000 	cbz	x0, 17a8 <__bss_size+0x17a2>
    17ac:	00000000 	.inst	0x00000000 ; undefined
    17b0:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    17b4:	00d77000 	.inst	0x00d77000 ; undefined
    17b8:	0000b49f 	.inst	0x0000b49f ; undefined
    17bc:	00000000 	.inst	0x00000000 ; undefined
    17c0:	0000b700 	.inst	0x0000b700 ; undefined
    17c4:	00000000 	.inst	0x00000000 ; undefined
    17c8:	70000300 	adr	x0, 182b <__bss_size+0x1825>
    17cc:	00b79f27 	.inst	0x00b79f27 ; undefined
    17d0:	00000000 	.inst	0x00000000 ; undefined
    17d4:	00bc0000 	.inst	0x00bc0000 ; undefined
    17d8:	00000000 	.inst	0x00000000 ; undefined
    17dc:	000d0000 	.inst	0x000d0000 ; undefined
    17e0:	00850086 	.inst	0x00850086 ; undefined
    17e4:	251aff08 	.inst	0x251aff08 ; undefined
    17e8:	57231a3f 	.inst	0x57231a3f ; undefined
    17ec:	0000009f 	.inst	0x0000009f ; undefined
	...
    17fc:	00007400 	.inst	0x00007400 ; undefined
    1800:	00000000 	.inst	0x00000000 ; undefined
    1804:	00007c00 	.inst	0x00007c00 ; undefined
    1808:	00000000 	.inst	0x00000000 ; undefined
    180c:	70000300 	adr	x0, 186f <__bss_size+0x1869>
    1810:	007c9f30 	.inst	0x007c9f30 ; undefined
    1814:	00000000 	.inst	0x00000000 ; undefined
    1818:	007f0000 	.inst	0x007f0000 ; undefined
    181c:	00000000 	.inst	0x00000000 ; undefined
    1820:	00030000 	.inst	0x00030000 ; undefined
    1824:	7f9f5970 	.inst	0x7f9f5970 ; undefined
    1828:	00000000 	.inst	0x00000000 ; undefined
    182c:	80000000 	.inst	0x80000000 ; undefined
    1830:	00000000 	.inst	0x00000000 ; undefined
    1834:	0d000000 	st1	{v0.b}[0], [x0]
    1838:	85008600 	.inst	0x85008600 ; undefined
    183c:	1aff0800 	.inst	0x1aff0800 ; undefined
    1840:	231a3f25 	.inst	0x231a3f25 ; undefined
    1844:	00ac9f30 	.inst	0x00ac9f30 ; undefined
    1848:	00000000 	.inst	0x00000000 ; undefined
    184c:	00b40000 	.inst	0x00b40000 ; undefined
    1850:	00000000 	.inst	0x00000000 ; undefined
    1854:	00030000 	.inst	0x00030000 ; undefined
    1858:	b49f3070 	cbz	x16, fffffffffff3fe64 <__end+0xffffffe59504>
    185c:	00000000 	.inst	0x00000000 ; undefined
    1860:	b7000000 	tbnz	x0, #32, 1860 <__bss_size+0x185a>
    1864:	00000000 	.inst	0x00000000 ; undefined
    1868:	01000000 	.inst	0x01000000 ; undefined
    186c:	00b75000 	.inst	0x00b75000 ; undefined
    1870:	00000000 	.inst	0x00000000 ; undefined
    1874:	00bc0000 	.inst	0x00bc0000 ; undefined
    1878:	00000000 	.inst	0x00000000 ; undefined
    187c:	000d0000 	.inst	0x000d0000 ; undefined
    1880:	00850086 	.inst	0x00850086 ; undefined
    1884:	251aff08 	.inst	0x251aff08 ; undefined
    1888:	30231a3f 	adr	xzr, 47bcd <__bss_size+0x47bc7>
    188c:	0000009f 	.inst	0x0000009f ; undefined
	...
    189c:	00004000 	.inst	0x00004000 ; undefined
    18a0:	00000000 	.inst	0x00000000 ; undefined
    18a4:	00006000 	.inst	0x00006000 ; undefined
    18a8:	00000000 	.inst	0x00000000 ; undefined
    18ac:	08000300 	stxrb	w0, w0, [x24]
    18b0:	00009f30 	.inst	0x00009f30 ; undefined
	...
    18c0:	00600000 	.inst	0x00600000 ; undefined
    18c4:	00000000 	.inst	0x00000000 ; undefined
    18c8:	00700000 	.inst	0x00700000 ; undefined
    18cc:	00000000 	.inst	0x00000000 ; undefined
    18d0:	00030000 	.inst	0x00030000 ; undefined
    18d4:	009f7808 	.inst	0x009f7808 ; undefined
	...
    18ec:	27000000 	.inst	0x27000000 ; undefined
    18f0:	00000000 	.inst	0x00000000 ; undefined
    18f4:	01000000 	.inst	0x01000000 ; undefined
    18f8:	00275000 	.inst	0x00275000 ; NYI
    18fc:	00000000 	.inst	0x00000000 ; undefined
    1900:	00280000 	.inst	0x00280000 ; NYI
    1904:	00000000 	.inst	0x00000000 ; undefined
    1908:	00040000 	.inst	0x00040000 ; undefined
    190c:	9f5001f3 	.inst	0x9f5001f3 ; undefined
    1910:	00000028 	.inst	0x00000028 ; undefined
    1914:	00000000 	.inst	0x00000000 ; undefined
    1918:	0000002c 	.inst	0x0000002c ; undefined
    191c:	00000000 	.inst	0x00000000 ; undefined
    1920:	2c500001 	ldnp	s1, s0, [x0, #128]
    1924:	00000000 	.inst	0x00000000 ; undefined
    1928:	38000000 	sturb	w0, [x0]
    192c:	00000000 	.inst	0x00000000 ; undefined
    1930:	01000000 	.inst	0x01000000 ; undefined
    1934:	00386300 	.inst	0x00386300 ; NYI
    1938:	00000000 	.inst	0x00000000 ; undefined
    193c:	003f0000 	.inst	0x003f0000 ; NYI
    1940:	00000000 	.inst	0x00000000 ; undefined
    1944:	00010000 	.inst	0x00010000 ; undefined
    1948:	00003f50 	.inst	0x00003f50 ; undefined
    194c:	00000000 	.inst	0x00000000 ; undefined
    1950:	00004000 	.inst	0x00004000 ; undefined
    1954:	00000000 	.inst	0x00000000 ; undefined
    1958:	f3000400 	.inst	0xf3000400 ; undefined
    195c:	009f5001 	.inst	0x009f5001 ; undefined
	...
    196c:	20000000 	.inst	0x20000000 ; undefined
    1970:	00000001 	.inst	0x00000001 ; undefined
    1974:	28000000 	stnp	w0, w0, [x0]
    1978:	00000001 	.inst	0x00000001 ; undefined
    197c:	01000000 	.inst	0x01000000 ; undefined
    1980:	01285000 	.inst	0x01285000 ; undefined
    1984:	00000000 	.inst	0x00000000 ; undefined
    1988:	01700000 	.inst	0x01700000 ; undefined
    198c:	00000000 	.inst	0x00000000 ; undefined
    1990:	00010000 	.inst	0x00010000 ; undefined
    1994:	00000051 	.inst	0x00000051 ; undefined
	...
    19a4:	00014400 	.inst	0x00014400 ; undefined
    19a8:	00000000 	.inst	0x00000000 ; undefined
    19ac:	00015800 	.inst	0x00015800 ; undefined
    19b0:	00000000 	.inst	0x00000000 ; undefined
    19b4:	51000100 	sub	w0, w8, #0x0
    19b8:	00000168 	.inst	0x00000168 ; undefined
    19bc:	00000000 	.inst	0x00000000 ; undefined
    19c0:	00000170 	.inst	0x00000170 ; undefined
    19c4:	00000000 	.inst	0x00000000 ; undefined
    19c8:	00510001 	.inst	0x00510001 ; undefined
	...
    19d8:	70000000 	adr	x0, 19db <__bss_size+0x19d5>
    19dc:	00000001 	.inst	0x00000001 ; undefined
    19e0:	ac000000 	stnp	q0, q0, [x0]
    19e4:	00000001 	.inst	0x00000001 ; undefined
    19e8:	01000000 	.inst	0x01000000 ; undefined
    19ec:	01ac5000 	.inst	0x01ac5000 ; undefined
    19f0:	00000000 	.inst	0x00000000 ; undefined
    19f4:	01e80000 	.inst	0x01e80000 ; undefined
    19f8:	00000000 	.inst	0x00000000 ; undefined
    19fc:	00010000 	.inst	0x00010000 ; undefined
    1a00:	00000050 	.inst	0x00000050 ; undefined
	...
    1a10:	00017c00 	.inst	0x00017c00 ; undefined
    1a14:	00000000 	.inst	0x00000000 ; undefined
    1a18:	00018000 	.inst	0x00018000 ; undefined
    1a1c:	00000000 	.inst	0x00000000 ; undefined
    1a20:	30000200 	adr	x0, 1a61 <__bss_size+0x1a5b>
    1a24:	0001809f 	.inst	0x0001809f ; undefined
    1a28:	00000000 	.inst	0x00000000 ; undefined
    1a2c:	0001e800 	.inst	0x0001e800 ; undefined
    1a30:	00000000 	.inst	0x00000000 ; undefined
    1a34:	57000100 	.inst	0x57000100 ; undefined
	...
    1a48:	00000180 	.inst	0x00000180 ; undefined
    1a4c:	00000000 	.inst	0x00000000 ; undefined
    1a50:	0000019c 	.inst	0x0000019c ; undefined
    1a54:	00000000 	.inst	0x00000000 ; undefined
    1a58:	ac500001 	ldnp	q1, q0, [x0, #512]
    1a5c:	00000001 	.inst	0x00000001 ; undefined
    1a60:	c8000000 	stxr	w0, x0, [x0]
    1a64:	00000001 	.inst	0x00000001 ; undefined
    1a68:	01000000 	.inst	0x01000000 ; undefined
    1a6c:	01dc5000 	.inst	0x01dc5000 ; undefined
    1a70:	00000000 	.inst	0x00000000 ; undefined
    1a74:	01e80000 	.inst	0x01e80000 ; undefined
    1a78:	00000000 	.inst	0x00000000 ; undefined
    1a7c:	00010000 	.inst	0x00010000 ; undefined
    1a80:	00000050 	.inst	0x00000050 ; undefined
	...
    1a90:	00018000 	.inst	0x00018000 ; undefined
    1a94:	00000000 	.inst	0x00000000 ; undefined
    1a98:	0001a400 	.inst	0x0001a400 ; undefined
    1a9c:	00000000 	.inst	0x00000000 ; undefined
    1aa0:	50000100 	adr	x0, 1ac2 <__bss_size+0x1abc>
    1aa4:	000001dc 	.inst	0x000001dc ; undefined
    1aa8:	00000000 	.inst	0x00000000 ; undefined
    1aac:	000001e8 	.inst	0x000001e8 ; undefined
    1ab0:	00000000 	.inst	0x00000000 ; undefined
    1ab4:	00500001 	.inst	0x00500001 ; undefined
	...
    1ac4:	f0000000 	adrp	x0, 4000 <__bss_size+0x3ffa>
    1ac8:	00000001 	.inst	0x00000001 ; undefined
    1acc:	14000000 	b	1acc <__bss_size+0x1ac6>
    1ad0:	00000002 	.inst	0x00000002 ; undefined
    1ad4:	01000000 	.inst	0x01000000 ; undefined
    1ad8:	02785000 	.inst	0x02785000 ; undefined
    1adc:	00000000 	.inst	0x00000000 ; undefined
    1ae0:	02940000 	.inst	0x02940000 ; undefined
    1ae4:	00000000 	.inst	0x00000000 ; undefined
    1ae8:	00010000 	.inst	0x00010000 ; undefined
    1aec:	00000050 	.inst	0x00000050 ; undefined
	...
    1afc:	0001f000 	.inst	0x0001f000 ; undefined
    1b00:	00000000 	.inst	0x00000000 ; undefined
    1b04:	00024000 	.inst	0x00024000 ; undefined
    1b08:	00000000 	.inst	0x00000000 ; undefined
    1b0c:	52000100 	eor	w0, w8, #0x1
    1b10:	00000240 	.inst	0x00000240 ; undefined
    1b14:	00000000 	.inst	0x00000000 ; undefined
    1b18:	00000250 	.inst	0x00000250 ; undefined
    1b1c:	00000000 	.inst	0x00000000 ; undefined
    1b20:	50570001 	adr	x1, afb22 <__bss_size+0xafb1c>
    1b24:	00000002 	.inst	0x00000002 ; undefined
    1b28:	58000000 	ldr	x0, 1b28 <__bss_size+0x1b22>
    1b2c:	00000002 	.inst	0x00000002 ; undefined
    1b30:	01000000 	.inst	0x01000000 ; undefined
    1b34:	02585200 	.inst	0x02585200 ; undefined
    1b38:	00000000 	.inst	0x00000000 ; undefined
    1b3c:	02700000 	.inst	0x02700000 ; undefined
    1b40:	00000000 	.inst	0x00000000 ; undefined
    1b44:	00010000 	.inst	0x00010000 ; undefined
    1b48:	00027057 	.inst	0x00027057 ; undefined
    1b4c:	00000000 	.inst	0x00000000 ; undefined
    1b50:	00029400 	.inst	0x00029400 ; undefined
    1b54:	00000000 	.inst	0x00000000 ; undefined
    1b58:	52000100 	eor	w0, w8, #0x1
	...
    1b6c:	000001f0 	.inst	0x000001f0 ; undefined
    1b70:	00000000 	.inst	0x00000000 ; undefined
    1b74:	00000220 	.inst	0x00000220 ; undefined
    1b78:	00000000 	.inst	0x00000000 ; undefined
    1b7c:	9f300002 	.inst	0x9f300002 ; undefined
    1b80:	00000220 	.inst	0x00000220 ; undefined
    1b84:	00000000 	.inst	0x00000000 ; undefined
    1b88:	00000238 	.inst	0x00000238 ; undefined
    1b8c:	00000000 	.inst	0x00000000 ; undefined
    1b90:	50550001 	adr	x1, abb92 <__bss_size+0xabb8c>
    1b94:	00000002 	.inst	0x00000002 ; undefined
    1b98:	70000000 	adr	x0, 1b9b <__bss_size+0x1b95>
    1b9c:	00000002 	.inst	0x00000002 ; undefined
    1ba0:	01000000 	.inst	0x01000000 ; undefined
    1ba4:	02785500 	.inst	0x02785500 ; undefined
    1ba8:	00000000 	.inst	0x00000000 ; undefined
    1bac:	02940000 	.inst	0x02940000 ; undefined
    1bb0:	00000000 	.inst	0x00000000 ; undefined
    1bb4:	00020000 	.inst	0x00020000 ; undefined
    1bb8:	00009f30 	.inst	0x00009f30 ; undefined
	...
    1bc8:	02200000 	.inst	0x02200000 ; undefined
    1bcc:	00000000 	.inst	0x00000000 ; undefined
    1bd0:	02440000 	.inst	0x02440000 ; undefined
    1bd4:	00000000 	.inst	0x00000000 ; undefined
    1bd8:	00010000 	.inst	0x00010000 ; undefined
    1bdc:	00024454 	.inst	0x00024454 ; undefined
    1be0:	00000000 	.inst	0x00000000 ; undefined
    1be4:	00024800 	.inst	0x00024800 ; undefined
    1be8:	00000000 	.inst	0x00000000 ; undefined
    1bec:	74000300 	.inst	0x74000300 ; undefined
    1bf0:	02509f50 	.inst	0x02509f50 ; undefined
    1bf4:	00000000 	.inst	0x00000000 ; undefined
    1bf8:	02640000 	.inst	0x02640000 ; undefined
    1bfc:	00000000 	.inst	0x00000000 ; undefined
    1c00:	00010000 	.inst	0x00010000 ; undefined
    1c04:	00000054 	.inst	0x00000054 ; undefined
	...
    1c14:	0001f000 	.inst	0x0001f000 ; undefined
    1c18:	00000000 	.inst	0x00000000 ; undefined
    1c1c:	00020000 	.inst	0x00020000 ; undefined
    1c20:	00000000 	.inst	0x00000000 ; undefined
    1c24:	31000200 	adds	w0, w16, #0x0
    1c28:	0002009f 	.inst	0x0002009f ; undefined
    1c2c:	00000000 	.inst	0x00000000 ; undefined
    1c30:	00020400 	.inst	0x00020400 ; undefined
    1c34:	00000000 	.inst	0x00000000 ; undefined
    1c38:	73000600 	.inst	0x73000600 ; undefined
    1c3c:	1e007100 	.inst	0x1e007100 ; undefined
    1c40:	0002049f 	.inst	0x0002049f ; undefined
    1c44:	00000000 	.inst	0x00000000 ; undefined
    1c48:	00021400 	.inst	0x00021400 ; undefined
    1c4c:	00000000 	.inst	0x00000000 ; undefined
    1c50:	53000100 	ubfx	w0, w8, #0, #1
    1c54:	00000228 	.inst	0x00000228 ; undefined
    1c58:	00000000 	.inst	0x00000000 ; undefined
    1c5c:	0000022c 	.inst	0x0000022c ; undefined
    1c60:	00000000 	.inst	0x00000000 ; undefined
    1c64:	0073000c 	.inst	0x0073000c ; undefined
    1c68:	00712df7 	.inst	0x00712df7 ; undefined
    1c6c:	f71b2df7 	.inst	0xf71b2df7 ; undefined
    1c70:	022c9f00 	.inst	0x022c9f00 ; undefined
    1c74:	00000000 	.inst	0x00000000 ; undefined
    1c78:	02840000 	.inst	0x02840000 ; undefined
    1c7c:	00000000 	.inst	0x00000000 ; undefined
    1c80:	00010000 	.inst	0x00010000 ; undefined
    1c84:	00028453 	.inst	0x00028453 ; undefined
    1c88:	00000000 	.inst	0x00000000 ; undefined
    1c8c:	00029400 	.inst	0x00029400 ; undefined
    1c90:	00000000 	.inst	0x00000000 ; undefined
    1c94:	31000200 	adds	w0, w16, #0x0
    1c98:	0000009f 	.inst	0x0000009f ; undefined
	...
    1ca8:	0002a000 	.inst	0x0002a000 ; undefined
    1cac:	00000000 	.inst	0x00000000 ; undefined
    1cb0:	0002ac00 	.inst	0x0002ac00 ; undefined
    1cb4:	00000000 	.inst	0x00000000 ; undefined
    1cb8:	50000100 	adr	x0, 1cda <__bss_size+0x1cd4>
    1cbc:	000002ac 	.inst	0x000002ac ; undefined
    1cc0:	00000000 	.inst	0x00000000 ; undefined
    1cc4:	000002f4 	.inst	0x000002f4 ; undefined
    1cc8:	00000000 	.inst	0x00000000 ; undefined
    1ccc:	5c500001 	ldr	d1, a1ccc <__bss_size+0xa1cc6>
    1cd0:	00000003 	.inst	0x00000003 ; undefined
    1cd4:	6c000000 	stnp	d0, d0, [x0]
    1cd8:	00000003 	.inst	0x00000003 ; undefined
    1cdc:	01000000 	.inst	0x01000000 ; undefined
    1ce0:	00005000 	.inst	0x00005000 ; undefined
	...
    1cf0:	02a00000 	.inst	0x02a00000 ; undefined
    1cf4:	00000000 	.inst	0x00000000 ; undefined
    1cf8:	02ac0000 	.inst	0x02ac0000 ; undefined
    1cfc:	00000000 	.inst	0x00000000 ; undefined
    1d00:	00010000 	.inst	0x00010000 ; undefined
    1d04:	0002ac51 	.inst	0x0002ac51 ; undefined
    1d08:	00000000 	.inst	0x00000000 ; undefined
    1d0c:	0002b400 	.inst	0x0002b400 ; undefined
    1d10:	00000000 	.inst	0x00000000 ; undefined
    1d14:	71000300 	subs	w0, w24, #0x0
    1d18:	02b49f01 	.inst	0x02b49f01 ; undefined
    1d1c:	00000000 	.inst	0x00000000 ; undefined
    1d20:	02f40000 	.inst	0x02f40000 ; undefined
    1d24:	00000000 	.inst	0x00000000 ; undefined
    1d28:	00010000 	.inst	0x00010000 ; undefined
    1d2c:	00035c51 	.inst	0x00035c51 ; undefined
    1d30:	00000000 	.inst	0x00000000 ; undefined
    1d34:	00036c00 	.inst	0x00036c00 ; undefined
    1d38:	00000000 	.inst	0x00000000 ; undefined
    1d3c:	51000100 	sub	w0, w8, #0x0
	...
    1d50:	000002b8 	.inst	0x000002b8 ; undefined
    1d54:	00000000 	.inst	0x00000000 ; undefined
    1d58:	00000308 	.inst	0x00000308 ; undefined
    1d5c:	00000000 	.inst	0x00000000 ; undefined
    1d60:	08510001 	ldxrb	w1, [x0]
    1d64:	00000003 	.inst	0x00000003 ; undefined
    1d68:	40000000 	.inst	0x40000000 ; undefined
    1d6c:	00000003 	.inst	0x00000003 ; undefined
    1d70:	01000000 	.inst	0x01000000 ; undefined
    1d74:	03405600 	.inst	0x03405600 ; undefined
    1d78:	00000000 	.inst	0x00000000 ; undefined
    1d7c:	03440000 	.inst	0x03440000 ; undefined
    1d80:	00000000 	.inst	0x00000000 ; undefined
    1d84:	00010000 	.inst	0x00010000 ; undefined
    1d88:	00034451 	.inst	0x00034451 ; undefined
    1d8c:	00000000 	.inst	0x00000000 ; undefined
    1d90:	00035800 	.inst	0x00035800 ; undefined
    1d94:	00000000 	.inst	0x00000000 ; undefined
    1d98:	56000100 	.inst	0x56000100 ; undefined
    1d9c:	0000035c 	.inst	0x0000035c ; undefined
    1da0:	00000000 	.inst	0x00000000 ; undefined
    1da4:	00000368 	.inst	0x00000368 ; undefined
    1da8:	00000000 	.inst	0x00000000 ; undefined
    1dac:	00510001 	.inst	0x00510001 ; undefined
	...
    1dbc:	b8000000 	stur	w0, [x0]
    1dc0:	00000002 	.inst	0x00000002 ; undefined
    1dc4:	58000000 	ldr	x0, 1dc4 <__bss_size+0x1dbe>
    1dc8:	00000003 	.inst	0x00000003 ; undefined
    1dcc:	02000000 	.inst	0x02000000 ; undefined
    1dd0:	5c9f3a00 	ldr	d0, fffffffffff40510 <__end+0xffffffe59bb0>
    1dd4:	00000003 	.inst	0x00000003 ; undefined
    1dd8:	68000000 	.inst	0x68000000 ; undefined
    1ddc:	00000003 	.inst	0x00000003 ; undefined
    1de0:	02000000 	.inst	0x02000000 ; undefined
    1de4:	009f3a00 	.inst	0x009f3a00 ; undefined
	...
    1df4:	b8000000 	stur	w0, [x0]
    1df8:	00000002 	.inst	0x00000002 ; undefined
    1dfc:	f4000000 	.inst	0xf4000000 ; undefined
    1e00:	00000002 	.inst	0x00000002 ; undefined
    1e04:	01000000 	.inst	0x01000000 ; undefined
    1e08:	035c5000 	.inst	0x035c5000 ; undefined
    1e0c:	00000000 	.inst	0x00000000 ; undefined
    1e10:	03680000 	.inst	0x03680000 ; undefined
    1e14:	00000000 	.inst	0x00000000 ; undefined
    1e18:	00010000 	.inst	0x00010000 ; undefined
    1e1c:	00000050 	.inst	0x00000050 ; undefined
	...
    1e2c:	00049000 	.inst	0x00049000 ; undefined
    1e30:	00000000 	.inst	0x00000000 ; undefined
    1e34:	0004c800 	.inst	0x0004c800 ; undefined
    1e38:	00000000 	.inst	0x00000000 ; undefined
    1e3c:	50000100 	adr	x0, 1e5e <__bss_size+0x1e58>
    1e40:	000004c8 	.inst	0x000004c8 ; undefined
    1e44:	00000000 	.inst	0x00000000 ; undefined
    1e48:	000004d0 	.inst	0x000004d0 ; undefined
    1e4c:	00000000 	.inst	0x00000000 ; undefined
    1e50:	d0530001 	adrp	x1, a6003000 <__bss_size+0xa6002ffa>
    1e54:	00000004 	.inst	0x00000004 ; undefined
    1e58:	d8000000 	prfm	pldl1keep, 1e58 <__bss_size+0x1e52>
    1e5c:	00000004 	.inst	0x00000004 ; undefined
    1e60:	01000000 	.inst	0x01000000 ; undefined
    1e64:	04d85000 	mla	z0.d, p4/m, z0.d, z24.d
    1e68:	00000000 	.inst	0x00000000 ; undefined
    1e6c:	04e80000 	add	z0.d, z0.d, z8.d
    1e70:	00000000 	.inst	0x00000000 ; undefined
    1e74:	00010000 	.inst	0x00010000 ; undefined
    1e78:	0004e853 	.inst	0x0004e853 ; undefined
    1e7c:	00000000 	.inst	0x00000000 ; undefined
    1e80:	00050000 	.inst	0x00050000 ; undefined
    1e84:	00000000 	.inst	0x00000000 ; undefined
    1e88:	64000100 	.inst	0x64000100 ; undefined
    1e8c:	00000500 	.inst	0x00000500 ; undefined
    1e90:	00000000 	.inst	0x00000000 ; undefined
    1e94:	00000504 	.inst	0x00000504 ; undefined
    1e98:	00000000 	.inst	0x00000000 ; undefined
    1e9c:	01840003 	.inst	0x01840003 ; undefined
    1ea0:	0005049f 	.inst	0x0005049f ; undefined
    1ea4:	00000000 	.inst	0x00000000 ; undefined
    1ea8:	00051800 	.inst	0x00051800 ; undefined
    1eac:	00000000 	.inst	0x00000000 ; undefined
    1eb0:	64000100 	.inst	0x64000100 ; undefined
    1eb4:	0000057c 	.inst	0x0000057c ; undefined
    1eb8:	00000000 	.inst	0x00000000 ; undefined
    1ebc:	00000590 	.inst	0x00000590 ; undefined
    1ec0:	00000000 	.inst	0x00000000 ; undefined
    1ec4:	90640001 	adrp	x1, c8001000 <__bss_size+0xc8000ffa>
    1ec8:	00000005 	.inst	0x00000005 ; undefined
    1ecc:	94000000 	bl	1ecc <__bss_size+0x1ec6>
    1ed0:	00000005 	.inst	0x00000005 ; undefined
    1ed4:	03000000 	.inst	0x03000000 ; undefined
    1ed8:	9f018400 	.inst	0x9f018400 ; undefined
    1edc:	00000594 	.inst	0x00000594 ; undefined
    1ee0:	00000000 	.inst	0x00000000 ; undefined
    1ee4:	000005b0 	.inst	0x000005b0 ; undefined
    1ee8:	00000000 	.inst	0x00000000 ; undefined
    1eec:	b0640001 	adrp	x1, c8002000 <__bss_size+0xc8001ffa>
    1ef0:	00000005 	.inst	0x00000005 ; undefined
    1ef4:	b4000000 	cbz	x0, 1ef4 <__bss_size+0x1eee>
    1ef8:	00000005 	.inst	0x00000005 ; undefined
    1efc:	03000000 	.inst	0x03000000 ; undefined
    1f00:	9f018400 	.inst	0x9f018400 ; undefined
    1f04:	000005b4 	.inst	0x000005b4 ; undefined
    1f08:	00000000 	.inst	0x00000000 ; undefined
    1f0c:	000005c4 	.inst	0x000005c4 ; undefined
    1f10:	00000000 	.inst	0x00000000 ; undefined
    1f14:	c4640001 	prfb	pldl1strm, p0, [x0, z4.d, sxtw]
    1f18:	00000005 	.inst	0x00000005 ; undefined
    1f1c:	d4000000 	.inst	0xd4000000 ; undefined
    1f20:	00000005 	.inst	0x00000005 ; undefined
    1f24:	01000000 	.inst	0x01000000 ; undefined
    1f28:	05d45000 	mov	z0.d, p4/m, #-128
    1f2c:	00000000 	.inst	0x00000000 ; undefined
    1f30:	05dc0000 	mov	z0.d, p12/z, #0
    1f34:	00000000 	.inst	0x00000000 ; undefined
    1f38:	00010000 	.inst	0x00010000 ; undefined
    1f3c:	0005dc64 	.inst	0x0005dc64 ; undefined
    1f40:	00000000 	.inst	0x00000000 ; undefined
    1f44:	0005e000 	.inst	0x0005e000 ; undefined
    1f48:	00000000 	.inst	0x00000000 ; undefined
    1f4c:	70000300 	adr	x0, 1faf <__bss_size+0x1fa9>
    1f50:	05e09f7f 	mov	z31.d, p7/m, d27
    1f54:	00000000 	.inst	0x00000000 ; undefined
    1f58:	05e40000 	.inst	0x05e40000 ; undefined
    1f5c:	00000000 	.inst	0x00000000 ; undefined
    1f60:	00010000 	.inst	0x00010000 ; undefined
    1f64:	0005e464 	.inst	0x0005e464 ; undefined
    1f68:	00000000 	.inst	0x00000000 ; undefined
    1f6c:	0005e800 	.inst	0x0005e800 ; undefined
    1f70:	00000000 	.inst	0x00000000 ; undefined
    1f74:	70000300 	adr	x0, 1fd7 <__bss_size+0x1fd1>
    1f78:	00009f7e 	.inst	0x00009f7e ; undefined
	...
    1f88:	04900000 	mul	z0.s, p0/m, z0.s, z0.s
    1f8c:	00000000 	.inst	0x00000000 ; undefined
    1f90:	04c40000 	.inst	0x04c40000 ; undefined
    1f94:	00000000 	.inst	0x00000000 ; undefined
    1f98:	00010000 	.inst	0x00010000 ; undefined
    1f9c:	0004c451 	.inst	0x0004c451 ; undefined
    1fa0:	00000000 	.inst	0x00000000 ; undefined
    1fa4:	00054000 	.inst	0x00054000 ; undefined
    1fa8:	00000000 	.inst	0x00000000 ; undefined
    1fac:	66000100 	.inst	0x66000100 ; undefined
    1fb0:	00000540 	.inst	0x00000540 ; undefined
    1fb4:	00000000 	.inst	0x00000000 ; undefined
    1fb8:	000005c4 	.inst	0x000005c4 ; undefined
    1fbc:	00000000 	.inst	0x00000000 ; undefined
    1fc0:	01f30004 	.inst	0x01f30004 ; undefined
    1fc4:	05c49f51 	.inst	0x05c49f51 ; undefined
    1fc8:	00000000 	.inst	0x00000000 ; undefined
    1fcc:	05e00000 	.inst	0x05e00000 ; undefined
    1fd0:	00000000 	.inst	0x00000000 ; undefined
    1fd4:	00010000 	.inst	0x00010000 ; undefined
    1fd8:	0005e051 	.inst	0x0005e051 ; undefined
    1fdc:	00000000 	.inst	0x00000000 ; undefined
    1fe0:	0005e800 	.inst	0x0005e800 ; undefined
    1fe4:	00000000 	.inst	0x00000000 ; undefined
    1fe8:	66000100 	.inst	0x66000100 ; undefined
	...
    1ffc:	00000490 	.inst	0x00000490 ; undefined
    2000:	00000000 	.inst	0x00000000 ; undefined
    2004:	000004c8 	.inst	0x000004c8 ; undefined
    2008:	00000000 	.inst	0x00000000 ; undefined
    200c:	c8520001 	ldxr	x1, [x0]
    2010:	00000004 	.inst	0x00000004 ; undefined
    2014:	10000000 	adr	x0, 2014 <__bss_size+0x200e>
    2018:	00000005 	.inst	0x00000005 ; undefined
    201c:	01000000 	.inst	0x01000000 ; undefined
    2020:	05106700 	.inst	0x05106700 ; undefined
    2024:	00000000 	.inst	0x00000000 ; undefined
    2028:	05340000 	ext	z0.b, z0.b, z0.b, #160
    202c:	00000000 	.inst	0x00000000 ; undefined
    2030:	00010000 	.inst	0x00010000 ; undefined
    2034:	00053465 	.inst	0x00053465 ; undefined
    2038:	00000000 	.inst	0x00000000 ; undefined
    203c:	00053800 	.inst	0x00053800 ; undefined
    2040:	00000000 	.inst	0x00000000 ; undefined
    2044:	85000300 	.inst	0x85000300 ; undefined
    2048:	054c9f7f 	.inst	0x054c9f7f ; undefined
    204c:	00000000 	.inst	0x00000000 ; undefined
    2050:	05640000 	.inst	0x05640000 ; undefined
    2054:	00000000 	.inst	0x00000000 ; undefined
    2058:	00010000 	.inst	0x00010000 ; undefined
    205c:	00056465 	.inst	0x00056465 ; undefined
    2060:	00000000 	.inst	0x00000000 ; undefined
    2064:	00057000 	.inst	0x00057000 ; undefined
    2068:	00000000 	.inst	0x00000000 ; undefined
    206c:	85000300 	.inst	0x85000300 ; undefined
    2070:	057c9f7f 	.inst	0x057c9f7f ; undefined
    2074:	00000000 	.inst	0x00000000 ; undefined
    2078:	05c40000 	.inst	0x05c40000 ; undefined
    207c:	00000000 	.inst	0x00000000 ; undefined
    2080:	00010000 	.inst	0x00010000 ; undefined
    2084:	0005c467 	.inst	0x0005c467 ; undefined
    2088:	00000000 	.inst	0x00000000 ; undefined
    208c:	0005e000 	.inst	0x0005e000 ; undefined
    2090:	00000000 	.inst	0x00000000 ; undefined
    2094:	52000100 	eor	w0, w8, #0x1
    2098:	000005e0 	.inst	0x000005e0 ; undefined
    209c:	00000000 	.inst	0x00000000 ; undefined
    20a0:	000005e8 	.inst	0x000005e8 ; undefined
    20a4:	00000000 	.inst	0x00000000 ; undefined
    20a8:	00670001 	.inst	0x00670001 ; undefined
	...
    20b8:	14000000 	b	20b8 <__bss_size+0x20b2>
    20bc:	00000005 	.inst	0x00000005 ; undefined
    20c0:	38000000 	sturb	w0, [x0]
    20c4:	00000005 	.inst	0x00000005 ; undefined
    20c8:	01000000 	.inst	0x01000000 ; undefined
    20cc:	054c6300 	.inst	0x054c6300 ; undefined
    20d0:	00000000 	.inst	0x00000000 ; undefined
    20d4:	056c0000 	.inst	0x056c0000 ; undefined
    20d8:	00000000 	.inst	0x00000000 ; undefined
    20dc:	00010000 	.inst	0x00010000 ; undefined
    20e0:	00056c63 	.inst	0x00056c63 ; undefined
    20e4:	00000000 	.inst	0x00000000 ; undefined
    20e8:	00057000 	.inst	0x00057000 ; undefined
    20ec:	00000000 	.inst	0x00000000 ; undefined
    20f0:	85000200 	.inst	0x85000200 ; undefined
    20f4:	0000007f 	.inst	0x0000007f ; undefined
	...
    2104:	0004b000 	.inst	0x0004b000 ; undefined
    2108:	00000000 	.inst	0x00000000 ; undefined
    210c:	0004c800 	.inst	0x0004c800 ; undefined
    2110:	00000000 	.inst	0x00000000 ; undefined
    2114:	65000100 	.inst	0x65000100 ; undefined
    2118:	000004c8 	.inst	0x000004c8 ; undefined
    211c:	00000000 	.inst	0x00000000 ; undefined
    2120:	000004d8 	.inst	0x000004d8 ; undefined
    2124:	00000000 	.inst	0x00000000 ; undefined
    2128:	d8510001 	prfm	pldl1strm, a4128 <__bss_size+0xa4122>
    212c:	00000004 	.inst	0x00000004 ; undefined
    2130:	dc000000 	.inst	0xdc000000 ; undefined
    2134:	00000004 	.inst	0x00000004 ; undefined
    2138:	03000000 	.inst	0x03000000 ; undefined
    213c:	9f017100 	.inst	0x9f017100 ; undefined
    2140:	000004dc 	.inst	0x000004dc ; undefined
    2144:	00000000 	.inst	0x00000000 ; undefined
    2148:	000004ec 	.inst	0x000004ec ; undefined
    214c:	00000000 	.inst	0x00000000 ; undefined
    2150:	c4510001 	ld1sb	{z1.d}, p0/z, [x0, z17.d, sxtw]
    2154:	00000005 	.inst	0x00000005 ; undefined
    2158:	e0000000 	.inst	0xe0000000 ; undefined
    215c:	00000005 	.inst	0x00000005 ; undefined
    2160:	01000000 	.inst	0x01000000 ; undefined
    2164:	05e06500 	zip2	z0.d, z8.d, z0.d
    2168:	00000000 	.inst	0x00000000 ; undefined
    216c:	05e80000 	.inst	0x05e80000 ; undefined
    2170:	00000000 	.inst	0x00000000 ; undefined
    2174:	00010000 	.inst	0x00010000 ; undefined
    2178:	00000051 	.inst	0x00000051 ; undefined
	...
    2188:	00057c00 	.inst	0x00057c00 ; undefined
    218c:	00000000 	.inst	0x00000000 ; undefined
    2190:	0005c400 	.inst	0x0005c400 ; undefined
    2194:	00000000 	.inst	0x00000000 ; undefined
    2198:	3a000200 	adcs	w0, w16, w0
    219c:	0000009f 	.inst	0x0000009f ; undefined
	...
    21ac:	00051c00 	.inst	0x00051c00 ; undefined
    21b0:	00000000 	.inst	0x00000000 ; undefined
    21b4:	00053400 	.inst	0x00053400 ; undefined
    21b8:	00000000 	.inst	0x00000000 ; undefined
    21bc:	63000100 	.inst	0x63000100 ; undefined
    21c0:	0000054c 	.inst	0x0000054c ; undefined
    21c4:	00000000 	.inst	0x00000000 ; undefined
    21c8:	00000564 	.inst	0x00000564 ; undefined
    21cc:	00000000 	.inst	0x00000000 ; undefined
    21d0:	00630001 	.inst	0x00630001 ; undefined
	...
    21e0:	48000000 	stxrh	w0, w0, [x0]
    21e4:	00000002 	.inst	0x00000002 ; undefined
    21e8:	4b000000 	sub	w0, w0, w0
    21ec:	00000002 	.inst	0x00000002 ; undefined
    21f0:	01000000 	.inst	0x01000000 ; undefined
    21f4:	024b5000 	.inst	0x024b5000 ; undefined
    21f8:	00000000 	.inst	0x00000000 ; undefined
    21fc:	02580000 	.inst	0x02580000 ; undefined
    2200:	00000000 	.inst	0x00000000 ; undefined
    2204:	00010000 	.inst	0x00010000 ; undefined
    2208:	00028863 	.inst	0x00028863 ; undefined
    220c:	00000000 	.inst	0x00000000 ; undefined
    2210:	00028f00 	.inst	0x00028f00 ; undefined
    2214:	00000000 	.inst	0x00000000 ; undefined
    2218:	50000100 	adr	x0, 223a <__bss_size+0x2234>
    221c:	0000028f 	.inst	0x0000028f ; undefined
    2220:	00000000 	.inst	0x00000000 ; undefined
    2224:	0000029c 	.inst	0x0000029c ; undefined
    2228:	00000000 	.inst	0x00000000 ; undefined
    222c:	00630001 	.inst	0x00630001 ; undefined
	...
    223c:	50000000 	adr	x0, 223e <__bss_size+0x2238>
    2240:	00000002 	.inst	0x00000002 ; undefined
    2244:	58000000 	ldr	x0, 2244 <__bss_size+0x223e>
    2248:	00000002 	.inst	0x00000002 ; undefined
    224c:	01000000 	.inst	0x01000000 ; undefined
    2250:	02886300 	.inst	0x02886300 ; undefined
    2254:	00000000 	.inst	0x00000000 ; undefined
    2258:	028f0000 	.inst	0x028f0000 ; undefined
    225c:	00000000 	.inst	0x00000000 ; undefined
    2260:	00010000 	.inst	0x00010000 ; undefined
    2264:	00028f50 	.inst	0x00028f50 ; undefined
    2268:	00000000 	.inst	0x00000000 ; undefined
    226c:	00029c00 	.inst	0x00029c00 ; undefined
    2270:	00000000 	.inst	0x00000000 ; undefined
    2274:	63000100 	.inst	0x63000100 ; undefined
	...
    2288:	000002d0 	.inst	0x000002d0 ; undefined
    228c:	00000000 	.inst	0x00000000 ; undefined
    2290:	000002ec 	.inst	0x000002ec ; undefined
    2294:	00000000 	.inst	0x00000000 ; undefined
    2298:	65080003 	.inst	0x65080003 ; undefined
    229c:	0000009f 	.inst	0x0000009f ; undefined
	...
    22ac:	00003000 	.inst	0x00003000 ; undefined
    22b0:	00000000 	.inst	0x00000000 ; undefined
    22b4:	00004400 	.inst	0x00004400 ; undefined
    22b8:	00000000 	.inst	0x00000000 ; undefined
    22bc:	30000200 	adr	x0, 22fd <__bss_size+0x22f7>
    22c0:	0000449f 	.inst	0x0000449f ; undefined
    22c4:	00000000 	.inst	0x00000000 ; undefined
    22c8:	00004c00 	.inst	0x00004c00 ; undefined
    22cc:	00000000 	.inst	0x00000000 ; undefined
    22d0:	63000100 	.inst	0x63000100 ; undefined
    22d4:	00000054 	.inst	0x00000054 ; undefined
    22d8:	00000000 	.inst	0x00000000 ; undefined
    22dc:	00000064 	.inst	0x00000064 ; undefined
    22e0:	00000000 	.inst	0x00000000 ; undefined
    22e4:	00630001 	.inst	0x00630001 ; undefined
	...
    22f4:	88000000 	stxr	w0, w0, [x0]
    22f8:	00000000 	.inst	0x00000000 ; undefined
    22fc:	8b000000 	add	x0, x0, x0
    2300:	00000000 	.inst	0x00000000 ; undefined
    2304:	01000000 	.inst	0x01000000 ; undefined
    2308:	00945000 	.inst	0x00945000 ; undefined
    230c:	00000000 	.inst	0x00000000 ; undefined
    2310:	00a30000 	.inst	0x00a30000 ; undefined
    2314:	00000000 	.inst	0x00000000 ; undefined
    2318:	00010000 	.inst	0x00010000 ; undefined
    231c:	00000050 	.inst	0x00000050 ; undefined
	...
    232c:	0000b000 	.inst	0x0000b000 ; undefined
    2330:	00000000 	.inst	0x00000000 ; undefined
    2334:	0000c000 	.inst	0x0000c000 ; undefined
    2338:	00000000 	.inst	0x00000000 ; undefined
    233c:	30000200 	adr	x0, 237d <__bss_size+0x2377>
    2340:	0000c09f 	.inst	0x0000c09f ; undefined
    2344:	00000000 	.inst	0x00000000 ; undefined
    2348:	0000c800 	.inst	0x0000c800 ; undefined
    234c:	00000000 	.inst	0x00000000 ; undefined
    2350:	63000100 	.inst	0x63000100 ; undefined
    2354:	000000c8 	.inst	0x000000c8 ; undefined
    2358:	00000000 	.inst	0x00000000 ; undefined
    235c:	000000cb 	.inst	0x000000cb ; undefined
    2360:	00000000 	.inst	0x00000000 ; undefined
    2364:	00500001 	.inst	0x00500001 ; undefined
	...
    2374:	f0000000 	adrp	x0, 5000 <__bss_size+0x4ffa>
    2378:	00000000 	.inst	0x00000000 ; undefined
    237c:	28000000 	stnp	w0, w0, [x0]
    2380:	00000001 	.inst	0x00000001 ; undefined
    2384:	01000000 	.inst	0x01000000 ; undefined
    2388:	01285000 	.inst	0x01285000 ; undefined
    238c:	00000000 	.inst	0x00000000 ; undefined
    2390:	01d40000 	.inst	0x01d40000 ; undefined
    2394:	00000000 	.inst	0x00000000 ; undefined
    2398:	00040000 	.inst	0x00040000 ; undefined
    239c:	9f5001f3 	.inst	0x9f5001f3 ; undefined
	...
    23b0:	00000140 	.inst	0x00000140 ; undefined
    23b4:	00000000 	.inst	0x00000000 ; undefined
    23b8:	00000164 	.inst	0x00000164 ; undefined
    23bc:	00000000 	.inst	0x00000000 ; undefined
    23c0:	65080003 	.inst	0x65080003 ; undefined
    23c4:	0000009f 	.inst	0x0000009f ; undefined
	...
    23d4:	00008000 	.inst	0x00008000 ; undefined
    23d8:	00000000 	.inst	0x00000000 ; undefined
    23dc:	00009400 	.inst	0x00009400 ; undefined
    23e0:	00000000 	.inst	0x00000000 ; undefined
    23e4:	50000100 	adr	x0, 2406 <__bss_size+0x2400>
    23e8:	00000094 	.inst	0x00000094 ; undefined
    23ec:	00000000 	.inst	0x00000000 ; undefined
    23f0:	000000b4 	.inst	0x000000b4 ; undefined
    23f4:	00000000 	.inst	0x00000000 ; undefined
    23f8:	00630001 	.inst	0x00630001 ; undefined
	...
    2408:	70000000 	adr	x0, 240b <__bss_size+0x2405>
    240c:	00000000 	.inst	0x00000000 ; undefined
    2410:	7c000000 	stur	h0, [x0]
    2414:	00000000 	.inst	0x00000000 ; undefined
    2418:	01000000 	.inst	0x01000000 ; undefined
    241c:	007c5000 	.inst	0x007c5000 ; undefined
    2420:	00000000 	.inst	0x00000000 ; undefined
    2424:	00840000 	.inst	0x00840000 ; undefined
    2428:	00000000 	.inst	0x00000000 ; undefined
    242c:	00040000 	.inst	0x00040000 ; undefined
    2430:	9f5001f3 	.inst	0x9f5001f3 ; undefined
	...
    2444:	00000160 	.inst	0x00000160 ; undefined
    2448:	00000000 	.inst	0x00000000 ; undefined
    244c:	00000188 	.inst	0x00000188 ; undefined
    2450:	00000000 	.inst	0x00000000 ; undefined
    2454:	88500001 	ldxr	w1, [x0]
    2458:	00000001 	.inst	0x00000001 ; undefined
    245c:	90000000 	adrp	x0, 2000 <__bss_size+0x1ffa>
    2460:	00000001 	.inst	0x00000001 ; undefined
    2464:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    2468:	5001f300 	adr	x0, 62ca <__bss_size+0x62c4>
    246c:	0001909f 	.inst	0x0001909f ; undefined
    2470:	00000000 	.inst	0x00000000 ; undefined
    2474:	00019400 	.inst	0x00019400 ; undefined
    2478:	00000000 	.inst	0x00000000 ; undefined
    247c:	50000100 	adr	x0, 249e <__bss_size+0x2498>
    2480:	00000194 	.inst	0x00000194 ; undefined
    2484:	00000000 	.inst	0x00000000 ; undefined
    2488:	000001b4 	.inst	0x000001b4 ; undefined
    248c:	00000000 	.inst	0x00000000 ; undefined
    2490:	20700003 	.inst	0x20700003 ; undefined
    2494:	0001b49f 	.inst	0x0001b49f ; undefined
    2498:	00000000 	.inst	0x00000000 ; undefined
    249c:	0001bc00 	.inst	0x0001bc00 ; undefined
    24a0:	00000000 	.inst	0x00000000 ; undefined
    24a4:	f3000400 	.inst	0xf3000400 ; undefined
    24a8:	009f5001 	.inst	0x009f5001 ; undefined
	...
    24b8:	60000000 	.inst	0x60000000 ; undefined
    24bc:	00000001 	.inst	0x00000001 ; undefined
    24c0:	84000000 	ld1sb	{z0.s}, p0/z, [x0, z0.s, uxtw]
    24c4:	00000001 	.inst	0x00000001 ; undefined
    24c8:	01000000 	.inst	0x01000000 ; undefined
    24cc:	01905000 	.inst	0x01905000 ; undefined
    24d0:	00000000 	.inst	0x00000000 ; undefined
    24d4:	01940000 	.inst	0x01940000 ; undefined
    24d8:	00000000 	.inst	0x00000000 ; undefined
    24dc:	00010000 	.inst	0x00010000 ; undefined
    24e0:	00019450 	.inst	0x00019450 ; undefined
    24e4:	00000000 	.inst	0x00000000 ; undefined
    24e8:	0001b000 	.inst	0x0001b000 ; undefined
    24ec:	00000000 	.inst	0x00000000 ; undefined
    24f0:	70000300 	adr	x0, 2553 <__bss_size+0x254d>
    24f4:	00009f20 	.inst	0x00009f20 ; undefined
	...
    2504:	01200000 	.inst	0x01200000 ; undefined
    2508:	00000000 	.inst	0x00000000 ; undefined
    250c:	01380000 	.inst	0x01380000 ; undefined
    2510:	00000000 	.inst	0x00000000 ; undefined
    2514:	00010000 	.inst	0x00010000 ; undefined
    2518:	00013850 	.inst	0x00013850 ; undefined
    251c:	00000000 	.inst	0x00000000 ; undefined
    2520:	00014000 	.inst	0x00014000 ; undefined
    2524:	00000000 	.inst	0x00000000 ; undefined
    2528:	f3000400 	.inst	0xf3000400 ; undefined
    252c:	409f5001 	.inst	0x409f5001 ; undefined
    2530:	00000001 	.inst	0x00000001 ; undefined
    2534:	50000000 	adr	x0, 2536 <__bss_size+0x2530>
    2538:	00000001 	.inst	0x00000001 ; undefined
    253c:	01000000 	.inst	0x01000000 ; undefined
    2540:	01505000 	.inst	0x01505000 ; undefined
    2544:	00000000 	.inst	0x00000000 ; undefined
    2548:	01580000 	.inst	0x01580000 ; undefined
    254c:	00000000 	.inst	0x00000000 ; undefined
    2550:	00040000 	.inst	0x00040000 ; undefined
    2554:	9f5001f3 	.inst	0x9f5001f3 ; undefined
	...
    2570:	00000044 	.inst	0x00000044 ; undefined
    2574:	00000000 	.inst	0x00000000 ; undefined
    2578:	44500001 	.inst	0x44500001 ; undefined
    257c:	00000000 	.inst	0x00000000 ; undefined
    2580:	48000000 	stxrh	w0, w0, [x0]
    2584:	00000000 	.inst	0x00000000 ; undefined
    2588:	03000000 	.inst	0x03000000 ; undefined
    258c:	9f327000 	.inst	0x9f327000 ; undefined
    2590:	00000048 	.inst	0x00000048 ; undefined
    2594:	00000000 	.inst	0x00000000 ; undefined
    2598:	0000004c 	.inst	0x0000004c ; undefined
    259c:	00000000 	.inst	0x00000000 ; undefined
    25a0:	4c500001 	.inst	0x4c500001 ; undefined
    25a4:	00000000 	.inst	0x00000000 ; undefined
    25a8:	50000000 	adr	x0, 25aa <__bss_size+0x25a4>
    25ac:	00000000 	.inst	0x00000000 ; undefined
    25b0:	03000000 	.inst	0x03000000 ; undefined
    25b4:	9f0a7200 	.inst	0x9f0a7200 ; undefined
    25b8:	00000050 	.inst	0x00000050 ; undefined
    25bc:	00000000 	.inst	0x00000000 ; undefined
    25c0:	00000054 	.inst	0x00000054 ; undefined
    25c4:	00000000 	.inst	0x00000000 ; undefined
    25c8:	0a700003 	bic	w3, w0, w16, lsr #0
    25cc:	0000549f 	.inst	0x0000549f ; undefined
    25d0:	00000000 	.inst	0x00000000 ; undefined
    25d4:	00006c00 	.inst	0x00006c00 ; undefined
    25d8:	00000000 	.inst	0x00000000 ; undefined
    25dc:	f3000400 	.inst	0xf3000400 ; undefined
    25e0:	6c9f5001 	stp	d1, d20, [x0], #496
    25e4:	00000000 	.inst	0x00000000 ; undefined
    25e8:	7c000000 	stur	h0, [x0]
    25ec:	00000000 	.inst	0x00000000 ; undefined
    25f0:	01000000 	.inst	0x01000000 ; undefined
    25f4:	007c5000 	.inst	0x007c5000 ; undefined
    25f8:	00000000 	.inst	0x00000000 ; undefined
    25fc:	00900000 	.inst	0x00900000 ; undefined
    2600:	00000000 	.inst	0x00000000 ; undefined
    2604:	00040000 	.inst	0x00040000 ; undefined
    2608:	9f5001f3 	.inst	0x9f5001f3 ; undefined
    260c:	00000090 	.inst	0x00000090 ; undefined
    2610:	00000000 	.inst	0x00000000 ; undefined
    2614:	00000094 	.inst	0x00000094 ; undefined
    2618:	00000000 	.inst	0x00000000 ; undefined
    261c:	94500001 	bl	1402620 <__bss_size+0x140261a>
    2620:	00000000 	.inst	0x00000000 ; undefined
    2624:	98000000 	ldrsw	x0, 2624 <__bss_size+0x261e>
    2628:	00000000 	.inst	0x00000000 ; undefined
    262c:	03000000 	.inst	0x03000000 ; undefined
    2630:	9f147200 	.inst	0x9f147200 ; undefined
    2634:	00000098 	.inst	0x00000098 ; undefined
    2638:	00000000 	.inst	0x00000000 ; undefined
    263c:	000000a0 	.inst	0x000000a0 ; undefined
    2640:	00000000 	.inst	0x00000000 ; undefined
    2644:	14700003 	b	1c02650 <__bss_size+0x1c0264a>
    2648:	0000a09f 	.inst	0x0000a09f ; undefined
    264c:	00000000 	.inst	0x00000000 ; undefined
    2650:	0000b400 	.inst	0x0000b400 ; undefined
    2654:	00000000 	.inst	0x00000000 ; undefined
    2658:	f3000400 	.inst	0xf3000400 ; undefined
    265c:	b49f5001 	cbz	x1, fffffffffff4105c <__end+0xffffffe5a6fc>
    2660:	00000000 	.inst	0x00000000 ; undefined
    2664:	bc000000 	stur	s0, [x0]
    2668:	00000000 	.inst	0x00000000 ; undefined
    266c:	01000000 	.inst	0x01000000 ; undefined
    2670:	00bc5000 	.inst	0x00bc5000 ; undefined
    2674:	00000000 	.inst	0x00000000 ; undefined
    2678:	00c00000 	.inst	0x00c00000 ; undefined
    267c:	00000000 	.inst	0x00000000 ; undefined
    2680:	00030000 	.inst	0x00030000 ; undefined
    2684:	c09f1e72 	.inst	0xc09f1e72 ; undefined
    2688:	00000000 	.inst	0x00000000 ; undefined
    268c:	c8000000 	stxr	w0, x0, [x0]
    2690:	00000000 	.inst	0x00000000 ; undefined
    2694:	03000000 	.inst	0x03000000 ; undefined
    2698:	9f1e7000 	.inst	0x9f1e7000 ; undefined
    269c:	000000c8 	.inst	0x000000c8 ; undefined
    26a0:	00000000 	.inst	0x00000000 ; undefined
    26a4:	000000cc 	.inst	0x000000cc ; undefined
    26a8:	00000000 	.inst	0x00000000 ; undefined
    26ac:	cc500001 	.inst	0xcc500001 ; undefined
    26b0:	00000000 	.inst	0x00000000 ; undefined
    26b4:	d0000000 	adrp	x0, 4000 <__bss_size+0x3ffa>
    26b8:	00000000 	.inst	0x00000000 ; undefined
    26bc:	03000000 	.inst	0x03000000 ; undefined
    26c0:	9f287200 	.inst	0x9f287200 ; undefined
    26c4:	000000d0 	.inst	0x000000d0 ; undefined
    26c8:	00000000 	.inst	0x00000000 ; undefined
    26cc:	000000d8 	.inst	0x000000d8 ; undefined
    26d0:	00000000 	.inst	0x00000000 ; undefined
    26d4:	28700003 	ldnp	w3, w0, [x0, #-128]
    26d8:	0000009f 	.inst	0x0000009f ; undefined
	...
    26e8:	00005400 	.inst	0x00005400 ; undefined
    26ec:	00000000 	.inst	0x00000000 ; undefined
    26f0:	00006c00 	.inst	0x00006c00 ; undefined
    26f4:	00000000 	.inst	0x00000000 ; undefined
    26f8:	52000100 	eor	w0, w8, #0x1
    26fc:	00000078 	.inst	0x00000078 ; undefined
    2700:	00000000 	.inst	0x00000000 ; undefined
    2704:	00000090 	.inst	0x00000090 ; undefined
    2708:	00000000 	.inst	0x00000000 ; undefined
    270c:	9c520001 	ldr	q1, a670c <__bss_size+0xa6706>
    2710:	00000000 	.inst	0x00000000 ; undefined
    2714:	b4000000 	cbz	x0, 2714 <__bss_size+0x270e>
    2718:	00000000 	.inst	0x00000000 ; undefined
    271c:	01000000 	.inst	0x01000000 ; undefined
    2720:	00005200 	.inst	0x00005200 ; undefined
	...
    2738:	00580000 	.inst	0x00580000 ; undefined
    273c:	00000000 	.inst	0x00000000 ; undefined
    2740:	00020000 	.inst	0x00020000 ; undefined
    2744:	006c9f30 	.inst	0x006c9f30 ; undefined
    2748:	00000000 	.inst	0x00000000 ; undefined
    274c:	00800000 	.inst	0x00800000 ; undefined
    2750:	00000000 	.inst	0x00000000 ; undefined
    2754:	00020000 	.inst	0x00020000 ; undefined
    2758:	00909f30 	.inst	0x00909f30 ; undefined
    275c:	00000000 	.inst	0x00000000 ; undefined
    2760:	00a40000 	.inst	0x00a40000 ; undefined
    2764:	00000000 	.inst	0x00000000 ; undefined
    2768:	00020000 	.inst	0x00020000 ; undefined
    276c:	00b49f30 	.inst	0x00b49f30 ; undefined
    2770:	00000000 	.inst	0x00000000 ; undefined
    2774:	00d80000 	.inst	0x00d80000 ; undefined
    2778:	00000000 	.inst	0x00000000 ; undefined
    277c:	00020000 	.inst	0x00020000 ; undefined
    2780:	00009f30 	.inst	0x00009f30 ; undefined
	...
    2798:	00540000 	.inst	0x00540000 ; undefined
    279c:	00000000 	.inst	0x00000000 ; undefined
    27a0:	00020000 	.inst	0x00020000 ; undefined
    27a4:	006c9f30 	.inst	0x006c9f30 ; undefined
    27a8:	00000000 	.inst	0x00000000 ; undefined
    27ac:	00780000 	.inst	0x00780000 ; undefined
    27b0:	00000000 	.inst	0x00000000 ; undefined
    27b4:	00020000 	.inst	0x00020000 ; undefined
    27b8:	00909f30 	.inst	0x00909f30 ; undefined
    27bc:	00000000 	.inst	0x00000000 ; undefined
    27c0:	009c0000 	.inst	0x009c0000 ; undefined
    27c4:	00000000 	.inst	0x00000000 ; undefined
    27c8:	00020000 	.inst	0x00020000 ; undefined
    27cc:	00b49f30 	.inst	0x00b49f30 ; undefined
    27d0:	00000000 	.inst	0x00000000 ; undefined
    27d4:	00d80000 	.inst	0x00d80000 ; undefined
    27d8:	00000000 	.inst	0x00000000 ; undefined
    27dc:	00020000 	.inst	0x00020000 ; undefined
    27e0:	00009f30 	.inst	0x00009f30 ; undefined
	...
    27f0:	00e00000 	.inst	0x00e00000 ; undefined
    27f4:	00000000 	.inst	0x00000000 ; undefined
    27f8:	00f80000 	.inst	0x00f80000 ; undefined
    27fc:	00000000 	.inst	0x00000000 ; undefined
    2800:	00010000 	.inst	0x00010000 ; undefined
    2804:	0000f850 	.inst	0x0000f850 ; undefined
    2808:	00000000 	.inst	0x00000000 ; undefined
    280c:	00010000 	.inst	0x00010000 ; undefined
    2810:	00000000 	.inst	0x00000000 ; undefined
    2814:	f3000400 	.inst	0xf3000400 ; undefined
    2818:	009f5001 	.inst	0x009f5001 ; undefined
    281c:	00000001 	.inst	0x00000001 ; undefined
    2820:	10000000 	adr	x0, 2820 <__bss_size+0x281a>
    2824:	00000001 	.inst	0x00000001 ; undefined
    2828:	01000000 	.inst	0x01000000 ; undefined
    282c:	01105000 	.inst	0x01105000 ; undefined
    2830:	00000000 	.inst	0x00000000 ; undefined
    2834:	01180000 	.inst	0x01180000 ; undefined
    2838:	00000000 	.inst	0x00000000 ; undefined
    283c:	00040000 	.inst	0x00040000 ; undefined
    2840:	9f5001f3 	.inst	0x9f5001f3 ; undefined
	...
    2854:	00000460 	.inst	0x00000460 ; undefined
    2858:	00000000 	.inst	0x00000000 ; undefined
    285c:	000004c0 	.inst	0x000004c0 ; undefined
    2860:	00000000 	.inst	0x00000000 ; undefined
    2864:	c0500001 	.inst	0xc0500001 ; undefined
    2868:	00000004 	.inst	0x00000004 ; undefined
    286c:	f4000000 	.inst	0xf4000000 ; undefined
    2870:	00000004 	.inst	0x00000004 ; undefined
    2874:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    2878:	5001f300 	adr	x0, 66da <__bss_size+0x66d4>
    287c:	0004f49f 	.inst	0x0004f49f ; undefined
    2880:	00000000 	.inst	0x00000000 ; undefined
    2884:	0004fc00 	.inst	0x0004fc00 ; undefined
    2888:	00000000 	.inst	0x00000000 ; undefined
    288c:	50000100 	adr	x0, 28ae <__bss_size+0x28a8>
    2890:	000004fc 	.inst	0x000004fc ; undefined
    2894:	00000000 	.inst	0x00000000 ; undefined
    2898:	00000503 	.inst	0x00000503 ; undefined
    289c:	00000000 	.inst	0x00000000 ; undefined
    28a0:	03510001 	.inst	0x03510001 ; undefined
    28a4:	00000005 	.inst	0x00000005 ; undefined
    28a8:	20000000 	.inst	0x20000000 ; undefined
    28ac:	00000005 	.inst	0x00000005 ; undefined
    28b0:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    28b4:	5001f300 	adr	x0, 6716 <__bss_size+0x6710>
    28b8:	0005209f 	.inst	0x0005209f ; undefined
    28bc:	00000000 	.inst	0x00000000 ; undefined
    28c0:	00052400 	.inst	0x00052400 ; undefined
    28c4:	00000000 	.inst	0x00000000 ; undefined
    28c8:	50000100 	adr	x0, 28ea <__bss_size+0x28e4>
    28cc:	00000524 	.inst	0x00000524 ; undefined
    28d0:	00000000 	.inst	0x00000000 ; undefined
    28d4:	00000548 	.inst	0x00000548 ; undefined
    28d8:	00000000 	.inst	0x00000000 ; undefined
    28dc:	01f30004 	.inst	0x01f30004 ; undefined
    28e0:	00009f50 	.inst	0x00009f50 ; undefined
	...
    28f0:	04600000 	add	z0.h, z0.h, z0.h
    28f4:	00000000 	.inst	0x00000000 ; undefined
    28f8:	04940000 	sdiv	z0.s, p0/m, z0.s, z0.s
    28fc:	00000000 	.inst	0x00000000 ; undefined
    2900:	00010000 	.inst	0x00010000 ; undefined
    2904:	00049451 	.inst	0x00049451 ; undefined
    2908:	00000000 	.inst	0x00000000 ; undefined
    290c:	0004bc00 	.inst	0x0004bc00 ; undefined
    2910:	00000000 	.inst	0x00000000 ; undefined
    2914:	54000100 	b.eq	2934 <__bss_size+0x292e>  // b.none
    2918:	000004bc 	.inst	0x000004bc ; undefined
    291c:	00000000 	.inst	0x00000000 ; undefined
    2920:	000004f4 	.inst	0x000004f4 ; undefined
    2924:	00000000 	.inst	0x00000000 ; undefined
    2928:	01f30004 	.inst	0x01f30004 ; undefined
    292c:	04f49f51 	lsl	z17.d, z26.d, #52
    2930:	00000000 	.inst	0x00000000 ; undefined
    2934:	04f80000 	add	z0.d, z0.d, z24.d
    2938:	00000000 	.inst	0x00000000 ; undefined
    293c:	00010000 	.inst	0x00010000 ; undefined
    2940:	0004f851 	.inst	0x0004f851 ; undefined
    2944:	00000000 	.inst	0x00000000 ; undefined
    2948:	00052000 	.inst	0x00052000 ; undefined
    294c:	00000000 	.inst	0x00000000 ; undefined
    2950:	f3000400 	.inst	0xf3000400 ; undefined
    2954:	209f5101 	.inst	0x209f5101 ; undefined
    2958:	00000005 	.inst	0x00000005 ; undefined
    295c:	2b000000 	adds	w0, w0, w0
    2960:	00000005 	.inst	0x00000005 ; undefined
    2964:	01000000 	.inst	0x01000000 ; undefined
    2968:	052b5100 	trn1	p0.b, p8.b, p11.b
    296c:	00000000 	.inst	0x00000000 ; undefined
    2970:	05480000 	.inst	0x05480000 ; undefined
    2974:	00000000 	.inst	0x00000000 ; undefined
    2978:	00040000 	.inst	0x00040000 ; undefined
    297c:	9f5101f3 	.inst	0x9f5101f3 ; undefined
	...
    2990:	00000460 	.inst	0x00000460 ; undefined
    2994:	00000000 	.inst	0x00000000 ; undefined
    2998:	00000503 	.inst	0x00000503 ; undefined
    299c:	00000000 	.inst	0x00000000 ; undefined
    29a0:	03520001 	.inst	0x03520001 ; undefined
    29a4:	00000005 	.inst	0x00000005 ; undefined
    29a8:	20000000 	.inst	0x20000000 ; undefined
    29ac:	00000005 	.inst	0x00000005 ; undefined
    29b0:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    29b4:	5201f300 	eor	w0, w24, #0xaaaaaaaa
    29b8:	0005209f 	.inst	0x0005209f ; undefined
    29bc:	00000000 	.inst	0x00000000 ; undefined
    29c0:	00052b00 	.inst	0x00052b00 ; undefined
    29c4:	00000000 	.inst	0x00000000 ; undefined
    29c8:	52000100 	eor	w0, w8, #0x1
    29cc:	0000052b 	.inst	0x0000052b ; undefined
    29d0:	00000000 	.inst	0x00000000 ; undefined
    29d4:	00000548 	.inst	0x00000548 ; undefined
    29d8:	00000000 	.inst	0x00000000 ; undefined
    29dc:	01f30004 	.inst	0x01f30004 ; undefined
    29e0:	00009f52 	.inst	0x00009f52 ; undefined
	...
    29f0:	04c00000 	add	z0.d, p0/m, z0.d, z0.d
    29f4:	00000000 	.inst	0x00000000 ; undefined
    29f8:	04d40000 	sdiv	z0.d, p0/m, z0.d, z0.d
    29fc:	00000000 	.inst	0x00000000 ; undefined
    2a00:	00010000 	.inst	0x00010000 ; undefined
    2a04:	0004d450 	.inst	0x0004d450 ; undefined
    2a08:	00000000 	.inst	0x00000000 ; undefined
    2a0c:	0004f400 	.inst	0x0004f400 ; undefined
    2a10:	00000000 	.inst	0x00000000 ; undefined
    2a14:	73000300 	.inst	0x73000300 ; undefined
    2a18:	00009f7d 	.inst	0x00009f7d ; undefined
	...
    2a28:	04c00000 	add	z0.d, p0/m, z0.d, z0.d
    2a2c:	00000000 	.inst	0x00000000 ; undefined
    2a30:	04f40000 	add	z0.d, z0.d, z20.d
    2a34:	00000000 	.inst	0x00000000 ; undefined
    2a38:	00010000 	.inst	0x00010000 ; undefined
    2a3c:	00000052 	.inst	0x00000052 ; undefined
	...
    2a4c:	0004c000 	.inst	0x0004c000 ; undefined
    2a50:	00000000 	.inst	0x00000000 ; undefined
    2a54:	0004f400 	.inst	0x0004f400 ; undefined
    2a58:	00000000 	.inst	0x00000000 ; undefined
    2a5c:	72000500 	ands	w0, w8, #0x3
    2a60:	9f253800 	.inst	0x9f253800 ; undefined
	...
    2a74:	000004c0 	.inst	0x000004c0 ; undefined
    2a78:	00000000 	.inst	0x00000000 ; undefined
    2a7c:	000004f4 	.inst	0x000004f4 ; undefined
    2a80:	00000000 	.inst	0x00000000 ; undefined
    2a84:	00720005 	.inst	0x00720005 ; undefined
    2a88:	009f2540 	.inst	0x009f2540 ; undefined
	...
    2a98:	c0000000 	.inst	0xc0000000 ; undefined
    2a9c:	00000004 	.inst	0x00000004 ; undefined
    2aa0:	f4000000 	.inst	0xf4000000 ; undefined
    2aa4:	00000004 	.inst	0x00000004 ; undefined
    2aa8:	03000000 	.inst	0x03000000 ; undefined
    2aac:	9fff0900 	.inst	0x9fff0900 ; undefined
	...
    2ac0:	00000330 	.inst	0x00000330 ; undefined
    2ac4:	00000000 	.inst	0x00000000 ; undefined
    2ac8:	00000350 	.inst	0x00000350 ; undefined
    2acc:	00000000 	.inst	0x00000000 ; undefined
    2ad0:	50500001 	adr	x1, a2ad2 <__bss_size+0xa2acc>
    2ad4:	00000003 	.inst	0x00000003 ; undefined
    2ad8:	5f000000 	.inst	0x5f000000 ; undefined
    2adc:	00000003 	.inst	0x00000003 ; undefined
    2ae0:	03000000 	.inst	0x03000000 ; undefined
    2ae4:	00e48f00 	.inst	0x00e48f00 ; undefined
    2ae8:	0000035f 	.inst	0x0000035f ; undefined
    2aec:	00000000 	.inst	0x00000000 ; undefined
    2af0:	0000045c 	.inst	0x0000045c ; undefined
    2af4:	00000000 	.inst	0x00000000 ; undefined
    2af8:	01f30004 	.inst	0x01f30004 ; undefined
    2afc:	00009f50 	.inst	0x00009f50 ; undefined
	...
    2b0c:	03a40000 	.inst	0x03a40000 ; undefined
    2b10:	00000000 	.inst	0x00000000 ; undefined
    2b14:	04400000 	add	z0.h, p0/m, z0.h, z0.h
    2b18:	00000000 	.inst	0x00000000 ; undefined
    2b1c:	00010000 	.inst	0x00010000 ; undefined
    2b20:	00000065 	.inst	0x00000065 ; undefined
	...
    2b30:	0003a400 	.inst	0x0003a400 ; undefined
    2b34:	00000000 	.inst	0x00000000 ; undefined
    2b38:	0003d800 	.inst	0x0003d800 ; undefined
    2b3c:	00000000 	.inst	0x00000000 ; undefined
    2b40:	64000100 	.inst	0x64000100 ; undefined
    2b44:	000003d8 	.inst	0x000003d8 ; undefined
    2b48:	00000000 	.inst	0x00000000 ; undefined
    2b4c:	000003dc 	.inst	0x000003dc ; undefined
    2b50:	00000000 	.inst	0x00000000 ; undefined
    2b54:	7f840003 	.inst	0x7f840003 ; undefined
    2b58:	0003dc9f 	.inst	0x0003dc9f ; undefined
    2b5c:	00000000 	.inst	0x00000000 ; undefined
    2b60:	00042800 	.inst	0x00042800 ; undefined
    2b64:	00000000 	.inst	0x00000000 ; undefined
    2b68:	64000100 	.inst	0x64000100 ; undefined
    2b6c:	00000428 	.inst	0x00000428 ; undefined
    2b70:	00000000 	.inst	0x00000000 ; undefined
    2b74:	0000042c 	.inst	0x0000042c ; undefined
    2b78:	00000000 	.inst	0x00000000 ; undefined
    2b7c:	7f840003 	.inst	0x7f840003 ; undefined
    2b80:	00042c9f 	.inst	0x00042c9f ; undefined
    2b84:	00000000 	.inst	0x00000000 ; undefined
    2b88:	00043800 	.inst	0x00043800 ; undefined
    2b8c:	00000000 	.inst	0x00000000 ; undefined
    2b90:	64000100 	.inst	0x64000100 ; undefined
	...
    2ba4:	000003a4 	.inst	0x000003a4 ; undefined
    2ba8:	00000000 	.inst	0x00000000 ; undefined
    2bac:	000003b0 	.inst	0x000003b0 ; undefined
    2bb0:	00000000 	.inst	0x00000000 ; undefined
    2bb4:	b0630001 	adrp	x1, c6003000 <__bss_size+0xc6002ffa>
    2bb8:	00000003 	.inst	0x00000003 ; undefined
    2bbc:	b3000000 	.inst	0xb3000000 ; undefined
    2bc0:	00000003 	.inst	0x00000003 ; undefined
    2bc4:	02000000 	.inst	0x02000000 ; undefined
    2bc8:	e8008500 	.inst	0xe8008500 ; undefined
    2bcc:	00000003 	.inst	0x00000003 ; undefined
    2bd0:	fc000000 	stur	d0, [x0]
    2bd4:	00000003 	.inst	0x00000003 ; undefined
    2bd8:	01000000 	.inst	0x01000000 ; undefined
    2bdc:	03fc6300 	.inst	0x03fc6300 ; undefined
    2be0:	00000000 	.inst	0x00000000 ; undefined
    2be4:	03ff0000 	.inst	0x03ff0000 ; undefined
    2be8:	00000000 	.inst	0x00000000 ; undefined
    2bec:	00020000 	.inst	0x00020000 ; undefined
    2bf0:	00000085 	.inst	0x00000085 ; undefined
	...
    2c08:	00700000 	.inst	0x00700000 ; undefined
    2c0c:	00000000 	.inst	0x00000000 ; undefined
    2c10:	00010000 	.inst	0x00010000 ; undefined
    2c14:	00007050 	.inst	0x00007050 ; undefined
    2c18:	00000000 	.inst	0x00000000 ; undefined
    2c1c:	00017000 	.inst	0x00017000 ; undefined
    2c20:	00000000 	.inst	0x00000000 ; undefined
    2c24:	65000100 	.inst	0x65000100 ; undefined
    2c28:	00000170 	.inst	0x00000170 ; undefined
    2c2c:	00000000 	.inst	0x00000000 ; undefined
    2c30:	00000260 	.inst	0x00000260 ; undefined
    2c34:	00000000 	.inst	0x00000000 ; undefined
    2c38:	01f30004 	.inst	0x01f30004 ; undefined
    2c3c:	02609f50 	.inst	0x02609f50 ; undefined
    2c40:	00000000 	.inst	0x00000000 ; undefined
    2c44:	02c00000 	.inst	0x02c00000 ; undefined
    2c48:	00000000 	.inst	0x00000000 ; undefined
    2c4c:	00010000 	.inst	0x00010000 ; undefined
    2c50:	00000065 	.inst	0x00000065 ; undefined
	...
    2c68:	00001800 	.inst	0x00001800 ; undefined
    2c6c:	00000000 	.inst	0x00000000 ; undefined
    2c70:	51000100 	sub	w0, w8, #0x0
    2c74:	00000018 	.inst	0x00000018 ; undefined
    2c78:	00000000 	.inst	0x00000000 ; undefined
    2c7c:	00000188 	.inst	0x00000188 ; undefined
    2c80:	00000000 	.inst	0x00000000 ; undefined
    2c84:	88630001 	ldxp	w1, w0, [x0]
    2c88:	00000001 	.inst	0x00000001 ; undefined
    2c8c:	60000000 	.inst	0x60000000 ; undefined
    2c90:	00000002 	.inst	0x00000002 ; undefined
    2c94:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    2c98:	5101f300 	sub	w0, w24, #0x7c
    2c9c:	0002609f 	.inst	0x0002609f ; undefined
    2ca0:	00000000 	.inst	0x00000000 ; undefined
    2ca4:	0002c000 	.inst	0x0002c000 ; undefined
    2ca8:	00000000 	.inst	0x00000000 ; undefined
    2cac:	63000100 	.inst	0x63000100 ; undefined
	...
    2cc0:	0000011c 	.inst	0x0000011c ; undefined
    2cc4:	00000000 	.inst	0x00000000 ; undefined
    2cc8:	0000017b 	.inst	0x0000017b ; undefined
    2ccc:	00000000 	.inst	0x00000000 ; undefined
    2cd0:	60540001 	.inst	0x60540001 ; undefined
    2cd4:	00000002 	.inst	0x00000002 ; undefined
    2cd8:	6f000000 	.inst	0x6f000000 ; undefined
    2cdc:	00000002 	.inst	0x00000002 ; undefined
    2ce0:	01000000 	.inst	0x01000000 ; undefined
    2ce4:	02705400 	.inst	0x02705400 ; undefined
    2ce8:	00000000 	.inst	0x00000000 ; undefined
    2cec:	027f0000 	.inst	0x027f0000 ; undefined
    2cf0:	00000000 	.inst	0x00000000 ; undefined
    2cf4:	00010000 	.inst	0x00010000 ; undefined
    2cf8:	00028054 	.inst	0x00028054 ; undefined
    2cfc:	00000000 	.inst	0x00000000 ; undefined
    2d00:	00028f00 	.inst	0x00028f00 ; undefined
    2d04:	00000000 	.inst	0x00000000 ; undefined
    2d08:	54000100 	b.eq	2d28 <__bss_size+0x2d22>  // b.none
    2d0c:	00000290 	.inst	0x00000290 ; undefined
    2d10:	00000000 	.inst	0x00000000 ; undefined
    2d14:	0000029f 	.inst	0x0000029f ; undefined
    2d18:	00000000 	.inst	0x00000000 ; undefined
    2d1c:	a0540001 	.inst	0xa0540001 ; undefined
    2d20:	00000002 	.inst	0x00000002 ; undefined
    2d24:	ab000000 	adds	x0, x0, x0
    2d28:	00000002 	.inst	0x00000002 ; undefined
    2d2c:	01000000 	.inst	0x01000000 ; undefined
    2d30:	00005400 	.inst	0x00005400 ; undefined
	...
    2d40:	01200000 	.inst	0x01200000 ; undefined
    2d44:	00000000 	.inst	0x00000000 ; undefined
    2d48:	01540000 	.inst	0x01540000 ; undefined
    2d4c:	00000000 	.inst	0x00000000 ; undefined
    2d50:	00010000 	.inst	0x00010000 ; undefined
    2d54:	00015450 	.inst	0x00015450 ; undefined
    2d58:	00000000 	.inst	0x00000000 ; undefined
    2d5c:	00017b00 	.inst	0x00017b00 ; undefined
    2d60:	00000000 	.inst	0x00000000 ; undefined
    2d64:	8f000300 	.inst	0x8f000300 ; undefined
    2d68:	026001cc 	.inst	0x026001cc ; undefined
    2d6c:	00000000 	.inst	0x00000000 ; undefined
    2d70:	02640000 	.inst	0x02640000 ; undefined
    2d74:	00000000 	.inst	0x00000000 ; undefined
    2d78:	00010000 	.inst	0x00010000 ; undefined
    2d7c:	00026450 	.inst	0x00026450 ; undefined
    2d80:	00000000 	.inst	0x00000000 ; undefined
    2d84:	00026f00 	.inst	0x00026f00 ; undefined
    2d88:	00000000 	.inst	0x00000000 ; undefined
    2d8c:	8f000300 	.inst	0x8f000300 ; undefined
    2d90:	027001cc 	.inst	0x027001cc ; undefined
    2d94:	00000000 	.inst	0x00000000 ; undefined
    2d98:	02740000 	.inst	0x02740000 ; undefined
    2d9c:	00000000 	.inst	0x00000000 ; undefined
    2da0:	00010000 	.inst	0x00010000 ; undefined
    2da4:	00027450 	.inst	0x00027450 ; undefined
    2da8:	00000000 	.inst	0x00000000 ; undefined
    2dac:	00027f00 	.inst	0x00027f00 ; undefined
    2db0:	00000000 	.inst	0x00000000 ; undefined
    2db4:	8f000300 	.inst	0x8f000300 ; undefined
    2db8:	028001cc 	.inst	0x028001cc ; undefined
    2dbc:	00000000 	.inst	0x00000000 ; undefined
    2dc0:	02840000 	.inst	0x02840000 ; undefined
    2dc4:	00000000 	.inst	0x00000000 ; undefined
    2dc8:	00010000 	.inst	0x00010000 ; undefined
    2dcc:	00028450 	.inst	0x00028450 ; undefined
    2dd0:	00000000 	.inst	0x00000000 ; undefined
    2dd4:	00028f00 	.inst	0x00028f00 ; undefined
    2dd8:	00000000 	.inst	0x00000000 ; undefined
    2ddc:	8f000300 	.inst	0x8f000300 ; undefined
    2de0:	029001cc 	.inst	0x029001cc ; undefined
    2de4:	00000000 	.inst	0x00000000 ; undefined
    2de8:	029f0000 	.inst	0x029f0000 ; undefined
    2dec:	00000000 	.inst	0x00000000 ; undefined
    2df0:	00030000 	.inst	0x00030000 ; undefined
    2df4:	a001cc8f 	.inst	0xa001cc8f ; undefined
    2df8:	00000002 	.inst	0x00000002 ; undefined
    2dfc:	ab000000 	adds	x0, x0, x0
    2e00:	00000002 	.inst	0x00000002 ; undefined
    2e04:	03000000 	.inst	0x03000000 ; undefined
    2e08:	01cc8f00 	.inst	0x01cc8f00 ; undefined
	...
    2e1c:	00000120 	.inst	0x00000120 ; undefined
    2e20:	00000000 	.inst	0x00000000 ; undefined
    2e24:	0000017b 	.inst	0x0000017b ; undefined
    2e28:	00000000 	.inst	0x00000000 ; undefined
    2e2c:	60560001 	.inst	0x60560001 ; undefined
    2e30:	00000002 	.inst	0x00000002 ; undefined
    2e34:	6f000000 	.inst	0x6f000000 ; undefined
    2e38:	00000002 	.inst	0x00000002 ; undefined
    2e3c:	01000000 	.inst	0x01000000 ; undefined
    2e40:	02705600 	.inst	0x02705600 ; undefined
    2e44:	00000000 	.inst	0x00000000 ; undefined
    2e48:	027f0000 	.inst	0x027f0000 ; undefined
    2e4c:	00000000 	.inst	0x00000000 ; undefined
    2e50:	00010000 	.inst	0x00010000 ; undefined
    2e54:	00028056 	.inst	0x00028056 ; undefined
    2e58:	00000000 	.inst	0x00000000 ; undefined
    2e5c:	00028f00 	.inst	0x00028f00 ; undefined
    2e60:	00000000 	.inst	0x00000000 ; undefined
    2e64:	56000100 	.inst	0x56000100 ; undefined
    2e68:	00000290 	.inst	0x00000290 ; undefined
    2e6c:	00000000 	.inst	0x00000000 ; undefined
    2e70:	0000029f 	.inst	0x0000029f ; undefined
    2e74:	00000000 	.inst	0x00000000 ; undefined
    2e78:	a0560001 	.inst	0xa0560001 ; undefined
    2e7c:	00000002 	.inst	0x00000002 ; undefined
    2e80:	ab000000 	adds	x0, x0, x0
    2e84:	00000002 	.inst	0x00000002 ; undefined
    2e88:	01000000 	.inst	0x01000000 ; undefined
    2e8c:	00005600 	.inst	0x00005600 ; undefined
	...
    2e9c:	01840000 	.inst	0x01840000 ; undefined
    2ea0:	00000000 	.inst	0x00000000 ; undefined
    2ea4:	018c0000 	.inst	0x018c0000 ; undefined
    2ea8:	00000000 	.inst	0x00000000 ; undefined
    2eac:	00010000 	.inst	0x00010000 ; undefined
    2eb0:	00018c50 	.inst	0x00018c50 ; undefined
    2eb4:	00000000 	.inst	0x00000000 ; undefined
    2eb8:	00024c00 	.inst	0x00024c00 ; undefined
    2ebc:	00000000 	.inst	0x00000000 ; undefined
    2ec0:	66000100 	.inst	0x66000100 ; undefined
	...
    2ed4:	000001ac 	.inst	0x000001ac ; undefined
    2ed8:	00000000 	.inst	0x00000000 ; undefined
    2edc:	00000254 	.inst	0x00000254 ; undefined
    2ee0:	00000000 	.inst	0x00000000 ; undefined
    2ee4:	00630001 	.inst	0x00630001 ; undefined
	...
    2ef4:	c0000000 	.inst	0xc0000000 ; undefined
    2ef8:	00000002 	.inst	0x00000002 ; undefined
    2efc:	d4000000 	.inst	0xd4000000 ; undefined
    2f00:	00000002 	.inst	0x00000002 ; undefined
    2f04:	01000000 	.inst	0x01000000 ; undefined
    2f08:	02d45000 	.inst	0x02d45000 ; undefined
    2f0c:	00000000 	.inst	0x00000000 ; undefined
    2f10:	02e40000 	.inst	0x02e40000 ; undefined
    2f14:	00000000 	.inst	0x00000000 ; undefined
    2f18:	00010000 	.inst	0x00010000 ; undefined
    2f1c:	0002e463 	.inst	0x0002e463 ; undefined
    2f20:	00000000 	.inst	0x00000000 ; undefined
    2f24:	00032400 	.inst	0x00032400 ; undefined
    2f28:	00000000 	.inst	0x00000000 ; undefined
    2f2c:	f3000400 	.inst	0xf3000400 ; undefined
    2f30:	009f5001 	.inst	0x009f5001 ; undefined
	...
    2f40:	d4000000 	.inst	0xd4000000 ; undefined
    2f44:	00000002 	.inst	0x00000002 ; undefined
    2f48:	e0000000 	.inst	0xe0000000 ; undefined
    2f4c:	00000002 	.inst	0x00000002 ; undefined
    2f50:	06000000 	.inst	0x06000000 ; undefined
    2f54:	08007000 	stxrb	w0, w0, [x0]
    2f58:	e09f1aff 	.inst	0xe09f1aff ; undefined
    2f5c:	00000002 	.inst	0x00000002 ; undefined
    2f60:	e7000000 	.inst	0xe7000000 ; undefined
    2f64:	00000002 	.inst	0x00000002 ; undefined
    2f68:	07000000 	.inst	0x07000000 ; undefined
    2f6c:	7fa97000 	.inst	0x7fa97000 ; undefined
    2f70:	9f1aff08 	.inst	0x9f1aff08 ; undefined
    2f74:	000002e7 	.inst	0x000002e7 ; undefined
    2f78:	00000000 	.inst	0x00000000 ; undefined
    2f7c:	00000300 	.inst	0x00000300 ; undefined
    2f80:	00000000 	.inst	0x00000000 ; undefined
    2f84:	01f30009 	.inst	0x01f30009 ; undefined
    2f88:	08253450 	.inst	0x08253450 ; undefined
    2f8c:	009f1aff 	.inst	0x009f1aff ; undefined
    2f90:	00000003 	.inst	0x00000003 ; undefined
    2f94:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    2f98:	00000003 	.inst	0x00000003 ; undefined
    2f9c:	06000000 	.inst	0x06000000 ; undefined
    2fa0:	08007000 	stxrb	w0, w0, [x0]
    2fa4:	049f1aff 	.inst	0x049f1aff ; undefined
    2fa8:	00000003 	.inst	0x00000003 ; undefined
    2fac:	0b000000 	add	w0, w0, w0
    2fb0:	00000003 	.inst	0x00000003 ; undefined
    2fb4:	06000000 	.inst	0x06000000 ; undefined
    2fb8:	08507000 	ldxrb	w0, [x0]
    2fbc:	0b9f1aff 	add	wzr, w23, wzr, asr #6
    2fc0:	00000003 	.inst	0x00000003 ; undefined
    2fc4:	24000000 	cmphs	p0.b, p0/z, z0.b, z0.b
    2fc8:	00000003 	.inst	0x00000003 ; undefined
    2fcc:	09000000 	.inst	0x09000000 ; undefined
    2fd0:	5001f300 	adr	x0, 6e32 <__bss_size+0x6e2c>
    2fd4:	ff082534 	.inst	0xff082534 ; undefined
    2fd8:	00009f1a 	.inst	0x00009f1a ; undefined
	...
    2fe8:	02e80000 	.inst	0x02e80000 ; undefined
    2fec:	00000000 	.inst	0x00000000 ; undefined
    2ff0:	02f00000 	.inst	0x02f00000 ; undefined
    2ff4:	00000000 	.inst	0x00000000 ; undefined
    2ff8:	00060000 	.inst	0x00060000 ; undefined
    2ffc:	ff080083 	.inst	0xff080083 ; undefined
    3000:	030c9f1a 	.inst	0x030c9f1a ; undefined
    3004:	00000000 	.inst	0x00000000 ; undefined
    3008:	03140000 	.inst	0x03140000 ; undefined
    300c:	00000000 	.inst	0x00000000 ; undefined
    3010:	00060000 	.inst	0x00060000 ; undefined
    3014:	ff080083 	.inst	0xff080083 ; undefined
    3018:	00009f1a 	.inst	0x00009f1a ; undefined
	...
    3028:	06400000 	.inst	0x06400000 ; undefined
    302c:	00000000 	.inst	0x00000000 ; undefined
    3030:	06840000 	.inst	0x06840000 ; undefined
    3034:	00000000 	.inst	0x00000000 ; undefined
    3038:	00010000 	.inst	0x00010000 ; undefined
    303c:	00068450 	.inst	0x00068450 ; undefined
    3040:	00000000 	.inst	0x00000000 ; undefined
    3044:	00085400 	.inst	0x00085400 ; undefined
    3048:	00000000 	.inst	0x00000000 ; undefined
    304c:	f3000400 	.inst	0xf3000400 ; undefined
    3050:	009f5001 	.inst	0x009f5001 ; undefined
	...
    3060:	40000000 	.inst	0x40000000 ; undefined
    3064:	00000006 	.inst	0x00000006 ; undefined
    3068:	7c000000 	stur	h0, [x0]
    306c:	00000006 	.inst	0x00000006 ; undefined
    3070:	01000000 	.inst	0x01000000 ; undefined
    3074:	067c5100 	.inst	0x067c5100 ; undefined
    3078:	00000000 	.inst	0x00000000 ; undefined
    307c:	06cc0000 	.inst	0x06cc0000 ; undefined
    3080:	00000000 	.inst	0x00000000 ; undefined
    3084:	00010000 	.inst	0x00010000 ; undefined
    3088:	0006cc67 	.inst	0x0006cc67 ; undefined
    308c:	00000000 	.inst	0x00000000 ; undefined
    3090:	0006d000 	.inst	0x0006d000 ; undefined
    3094:	00000000 	.inst	0x00000000 ; undefined
    3098:	52000100 	eor	w0, w8, #0x1
    309c:	000006d0 	.inst	0x000006d0 ; undefined
    30a0:	00000000 	.inst	0x00000000 ; undefined
    30a4:	00000704 	.inst	0x00000704 ; undefined
    30a8:	00000000 	.inst	0x00000000 ; undefined
    30ac:	04670001 	add	z1.h, z0.h, z7.h
    30b0:	00000007 	.inst	0x00000007 ; undefined
    30b4:	50000000 	adr	x0, 30b6 <__bss_size+0x30b0>
    30b8:	00000007 	.inst	0x00000007 ; undefined
    30bc:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    30c0:	5101f300 	sub	w0, w24, #0x7c
    30c4:	0007509f 	.inst	0x0007509f ; undefined
    30c8:	00000000 	.inst	0x00000000 ; undefined
    30cc:	00075400 	.inst	0x00075400 ; undefined
    30d0:	00000000 	.inst	0x00000000 ; undefined
    30d4:	51000100 	sub	w0, w8, #0x0
    30d8:	00000754 	.inst	0x00000754 ; undefined
    30dc:	00000000 	.inst	0x00000000 ; undefined
    30e0:	00000820 	.inst	0x00000820 ; undefined
    30e4:	00000000 	.inst	0x00000000 ; undefined
    30e8:	01f30004 	.inst	0x01f30004 ; undefined
    30ec:	08209f51 	.inst	0x08209f51 ; undefined
    30f0:	00000000 	.inst	0x00000000 ; undefined
    30f4:	08280000 	.inst	0x08280000 ; undefined
    30f8:	00000000 	.inst	0x00000000 ; undefined
    30fc:	00010000 	.inst	0x00010000 ; undefined
    3100:	00082851 	.inst	0x00082851 ; undefined
    3104:	00000000 	.inst	0x00000000 ; undefined
    3108:	00083800 	.inst	0x00083800 ; undefined
    310c:	00000000 	.inst	0x00000000 ; undefined
    3110:	f3000400 	.inst	0xf3000400 ; undefined
    3114:	389f5101 	ldursb	x1, [x8, #-11]
    3118:	00000008 	.inst	0x00000008 ; undefined
    311c:	48000000 	stxrh	w0, w0, [x0]
    3120:	00000008 	.inst	0x00000008 ; undefined
    3124:	01000000 	.inst	0x01000000 ; undefined
    3128:	08485100 	ldxrb	w0, [x8]
    312c:	00000000 	.inst	0x00000000 ; undefined
    3130:	08540000 	ldxrb	w0, [x0]
    3134:	00000000 	.inst	0x00000000 ; undefined
    3138:	00040000 	.inst	0x00040000 ; undefined
    313c:	9f5101f3 	.inst	0x9f5101f3 ; undefined
	...
    3150:	0000069c 	.inst	0x0000069c ; undefined
    3154:	00000000 	.inst	0x00000000 ; undefined
    3158:	000006cc 	.inst	0x000006cc ; undefined
    315c:	00000000 	.inst	0x00000000 ; undefined
    3160:	cc670001 	.inst	0xcc670001 ; undefined
    3164:	00000006 	.inst	0x00000006 ; undefined
    3168:	d0000000 	adrp	x0, 5000 <__bss_size+0x4ffa>
    316c:	00000006 	.inst	0x00000006 ; undefined
    3170:	01000000 	.inst	0x01000000 ; undefined
    3174:	06d05200 	.inst	0x06d05200 ; undefined
    3178:	00000000 	.inst	0x00000000 ; undefined
    317c:	06ec0000 	.inst	0x06ec0000 ; undefined
    3180:	00000000 	.inst	0x00000000 ; undefined
    3184:	00010000 	.inst	0x00010000 ; undefined
    3188:	00000067 	.inst	0x00000067 ; undefined
	...
    3198:	00069c00 	.inst	0x00069c00 ; undefined
    319c:	00000000 	.inst	0x00000000 ; undefined
    31a0:	0006ec00 	.inst	0x0006ec00 ; undefined
    31a4:	00000000 	.inst	0x00000000 ; undefined
    31a8:	f3000400 	.inst	0xf3000400 ; undefined
    31ac:	009f5001 	.inst	0x009f5001 ; undefined
	...
    31bc:	9c000000 	ldr	q0, 31bc <__bss_size+0x31b6>
    31c0:	00000006 	.inst	0x00000006 ; undefined
    31c4:	ec000000 	.inst	0xec000000 ; undefined
    31c8:	00000006 	.inst	0x00000006 ; undefined
    31cc:	01000000 	.inst	0x01000000 ; undefined
    31d0:	00006a00 	.inst	0x00006a00 ; undefined
	...
    31e0:	05400000 	eor	z0.s, z0.s, #0x1
    31e4:	00000000 	.inst	0x00000000 ; undefined
    31e8:	05900000 	mov	z0.s, p0/z, #0
    31ec:	00000000 	.inst	0x00000000 ; undefined
    31f0:	00010000 	.inst	0x00010000 ; undefined
    31f4:	00059050 	.inst	0x00059050 ; undefined
    31f8:	00000000 	.inst	0x00000000 ; undefined
    31fc:	0005b400 	.inst	0x0005b400 ; undefined
    3200:	00000000 	.inst	0x00000000 ; undefined
    3204:	50000100 	adr	x0, 3226 <__bss_size+0x3220>
	...
    3218:	00000540 	.inst	0x00000540 ; undefined
    321c:	00000000 	.inst	0x00000000 ; undefined
    3220:	00000570 	.inst	0x00000570 ; undefined
    3224:	00000000 	.inst	0x00000000 ; undefined
    3228:	9f300002 	.inst	0x9f300002 ; undefined
    322c:	00000570 	.inst	0x00000570 ; undefined
    3230:	00000000 	.inst	0x00000000 ; undefined
    3234:	00000574 	.inst	0x00000574 ; undefined
    3238:	00000000 	.inst	0x00000000 ; undefined
    323c:	74530001 	.inst	0x74530001 ; undefined
    3240:	00000005 	.inst	0x00000005 ; undefined
    3244:	7c000000 	stur	h0, [x0]
    3248:	00000005 	.inst	0x00000005 ; undefined
    324c:	01000000 	.inst	0x01000000 ; undefined
    3250:	057c6800 	uzp1	z0.h, z0.h, z28.h
    3254:	00000000 	.inst	0x00000000 ; undefined
    3258:	05b40000 	.inst	0x05b40000 ; undefined
    325c:	00000000 	.inst	0x00000000 ; undefined
    3260:	00010000 	.inst	0x00010000 ; undefined
    3264:	00000053 	.inst	0x00000053 ; undefined
	...
    3274:	0005b400 	.inst	0x0005b400 ; undefined
    3278:	00000000 	.inst	0x00000000 ; undefined
    327c:	00060c00 	.inst	0x00060c00 ; undefined
    3280:	00000000 	.inst	0x00000000 ; undefined
    3284:	89000900 	.inst	0x89000900 ; undefined
    3288:	1c008d00 	ldr	s0, 4428 <__bss_size+0x4422>
    328c:	9f1c5808 	.inst	0x9f1c5808 ; undefined
    3290:	0000060c 	.inst	0x0000060c ; undefined
    3294:	00000000 	.inst	0x00000000 ; undefined
    3298:	00000614 	.inst	0x00000614 ; undefined
    329c:	00000000 	.inst	0x00000000 ; undefined
    32a0:	00890009 	.inst	0x00890009 ; undefined
    32a4:	081c008d 	stxrb	w28, w13, [x4]
    32a8:	009f1c57 	.inst	0x009f1c57 ; undefined
	...
    32b8:	b4000000 	cbz	x0, 32b8 <__bss_size+0x32b2>
    32bc:	00000005 	.inst	0x00000005 ; undefined
    32c0:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
    32c4:	00000006 	.inst	0x00000006 ; undefined
    32c8:	05000000 	orr	z0.s, z0.s, #0x1
    32cc:	40ff0800 	.inst	0x40ff0800 ; undefined
    32d0:	00009f24 	.inst	0x00009f24 ; undefined
	...
    32e0:	05b40000 	.inst	0x05b40000 ; undefined
    32e4:	00000000 	.inst	0x00000000 ; undefined
    32e8:	05c40000 	.inst	0x05c40000 ; undefined
    32ec:	00000000 	.inst	0x00000000 ; undefined
    32f0:	00020000 	.inst	0x00020000 ; undefined
    32f4:	00000089 	.inst	0x00000089 ; undefined
	...
    3304:	05b40000 	.inst	0x05b40000 ; undefined
    3308:	00000000 	.inst	0x00000000 ; undefined
    330c:	060c0000 	.inst	0x060c0000 ; undefined
    3310:	00000000 	.inst	0x00000000 ; undefined
    3314:	00020000 	.inst	0x00020000 ; undefined
    3318:	00009f30 	.inst	0x00009f30 ; undefined
	...
    3328:	05b40000 	.inst	0x05b40000 ; undefined
    332c:	00000000 	.inst	0x00000000 ; undefined
    3330:	060c0000 	.inst	0x060c0000 ; undefined
    3334:	00000000 	.inst	0x00000000 ; undefined
    3338:	00010000 	.inst	0x00010000 ; undefined
    333c:	00000068 	.inst	0x00000068 ; undefined
	...
    334c:	00045000 	.inst	0x00045000 ; undefined
    3350:	00000000 	.inst	0x00000000 ; undefined
    3354:	00047800 	.inst	0x00047800 ; undefined
    3358:	00000000 	.inst	0x00000000 ; undefined
    335c:	50000100 	adr	x0, 337e <__bss_size+0x3378>
    3360:	00000478 	.inst	0x00000478 ; undefined
    3364:	00000000 	.inst	0x00000000 ; undefined
    3368:	00000484 	.inst	0x00000484 ; undefined
    336c:	00000000 	.inst	0x00000000 ; undefined
    3370:	84650001 	prfb	pldl1strm, p0, [x0, z5.s, sxtw]
    3374:	00000004 	.inst	0x00000004 ; undefined
    3378:	8c000000 	.inst	0x8c000000 ; undefined
    337c:	00000004 	.inst	0x00000004 ; undefined
    3380:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3384:	5001f300 	adr	x0, 71e6 <__bss_size+0x71e0>
    3388:	00048c9f 	.inst	0x00048c9f ; undefined
    338c:	00000000 	.inst	0x00000000 ; undefined
    3390:	0004a400 	.inst	0x0004a400 ; undefined
    3394:	00000000 	.inst	0x00000000 ; undefined
    3398:	50000100 	adr	x0, 33ba <__bss_size+0x33b4>
    339c:	000004a4 	.inst	0x000004a4 ; undefined
    33a0:	00000000 	.inst	0x00000000 ; undefined
    33a4:	00000538 	.inst	0x00000538 ; undefined
    33a8:	00000000 	.inst	0x00000000 ; undefined
    33ac:	38650001 	ldaddlb	w5, w1, [x0]
    33b0:	00000005 	.inst	0x00000005 ; undefined
    33b4:	40000000 	.inst	0x40000000 ; undefined
    33b8:	00000005 	.inst	0x00000005 ; undefined
    33bc:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    33c0:	5001f300 	adr	x0, 7222 <__bss_size+0x721c>
    33c4:	0000009f 	.inst	0x0000009f ; undefined
	...
    33d4:	00045000 	.inst	0x00045000 ; undefined
    33d8:	00000000 	.inst	0x00000000 ; undefined
    33dc:	00047c00 	.inst	0x00047c00 ; undefined
    33e0:	00000000 	.inst	0x00000000 ; undefined
    33e4:	30000200 	adr	x0, 3425 <__bss_size+0x341f>
    33e8:	00048c9f 	.inst	0x00048c9f ; undefined
    33ec:	00000000 	.inst	0x00000000 ; undefined
    33f0:	0004a400 	.inst	0x0004a400 ; undefined
    33f4:	00000000 	.inst	0x00000000 ; undefined
    33f8:	30000200 	adr	x0, 3439 <__bss_size+0x3433>
    33fc:	0004a49f 	.inst	0x0004a49f ; undefined
    3400:	00000000 	.inst	0x00000000 ; undefined
    3404:	0004c400 	.inst	0x0004c400 ; undefined
    3408:	00000000 	.inst	0x00000000 ; undefined
    340c:	66000100 	.inst	0x66000100 ; undefined
    3410:	000004c4 	.inst	0x000004c4 ; undefined
    3414:	00000000 	.inst	0x00000000 ; undefined
    3418:	000004cc 	.inst	0x000004cc ; undefined
    341c:	00000000 	.inst	0x00000000 ; undefined
    3420:	7f860003 	.inst	0x7f860003 ; undefined
    3424:	0004cc9f 	.inst	0x0004cc9f ; undefined
    3428:	00000000 	.inst	0x00000000 ; undefined
    342c:	0004e000 	.inst	0x0004e000 ; undefined
    3430:	00000000 	.inst	0x00000000 ; undefined
    3434:	66000100 	.inst	0x66000100 ; undefined
	...
    3448:	000004a4 	.inst	0x000004a4 ; undefined
    344c:	00000000 	.inst	0x00000000 ; undefined
    3450:	000004cc 	.inst	0x000004cc ; undefined
    3454:	00000000 	.inst	0x00000000 ; undefined
    3458:	9f300002 	.inst	0x9f300002 ; undefined
    345c:	000004cc 	.inst	0x000004cc ; undefined
    3460:	00000000 	.inst	0x00000000 ; undefined
    3464:	000004e8 	.inst	0x000004e8 ; undefined
    3468:	00000000 	.inst	0x00000000 ; undefined
    346c:	9f310002 	.inst	0x9f310002 ; undefined
	...
    3480:	00000474 	.inst	0x00000474 ; undefined
    3484:	00000000 	.inst	0x00000000 ; undefined
    3488:	0000048c 	.inst	0x0000048c ; undefined
    348c:	00000000 	.inst	0x00000000 ; undefined
    3490:	9f300002 	.inst	0x9f300002 ; undefined
    3494:	000004e4 	.inst	0x000004e4 ; undefined
    3498:	00000000 	.inst	0x00000000 ; undefined
    349c:	000004f8 	.inst	0x000004f8 ; undefined
    34a0:	00000000 	.inst	0x00000000 ; undefined
    34a4:	9f300002 	.inst	0x9f300002 ; undefined
    34a8:	000004f8 	.inst	0x000004f8 ; undefined
    34ac:	00000000 	.inst	0x00000000 ; undefined
    34b0:	00000518 	.inst	0x00000518 ; undefined
    34b4:	00000000 	.inst	0x00000000 ; undefined
    34b8:	18660001 	ldr	w1, cf4b8 <__bss_size+0xcf4b2>
    34bc:	00000005 	.inst	0x00000005 ; undefined
    34c0:	20000000 	.inst	0x20000000 ; undefined
    34c4:	00000005 	.inst	0x00000005 ; undefined
    34c8:	03000000 	.inst	0x03000000 ; undefined
    34cc:	9f7f8600 	.inst	0x9f7f8600 ; undefined
    34d0:	00000520 	.inst	0x00000520 ; undefined
    34d4:	00000000 	.inst	0x00000000 ; undefined
    34d8:	00000530 	.inst	0x00000530 ; undefined
    34dc:	00000000 	.inst	0x00000000 ; undefined
    34e0:	00660001 	.inst	0x00660001 ; undefined
	...
    34f0:	f8000000 	stur	x0, [x0]
    34f4:	00000004 	.inst	0x00000004 ; undefined
    34f8:	20000000 	.inst	0x20000000 ; undefined
    34fc:	00000005 	.inst	0x00000005 ; undefined
    3500:	02000000 	.inst	0x02000000 ; undefined
    3504:	209f3000 	.inst	0x209f3000 ; undefined
    3508:	00000005 	.inst	0x00000005 ; undefined
    350c:	40000000 	.inst	0x40000000 ; undefined
    3510:	00000005 	.inst	0x00000005 ; undefined
    3514:	02000000 	.inst	0x02000000 ; undefined
    3518:	009f3100 	.inst	0x009f3100 ; undefined
	...
    3528:	f0000000 	adrp	x0, 6000 <__bss_size+0x5ffa>
    352c:	00000001 	.inst	0x00000001 ; undefined
    3530:	1c000000 	ldr	s0, 3530 <__bss_size+0x352a>
    3534:	00000002 	.inst	0x00000002 ; undefined
    3538:	01000000 	.inst	0x01000000 ; undefined
    353c:	021c5000 	.inst	0x021c5000 ; undefined
    3540:	00000000 	.inst	0x00000000 ; undefined
    3544:	026c0000 	.inst	0x026c0000 ; undefined
    3548:	00000000 	.inst	0x00000000 ; undefined
    354c:	00010000 	.inst	0x00010000 ; undefined
    3550:	00026c67 	.inst	0x00026c67 ; undefined
    3554:	00000000 	.inst	0x00000000 ; undefined
    3558:	00027400 	.inst	0x00027400 ; undefined
    355c:	00000000 	.inst	0x00000000 ; undefined
    3560:	f3000400 	.inst	0xf3000400 ; undefined
    3564:	009f5001 	.inst	0x009f5001 ; undefined
	...
    3574:	f0000000 	adrp	x0, 6000 <__bss_size+0x5ffa>
    3578:	00000001 	.inst	0x00000001 ; undefined
    357c:	1c000000 	ldr	s0, 357c <__bss_size+0x3576>
    3580:	00000002 	.inst	0x00000002 ; undefined
    3584:	02000000 	.inst	0x02000000 ; undefined
    3588:	1c9f3000 	ldr	s0, fffffffffff41b88 <__end+0xffffffe5b228>
    358c:	00000002 	.inst	0x00000002 ; undefined
    3590:	6c000000 	stnp	d0, d0, [x0]
    3594:	00000002 	.inst	0x00000002 ; undefined
    3598:	01000000 	.inst	0x01000000 ; undefined
    359c:	00006800 	.inst	0x00006800 ; undefined
	...
    35ac:	021c0000 	.inst	0x021c0000 ; undefined
    35b0:	00000000 	.inst	0x00000000 ; undefined
    35b4:	02280000 	.inst	0x02280000 ; undefined
    35b8:	00000000 	.inst	0x00000000 ; undefined
    35bc:	00020000 	.inst	0x00020000 ; undefined
    35c0:	02289f30 	.inst	0x02289f30 ; undefined
    35c4:	00000000 	.inst	0x00000000 ; undefined
    35c8:	02480000 	.inst	0x02480000 ; undefined
    35cc:	00000000 	.inst	0x00000000 ; undefined
    35d0:	00010000 	.inst	0x00010000 ; undefined
    35d4:	00024863 	.inst	0x00024863 ; undefined
    35d8:	00000000 	.inst	0x00000000 ; undefined
    35dc:	00024c00 	.inst	0x00024c00 ; undefined
    35e0:	00000000 	.inst	0x00000000 ; undefined
    35e4:	83000300 	.inst	0x83000300 ; undefined
    35e8:	024c9f7f 	.inst	0x024c9f7f ; undefined
    35ec:	00000000 	.inst	0x00000000 ; undefined
    35f0:	02640000 	.inst	0x02640000 ; undefined
    35f4:	00000000 	.inst	0x00000000 ; undefined
    35f8:	00010000 	.inst	0x00010000 ; undefined
    35fc:	00000063 	.inst	0x00000063 ; undefined
	...
    360c:	00017000 	.inst	0x00017000 ; undefined
    3610:	00000000 	.inst	0x00000000 ; undefined
    3614:	00019000 	.inst	0x00019000 ; undefined
    3618:	00000000 	.inst	0x00000000 ; undefined
    361c:	50000100 	adr	x0, 363e <__bss_size+0x3638>
    3620:	00000190 	.inst	0x00000190 ; undefined
    3624:	00000000 	.inst	0x00000000 ; undefined
    3628:	000001e4 	.inst	0x000001e4 ; undefined
    362c:	00000000 	.inst	0x00000000 ; undefined
    3630:	e4660001 	.inst	0xe4660001 ; undefined
    3634:	00000001 	.inst	0x00000001 ; undefined
    3638:	f0000000 	adrp	x0, 6000 <__bss_size+0x5ffa>
    363c:	00000001 	.inst	0x00000001 ; undefined
    3640:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3644:	5001f300 	adr	x0, 74a6 <__bss_size+0x74a0>
    3648:	0000009f 	.inst	0x0000009f ; undefined
	...
    3658:	00018000 	.inst	0x00018000 ; undefined
    365c:	00000000 	.inst	0x00000000 ; undefined
    3660:	00019000 	.inst	0x00019000 ; undefined
    3664:	00000000 	.inst	0x00000000 ; undefined
    3668:	50000100 	adr	x0, 368a <__bss_size+0x3684>
    366c:	00000190 	.inst	0x00000190 ; undefined
    3670:	00000000 	.inst	0x00000000 ; undefined
    3674:	000001e4 	.inst	0x000001e4 ; undefined
    3678:	00000000 	.inst	0x00000000 ; undefined
    367c:	e4660001 	.inst	0xe4660001 ; undefined
    3680:	00000001 	.inst	0x00000001 ; undefined
    3684:	f0000000 	adrp	x0, 6000 <__bss_size+0x5ffa>
    3688:	00000001 	.inst	0x00000001 ; undefined
    368c:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3690:	5001f300 	adr	x0, 74f2 <__bss_size+0x74ec>
    3694:	0000009f 	.inst	0x0000009f ; undefined
	...
    36a4:	0000b000 	.inst	0x0000b000 ; undefined
    36a8:	00000000 	.inst	0x00000000 ; undefined
    36ac:	00010000 	.inst	0x00010000 ; undefined
    36b0:	00000000 	.inst	0x00000000 ; undefined
    36b4:	50000100 	adr	x0, 36d6 <__bss_size+0x36d0>
    36b8:	00000100 	.inst	0x00000100 ; undefined
    36bc:	00000000 	.inst	0x00000000 ; undefined
    36c0:	00000154 	.inst	0x00000154 ; undefined
    36c4:	00000000 	.inst	0x00000000 ; undefined
    36c8:	54660001 	b.ne	cf6c8 <__bss_size+0xcf6c2>  // b.any
    36cc:	00000001 	.inst	0x00000001 ; undefined
    36d0:	6c000000 	stnp	d0, d0, [x0]
    36d4:	00000001 	.inst	0x00000001 ; undefined
    36d8:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    36dc:	5001f300 	adr	x0, 753e <__bss_size+0x7538>
    36e0:	0000009f 	.inst	0x0000009f ; undefined
	...
    36f0:	0000dc00 	.inst	0x0000dc00 ; undefined
    36f4:	00000000 	.inst	0x00000000 ; undefined
    36f8:	00016000 	.inst	0x00016000 ; undefined
    36fc:	00000000 	.inst	0x00000000 ; undefined
    3700:	88000900 	stxr	w0, w0, [x8]
    3704:	ffff0c00 	.inst	0xffff0c00 ; undefined
    3708:	9f1affff 	.inst	0x9f1affff ; undefined
	...
    371c:	000000e0 	.inst	0x000000e0 ; undefined
    3720:	00000000 	.inst	0x00000000 ; undefined
    3724:	00000100 	.inst	0x00000100 ; undefined
    3728:	00000000 	.inst	0x00000000 ; undefined
    372c:	00500001 	.inst	0x00500001 ; undefined
    3730:	00000001 	.inst	0x00000001 ; undefined
    3734:	54000000 	b.eq	3734 <__bss_size+0x372e>  // b.none
    3738:	00000001 	.inst	0x00000001 ; undefined
    373c:	01000000 	.inst	0x01000000 ; undefined
    3740:	01546600 	.inst	0x01546600 ; undefined
    3744:	00000000 	.inst	0x00000000 ; undefined
    3748:	016c0000 	.inst	0x016c0000 ; undefined
    374c:	00000000 	.inst	0x00000000 ; undefined
    3750:	00040000 	.inst	0x00040000 ; undefined
    3754:	9f5001f3 	.inst	0x9f5001f3 ; undefined
	...
    3768:	000000e0 	.inst	0x000000e0 ; undefined
    376c:	00000000 	.inst	0x00000000 ; undefined
    3770:	00000160 	.inst	0x00000160 ; undefined
    3774:	00000000 	.inst	0x00000000 ; undefined
    3778:	00690001 	.inst	0x00690001 ; undefined
	...
    3788:	e0000000 	.inst	0xe0000000 ; undefined
    378c:	00000000 	.inst	0x00000000 ; undefined
    3790:	60000000 	.inst	0x60000000 ; undefined
    3794:	00000001 	.inst	0x00000001 ; undefined
    3798:	01000000 	.inst	0x01000000 ; undefined
    379c:	00006800 	.inst	0x00006800 ; undefined
	...
    37b4:	00400000 	.inst	0x00400000 ; undefined
    37b8:	00000000 	.inst	0x00000000 ; undefined
    37bc:	00010000 	.inst	0x00010000 ; undefined
    37c0:	00004050 	.inst	0x00004050 ; undefined
    37c4:	00000000 	.inst	0x00000000 ; undefined
    37c8:	0000b000 	.inst	0x0000b000 ; undefined
    37cc:	00000000 	.inst	0x00000000 ; undefined
    37d0:	f3000400 	.inst	0xf3000400 ; undefined
    37d4:	009f5001 	.inst	0x009f5001 ; undefined
	...
    37ec:	40000000 	.inst	0x40000000 ; undefined
    37f0:	00000000 	.inst	0x00000000 ; undefined
    37f4:	01000000 	.inst	0x01000000 ; undefined
    37f8:	00405100 	.inst	0x00405100 ; undefined
    37fc:	00000000 	.inst	0x00000000 ; undefined
    3800:	00b00000 	.inst	0x00b00000 ; undefined
    3804:	00000000 	.inst	0x00000000 ; undefined
    3808:	00040000 	.inst	0x00040000 ; undefined
    380c:	9f5101f3 	.inst	0x9f5101f3 ; undefined
	...
    3828:	00000040 	.inst	0x00000040 ; undefined
    382c:	00000000 	.inst	0x00000000 ; undefined
    3830:	40520001 	.inst	0x40520001 ; undefined
    3834:	00000000 	.inst	0x00000000 ; undefined
    3838:	b0000000 	adrp	x0, 4000 <__bss_size+0x3ffa>
    383c:	00000000 	.inst	0x00000000 ; undefined
    3840:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3844:	5201f300 	eor	w0, w24, #0xaaaaaaaa
    3848:	0000009f 	.inst	0x0000009f ; undefined
	...
    3860:	00004000 	.inst	0x00004000 ; undefined
    3864:	00000000 	.inst	0x00000000 ; undefined
    3868:	53000100 	ubfx	w0, w8, #0, #1
    386c:	00000040 	.inst	0x00000040 ; undefined
    3870:	00000000 	.inst	0x00000000 ; undefined
    3874:	000000a4 	.inst	0x000000a4 ; undefined
    3878:	00000000 	.inst	0x00000000 ; undefined
    387c:	a46b0001 	.inst	0xa46b0001 ; undefined
    3880:	00000000 	.inst	0x00000000 ; undefined
    3884:	b0000000 	adrp	x0, 4000 <__bss_size+0x3ffa>
    3888:	00000000 	.inst	0x00000000 ; undefined
    388c:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3890:	5301f300 	.inst	0x5301f300 ; undefined
    3894:	0000009f 	.inst	0x0000009f ; undefined
	...
    38ac:	00004000 	.inst	0x00004000 ; undefined
    38b0:	00000000 	.inst	0x00000000 ; undefined
    38b4:	54000100 	b.eq	38d4 <__bss_size+0x38ce>  // b.none
    38b8:	00000040 	.inst	0x00000040 ; undefined
    38bc:	00000000 	.inst	0x00000000 ; undefined
    38c0:	00000098 	.inst	0x00000098 ; undefined
    38c4:	00000000 	.inst	0x00000000 ; undefined
    38c8:	98660001 	ldrsw	x1, cf8c8 <__bss_size+0xcf8c2>
    38cc:	00000000 	.inst	0x00000000 ; undefined
    38d0:	b0000000 	adrp	x0, 4000 <__bss_size+0x3ffa>
    38d4:	00000000 	.inst	0x00000000 ; undefined
    38d8:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    38dc:	5401f300 	b.eq	773c <__bss_size+0x7736>  // b.none
    38e0:	0000009f 	.inst	0x0000009f ; undefined
	...
    38f0:	00001000 	.inst	0x00001000 ; undefined
    38f4:	00000000 	.inst	0x00000000 ; undefined
    38f8:	00004000 	.inst	0x00004000 ; undefined
    38fc:	00000000 	.inst	0x00000000 ; undefined
    3900:	30000200 	adr	x0, 3941 <__bss_size+0x393b>
    3904:	0000409f 	.inst	0x0000409f ; undefined
    3908:	00000000 	.inst	0x00000000 ; undefined
    390c:	00008000 	.inst	0x00008000 ; undefined
    3910:	00000000 	.inst	0x00000000 ; undefined
    3914:	88000700 	stxr	w0, w0, [x24]
    3918:	5001f300 	adr	x0, 777a <__bss_size+0x7774>
    391c:	00809f1c 	.inst	0x00809f1c ; undefined
    3920:	00000000 	.inst	0x00000000 ; undefined
    3924:	00840000 	.inst	0x00840000 ; undefined
    3928:	00000000 	.inst	0x00000000 ; undefined
    392c:	00090000 	.inst	0x00090000 ; undefined
    3930:	01f30088 	.inst	0x01f30088 ; undefined
    3934:	01231c50 	.inst	0x01231c50 ; undefined
    3938:	0000849f 	.inst	0x0000849f ; undefined
    393c:	00000000 	.inst	0x00000000 ; undefined
    3940:	00009c00 	.inst	0x00009c00 ; undefined
    3944:	00000000 	.inst	0x00000000 ; undefined
    3948:	88000700 	stxr	w0, w0, [x24]
    394c:	5001f300 	adr	x0, 77ae <__bss_size+0x77a8>
    3950:	00009f1c 	.inst	0x00009f1c ; undefined
	...
    3960:	00400000 	.inst	0x00400000 ; undefined
    3964:	00000000 	.inst	0x00000000 ; undefined
    3968:	00500000 	.inst	0x00500000 ; undefined
    396c:	00000000 	.inst	0x00000000 ; undefined
    3970:	00020000 	.inst	0x00020000 ; undefined
    3974:	00509f30 	.inst	0x00509f30 ; undefined
    3978:	00000000 	.inst	0x00000000 ; undefined
    397c:	00680000 	.inst	0x00680000 ; undefined
    3980:	00000000 	.inst	0x00000000 ; undefined
    3984:	00060000 	.inst	0x00060000 ; undefined
    3988:	00880083 	.inst	0x00880083 ; undefined
    398c:	00689f1c 	.inst	0x00689f1c ; undefined
    3990:	00000000 	.inst	0x00000000 ; undefined
    3994:	00740000 	.inst	0x00740000 ; undefined
    3998:	00000000 	.inst	0x00000000 ; undefined
    399c:	00070000 	.inst	0x00070000 ; undefined
    39a0:	83200088 	.inst	0x83200088 ; undefined
    39a4:	009f2200 	.inst	0x009f2200 ; undefined
	...
    39b4:	80000000 	.inst	0x80000000 ; undefined
    39b8:	00000002 	.inst	0x00000002 ; undefined
    39bc:	b8000000 	stur	w0, [x0]
    39c0:	00000002 	.inst	0x00000002 ; undefined
    39c4:	01000000 	.inst	0x01000000 ; undefined
    39c8:	02b85000 	.inst	0x02b85000 ; undefined
    39cc:	00000000 	.inst	0x00000000 ; undefined
    39d0:	03000000 	.inst	0x03000000 ; undefined
    39d4:	00000000 	.inst	0x00000000 ; undefined
    39d8:	00010000 	.inst	0x00010000 ; undefined
    39dc:	00030066 	.inst	0x00030066 ; undefined
    39e0:	00000000 	.inst	0x00000000 ; undefined
    39e4:	00031000 	.inst	0x00031000 ; undefined
    39e8:	00000000 	.inst	0x00000000 ; undefined
    39ec:	f3000400 	.inst	0xf3000400 ; undefined
    39f0:	009f5001 	.inst	0x009f5001 ; undefined
	...
    3a00:	80000000 	.inst	0x80000000 ; undefined
    3a04:	00000002 	.inst	0x00000002 ; undefined
    3a08:	b8000000 	stur	w0, [x0]
    3a0c:	00000002 	.inst	0x00000002 ; undefined
    3a10:	02000000 	.inst	0x02000000 ; undefined
    3a14:	b89f3000 	ldursw	x0, [x0, #-13]
    3a18:	00000002 	.inst	0x00000002 ; undefined
    3a1c:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3a20:	00000003 	.inst	0x00000003 ; undefined
    3a24:	01000000 	.inst	0x01000000 ; undefined
    3a28:	00006700 	.inst	0x00006700 ; undefined
	...
    3a38:	02b80000 	.inst	0x02b80000 ; undefined
    3a3c:	00000000 	.inst	0x00000000 ; undefined
    3a40:	02c80000 	.inst	0x02c80000 ; undefined
    3a44:	00000000 	.inst	0x00000000 ; undefined
    3a48:	00020000 	.inst	0x00020000 ; undefined
    3a4c:	02c89f30 	.inst	0x02c89f30 ; undefined
    3a50:	00000000 	.inst	0x00000000 ; undefined
    3a54:	02e80000 	.inst	0x02e80000 ; undefined
    3a58:	00000000 	.inst	0x00000000 ; undefined
    3a5c:	00010000 	.inst	0x00010000 ; undefined
    3a60:	00000063 	.inst	0x00000063 ; undefined
	...
    3a70:	00031000 	.inst	0x00031000 ; undefined
    3a74:	00000000 	.inst	0x00000000 ; undefined
    3a78:	00038800 	.inst	0x00038800 ; undefined
    3a7c:	00000000 	.inst	0x00000000 ; undefined
    3a80:	0a000400 	and	w0, w0, w0, lsl #1
    3a84:	009f26ca 	.inst	0x009f26ca ; undefined
	...
    3a94:	b0000000 	adrp	x0, 4000 <__bss_size+0x3ffa>
    3a98:	00000003 	.inst	0x00000003 ; undefined
    3a9c:	e8000000 	.inst	0xe8000000 ; undefined
    3aa0:	00000003 	.inst	0x00000003 ; undefined
    3aa4:	01000000 	.inst	0x01000000 ; undefined
    3aa8:	03e85000 	.inst	0x03e85000 ; undefined
    3aac:	00000000 	.inst	0x00000000 ; undefined
    3ab0:	043c0000 	add	z0.b, z0.b, z28.b
    3ab4:	00000000 	.inst	0x00000000 ; undefined
    3ab8:	00030000 	.inst	0x00030000 ; undefined
    3abc:	3c9f7989 	.inst	0x3c9f7989 ; undefined
    3ac0:	00000004 	.inst	0x00000004 ; undefined
    3ac4:	44000000 	.inst	0x44000000 ; undefined
    3ac8:	00000004 	.inst	0x00000004 ; undefined
    3acc:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3ad0:	5001f300 	adr	x0, 7932 <__bss_size+0x792c>
    3ad4:	0000009f 	.inst	0x0000009f ; undefined
	...
    3ae4:	0003b000 	.inst	0x0003b000 ; undefined
    3ae8:	00000000 	.inst	0x00000000 ; undefined
    3aec:	0003e800 	.inst	0x0003e800 ; undefined
    3af0:	00000000 	.inst	0x00000000 ; undefined
    3af4:	51000100 	sub	w0, w8, #0x0
    3af8:	000003e8 	.inst	0x000003e8 ; undefined
    3afc:	00000000 	.inst	0x00000000 ; undefined
    3b00:	00000438 	.inst	0x00000438 ; undefined
    3b04:	00000000 	.inst	0x00000000 ; undefined
    3b08:	38680001 	ldaddlb	w8, w1, [x0]
    3b0c:	00000004 	.inst	0x00000004 ; undefined
    3b10:	44000000 	.inst	0x44000000 ; undefined
    3b14:	00000004 	.inst	0x00000004 ; undefined
    3b18:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3b1c:	5101f300 	sub	w0, w24, #0x7c
    3b20:	0000009f 	.inst	0x0000009f ; undefined
	...
    3b30:	0003b000 	.inst	0x0003b000 ; undefined
    3b34:	00000000 	.inst	0x00000000 ; undefined
    3b38:	0003b800 	.inst	0x0003b800 ; undefined
    3b3c:	00000000 	.inst	0x00000000 ; undefined
    3b40:	52000100 	eor	w0, w8, #0x1
    3b44:	000003b8 	.inst	0x000003b8 ; undefined
    3b48:	00000000 	.inst	0x00000000 ; undefined
    3b4c:	00000444 	.inst	0x00000444 ; undefined
    3b50:	00000000 	.inst	0x00000000 ; undefined
    3b54:	01f30004 	.inst	0x01f30004 ; undefined
    3b58:	00009f52 	.inst	0x00009f52 ; undefined
	...
    3b68:	03b00000 	.inst	0x03b00000 ; undefined
    3b6c:	00000000 	.inst	0x00000000 ; undefined
    3b70:	03e80000 	.inst	0x03e80000 ; undefined
    3b74:	00000000 	.inst	0x00000000 ; undefined
    3b78:	00010000 	.inst	0x00010000 ; undefined
    3b7c:	0003e853 	.inst	0x0003e853 ; undefined
    3b80:	00000000 	.inst	0x00000000 ; undefined
    3b84:	00040c00 	.inst	0x00040c00 ; undefined
    3b88:	00000000 	.inst	0x00000000 ; undefined
    3b8c:	67000100 	.inst	0x67000100 ; undefined
    3b90:	0000040c 	.inst	0x0000040c ; undefined
    3b94:	00000000 	.inst	0x00000000 ; undefined
    3b98:	00000410 	.inst	0x00000410 ; undefined
    3b9c:	00000000 	.inst	0x00000000 ; undefined
    3ba0:	10520001 	adr	x1, a7ba0 <__bss_size+0xa7b9a>
    3ba4:	00000004 	.inst	0x00000004 ; undefined
    3ba8:	38000000 	sturb	w0, [x0]
    3bac:	00000004 	.inst	0x00000004 ; undefined
    3bb0:	01000000 	.inst	0x01000000 ; undefined
    3bb4:	04386700 	.inst	0x04386700 ; undefined
    3bb8:	00000000 	.inst	0x00000000 ; undefined
    3bbc:	04440000 	.inst	0x04440000 ; undefined
    3bc0:	00000000 	.inst	0x00000000 ; undefined
    3bc4:	00040000 	.inst	0x00040000 ; undefined
    3bc8:	9f5301f3 	.inst	0x9f5301f3 ; undefined
	...
    3bdc:	000003b0 	.inst	0x000003b0 ; undefined
    3be0:	00000000 	.inst	0x00000000 ; undefined
    3be4:	000003e8 	.inst	0x000003e8 ; undefined
    3be8:	00000000 	.inst	0x00000000 ; undefined
    3bec:	9f300002 	.inst	0x9f300002 ; undefined
    3bf0:	000003e8 	.inst	0x000003e8 ; undefined
    3bf4:	00000000 	.inst	0x00000000 ; undefined
    3bf8:	00000420 	.inst	0x00000420 ; undefined
    3bfc:	00000000 	.inst	0x00000000 ; undefined
    3c00:	20650001 	.inst	0x20650001 ; undefined
    3c04:	00000004 	.inst	0x00000004 ; undefined
    3c08:	24000000 	cmphs	p0.b, p0/z, z0.b, z0.b
    3c0c:	00000004 	.inst	0x00000004 ; undefined
    3c10:	03000000 	.inst	0x03000000 ; undefined
    3c14:	9f018500 	.inst	0x9f018500 ; undefined
	...
    3c28:	000003e8 	.inst	0x000003e8 ; undefined
    3c2c:	00000000 	.inst	0x00000000 ; undefined
    3c30:	000003f0 	.inst	0x000003f0 ; undefined
    3c34:	00000000 	.inst	0x00000000 ; undefined
    3c38:	9f300002 	.inst	0x9f300002 ; undefined
    3c3c:	000003f0 	.inst	0x000003f0 ; undefined
    3c40:	00000000 	.inst	0x00000000 ; undefined
    3c44:	00000414 	.inst	0x00000414 ; undefined
    3c48:	00000000 	.inst	0x00000000 ; undefined
    3c4c:	83370005 	.inst	0x83370005 ; undefined
    3c50:	149f1c00 	b	27cac50 <__bss_size+0x27cac4a>
    3c54:	00000004 	.inst	0x00000004 ; undefined
    3c58:	18000000 	ldr	w0, 3c58 <__bss_size+0x3c52>
    3c5c:	00000004 	.inst	0x00000004 ; undefined
    3c60:	05000000 	orr	z0.s, z0.s, #0x1
    3c64:	00833800 	.inst	0x00833800 ; undefined
    3c68:	04189f1c 	asr	z28.b, p7/m, z28.b, z24.d
    3c6c:	00000000 	.inst	0x00000000 ; undefined
    3c70:	04300000 	add	z0.b, z0.b, z16.b
    3c74:	00000000 	.inst	0x00000000 ; undefined
    3c78:	00050000 	.inst	0x00050000 ; undefined
    3c7c:	1c008337 	ldr	s23, 4ce0 <__bss_size+0x4cda>
    3c80:	0000009f 	.inst	0x0000009f ; undefined
	...
    3c90:	00096400 	.inst	0x00096400 ; undefined
    3c94:	00000000 	.inst	0x00000000 ; undefined
    3c98:	00096700 	.inst	0x00096700 ; undefined
    3c9c:	00000000 	.inst	0x00000000 ; undefined
    3ca0:	50000100 	adr	x0, 3cc2 <__bss_size+0x3cbc>
    3ca4:	00000967 	.inst	0x00000967 ; undefined
    3ca8:	00000000 	.inst	0x00000000 ; undefined
    3cac:	000009d0 	.inst	0x000009d0 ; undefined
    3cb0:	00000000 	.inst	0x00000000 ; undefined
    3cb4:	108f0003 	adr	x3, fffffffffff21cb4 <__end+0xffffffe3b354>
    3cb8:	0009d09f 	.inst	0x0009d09f ; undefined
    3cbc:	00000000 	.inst	0x00000000 ; undefined
    3cc0:	0009dc00 	.inst	0x0009dc00 ; undefined
    3cc4:	00000000 	.inst	0x00000000 ; undefined
    3cc8:	8f000300 	.inst	0x8f000300 ; undefined
    3ccc:	09dc9f60 	.inst	0x09dc9f60 ; undefined
    3cd0:	00000000 	.inst	0x00000000 ; undefined
    3cd4:	09e80000 	.inst	0x09e80000 ; undefined
    3cd8:	00000000 	.inst	0x00000000 ; undefined
    3cdc:	00030000 	.inst	0x00030000 ; undefined
    3ce0:	009f108f 	.inst	0x009f108f ; undefined
	...
    3cf0:	44000000 	.inst	0x44000000 ; undefined
    3cf4:	00000008 	.inst	0x00000008 ; undefined
    3cf8:	08000000 	stxrb	w0, w0, [x0]
    3cfc:	00000009 	.inst	0x00000009 ; undefined
    3d00:	01000000 	.inst	0x01000000 ; undefined
    3d04:	09146a00 	.inst	0x09146a00 ; undefined
    3d08:	00000000 	.inst	0x00000000 ; undefined
    3d0c:	09340000 	.inst	0x09340000 ; undefined
    3d10:	00000000 	.inst	0x00000000 ; undefined
    3d14:	00010000 	.inst	0x00010000 ; undefined
    3d18:	0000006a 	.inst	0x0000006a ; undefined
	...
    3d28:	00087000 	.inst	0x00087000 ; undefined
    3d2c:	00000000 	.inst	0x00000000 ; undefined
    3d30:	0008ec00 	.inst	0x0008ec00 ; undefined
    3d34:	00000000 	.inst	0x00000000 ; undefined
    3d38:	6a000100 	ands	w0, w8, w0
    3d3c:	00000928 	.inst	0x00000928 ; undefined
    3d40:	00000000 	.inst	0x00000000 ; undefined
    3d44:	00000934 	.inst	0x00000934 ; undefined
    3d48:	00000000 	.inst	0x00000000 ; undefined
    3d4c:	006a0001 	.inst	0x006a0001 ; undefined
	...
    3d5c:	84000000 	ld1sb	{z0.s}, p0/z, [x0, z0.s, uxtw]
    3d60:	00000008 	.inst	0x00000008 ; undefined
    3d64:	87000000 	.inst	0x87000000 ; undefined
    3d68:	00000008 	.inst	0x00000008 ; undefined
    3d6c:	01000000 	.inst	0x01000000 ; undefined
    3d70:	08875000 	stllrb	w0, [x0]
    3d74:	00000000 	.inst	0x00000000 ; undefined
    3d78:	09100000 	.inst	0x09100000 ; undefined
    3d7c:	00000000 	.inst	0x00000000 ; undefined
    3d80:	00040000 	.inst	0x00040000 ; undefined
    3d84:	9f01b08f 	.inst	0x9f01b08f ; undefined
    3d88:	00000910 	.inst	0x00000910 ; undefined
    3d8c:	00000000 	.inst	0x00000000 ; undefined
    3d90:	00000914 	.inst	0x00000914 ; undefined
    3d94:	00000000 	.inst	0x00000000 ; undefined
    3d98:	408f0003 	.inst	0x408f0003 ; undefined
    3d9c:	0009289f 	.inst	0x0009289f ; undefined
    3da0:	00000000 	.inst	0x00000000 ; undefined
    3da4:	00093400 	.inst	0x00093400 ; undefined
    3da8:	00000000 	.inst	0x00000000 ; undefined
    3dac:	8f000400 	.inst	0x8f000400 ; undefined
    3db0:	009f01b0 	.inst	0x009f01b0 ; undefined
	...
    3dc0:	a8000000 	stnp	x0, x0, [x0]
    3dc4:	00000007 	.inst	0x00000007 ; undefined
    3dc8:	af000000 	.inst	0xaf000000 ; undefined
    3dcc:	00000007 	.inst	0x00000007 ; undefined
    3dd0:	01000000 	.inst	0x01000000 ; undefined
    3dd4:	07af5000 	.inst	0x07af5000 ; undefined
    3dd8:	00000000 	.inst	0x00000000 ; undefined
    3ddc:	080c0000 	stxrb	w12, w0, [x0]
    3de0:	00000000 	.inst	0x00000000 ; undefined
    3de4:	00040000 	.inst	0x00040000 ; undefined
    3de8:	9f01d08f 	.inst	0x9f01d08f ; undefined
    3dec:	0000080c 	.inst	0x0000080c ; undefined
    3df0:	00000000 	.inst	0x00000000 ; undefined
    3df4:	0000083c 	.inst	0x0000083c ; undefined
    3df8:	00000000 	.inst	0x00000000 ; undefined
    3dfc:	3c500001 	ldur	b1, [x0, #-256]
    3e00:	00000008 	.inst	0x00000008 ; undefined
    3e04:	00000000 	.inst	0x00000000 ; undefined
    3e08:	00000009 	.inst	0x00000009 ; undefined
    3e0c:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3e10:	7f9c8500 	.inst	0x7f9c8500 ; undefined
    3e14:	0009009f 	.inst	0x0009009f ; undefined
    3e18:	00000000 	.inst	0x00000000 ; undefined
    3e1c:	00091000 	.inst	0x00091000 ; undefined
    3e20:	00000000 	.inst	0x00000000 ; undefined
    3e24:	8f000400 	.inst	0x8f000400 ; undefined
    3e28:	109f01d0 	adr	x16, fffffffffff41e60 <__end+0xffffffe5b500>
    3e2c:	00000009 	.inst	0x00000009 ; undefined
    3e30:	14000000 	b	3e30 <__bss_size+0x3e2a>
    3e34:	00000009 	.inst	0x00000009 ; undefined
    3e38:	03000000 	.inst	0x03000000 ; undefined
    3e3c:	9f608f00 	.inst	0x9f608f00 ; undefined
    3e40:	00000914 	.inst	0x00000914 ; undefined
    3e44:	00000000 	.inst	0x00000000 ; undefined
    3e48:	00000934 	.inst	0x00000934 ; undefined
    3e4c:	00000000 	.inst	0x00000000 ; undefined
    3e50:	9c850004 	ldr	q4, fffffffffff0de50 <__end+0xffffffe274f0>
    3e54:	09349f7f 	.inst	0x09349f7f ; undefined
    3e58:	00000000 	.inst	0x00000000 ; undefined
    3e5c:	09400000 	.inst	0x09400000 ; undefined
    3e60:	00000000 	.inst	0x00000000 ; undefined
    3e64:	00040000 	.inst	0x00040000 ; undefined
    3e68:	9f01d08f 	.inst	0x9f01d08f ; undefined
	...
    3e7c:	00000600 	.inst	0x00000600 ; undefined
    3e80:	00000000 	.inst	0x00000000 ; undefined
    3e84:	00000634 	.inst	0x00000634 ; undefined
    3e88:	00000000 	.inst	0x00000000 ; undefined
    3e8c:	34500001 	cbz	w1, a3e8c <__bss_size+0xa3e86>
    3e90:	00000006 	.inst	0x00000006 ; undefined
    3e94:	48000000 	stxrh	w0, w0, [x0]
    3e98:	00000006 	.inst	0x00000006 ; undefined
    3e9c:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3ea0:	5001f300 	adr	x0, 7d02 <__bss_size+0x7cfc>
    3ea4:	0006489f 	.inst	0x0006489f ; undefined
    3ea8:	00000000 	.inst	0x00000000 ; undefined
    3eac:	00066800 	.inst	0x00066800 ; undefined
    3eb0:	00000000 	.inst	0x00000000 ; undefined
    3eb4:	50000100 	adr	x0, 3ed6 <__bss_size+0x3ed0>
    3eb8:	00000668 	.inst	0x00000668 ; undefined
    3ebc:	00000000 	.inst	0x00000000 ; undefined
    3ec0:	0000067c 	.inst	0x0000067c ; undefined
    3ec4:	00000000 	.inst	0x00000000 ; undefined
    3ec8:	01f30004 	.inst	0x01f30004 ; undefined
    3ecc:	067c9f50 	.inst	0x067c9f50 ; undefined
    3ed0:	00000000 	.inst	0x00000000 ; undefined
    3ed4:	06940000 	.inst	0x06940000 ; undefined
    3ed8:	00000000 	.inst	0x00000000 ; undefined
    3edc:	00010000 	.inst	0x00010000 ; undefined
    3ee0:	00069450 	.inst	0x00069450 ; undefined
    3ee4:	00000000 	.inst	0x00000000 ; undefined
    3ee8:	0006a800 	.inst	0x0006a800 ; undefined
    3eec:	00000000 	.inst	0x00000000 ; undefined
    3ef0:	f3000400 	.inst	0xf3000400 ; undefined
    3ef4:	a89f5001 	stp	x1, x20, [x0], #496
    3ef8:	00000006 	.inst	0x00000006 ; undefined
    3efc:	ac000000 	stnp	q0, q0, [x0]
    3f00:	00000006 	.inst	0x00000006 ; undefined
    3f04:	01000000 	.inst	0x01000000 ; undefined
    3f08:	06ac5000 	.inst	0x06ac5000 ; undefined
    3f0c:	00000000 	.inst	0x00000000 ; undefined
    3f10:	06c00000 	.inst	0x06c00000 ; undefined
    3f14:	00000000 	.inst	0x00000000 ; undefined
    3f18:	00040000 	.inst	0x00040000 ; undefined
    3f1c:	9f5001f3 	.inst	0x9f5001f3 ; undefined
    3f20:	000006c0 	.inst	0x000006c0 ; undefined
    3f24:	00000000 	.inst	0x00000000 ; undefined
    3f28:	000006c4 	.inst	0x000006c4 ; undefined
    3f2c:	00000000 	.inst	0x00000000 ; undefined
    3f30:	c4500001 	ld1sb	{z1.d}, p0/z, [x0, z16.d, sxtw]
    3f34:	00000006 	.inst	0x00000006 ; undefined
    3f38:	d8000000 	prfm	pldl1keep, 3f38 <__bss_size+0x3f32>
    3f3c:	00000006 	.inst	0x00000006 ; undefined
    3f40:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3f44:	5001f300 	adr	x0, 7da6 <__bss_size+0x7da0>
    3f48:	0006d89f 	.inst	0x0006d89f ; undefined
    3f4c:	00000000 	.inst	0x00000000 ; undefined
    3f50:	0006dc00 	.inst	0x0006dc00 ; undefined
    3f54:	00000000 	.inst	0x00000000 ; undefined
    3f58:	50000100 	adr	x0, 3f7a <__bss_size+0x3f74>
    3f5c:	000006dc 	.inst	0x000006dc ; undefined
    3f60:	00000000 	.inst	0x00000000 ; undefined
    3f64:	000006f0 	.inst	0x000006f0 ; undefined
    3f68:	00000000 	.inst	0x00000000 ; undefined
    3f6c:	01f30004 	.inst	0x01f30004 ; undefined
    3f70:	06f09f50 	.inst	0x06f09f50 ; undefined
    3f74:	00000000 	.inst	0x00000000 ; undefined
    3f78:	06f40000 	.inst	0x06f40000 ; undefined
    3f7c:	00000000 	.inst	0x00000000 ; undefined
    3f80:	00010000 	.inst	0x00010000 ; undefined
    3f84:	0006f450 	.inst	0x0006f450 ; undefined
    3f88:	00000000 	.inst	0x00000000 ; undefined
    3f8c:	00070800 	.inst	0x00070800 ; undefined
    3f90:	00000000 	.inst	0x00000000 ; undefined
    3f94:	f3000400 	.inst	0xf3000400 ; undefined
    3f98:	089f5001 	stllrb	w1, [x0]
    3f9c:	00000007 	.inst	0x00000007 ; undefined
    3fa0:	14000000 	b	3fa0 <__bss_size+0x3f9a>
    3fa4:	00000007 	.inst	0x00000007 ; undefined
    3fa8:	01000000 	.inst	0x01000000 ; undefined
    3fac:	07145000 	.inst	0x07145000 ; undefined
    3fb0:	00000000 	.inst	0x00000000 ; undefined
    3fb4:	07280000 	.inst	0x07280000 ; undefined
    3fb8:	00000000 	.inst	0x00000000 ; undefined
    3fbc:	00040000 	.inst	0x00040000 ; undefined
    3fc0:	9f5001f3 	.inst	0x9f5001f3 ; undefined
    3fc4:	00000728 	.inst	0x00000728 ; undefined
    3fc8:	00000000 	.inst	0x00000000 ; undefined
    3fcc:	0000072c 	.inst	0x0000072c ; undefined
    3fd0:	00000000 	.inst	0x00000000 ; undefined
    3fd4:	2c500001 	ldnp	s1, s0, [x0, #128]
    3fd8:	00000007 	.inst	0x00000007 ; undefined
    3fdc:	40000000 	.inst	0x40000000 ; undefined
    3fe0:	00000007 	.inst	0x00000007 ; undefined
    3fe4:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    3fe8:	5001f300 	adr	x0, 7e4a <__bss_size+0x7e44>
    3fec:	0007409f 	.inst	0x0007409f ; undefined
    3ff0:	00000000 	.inst	0x00000000 ; undefined
    3ff4:	00074400 	.inst	0x00074400 ; undefined
    3ff8:	00000000 	.inst	0x00000000 ; undefined
    3ffc:	50000100 	adr	x0, 401e <__bss_size+0x4018>
    4000:	00000744 	.inst	0x00000744 ; undefined
    4004:	00000000 	.inst	0x00000000 ; undefined
    4008:	00000758 	.inst	0x00000758 ; undefined
    400c:	00000000 	.inst	0x00000000 ; undefined
    4010:	01f30004 	.inst	0x01f30004 ; undefined
    4014:	07589f50 	.inst	0x07589f50 ; undefined
    4018:	00000000 	.inst	0x00000000 ; undefined
    401c:	075c0000 	.inst	0x075c0000 ; undefined
    4020:	00000000 	.inst	0x00000000 ; undefined
    4024:	00010000 	.inst	0x00010000 ; undefined
    4028:	00075c50 	.inst	0x00075c50 ; undefined
    402c:	00000000 	.inst	0x00000000 ; undefined
    4030:	00076400 	.inst	0x00076400 ; undefined
    4034:	00000000 	.inst	0x00000000 ; undefined
    4038:	f3000400 	.inst	0xf3000400 ; undefined
    403c:	009f5001 	.inst	0x009f5001 ; undefined
	...
    404c:	20000000 	.inst	0x20000000 ; undefined
    4050:	00000005 	.inst	0x00000005 ; undefined
    4054:	44000000 	.inst	0x44000000 ; undefined
    4058:	00000005 	.inst	0x00000005 ; undefined
    405c:	01000000 	.inst	0x01000000 ; undefined
    4060:	05445000 	.inst	0x05445000 ; undefined
    4064:	00000000 	.inst	0x00000000 ; undefined
    4068:	054b0000 	.inst	0x054b0000 ; undefined
    406c:	00000000 	.inst	0x00000000 ; undefined
    4070:	00020000 	.inst	0x00020000 ; undefined
    4074:	054b248f 	.inst	0x054b248f ; undefined
    4078:	00000000 	.inst	0x00000000 ; undefined
    407c:	05fc0000 	.inst	0x05fc0000 ; undefined
    4080:	00000000 	.inst	0x00000000 ; undefined
    4084:	00040000 	.inst	0x00040000 ; undefined
    4088:	9f5001f3 	.inst	0x9f5001f3 ; undefined
	...
    409c:	000005b0 	.inst	0x000005b0 ; undefined
    40a0:	00000000 	.inst	0x00000000 ; undefined
    40a4:	000005c3 	.inst	0x000005c3 ; undefined
    40a8:	00000000 	.inst	0x00000000 ; undefined
    40ac:	cc510001 	.inst	0xcc510001 ; undefined
    40b0:	00000005 	.inst	0x00000005 ; undefined
    40b4:	db000000 	.inst	0xdb000000 ; undefined
    40b8:	00000005 	.inst	0x00000005 ; undefined
    40bc:	01000000 	.inst	0x01000000 ; undefined
    40c0:	05e45100 	trn1	p0.d, p8.d, p4.d
    40c4:	00000000 	.inst	0x00000000 ; undefined
    40c8:	05ef0000 	.inst	0x05ef0000 ; undefined
    40cc:	00000000 	.inst	0x00000000 ; undefined
    40d0:	00010000 	.inst	0x00010000 ; undefined
    40d4:	00000051 	.inst	0x00000051 ; undefined
	...
    40e4:	0005b000 	.inst	0x0005b000 ; undefined
    40e8:	00000000 	.inst	0x00000000 ; undefined
    40ec:	0005bc00 	.inst	0x0005bc00 ; undefined
    40f0:	00000000 	.inst	0x00000000 ; undefined
    40f4:	70000500 	adr	x0, 4197 <__bss_size+0x4191>
    40f8:	9f1a3200 	.inst	0x9f1a3200 ; undefined
    40fc:	000005bc 	.inst	0x000005bc ; undefined
    4100:	00000000 	.inst	0x00000000 ; undefined
    4104:	000005c3 	.inst	0x000005c3 ; undefined
    4108:	00000000 	.inst	0x00000000 ; undefined
    410c:	288f0007 	stp	w7, w0, [x0], #120
    4110:	1a320494 	.inst	0x1a320494 ; undefined
    4114:	0005cc9f 	.inst	0x0005cc9f ; undefined
    4118:	00000000 	.inst	0x00000000 ; undefined
    411c:	0005d400 	.inst	0x0005d400 ; undefined
    4120:	00000000 	.inst	0x00000000 ; undefined
    4124:	70000500 	adr	x0, 41c7 <__bss_size+0x41c1>
    4128:	9f1a3200 	.inst	0x9f1a3200 ; undefined
    412c:	000005d4 	.inst	0x000005d4 ; undefined
    4130:	00000000 	.inst	0x00000000 ; undefined
    4134:	000005db 	.inst	0x000005db ; undefined
    4138:	00000000 	.inst	0x00000000 ; undefined
    413c:	288f0007 	stp	w7, w0, [x0], #120
    4140:	1a320494 	.inst	0x1a320494 ; undefined
    4144:	0005e49f 	.inst	0x0005e49f ; undefined
    4148:	00000000 	.inst	0x00000000 ; undefined
    414c:	0005e800 	.inst	0x0005e800 ; undefined
    4150:	00000000 	.inst	0x00000000 ; undefined
    4154:	70000500 	adr	x0, 41f7 <__bss_size+0x41f1>
    4158:	9f1a3200 	.inst	0x9f1a3200 ; undefined
    415c:	000005e8 	.inst	0x000005e8 ; undefined
    4160:	00000000 	.inst	0x00000000 ; undefined
    4164:	000005ef 	.inst	0x000005ef ; undefined
    4168:	00000000 	.inst	0x00000000 ; undefined
    416c:	288f0007 	stp	w7, w0, [x0], #120
    4170:	1a320494 	.inst	0x1a320494 ; undefined
    4174:	0000009f 	.inst	0x0000009f ; undefined
	...
    4184:	00054800 	.inst	0x00054800 ; undefined
    4188:	00000000 	.inst	0x00000000 ; undefined
    418c:	00054b00 	.inst	0x00054b00 ; undefined
    4190:	00000000 	.inst	0x00000000 ; undefined
    4194:	50000100 	adr	x0, 41b6 <__bss_size+0x41b0>
    4198:	0000054b 	.inst	0x0000054b ; undefined
    419c:	00000000 	.inst	0x00000000 ; undefined
    41a0:	000005c8 	.inst	0x000005c8 ; undefined
    41a4:	00000000 	.inst	0x00000000 ; undefined
    41a8:	108f0003 	adr	x3, fffffffffff221a8 <__end+0xffffffe3b848>
    41ac:	0005c89f 	.inst	0x0005c89f ; undefined
    41b0:	00000000 	.inst	0x00000000 ; undefined
    41b4:	0005cc00 	.inst	0x0005cc00 ; undefined
    41b8:	00000000 	.inst	0x00000000 ; undefined
    41bc:	8f000300 	.inst	0x8f000300 ; undefined
    41c0:	05cc9f60 	.inst	0x05cc9f60 ; undefined
    41c4:	00000000 	.inst	0x00000000 ; undefined
    41c8:	05e00000 	.inst	0x05e00000 ; undefined
    41cc:	00000000 	.inst	0x00000000 ; undefined
    41d0:	00030000 	.inst	0x00030000 ; undefined
    41d4:	e09f108f 	.inst	0xe09f108f ; undefined
    41d8:	00000005 	.inst	0x00000005 ; undefined
    41dc:	e4000000 	.inst	0xe4000000 ; undefined
    41e0:	00000005 	.inst	0x00000005 ; undefined
    41e4:	03000000 	.inst	0x03000000 ; undefined
    41e8:	9f608f00 	.inst	0x9f608f00 ; undefined
    41ec:	000005e4 	.inst	0x000005e4 ; undefined
    41f0:	00000000 	.inst	0x00000000 ; undefined
    41f4:	000005fc 	.inst	0x000005fc ; undefined
    41f8:	00000000 	.inst	0x00000000 ; undefined
    41fc:	108f0003 	adr	x3, fffffffffff221fc <__end+0xffffffe3b89c>
    4200:	0000009f 	.inst	0x0000009f ; undefined
	...
    4210:	0003e800 	.inst	0x0003e800 ; undefined
    4214:	00000000 	.inst	0x00000000 ; undefined
    4218:	0003eb00 	.inst	0x0003eb00 ; undefined
    421c:	00000000 	.inst	0x00000000 ; undefined
    4220:	50000100 	adr	x0, 4242 <__bss_size+0x423c>
    4224:	000003eb 	.inst	0x000003eb ; undefined
    4228:	00000000 	.inst	0x00000000 ; undefined
    422c:	00000450 	.inst	0x00000450 ; undefined
    4230:	00000000 	.inst	0x00000000 ; undefined
    4234:	108f0003 	adr	x3, fffffffffff22234 <__end+0xffffffe3b8d4>
    4238:	0004509f 	.inst	0x0004509f ; undefined
    423c:	00000000 	.inst	0x00000000 ; undefined
    4240:	00045400 	.inst	0x00045400 ; undefined
    4244:	00000000 	.inst	0x00000000 ; undefined
    4248:	8f000300 	.inst	0x8f000300 ; undefined
    424c:	04549f60 	asrr	z0.h, p7/m, z0.h, z27.h
    4250:	00000000 	.inst	0x00000000 ; undefined
    4254:	04600000 	add	z0.h, z0.h, z0.h
    4258:	00000000 	.inst	0x00000000 ; undefined
    425c:	00030000 	.inst	0x00030000 ; undefined
    4260:	009f108f 	.inst	0x009f108f ; undefined
	...
    4270:	48000000 	stxrh	w0, w0, [x0]
    4274:	00000003 	.inst	0x00000003 ; undefined
    4278:	4b000000 	sub	w0, w0, w0
    427c:	00000003 	.inst	0x00000003 ; undefined
    4280:	01000000 	.inst	0x01000000 ; undefined
    4284:	034b5000 	.inst	0x034b5000 ; undefined
    4288:	00000000 	.inst	0x00000000 ; undefined
    428c:	03b00000 	.inst	0x03b00000 ; undefined
    4290:	00000000 	.inst	0x00000000 ; undefined
    4294:	00030000 	.inst	0x00030000 ; undefined
    4298:	b09f108f 	adrp	x15, ffffffff3e215000 <__end+0xffff3e12e6a0>
    429c:	00000003 	.inst	0x00000003 ; undefined
    42a0:	b4000000 	cbz	x0, 42a0 <__bss_size+0x429a>
    42a4:	00000003 	.inst	0x00000003 ; undefined
    42a8:	03000000 	.inst	0x03000000 ; undefined
    42ac:	9f608f00 	.inst	0x9f608f00 ; undefined
    42b0:	000003b4 	.inst	0x000003b4 ; undefined
    42b4:	00000000 	.inst	0x00000000 ; undefined
    42b8:	000003c0 	.inst	0x000003c0 ; undefined
    42bc:	00000000 	.inst	0x00000000 ; undefined
    42c0:	108f0003 	adr	x3, fffffffffff222c0 <__end+0xffffffe3b960>
    42c4:	0000009f 	.inst	0x0000009f ; undefined
	...
    42d4:	0002a400 	.inst	0x0002a400 ; undefined
    42d8:	00000000 	.inst	0x00000000 ; undefined
    42dc:	0002a700 	.inst	0x0002a700 ; undefined
    42e0:	00000000 	.inst	0x00000000 ; undefined
    42e4:	50000100 	adr	x0, 4306 <__bss_size+0x4300>
    42e8:	000002a7 	.inst	0x000002a7 ; undefined
    42ec:	00000000 	.inst	0x00000000 ; undefined
    42f0:	00000308 	.inst	0x00000308 ; undefined
    42f4:	00000000 	.inst	0x00000000 ; undefined
    42f8:	108f0003 	adr	x3, fffffffffff222f8 <__end+0xffffffe3b998>
    42fc:	0003089f 	.inst	0x0003089f ; undefined
    4300:	00000000 	.inst	0x00000000 ; undefined
    4304:	00030c00 	.inst	0x00030c00 ; undefined
    4308:	00000000 	.inst	0x00000000 ; undefined
    430c:	8f000300 	.inst	0x8f000300 ; undefined
    4310:	030c9f60 	.inst	0x030c9f60 ; undefined
    4314:	00000000 	.inst	0x00000000 ; undefined
    4318:	03180000 	.inst	0x03180000 ; undefined
    431c:	00000000 	.inst	0x00000000 ; undefined
    4320:	00030000 	.inst	0x00030000 ; undefined
    4324:	009f108f 	.inst	0x009f108f ; undefined
	...
    4334:	f4000000 	.inst	0xf4000000 ; undefined
    4338:	00000001 	.inst	0x00000001 ; undefined
    433c:	f7000000 	.inst	0xf7000000 ; undefined
    4340:	00000001 	.inst	0x00000001 ; undefined
    4344:	01000000 	.inst	0x01000000 ; undefined
    4348:	01f75000 	.inst	0x01f75000 ; undefined
    434c:	00000000 	.inst	0x00000000 ; undefined
    4350:	02680000 	.inst	0x02680000 ; undefined
    4354:	00000000 	.inst	0x00000000 ; undefined
    4358:	00030000 	.inst	0x00030000 ; undefined
    435c:	689f108f 	.inst	0x689f108f ; undefined
    4360:	00000002 	.inst	0x00000002 ; undefined
    4364:	6c000000 	stnp	d0, d0, [x0]
    4368:	00000002 	.inst	0x00000002 ; undefined
    436c:	03000000 	.inst	0x03000000 ; undefined
    4370:	9f608f00 	.inst	0x9f608f00 ; undefined
    4374:	0000026c 	.inst	0x0000026c ; undefined
    4378:	00000000 	.inst	0x00000000 ; undefined
    437c:	00000278 	.inst	0x00000278 ; undefined
    4380:	00000000 	.inst	0x00000000 ; undefined
    4384:	108f0003 	adr	x3, fffffffffff22384 <__end+0xffffffe3ba24>
    4388:	0000009f 	.inst	0x0000009f ; undefined
	...
    4398:	00013400 	.inst	0x00013400 ; undefined
    439c:	00000000 	.inst	0x00000000 ; undefined
    43a0:	00013700 	.inst	0x00013700 ; undefined
    43a4:	00000000 	.inst	0x00000000 ; undefined
    43a8:	50000100 	adr	x0, 43ca <__bss_size+0x43c4>
    43ac:	00000137 	.inst	0x00000137 ; undefined
    43b0:	00000000 	.inst	0x00000000 ; undefined
    43b4:	000001b0 	.inst	0x000001b0 ; undefined
    43b8:	00000000 	.inst	0x00000000 ; undefined
    43bc:	108f0003 	adr	x3, fffffffffff223bc <__end+0xffffffe3ba5c>
    43c0:	0001b09f 	.inst	0x0001b09f ; undefined
    43c4:	00000000 	.inst	0x00000000 ; undefined
    43c8:	0001b400 	.inst	0x0001b400 ; undefined
    43cc:	00000000 	.inst	0x00000000 ; undefined
    43d0:	8f000300 	.inst	0x8f000300 ; undefined
    43d4:	01b49f60 	.inst	0x01b49f60 ; undefined
    43d8:	00000000 	.inst	0x00000000 ; undefined
    43dc:	01cc0000 	.inst	0x01cc0000 ; undefined
    43e0:	00000000 	.inst	0x00000000 ; undefined
    43e4:	00030000 	.inst	0x00030000 ; undefined
    43e8:	009f108f 	.inst	0x009f108f ; undefined
	...
    43f8:	98000000 	ldrsw	x0, 43f8 <__bss_size+0x43f2>
    43fc:	00000000 	.inst	0x00000000 ; undefined
    4400:	9c000000 	ldr	q0, 4400 <__bss_size+0x43fa>
    4404:	00000000 	.inst	0x00000000 ; undefined
    4408:	03000000 	.inst	0x03000000 ; undefined
    440c:	9f108f00 	.inst	0x9f108f00 ; undefined
    4410:	0000009c 	.inst	0x0000009c ; undefined
    4414:	00000000 	.inst	0x00000000 ; undefined
    4418:	0000009f 	.inst	0x0000009f ; undefined
    441c:	00000000 	.inst	0x00000000 ; undefined
    4420:	9f500001 	.inst	0x9f500001 ; undefined
    4424:	00000000 	.inst	0x00000000 ; undefined
    4428:	fc000000 	stur	d0, [x0]
    442c:	00000000 	.inst	0x00000000 ; undefined
    4430:	03000000 	.inst	0x03000000 ; undefined
    4434:	9f108f00 	.inst	0x9f108f00 ; undefined
    4438:	000000fc 	.inst	0x000000fc ; undefined
    443c:	00000000 	.inst	0x00000000 ; undefined
    4440:	00000100 	.inst	0x00000100 ; undefined
    4444:	00000000 	.inst	0x00000000 ; undefined
    4448:	608f0003 	.inst	0x608f0003 ; undefined
    444c:	0001009f 	.inst	0x0001009f ; undefined
    4450:	00000000 	.inst	0x00000000 ; undefined
    4454:	00010c00 	.inst	0x00010c00 ; undefined
    4458:	00000000 	.inst	0x00000000 ; undefined
    445c:	8f000300 	.inst	0x8f000300 ; undefined
    4460:	00009f10 	.inst	0x00009f10 ; undefined
	...
    4478:	000b0000 	.inst	0x000b0000 ; undefined
    447c:	00000000 	.inst	0x00000000 ; undefined
    4480:	00010000 	.inst	0x00010000 ; undefined
    4484:	00000b50 	.inst	0x00000b50 ; undefined
    4488:	00000000 	.inst	0x00000000 ; undefined
    448c:	00004000 	.inst	0x00004000 ; undefined
    4490:	00000000 	.inst	0x00000000 ; undefined
    4494:	f3000400 	.inst	0xf3000400 ; undefined
    4498:	009f5001 	.inst	0x009f5001 ; undefined
	...
    44a8:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
    44ac:	00000000 	.inst	0x00000000 ; undefined
    44b0:	20000000 	.inst	0x20000000 ; undefined
    44b4:	00000000 	.inst	0x00000000 ; undefined
    44b8:	01000000 	.inst	0x01000000 ; undefined
    44bc:	00205000 	.inst	0x00205000 ; NYI
    44c0:	00000000 	.inst	0x00000000 ; undefined
    44c4:	002c0000 	.inst	0x002c0000 ; NYI
    44c8:	00000000 	.inst	0x00000000 ; undefined
    44cc:	00050000 	.inst	0x00050000 ; undefined
    44d0:	21380070 	.inst	0x21380070 ; undefined
    44d4:	00002c9f 	.inst	0x00002c9f ; undefined
    44d8:	00000000 	.inst	0x00000000 ; undefined
    44dc:	00003400 	.inst	0x00003400 ; undefined
    44e0:	00000000 	.inst	0x00000000 ; undefined
    44e4:	50000100 	adr	x0, 4506 <__bss_size+0x4500>
	...
    44f8:	00000460 	.inst	0x00000460 ; undefined
    44fc:	00000000 	.inst	0x00000000 ; undefined
    4500:	00000484 	.inst	0x00000484 ; undefined
    4504:	00000000 	.inst	0x00000000 ; undefined
    4508:	84500001 	ld1sb	{z1.s}, p0/z, [x0, z16.s, sxtw]
    450c:	00000004 	.inst	0x00000004 ; undefined
    4510:	8b000000 	add	x0, x0, x0
    4514:	00000004 	.inst	0x00000004 ; undefined
    4518:	02000000 	.inst	0x02000000 ; undefined
    451c:	8b248f00 	add	x0, x24, w4, sxtb #3
    4520:	00000004 	.inst	0x00000004 ; undefined
    4524:	1c000000 	ldr	s0, 4524 <__bss_size+0x451e>
    4528:	00000005 	.inst	0x00000005 ; undefined
    452c:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    4530:	5001f300 	adr	x0, 8392 <__bss_size+0x838c>
    4534:	0000009f 	.inst	0x0000009f ; undefined
	...
    4544:	00048800 	.inst	0x00048800 ; undefined
    4548:	00000000 	.inst	0x00000000 ; undefined
    454c:	00048b00 	.inst	0x00048b00 ; undefined
    4550:	00000000 	.inst	0x00000000 ; undefined
    4554:	50000100 	adr	x0, 4576 <__bss_size+0x4570>
    4558:	0000048b 	.inst	0x0000048b ; undefined
    455c:	00000000 	.inst	0x00000000 ; undefined
    4560:	0000050c 	.inst	0x0000050c ; undefined
    4564:	00000000 	.inst	0x00000000 ; undefined
    4568:	108f0003 	adr	x3, fffffffffff22568 <__end+0xffffffe3bc08>
    456c:	00050c9f 	.inst	0x00050c9f ; undefined
    4570:	00000000 	.inst	0x00000000 ; undefined
    4574:	00051000 	.inst	0x00051000 ; undefined
    4578:	00000000 	.inst	0x00000000 ; undefined
    457c:	8f000300 	.inst	0x8f000300 ; undefined
    4580:	05109f60 	.inst	0x05109f60 ; undefined
    4584:	00000000 	.inst	0x00000000 ; undefined
    4588:	051c0000 	mov	z0.b, p12/z, #0
    458c:	00000000 	.inst	0x00000000 ; undefined
    4590:	00030000 	.inst	0x00030000 ; undefined
    4594:	009f108f 	.inst	0x009f108f ; undefined
	...
    45ac:	1c000000 	ldr	s0, 45ac <__bss_size+0x45a6>
    45b0:	00000000 	.inst	0x00000000 ; undefined
    45b4:	01000000 	.inst	0x01000000 ; undefined
    45b8:	001c5000 	.inst	0x001c5000 ; undefined
    45bc:	00000000 	.inst	0x00000000 ; undefined
    45c0:	00240000 	.inst	0x00240000 ; NYI
    45c4:	00000000 	.inst	0x00000000 ; undefined
    45c8:	00040000 	.inst	0x00040000 ; undefined
    45cc:	9f5001f3 	.inst	0x9f5001f3 ; undefined
	...
    45e0:	000002f0 	.inst	0x000002f0 ; undefined
    45e4:	00000000 	.inst	0x00000000 ; undefined
    45e8:	00000314 	.inst	0x00000314 ; undefined
    45ec:	00000000 	.inst	0x00000000 ; undefined
    45f0:	14500001 	b	14045f4 <__bss_size+0x14045ee>
    45f4:	00000003 	.inst	0x00000003 ; undefined
    45f8:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
    45fc:	00000004 	.inst	0x00000004 ; undefined
    4600:	01000000 	.inst	0x01000000 ; undefined
    4604:	040c6300 	mls	z0.b, p0/m, z24.b, z12.b
    4608:	00000000 	.inst	0x00000000 ; undefined
    460c:	041c0000 	.inst	0x041c0000 ; undefined
    4610:	00000000 	.inst	0x00000000 ; undefined
    4614:	00040000 	.inst	0x00040000 ; undefined
    4618:	9f5001f3 	.inst	0x9f5001f3 ; undefined
    461c:	0000041c 	.inst	0x0000041c ; undefined
    4620:	00000000 	.inst	0x00000000 ; undefined
    4624:	00000420 	.inst	0x00000420 ; undefined
    4628:	00000000 	.inst	0x00000000 ; undefined
    462c:	20500001 	.inst	0x20500001 ; undefined
    4630:	00000004 	.inst	0x00000004 ; undefined
    4634:	28000000 	stnp	w0, w0, [x0]
    4638:	00000004 	.inst	0x00000004 ; undefined
    463c:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    4640:	5001f300 	adr	x0, 84a2 <__bss_size+0x849c>
    4644:	0000009f 	.inst	0x0000009f ; undefined
	...
    4654:	0002f000 	.inst	0x0002f000 ; undefined
    4658:	00000000 	.inst	0x00000000 ; undefined
    465c:	00032c00 	.inst	0x00032c00 ; undefined
    4660:	00000000 	.inst	0x00000000 ; undefined
    4664:	51000100 	sub	w0, w8, #0x0
    4668:	0000032c 	.inst	0x0000032c ; undefined
    466c:	00000000 	.inst	0x00000000 ; undefined
    4670:	00000414 	.inst	0x00000414 ; undefined
    4674:	00000000 	.inst	0x00000000 ; undefined
    4678:	14680001 	b	1a0467c <__bss_size+0x1a04676>
    467c:	00000004 	.inst	0x00000004 ; undefined
    4680:	1c000000 	ldr	s0, 4680 <__bss_size+0x467a>
    4684:	00000004 	.inst	0x00000004 ; undefined
    4688:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    468c:	5101f300 	sub	w0, w24, #0x7c
    4690:	00041c9f 	.inst	0x00041c9f ; undefined
    4694:	00000000 	.inst	0x00000000 ; undefined
    4698:	00042700 	.inst	0x00042700 ; undefined
    469c:	00000000 	.inst	0x00000000 ; undefined
    46a0:	51000100 	sub	w0, w8, #0x0
    46a4:	00000427 	.inst	0x00000427 ; undefined
    46a8:	00000000 	.inst	0x00000000 ; undefined
    46ac:	00000428 	.inst	0x00000428 ; undefined
    46b0:	00000000 	.inst	0x00000000 ; undefined
    46b4:	01f30004 	.inst	0x01f30004 ; undefined
    46b8:	00009f51 	.inst	0x00009f51 ; undefined
	...
    46c8:	031c0000 	.inst	0x031c0000 ; undefined
    46cc:	00000000 	.inst	0x00000000 ; undefined
    46d0:	03280000 	.inst	0x03280000 ; undefined
    46d4:	00000000 	.inst	0x00000000 ; undefined
    46d8:	00050000 	.inst	0x00050000 ; undefined
    46dc:	25400071 	cmpgt	p1.h, p0/z, z3.h, #0
    46e0:	0003289f 	.inst	0x0003289f ; undefined
    46e4:	00000000 	.inst	0x00000000 ; undefined
    46e8:	00041400 	.inst	0x00041400 ; undefined
    46ec:	00000000 	.inst	0x00000000 ; undefined
    46f0:	67000100 	.inst	0x67000100 ; undefined
    46f4:	00000414 	.inst	0x00000414 ; undefined
    46f8:	00000000 	.inst	0x00000000 ; undefined
    46fc:	0000041c 	.inst	0x0000041c ; undefined
    4700:	00000000 	.inst	0x00000000 ; undefined
    4704:	01f30013 	.inst	0x01f30013 ; undefined
    4708:	f3254051 	.inst	0xf3254051 ; undefined
    470c:	ff0a5101 	.inst	0xff0a5101 ; undefined
    4710:	20081aff 	.inst	0x20081aff ; undefined
    4714:	222e3024 	.inst	0x222e3024 ; undefined
    4718:	0000009f 	.inst	0x0000009f ; undefined
	...
    4728:	00033c00 	.inst	0x00033c00 ; undefined
    472c:	00000000 	.inst	0x00000000 ; undefined
    4730:	00035800 	.inst	0x00035800 ; undefined
    4734:	00000000 	.inst	0x00000000 ; undefined
    4738:	64000100 	.inst	0x64000100 ; undefined
    473c:	00000358 	.inst	0x00000358 ; undefined
    4740:	00000000 	.inst	0x00000000 ; undefined
    4744:	0000036c 	.inst	0x0000036c ; undefined
    4748:	00000000 	.inst	0x00000000 ; undefined
    474c:	6c500001 	ldnp	d1, d0, [x0, #256]
    4750:	00000003 	.inst	0x00000003 ; undefined
    4754:	74000000 	.inst	0x74000000 ; undefined
    4758:	00000003 	.inst	0x00000003 ; undefined
    475c:	05000000 	orr	z0.s, z0.s, #0x1
    4760:	80807000 	.inst	0x80807000 ; undefined
    4764:	03749f04 	.inst	0x03749f04 ; undefined
    4768:	00000000 	.inst	0x00000000 ; undefined
    476c:	03880000 	.inst	0x03880000 ; undefined
    4770:	00000000 	.inst	0x00000000 ; undefined
    4774:	00010000 	.inst	0x00010000 ; undefined
    4778:	00000050 	.inst	0x00000050 ; undefined
	...
    4788:	00033c00 	.inst	0x00033c00 ; undefined
    478c:	00000000 	.inst	0x00000000 ; undefined
    4790:	00040c00 	.inst	0x00040c00 ; undefined
    4794:	00000000 	.inst	0x00000000 ; undefined
    4798:	64000100 	.inst	0x64000100 ; undefined
    479c:	0000040c 	.inst	0x0000040c ; undefined
    47a0:	00000000 	.inst	0x00000000 ; undefined
    47a4:	00000414 	.inst	0x00000414 ; undefined
    47a8:	00000000 	.inst	0x00000000 ; undefined
    47ac:	ff870011 	.inst	0xff870011 ; undefined
    47b0:	244003ff 	cmphi	p15.h, p0/z, z31.h, z0.h
    47b4:	ffffff0c 	.inst	0xffffff0c ; undefined
    47b8:	01f31aff 	.inst	0x01f31aff ; undefined
    47bc:	149f2250 	b	27cd0fc <__bss_size+0x27cd0f6>
    47c0:	00000004 	.inst	0x00000004 ; undefined
    47c4:	1c000000 	ldr	s0, 47c4 <__bss_size+0x47be>
    47c8:	00000004 	.inst	0x00000004 ; undefined
    47cc:	23000000 	.inst	0x23000000 ; undefined
    47d0:	5101f300 	sub	w0, w24, #0x7c
    47d4:	01f32540 	.inst	0x01f32540 ; undefined
    47d8:	ffff0a51 	.inst	0xffff0a51 ; undefined
    47dc:	2420081a 	cmphi	p10.b, p2/z, z0.b, #0
    47e0:	23222e30 	.inst	0x23222e30 ; undefined
    47e4:	4003ffff 	.inst	0x4003ffff ; undefined
    47e8:	ffff0c24 	.inst	0xffff0c24 ; undefined
    47ec:	f31affff 	.inst	0xf31affff ; undefined
    47f0:	9f225001 	.inst	0x9f225001 ; undefined
	...
    4804:	000003a8 	.inst	0x000003a8 ; undefined
    4808:	00000000 	.inst	0x00000000 ; undefined
    480c:	00000410 	.inst	0x00000410 ; undefined
    4810:	00000000 	.inst	0x00000000 ; undefined
    4814:	10650001 	adr	x1, ce814 <__bss_size+0xce80e>
    4818:	00000004 	.inst	0x00000004 ; undefined
    481c:	1c000000 	ldr	s0, 481c <__bss_size+0x4816>
    4820:	00000004 	.inst	0x00000004 ; undefined
    4824:	01000000 	.inst	0x01000000 ; undefined
    4828:	00005000 	.inst	0x00005000 ; undefined
	...
    4838:	006c0000 	.inst	0x006c0000 ; undefined
    483c:	00000000 	.inst	0x00000000 ; undefined
    4840:	007c0000 	.inst	0x007c0000 ; undefined
    4844:	00000000 	.inst	0x00000000 ; undefined
    4848:	00010000 	.inst	0x00010000 ; undefined
    484c:	00007c50 	.inst	0x00007c50 ; undefined
    4850:	00000000 	.inst	0x00000000 ; undefined
    4854:	00008c00 	.inst	0x00008c00 ; undefined
    4858:	00000000 	.inst	0x00000000 ; undefined
    485c:	03000900 	.inst	0x03000900 ; undefined
    4860:	000e6870 	.inst	0x000e6870 ; undefined
    4864:	ffff0000 	.inst	0xffff0000 ; undefined
	...
    4878:	0000009c 	.inst	0x0000009c ; undefined
    487c:	00000000 	.inst	0x00000000 ; undefined
    4880:	000000a4 	.inst	0x000000a4 ; undefined
    4884:	00000000 	.inst	0x00000000 ; undefined
    4888:	a4500001 	.inst	0xa4500001 ; undefined
    488c:	00000000 	.inst	0x00000000 ; undefined
    4890:	b8000000 	stur	w0, [x0]
    4894:	00000000 	.inst	0x00000000 ; undefined
    4898:	09000000 	.inst	0x09000000 ; undefined
    489c:	69300300 	.inst	0x69300300 ; undefined
    48a0:	0000000e 	.inst	0x0000000e ; undefined
    48a4:	0000ffff 	.inst	0x0000ffff ; undefined
	...
    48b4:	00cc0000 	.inst	0x00cc0000 ; undefined
    48b8:	00000000 	.inst	0x00000000 ; undefined
    48bc:	00d40000 	.inst	0x00d40000 ; undefined
    48c0:	00000000 	.inst	0x00000000 ; undefined
    48c4:	00050000 	.inst	0x00050000 ; undefined
    48c8:	04808070 	asr	z16.d, p0/m, z16.d, #61
    48cc:	0000d49f 	.inst	0x0000d49f ; undefined
    48d0:	00000000 	.inst	0x00000000 ; undefined
    48d4:	0000e400 	.inst	0x0000e400 ; undefined
    48d8:	00000000 	.inst	0x00000000 ; undefined
    48dc:	03000f00 	.inst	0x03000f00 ; undefined
    48e0:	000e6910 	.inst	0x000e6910 ; undefined
    48e4:	ffff0000 	.inst	0xffff0000 ; undefined
    48e8:	80802306 	.inst	0x80802306 ; undefined
    48ec:	00009f04 	.inst	0x00009f04 ; undefined
	...
    48fc:	00fc0000 	.inst	0x00fc0000 ; undefined
    4900:	00000000 	.inst	0x00000000 ; undefined
    4904:	01100000 	.inst	0x01100000 ; undefined
    4908:	00000000 	.inst	0x00000000 ; undefined
    490c:	000f0000 	.inst	0x000f0000 ; undefined
    4910:	0e691803 	.inst	0x0e691803 ; undefined
    4914:	ff000000 	.inst	0xff000000 ; undefined
    4918:	802306ff 	.inst	0x802306ff ; NYI
    491c:	009f0480 	.inst	0x009f0480 ; undefined
	...
    492c:	28000000 	stnp	w0, w0, [x0]
    4930:	00000001 	.inst	0x00000001 ; undefined
    4934:	3c000000 	stur	b0, [x0]
    4938:	00000001 	.inst	0x00000001 ; undefined
    493c:	0f000000 	.inst	0x0f000000 ; undefined
    4940:	68f80300 	.inst	0x68f80300 ; undefined
    4944:	0000000e 	.inst	0x0000000e ; undefined
    4948:	2306ffff 	.inst	0x2306ffff ; undefined
    494c:	9f048080 	.inst	0x9f048080 ; undefined
	...
    4960:	00000040 	.inst	0x00000040 ; undefined
    4964:	00000000 	.inst	0x00000000 ; undefined
    4968:	00000044 	.inst	0x00000044 ; undefined
    496c:	00000000 	.inst	0x00000000 ; undefined
    4970:	44500001 	.inst	0x44500001 ; undefined
    4974:	00000000 	.inst	0x00000000 ; undefined
    4978:	50000000 	adr	x0, 497a <__bss_size+0x4974>
    497c:	00000000 	.inst	0x00000000 ; undefined
    4980:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    4984:	5001f300 	adr	x0, 87e6 <__bss_size+0x87e0>
    4988:	0000009f 	.inst	0x0000009f ; undefined
	...
    4998:	00002000 	.inst	0x00002000 ; undefined
    499c:	00000000 	.inst	0x00000000 ; undefined
    49a0:	00002400 	.inst	0x00002400 ; undefined
    49a4:	00000000 	.inst	0x00000000 ; undefined
    49a8:	50000100 	adr	x0, 49ca <__bss_size+0x49c4>
    49ac:	00000024 	.inst	0x00000024 ; undefined
    49b0:	00000000 	.inst	0x00000000 ; undefined
    49b4:	0000002c 	.inst	0x0000002c ; undefined
    49b8:	00000000 	.inst	0x00000000 ; undefined
    49bc:	01f30004 	.inst	0x01f30004 ; undefined
    49c0:	00009f50 	.inst	0x00009f50 ; undefined
	...
    49d8:	000c0000 	.inst	0x000c0000 ; undefined
    49dc:	00000000 	.inst	0x00000000 ; undefined
    49e0:	00010000 	.inst	0x00010000 ; undefined
    49e4:	00000c50 	.inst	0x00000c50 ; undefined
    49e8:	00000000 	.inst	0x00000000 ; undefined
    49ec:	00001400 	.inst	0x00001400 ; undefined
    49f0:	00000000 	.inst	0x00000000 ; undefined
    49f4:	f3000400 	.inst	0xf3000400 ; undefined
    49f8:	009f5001 	.inst	0x009f5001 ; undefined
	...
    4a10:	0c000000 	st4	{v0.8b-v3.8b}, [x0]
    4a14:	00000000 	.inst	0x00000000 ; undefined
    4a18:	07000000 	.inst	0x07000000 ; undefined
    4a1c:	0a007000 	and	w0, w0, w0, lsl #28
    4a20:	9f1affff 	.inst	0x9f1affff ; undefined
    4a24:	0000000c 	.inst	0x0000000c ; undefined
    4a28:	00000000 	.inst	0x00000000 ; undefined
    4a2c:	00000014 	.inst	0x00000014 ; undefined
    4a30:	00000000 	.inst	0x00000000 ; undefined
    4a34:	01f30008 	.inst	0x01f30008 ; undefined
    4a38:	ffff0a50 	.inst	0xffff0a50 ; undefined
    4a3c:	00009f1a 	.inst	0x00009f1a ; undefined
	...
    4a4c:	00300000 	.inst	0x00300000 ; NYI
    4a50:	00000000 	.inst	0x00000000 ; undefined
    4a54:	00340000 	.inst	0x00340000 ; NYI
    4a58:	00000000 	.inst	0x00000000 ; undefined
    4a5c:	00010000 	.inst	0x00010000 ; undefined
    4a60:	00003450 	.inst	0x00003450 ; undefined
    4a64:	00000000 	.inst	0x00000000 ; undefined
    4a68:	00004000 	.inst	0x00004000 ; undefined
    4a6c:	00000000 	.inst	0x00000000 ; undefined
    4a70:	f3000400 	.inst	0xf3000400 ; undefined
    4a74:	009f5001 	.inst	0x009f5001 ; undefined
	...
    4a84:	60000000 	.inst	0x60000000 ; undefined
    4a88:	00000002 	.inst	0x00000002 ; undefined
    4a8c:	6c000000 	stnp	d0, d0, [x0]
    4a90:	00000002 	.inst	0x00000002 ; undefined
    4a94:	01000000 	.inst	0x01000000 ; undefined
    4a98:	026c5000 	.inst	0x026c5000 ; undefined
    4a9c:	00000000 	.inst	0x00000000 ; undefined
    4aa0:	02bc0000 	.inst	0x02bc0000 ; undefined
    4aa4:	00000000 	.inst	0x00000000 ; undefined
    4aa8:	00100000 	.inst	0x00100000 ; undefined
    4aac:	0e693803 	.inst	0x0e693803 ; undefined
    4ab0:	ff000000 	.inst	0xff000000 ; undefined
    4ab4:	084006ff 	ldxrb	wzr, [x23]
    4ab8:	9f22242c 	.inst	0x9f22242c ; undefined
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	0000002c 	.inst	0x0000002c ; undefined
   4:	00000002 	.inst	0x00000002 ; undefined
   8:	00080000 	.inst	0x00080000 ; undefined
   c:	00000000 	.inst	0x00000000 ; undefined
  10:	000e00c0 	.inst	0x000e00c0 ; undefined
  14:	ffff0000 	.inst	0xffff0000 ; undefined
  18:	00000de4 	.inst	0x00000de4 ; undefined
	...
  30:	0000002c 	.inst	0x0000002c ; undefined
  34:	0ff80002 	.inst	0x0ff80002 ; undefined
  38:	00080000 	.inst	0x00080000 ; undefined
  3c:	00000000 	.inst	0x00000000 ; undefined
  40:	000e4850 	.inst	0x000e4850 ; undefined
  44:	ffff0000 	.inst	0xffff0000 ; undefined
  48:	00000154 	.inst	0x00000154 ; undefined
	...
  60:	0000002c 	.inst	0x0000002c ; undefined
  64:	15240002 	b	490006c <__bss_size+0x4900066>
  68:	00080000 	.inst	0x00080000 ; undefined
  6c:	00000000 	.inst	0x00000000 ; undefined
  70:	000e0eb0 	.inst	0x000e0eb0 ; undefined
  74:	ffff0000 	.inst	0xffff0000 ; undefined
  78:	00000330 	.inst	0x00000330 ; undefined
	...
  90:	0000002c 	.inst	0x0000002c ; undefined
  94:	1c8e0002 	ldr	s2, fffffffffff1c094 <__end+0xffffffe35734>
  98:	00080000 	.inst	0x00080000 ; undefined
  9c:	00000000 	.inst	0x00000000 ; undefined
  a0:	000e11e0 	.inst	0x000e11e0 ; undefined
  a4:	ffff0000 	.inst	0xffff0000 ; undefined
  a8:	00000144 	.inst	0x00000144 ; undefined
	...
  c0:	0000002c 	.inst	0x0000002c ; undefined
  c4:	20220002 	.inst	0x20220002 ; undefined
  c8:	00080000 	.inst	0x00080000 ; undefined
  cc:	00000000 	.inst	0x00000000 ; undefined
  d0:	000e1330 	.inst	0x000e1330 ; undefined
  d4:	ffff0000 	.inst	0xffff0000 ; undefined
  d8:	00000084 	.inst	0x00000084 ; undefined
	...
  f0:	0000002c 	.inst	0x0000002c ; undefined
  f4:	21450002 	.inst	0x21450002 ; undefined
  f8:	00080000 	.inst	0x00080000 ; undefined
  fc:	00000000 	.inst	0x00000000 ; undefined
 100:	000e13c0 	.inst	0x000e13c0 ; undefined
 104:	ffff0000 	.inst	0xffff0000 ; undefined
 108:	000001bc 	.inst	0x000001bc ; undefined
	...
 120:	0000002c 	.inst	0x0000002c ; undefined
 124:	22e50002 	.inst	0x22e50002 ; undefined
 128:	00080000 	.inst	0x00080000 ; undefined
 12c:	00000000 	.inst	0x00000000 ; undefined
 130:	000e1580 	.inst	0x000e1580 ; undefined
 134:	ffff0000 	.inst	0xffff0000 ; undefined
 138:	0000005c 	.inst	0x0000005c ; undefined
	...
 150:	0000002c 	.inst	0x0000002c ; undefined
 154:	24710002 	cmphs	p2.h, p0/z, z0.h, #68
 158:	00080000 	.inst	0x00080000 ; undefined
 15c:	00000000 	.inst	0x00000000 ; undefined
 160:	000e15e0 	.inst	0x000e15e0 ; undefined
 164:	ffff0000 	.inst	0xffff0000 ; undefined
 168:	00000174 	.inst	0x00000174 ; undefined
	...
 180:	0000002c 	.inst	0x0000002c ; undefined
 184:	26010002 	.inst	0x26010002 ; undefined
 188:	00080000 	.inst	0x00080000 ; undefined
 18c:	00000000 	.inst	0x00000000 ; undefined
 190:	000e1760 	.inst	0x000e1760 ; undefined
 194:	ffff0000 	.inst	0xffff0000 ; undefined
 198:	00000548 	.inst	0x00000548 ; undefined
	...
 1b0:	0000002c 	.inst	0x0000002c ; undefined
 1b4:	2e3c0002 	uaddl	v2.8h, v0.8b, v28.8b
 1b8:	00080000 	.inst	0x00080000 ; undefined
 1bc:	00000000 	.inst	0x00000000 ; undefined
 1c0:	000e1cb0 	.inst	0x000e1cb0 ; undefined
 1c4:	ffff0000 	.inst	0xffff0000 ; undefined
 1c8:	00000854 	.inst	0x00000854 ; undefined
	...
 1e0:	0000002c 	.inst	0x0000002c ; undefined
 1e4:	38b60002 	ldaddab	w22, w2, [x0]
 1e8:	00080000 	.inst	0x00080000 ; undefined
 1ec:	00000000 	.inst	0x00000000 ; undefined
 1f0:	000e2510 	.inst	0x000e2510 ; undefined
 1f4:	ffff0000 	.inst	0xffff0000 ; undefined
 1f8:	000009e8 	.inst	0x000009e8 ; undefined
	...
 210:	0000002c 	.inst	0x0000002c ; undefined
 214:	45570002 	.inst	0x45570002 ; undefined
 218:	00080000 	.inst	0x00080000 ; undefined
 21c:	00000000 	.inst	0x00000000 ; undefined
 220:	000e2f00 	.inst	0x000e2f00 ; undefined
 224:	ffff0000 	.inst	0xffff0000 ; undefined
 228:	00000050 	.inst	0x00000050 ; undefined
	...
 240:	0000002c 	.inst	0x0000002c ; undefined
 244:	46170002 	.inst	0x46170002 ; undefined
 248:	00080000 	.inst	0x00080000 ; undefined
 24c:	00000000 	.inst	0x00000000 ; undefined
 250:	000e2f50 	.inst	0x000e2f50 ; undefined
 254:	ffff0000 	.inst	0xffff0000 ; undefined
 258:	00000064 	.inst	0x00000064 ; undefined
	...
 270:	0000002c 	.inst	0x0000002c ; undefined
 274:	46e70002 	.inst	0x46e70002 ; undefined
 278:	00080000 	.inst	0x00080000 ; undefined
 27c:	00000000 	.inst	0x00000000 ; undefined
 280:	000e2fc0 	.inst	0x000e2fc0 ; undefined
 284:	ffff0000 	.inst	0xffff0000 ; undefined
 288:	0000018c 	.inst	0x0000018c ; undefined
	...
 2a0:	0000002c 	.inst	0x0000002c ; undefined
 2a4:	4ac20002 	eor	w2, w0, w2, ror #0
 2a8:	00080000 	.inst	0x00080000 ; undefined
 2ac:	00000000 	.inst	0x00000000 ; undefined
 2b0:	000e3150 	.inst	0x000e3150 ; undefined
 2b4:	ffff0000 	.inst	0xffff0000 ; undefined
 2b8:	000004b8 	.inst	0x000004b8 ; undefined
	...
 2d0:	0000002c 	.inst	0x0000002c ; undefined
 2d4:	532a0002 	.inst	0x532a0002 ; undefined
 2d8:	00080000 	.inst	0x00080000 ; undefined
 2dc:	00000000 	.inst	0x00000000 ; undefined
 2e0:	000e0000 	.inst	0x000e0000 ; undefined
 2e4:	ffff0000 	.inst	0xffff0000 ; undefined
 2e8:	000000c0 	.inst	0x000000c0 ; undefined
	...
 300:	0000002c 	.inst	0x0000002c ; undefined
 304:	53580002 	.inst	0x53580002 ; undefined
 308:	00080000 	.inst	0x00080000 ; undefined
 30c:	00000000 	.inst	0x00000000 ; undefined
 310:	000e3608 	.inst	0x000e3608 ; undefined
 314:	ffff0000 	.inst	0xffff0000 ; undefined
 318:	0000002c 	.inst	0x0000002c ; undefined
	...
 330:	0000002c 	.inst	0x0000002c ; undefined
 334:	53860002 	.inst	0x53860002 ; undefined
 338:	00080000 	.inst	0x00080000 ; undefined
 33c:	00000000 	.inst	0x00000000 ; undefined
 340:	000e3638 	.inst	0x000e3638 ; undefined
 344:	ffff0000 	.inst	0xffff0000 ; undefined
 348:	000001c0 	.inst	0x000001c0 ; undefined
	...
 360:	0000002c 	.inst	0x0000002c ; undefined
 364:	53b40002 	.inst	0x53b40002 ; undefined
 368:	00080000 	.inst	0x00080000 ; undefined
 36c:	00000000 	.inst	0x00000000 ; undefined
 370:	000e3800 	.inst	0x000e3800 ; undefined
 374:	ffff0000 	.inst	0xffff0000 ; undefined
 378:	00001000 	.inst	0x00001000 ; undefined
	...
 390:	0000002c 	.inst	0x0000002c ; undefined
 394:	53e20002 	.inst	0x53e20002 ; undefined
 398:	00080000 	.inst	0x00080000 ; undefined
 39c:	00000000 	.inst	0x00000000 ; undefined
 3a0:	000e4800 	.inst	0x000e4800 ; undefined
 3a4:	ffff0000 	.inst	0xffff0000 ; undefined
 3a8:	00000048 	.inst	0x00000048 ; undefined
	...

Disassembly of section .debug_ranges:

0000000000000000 <.debug_ranges>:
       0:	0000004c 	.inst	0x0000004c ; undefined
       4:	00000000 	.inst	0x00000000 ; undefined
       8:	00000050 	.inst	0x00000050 ; undefined
       c:	00000000 	.inst	0x00000000 ; undefined
      10:	00000078 	.inst	0x00000078 ; undefined
      14:	00000000 	.inst	0x00000000 ; undefined
      18:	000000c4 	.inst	0x000000c4 ; undefined
	...
      30:	00000078 	.inst	0x00000078 ; undefined
      34:	00000000 	.inst	0x00000000 ; undefined
      38:	00000084 	.inst	0x00000084 ; undefined
      3c:	00000000 	.inst	0x00000000 ; undefined
      40:	0000008c 	.inst	0x0000008c ; undefined
      44:	00000000 	.inst	0x00000000 ; undefined
      48:	000000bc 	.inst	0x000000bc ; undefined
	...
      60:	00000060 	.inst	0x00000060 ; undefined
      64:	00000000 	.inst	0x00000000 ; undefined
      68:	00000064 	.inst	0x00000064 ; undefined
      6c:	00000000 	.inst	0x00000000 ; undefined
      70:	00000068 	.inst	0x00000068 ; undefined
      74:	00000000 	.inst	0x00000000 ; undefined
      78:	00000078 	.inst	0x00000078 ; undefined
	...
      90:	00000144 	.inst	0x00000144 ; undefined
      94:	00000000 	.inst	0x00000000 ; undefined
      98:	00000158 	.inst	0x00000158 ; undefined
      9c:	00000000 	.inst	0x00000000 ; undefined
      a0:	00000168 	.inst	0x00000168 ; undefined
      a4:	00000000 	.inst	0x00000000 ; undefined
      a8:	0000016c 	.inst	0x0000016c ; undefined
	...
      c0:	00000180 	.inst	0x00000180 ; undefined
      c4:	00000000 	.inst	0x00000000 ; undefined
      c8:	0000019c 	.inst	0x0000019c ; undefined
      cc:	00000000 	.inst	0x00000000 ; undefined
      d0:	000001ac 	.inst	0x000001ac ; undefined
      d4:	00000000 	.inst	0x00000000 ; undefined
      d8:	000001c8 	.inst	0x000001c8 ; undefined
      dc:	00000000 	.inst	0x00000000 ; undefined
      e0:	000001e0 	.inst	0x000001e0 ; undefined
      e4:	00000000 	.inst	0x00000000 ; undefined
      e8:	000001e8 	.inst	0x000001e8 ; undefined
	...
     100:	00000180 	.inst	0x00000180 ; undefined
     104:	00000000 	.inst	0x00000000 ; undefined
     108:	00000184 	.inst	0x00000184 ; undefined
     10c:	00000000 	.inst	0x00000000 ; undefined
     110:	00000188 	.inst	0x00000188 ; undefined
     114:	00000000 	.inst	0x00000000 ; undefined
     118:	0000018c 	.inst	0x0000018c ; undefined
     11c:	00000000 	.inst	0x00000000 ; undefined
     120:	00000190 	.inst	0x00000190 ; undefined
     124:	00000000 	.inst	0x00000000 ; undefined
     128:	0000019c 	.inst	0x0000019c ; undefined
	...
     140:	000002b8 	.inst	0x000002b8 ; undefined
     144:	00000000 	.inst	0x00000000 ; undefined
     148:	00000358 	.inst	0x00000358 ; undefined
     14c:	00000000 	.inst	0x00000000 ; undefined
     150:	00000360 	.inst	0x00000360 ; undefined
     154:	00000000 	.inst	0x00000000 ; undefined
     158:	00000368 	.inst	0x00000368 ; undefined
	...
     170:	00000388 	.inst	0x00000388 ; undefined
     174:	00000000 	.inst	0x00000000 ; undefined
     178:	00000398 	.inst	0x00000398 ; undefined
     17c:	00000000 	.inst	0x00000000 ; undefined
     180:	000003b0 	.inst	0x000003b0 ; undefined
     184:	00000000 	.inst	0x00000000 ; undefined
     188:	000003c0 	.inst	0x000003c0 ; undefined
	...
     1a0:	000003e4 	.inst	0x000003e4 ; undefined
     1a4:	00000000 	.inst	0x00000000 ; undefined
     1a8:	000003e8 	.inst	0x000003e8 ; undefined
     1ac:	00000000 	.inst	0x00000000 ; undefined
     1b0:	000003ec 	.inst	0x000003ec ; undefined
     1b4:	00000000 	.inst	0x00000000 ; undefined
     1b8:	000003f8 	.inst	0x000003f8 ; undefined
	...
     1d0:	00000428 	.inst	0x00000428 ; undefined
     1d4:	00000000 	.inst	0x00000000 ; undefined
     1d8:	00000438 	.inst	0x00000438 ; undefined
     1dc:	00000000 	.inst	0x00000000 ; undefined
     1e0:	00000458 	.inst	0x00000458 ; undefined
     1e4:	00000000 	.inst	0x00000000 ; undefined
     1e8:	00000468 	.inst	0x00000468 ; undefined
	...
     200:	000004f8 	.inst	0x000004f8 ; undefined
     204:	00000000 	.inst	0x00000000 ; undefined
     208:	000004fc 	.inst	0x000004fc ; undefined
     20c:	00000000 	.inst	0x00000000 ; undefined
     210:	00000500 	.inst	0x00000500 ; undefined
     214:	00000000 	.inst	0x00000000 ; undefined
     218:	00000508 	.inst	0x00000508 ; undefined
     21c:	00000000 	.inst	0x00000000 ; undefined
     220:	00000580 	.inst	0x00000580 ; undefined
     224:	00000000 	.inst	0x00000000 ; undefined
     228:	0000058c 	.inst	0x0000058c ; undefined
     22c:	00000000 	.inst	0x00000000 ; undefined
     230:	00000590 	.inst	0x00000590 ; undefined
     234:	00000000 	.inst	0x00000000 ; undefined
     238:	00000598 	.inst	0x00000598 ; undefined
     23c:	00000000 	.inst	0x00000000 ; undefined
     240:	000005a0 	.inst	0x000005a0 ; undefined
     244:	00000000 	.inst	0x00000000 ; undefined
     248:	000005ac 	.inst	0x000005ac ; undefined
     24c:	00000000 	.inst	0x00000000 ; undefined
     250:	000005b0 	.inst	0x000005b0 ; undefined
     254:	00000000 	.inst	0x00000000 ; undefined
     258:	000005b8 	.inst	0x000005b8 ; undefined
	...
     270:	00000520 	.inst	0x00000520 ; undefined
     274:	00000000 	.inst	0x00000000 ; undefined
     278:	00000530 	.inst	0x00000530 ; undefined
     27c:	00000000 	.inst	0x00000000 ; undefined
     280:	00000550 	.inst	0x00000550 ; undefined
     284:	00000000 	.inst	0x00000000 ; undefined
     288:	00000560 	.inst	0x00000560 ; undefined
	...
     2a0:	000005fc 	.inst	0x000005fc ; undefined
     2a4:	00000000 	.inst	0x00000000 ; undefined
     2a8:	00000600 	.inst	0x00000600 ; undefined
     2ac:	00000000 	.inst	0x00000000 ; undefined
     2b0:	00000604 	.inst	0x00000604 ; undefined
     2b4:	00000000 	.inst	0x00000000 ; undefined
     2b8:	00000608 	.inst	0x00000608 ; undefined
     2bc:	00000000 	.inst	0x00000000 ; undefined
     2c0:	00000a8c 	.inst	0x00000a8c ; undefined
     2c4:	00000000 	.inst	0x00000000 ; undefined
     2c8:	00000b0c 	.inst	0x00000b0c ; undefined
     2cc:	00000000 	.inst	0x00000000 ; undefined
     2d0:	00000b5c 	.inst	0x00000b5c ; undefined
     2d4:	00000000 	.inst	0x00000000 ; undefined
     2d8:	00000b60 	.inst	0x00000b60 ; undefined
     2dc:	00000000 	.inst	0x00000000 ; undefined
     2e0:	00000ba8 	.inst	0x00000ba8 ; undefined
     2e4:	00000000 	.inst	0x00000000 ; undefined
     2e8:	00000bc0 	.inst	0x00000bc0 ; undefined
	...
     300:	0000060c 	.inst	0x0000060c ; undefined
     304:	00000000 	.inst	0x00000000 ; undefined
     308:	00000618 	.inst	0x00000618 ; undefined
     30c:	00000000 	.inst	0x00000000 ; undefined
     310:	00000908 	.inst	0x00000908 ; undefined
     314:	00000000 	.inst	0x00000000 ; undefined
     318:	00000994 	.inst	0x00000994 ; undefined
     31c:	00000000 	.inst	0x00000000 ; undefined
     320:	000009e4 	.inst	0x000009e4 ; undefined
     324:	00000000 	.inst	0x00000000 ; undefined
     328:	000009e8 	.inst	0x000009e8 ; undefined
     32c:	00000000 	.inst	0x00000000 ; undefined
     330:	00000a08 	.inst	0x00000a08 ; undefined
     334:	00000000 	.inst	0x00000000 ; undefined
     338:	00000a18 	.inst	0x00000a18 ; undefined
     33c:	00000000 	.inst	0x00000000 ; undefined
     340:	00000a44 	.inst	0x00000a44 ; undefined
     344:	00000000 	.inst	0x00000000 ; undefined
     348:	00000a58 	.inst	0x00000a58 ; undefined
	...
     360:	00000630 	.inst	0x00000630 ; undefined
     364:	00000000 	.inst	0x00000000 ; undefined
     368:	00000638 	.inst	0x00000638 ; undefined
     36c:	00000000 	.inst	0x00000000 ; undefined
     370:	0000063c 	.inst	0x0000063c ; undefined
     374:	00000000 	.inst	0x00000000 ; undefined
     378:	00000644 	.inst	0x00000644 ; undefined
     37c:	00000000 	.inst	0x00000000 ; undefined
     380:	00000780 	.inst	0x00000780 ; undefined
     384:	00000000 	.inst	0x00000000 ; undefined
     388:	00000790 	.inst	0x00000790 ; undefined
	...
     3a0:	0000067c 	.inst	0x0000067c ; undefined
     3a4:	00000000 	.inst	0x00000000 ; undefined
     3a8:	00000684 	.inst	0x00000684 ; undefined
     3ac:	00000000 	.inst	0x00000000 ; undefined
     3b0:	00000690 	.inst	0x00000690 ; undefined
     3b4:	00000000 	.inst	0x00000000 ; undefined
     3b8:	000006e8 	.inst	0x000006e8 ; undefined
	...
     3d0:	00000690 	.inst	0x00000690 ; undefined
     3d4:	00000000 	.inst	0x00000000 ; undefined
     3d8:	0000069c 	.inst	0x0000069c ; undefined
     3dc:	00000000 	.inst	0x00000000 ; undefined
     3e0:	000006ac 	.inst	0x000006ac ; undefined
     3e4:	00000000 	.inst	0x00000000 ; undefined
     3e8:	000006d8 	.inst	0x000006d8 ; undefined
     3ec:	00000000 	.inst	0x00000000 ; undefined
     3f0:	000006e4 	.inst	0x000006e4 ; undefined
     3f4:	00000000 	.inst	0x00000000 ; undefined
     3f8:	000006e8 	.inst	0x000006e8 ; undefined
	...
     410:	00000690 	.inst	0x00000690 ; undefined
     414:	00000000 	.inst	0x00000000 ; undefined
     418:	0000069c 	.inst	0x0000069c ; undefined
     41c:	00000000 	.inst	0x00000000 ; undefined
     420:	000006c4 	.inst	0x000006c4 ; undefined
     424:	00000000 	.inst	0x00000000 ; undefined
     428:	000006c8 	.inst	0x000006c8 ; undefined
     42c:	00000000 	.inst	0x00000000 ; undefined
     430:	000006cc 	.inst	0x000006cc ; undefined
     434:	00000000 	.inst	0x00000000 ; undefined
     438:	000006d0 	.inst	0x000006d0 ; undefined
     43c:	00000000 	.inst	0x00000000 ; undefined
     440:	000006e4 	.inst	0x000006e4 ; undefined
     444:	00000000 	.inst	0x00000000 ; undefined
     448:	000006e8 	.inst	0x000006e8 ; undefined
	...
     460:	00000708 	.inst	0x00000708 ; undefined
     464:	00000000 	.inst	0x00000000 ; undefined
     468:	00000780 	.inst	0x00000780 ; undefined
     46c:	00000000 	.inst	0x00000000 ; undefined
     470:	00000bf0 	.inst	0x00000bf0 ; undefined
     474:	00000000 	.inst	0x00000000 ; undefined
     478:	00000c0c 	.inst	0x00000c0c ; undefined
     47c:	00000000 	.inst	0x00000000 ; undefined
     480:	00000c5c 	.inst	0x00000c5c ; undefined
     484:	00000000 	.inst	0x00000000 ; undefined
     488:	00000c60 	.inst	0x00000c60 ; undefined
     48c:	00000000 	.inst	0x00000000 ; undefined
     490:	00000ca8 	.inst	0x00000ca8 ; undefined
     494:	00000000 	.inst	0x00000000 ; undefined
     498:	00000cc0 	.inst	0x00000cc0 ; undefined
	...
     4b0:	00000724 	.inst	0x00000724 ; undefined
     4b4:	00000000 	.inst	0x00000000 ; undefined
     4b8:	00000780 	.inst	0x00000780 ; undefined
     4bc:	00000000 	.inst	0x00000000 ; undefined
     4c0:	00000bf0 	.inst	0x00000bf0 ; undefined
     4c4:	00000000 	.inst	0x00000000 ; undefined
     4c8:	00000c0c 	.inst	0x00000c0c ; undefined
     4cc:	00000000 	.inst	0x00000000 ; undefined
     4d0:	00000c5c 	.inst	0x00000c5c ; undefined
     4d4:	00000000 	.inst	0x00000000 ; undefined
     4d8:	00000c60 	.inst	0x00000c60 ; undefined
     4dc:	00000000 	.inst	0x00000000 ; undefined
     4e0:	00000ca8 	.inst	0x00000ca8 ; undefined
     4e4:	00000000 	.inst	0x00000000 ; undefined
     4e8:	00000cc0 	.inst	0x00000cc0 ; undefined
	...
     500:	0000080c 	.inst	0x0000080c ; undefined
     504:	00000000 	.inst	0x00000000 ; undefined
     508:	00000890 	.inst	0x00000890 ; undefined
     50c:	00000000 	.inst	0x00000000 ; undefined
     510:	000008a8 	.inst	0x000008a8 ; undefined
     514:	00000000 	.inst	0x00000000 ; undefined
     518:	000008c4 	.inst	0x000008c4 ; undefined
     51c:	00000000 	.inst	0x00000000 ; undefined
     520:	00000a68 	.inst	0x00000a68 ; undefined
     524:	00000000 	.inst	0x00000000 ; undefined
     528:	00000a78 	.inst	0x00000a78 ; undefined
	...
     540:	00000848 	.inst	0x00000848 ; undefined
     544:	00000000 	.inst	0x00000000 ; undefined
     548:	0000084c 	.inst	0x0000084c ; undefined
     54c:	00000000 	.inst	0x00000000 ; undefined
     550:	00000850 	.inst	0x00000850 ; undefined
     554:	00000000 	.inst	0x00000000 ; undefined
     558:	00000858 	.inst	0x00000858 ; undefined
	...
     570:	00000868 	.inst	0x00000868 ; undefined
     574:	00000000 	.inst	0x00000000 ; undefined
     578:	00000878 	.inst	0x00000878 ; undefined
     57c:	00000000 	.inst	0x00000000 ; undefined
     580:	000008a8 	.inst	0x000008a8 ; undefined
     584:	00000000 	.inst	0x00000000 ; undefined
     588:	000008b8 	.inst	0x000008b8 ; undefined
	...
     5a0:	000008d8 	.inst	0x000008d8 ; undefined
     5a4:	00000000 	.inst	0x00000000 ; undefined
     5a8:	000008f4 	.inst	0x000008f4 ; undefined
     5ac:	00000000 	.inst	0x00000000 ; undefined
     5b0:	00000a38 	.inst	0x00000a38 ; undefined
     5b4:	00000000 	.inst	0x00000000 ; undefined
     5b8:	00000a44 	.inst	0x00000a44 ; undefined
	...
     5d0:	00000994 	.inst	0x00000994 ; undefined
     5d4:	00000000 	.inst	0x00000000 ; undefined
     5d8:	000009e4 	.inst	0x000009e4 ; undefined
     5dc:	00000000 	.inst	0x00000000 ; undefined
     5e0:	000009e8 	.inst	0x000009e8 ; undefined
     5e4:	00000000 	.inst	0x00000000 ; undefined
     5e8:	00000a08 	.inst	0x00000a08 ; undefined
     5ec:	00000000 	.inst	0x00000000 ; undefined
     5f0:	00000a18 	.inst	0x00000a18 ; undefined
     5f4:	00000000 	.inst	0x00000000 ; undefined
     5f8:	00000a38 	.inst	0x00000a38 ; undefined
     5fc:	00000000 	.inst	0x00000000 ; undefined
     600:	00000a58 	.inst	0x00000a58 ; undefined
     604:	00000000 	.inst	0x00000000 ; undefined
     608:	00000a68 	.inst	0x00000a68 ; undefined
	...
     620:	000009c8 	.inst	0x000009c8 ; undefined
     624:	00000000 	.inst	0x00000000 ; undefined
     628:	000009cc 	.inst	0x000009cc ; undefined
     62c:	00000000 	.inst	0x00000000 ; undefined
     630:	000009d0 	.inst	0x000009d0 ; undefined
     634:	00000000 	.inst	0x00000000 ; undefined
     638:	000009d8 	.inst	0x000009d8 ; undefined
	...
     650:	000009e8 	.inst	0x000009e8 ; undefined
     654:	00000000 	.inst	0x00000000 ; undefined
     658:	000009f8 	.inst	0x000009f8 ; undefined
     65c:	00000000 	.inst	0x00000000 ; undefined
     660:	00000a18 	.inst	0x00000a18 ; undefined
     664:	00000000 	.inst	0x00000000 ; undefined
     668:	00000a28 	.inst	0x00000a28 ; undefined
	...
     680:	00000b0c 	.inst	0x00000b0c ; undefined
     684:	00000000 	.inst	0x00000000 ; undefined
     688:	00000b5c 	.inst	0x00000b5c ; undefined
     68c:	00000000 	.inst	0x00000000 ; undefined
     690:	00000b60 	.inst	0x00000b60 ; undefined
     694:	00000000 	.inst	0x00000000 ; undefined
     698:	00000ba8 	.inst	0x00000ba8 ; undefined
     69c:	00000000 	.inst	0x00000000 ; undefined
     6a0:	00000bc0 	.inst	0x00000bc0 ; undefined
     6a4:	00000000 	.inst	0x00000000 ; undefined
     6a8:	00000bd0 	.inst	0x00000bd0 ; undefined
	...
     6c0:	00000b40 	.inst	0x00000b40 ; undefined
     6c4:	00000000 	.inst	0x00000000 ; undefined
     6c8:	00000b44 	.inst	0x00000b44 ; undefined
     6cc:	00000000 	.inst	0x00000000 ; undefined
     6d0:	00000b48 	.inst	0x00000b48 ; undefined
     6d4:	00000000 	.inst	0x00000000 ; undefined
     6d8:	00000b50 	.inst	0x00000b50 ; undefined
	...
     6f0:	00000b60 	.inst	0x00000b60 ; undefined
     6f4:	00000000 	.inst	0x00000000 ; undefined
     6f8:	00000b70 	.inst	0x00000b70 ; undefined
     6fc:	00000000 	.inst	0x00000000 ; undefined
     700:	00000b78 	.inst	0x00000b78 ; undefined
     704:	00000000 	.inst	0x00000000 ; undefined
     708:	00000b94 	.inst	0x00000b94 ; undefined
	...
     720:	00000c0c 	.inst	0x00000c0c ; undefined
     724:	00000000 	.inst	0x00000000 ; undefined
     728:	00000c5c 	.inst	0x00000c5c ; undefined
     72c:	00000000 	.inst	0x00000000 ; undefined
     730:	00000c60 	.inst	0x00000c60 ; undefined
     734:	00000000 	.inst	0x00000000 ; undefined
     738:	00000ca8 	.inst	0x00000ca8 ; undefined
     73c:	00000000 	.inst	0x00000000 ; undefined
     740:	00000cc0 	.inst	0x00000cc0 ; undefined
     744:	00000000 	.inst	0x00000000 ; undefined
     748:	00000cd0 	.inst	0x00000cd0 ; undefined
	...
     760:	00000c40 	.inst	0x00000c40 ; undefined
     764:	00000000 	.inst	0x00000000 ; undefined
     768:	00000c44 	.inst	0x00000c44 ; undefined
     76c:	00000000 	.inst	0x00000000 ; undefined
     770:	00000c48 	.inst	0x00000c48 ; undefined
     774:	00000000 	.inst	0x00000000 ; undefined
     778:	00000c50 	.inst	0x00000c50 ; undefined
	...
     790:	00000c60 	.inst	0x00000c60 ; undefined
     794:	00000000 	.inst	0x00000000 ; undefined
     798:	00000c70 	.inst	0x00000c70 ; undefined
     79c:	00000000 	.inst	0x00000000 ; undefined
     7a0:	00000c78 	.inst	0x00000c78 ; undefined
     7a4:	00000000 	.inst	0x00000000 ; undefined
     7a8:	00000c94 	.inst	0x00000c94 ; undefined
	...
     7c0:	000e4850 	.inst	0x000e4850 ; undefined
     7c4:	ffff0000 	.inst	0xffff0000 ; undefined
     7c8:	000e49a4 	.inst	0x000e49a4 ; undefined
     7cc:	ffff0000 	.inst	0xffff0000 ; undefined
	...
     7e0:	00000088 	.inst	0x00000088 ; undefined
     7e4:	00000000 	.inst	0x00000000 ; undefined
     7e8:	0000009c 	.inst	0x0000009c ; undefined
     7ec:	00000000 	.inst	0x00000000 ; undefined
     7f0:	000000a0 	.inst	0x000000a0 ; undefined
     7f4:	00000000 	.inst	0x00000000 ; undefined
     7f8:	000000a4 	.inst	0x000000a4 ; undefined
	...
     810:	00000140 	.inst	0x00000140 ; undefined
     814:	00000000 	.inst	0x00000000 ; undefined
     818:	00000158 	.inst	0x00000158 ; undefined
     81c:	00000000 	.inst	0x00000000 ; undefined
     820:	0000015c 	.inst	0x0000015c ; undefined
     824:	00000000 	.inst	0x00000000 ; undefined
     828:	00000164 	.inst	0x00000164 ; undefined
	...
     840:	00000164 	.inst	0x00000164 ; undefined
     844:	00000000 	.inst	0x00000000 ; undefined
     848:	0000018c 	.inst	0x0000018c ; undefined
     84c:	00000000 	.inst	0x00000000 ; undefined
     850:	00000190 	.inst	0x00000190 ; undefined
     854:	00000000 	.inst	0x00000000 ; undefined
     858:	00000194 	.inst	0x00000194 ; undefined
	...
     870:	00000178 	.inst	0x00000178 ; undefined
     874:	00000000 	.inst	0x00000000 ; undefined
     878:	0000018c 	.inst	0x0000018c ; undefined
     87c:	00000000 	.inst	0x00000000 ; undefined
     880:	00000190 	.inst	0x00000190 ; undefined
     884:	00000000 	.inst	0x00000000 ; undefined
     888:	00000194 	.inst	0x00000194 ; undefined
	...
     8a0:	000001b0 	.inst	0x000001b0 ; undefined
     8a4:	00000000 	.inst	0x00000000 ; undefined
     8a8:	000001c8 	.inst	0x000001c8 ; undefined
     8ac:	00000000 	.inst	0x00000000 ; undefined
     8b0:	000001cc 	.inst	0x000001cc ; undefined
     8b4:	00000000 	.inst	0x00000000 ; undefined
     8b8:	000001d4 	.inst	0x000001d4 ; undefined
	...
     8d0:	000001fc 	.inst	0x000001fc ; undefined
     8d4:	00000000 	.inst	0x00000000 ; undefined
     8d8:	00000200 	.inst	0x00000200 ; undefined
     8dc:	00000000 	.inst	0x00000000 ; undefined
     8e0:	00000210 	.inst	0x00000210 ; undefined
     8e4:	00000000 	.inst	0x00000000 ; undefined
     8e8:	00000220 	.inst	0x00000220 ; undefined
     8ec:	00000000 	.inst	0x00000000 ; undefined
     8f0:	00000238 	.inst	0x00000238 ; undefined
     8f4:	00000000 	.inst	0x00000000 ; undefined
     8f8:	00000330 	.inst	0x00000330 ; undefined
	...
     910:	000001fc 	.inst	0x000001fc ; undefined
     914:	00000000 	.inst	0x00000000 ; undefined
     918:	00000200 	.inst	0x00000200 ; undefined
     91c:	00000000 	.inst	0x00000000 ; undefined
     920:	00000214 	.inst	0x00000214 ; undefined
     924:	00000000 	.inst	0x00000000 ; undefined
     928:	00000220 	.inst	0x00000220 ; undefined
     92c:	00000000 	.inst	0x00000000 ; undefined
     930:	00000250 	.inst	0x00000250 ; undefined
     934:	00000000 	.inst	0x00000000 ; undefined
     938:	0000027c 	.inst	0x0000027c ; undefined
     93c:	00000000 	.inst	0x00000000 ; undefined
     940:	00000294 	.inst	0x00000294 ; undefined
     944:	00000000 	.inst	0x00000000 ; undefined
     948:	00000330 	.inst	0x00000330 ; undefined
	...
     960:	000001fc 	.inst	0x000001fc ; undefined
     964:	00000000 	.inst	0x00000000 ; undefined
     968:	00000200 	.inst	0x00000200 ; undefined
     96c:	00000000 	.inst	0x00000000 ; undefined
     970:	000002d0 	.inst	0x000002d0 ; undefined
     974:	00000000 	.inst	0x00000000 ; undefined
     978:	000002ec 	.inst	0x000002ec ; undefined
	...
     990:	00000218 	.inst	0x00000218 ; undefined
     994:	00000000 	.inst	0x00000000 ; undefined
     998:	00000220 	.inst	0x00000220 ; undefined
     99c:	00000000 	.inst	0x00000000 ; undefined
     9a0:	000002b4 	.inst	0x000002b4 ; undefined
     9a4:	00000000 	.inst	0x00000000 ; undefined
     9a8:	000002c0 	.inst	0x000002c0 ; undefined
     9ac:	00000000 	.inst	0x00000000 ; undefined
     9b0:	000002f8 	.inst	0x000002f8 ; undefined
     9b4:	00000000 	.inst	0x00000000 ; undefined
     9b8:	00000324 	.inst	0x00000324 ; undefined
	...
     9d0:	000002b4 	.inst	0x000002b4 ; undefined
     9d4:	00000000 	.inst	0x00000000 ; undefined
     9d8:	000002c0 	.inst	0x000002c0 ; undefined
     9dc:	00000000 	.inst	0x00000000 ; undefined
     9e0:	00000308 	.inst	0x00000308 ; undefined
     9e4:	00000000 	.inst	0x00000000 ; undefined
     9e8:	00000324 	.inst	0x00000324 ; undefined
	...
     a00:	00000160 	.inst	0x00000160 ; undefined
     a04:	00000000 	.inst	0x00000000 ; undefined
     a08:	00000174 	.inst	0x00000174 ; undefined
     a0c:	00000000 	.inst	0x00000000 ; undefined
     a10:	0000017c 	.inst	0x0000017c ; undefined
     a14:	00000000 	.inst	0x00000000 ; undefined
     a18:	00000184 	.inst	0x00000184 ; undefined
     a1c:	00000000 	.inst	0x00000000 ; undefined
     a20:	00000190 	.inst	0x00000190 ; undefined
     a24:	00000000 	.inst	0x00000000 ; undefined
     a28:	000001a0 	.inst	0x000001a0 ; undefined
     a2c:	00000000 	.inst	0x00000000 ; undefined
     a30:	000001a8 	.inst	0x000001a8 ; undefined
     a34:	00000000 	.inst	0x00000000 ; undefined
     a38:	000001b0 	.inst	0x000001b0 ; undefined
	...
     a50:	00000394 	.inst	0x00000394 ; undefined
     a54:	00000000 	.inst	0x00000000 ; undefined
     a58:	0000039c 	.inst	0x0000039c ; undefined
     a5c:	00000000 	.inst	0x00000000 ; undefined
     a60:	000003a8 	.inst	0x000003a8 ; undefined
     a64:	00000000 	.inst	0x00000000 ; undefined
     a68:	00000434 	.inst	0x00000434 ; undefined
	...
     a80:	000003a8 	.inst	0x000003a8 ; undefined
     a84:	00000000 	.inst	0x00000000 ; undefined
     a88:	000003c4 	.inst	0x000003c4 ; undefined
     a8c:	00000000 	.inst	0x00000000 ; undefined
     a90:	000003e8 	.inst	0x000003e8 ; undefined
     a94:	00000000 	.inst	0x00000000 ; undefined
     a98:	00000410 	.inst	0x00000410 ; undefined
	...
     ab0:	00000010 	.inst	0x00000010 ; undefined
     ab4:	00000000 	.inst	0x00000000 ; undefined
     ab8:	00000048 	.inst	0x00000048 ; undefined
     abc:	00000000 	.inst	0x00000000 ; undefined
     ac0:	00000050 	.inst	0x00000050 ; undefined
     ac4:	00000000 	.inst	0x00000000 ; undefined
     ac8:	000000a4 	.inst	0x000000a4 ; undefined
	...
     ae0:	00000184 	.inst	0x00000184 ; undefined
     ae4:	00000000 	.inst	0x00000000 ; undefined
     ae8:	00000188 	.inst	0x00000188 ; undefined
     aec:	00000000 	.inst	0x00000000 ; undefined
     af0:	000001a0 	.inst	0x000001a0 ; undefined
     af4:	00000000 	.inst	0x00000000 ; undefined
     af8:	000001dc 	.inst	0x000001dc ; undefined
	...
     b10:	0000020c 	.inst	0x0000020c ; undefined
     b14:	00000000 	.inst	0x00000000 ; undefined
     b18:	00000214 	.inst	0x00000214 ; undefined
     b1c:	00000000 	.inst	0x00000000 ; undefined
     b20:	00000218 	.inst	0x00000218 ; undefined
     b24:	00000000 	.inst	0x00000000 ; undefined
     b28:	00000260 	.inst	0x00000260 ; undefined
	...
     b40:	0000020c 	.inst	0x0000020c ; undefined
     b44:	00000000 	.inst	0x00000000 ; undefined
     b48:	00000214 	.inst	0x00000214 ; undefined
     b4c:	00000000 	.inst	0x00000000 ; undefined
     b50:	00000224 	.inst	0x00000224 ; undefined
     b54:	00000000 	.inst	0x00000000 ; undefined
     b58:	00000254 	.inst	0x00000254 ; undefined
	...
     b70:	0000045c 	.inst	0x0000045c ; undefined
     b74:	00000000 	.inst	0x00000000 ; undefined
     b78:	00000464 	.inst	0x00000464 ; undefined
     b7c:	00000000 	.inst	0x00000000 ; undefined
     b80:	00000470 	.inst	0x00000470 ; undefined
     b84:	00000000 	.inst	0x00000000 ; undefined
     b88:	00000474 	.inst	0x00000474 ; undefined
     b8c:	00000000 	.inst	0x00000000 ; undefined
     b90:	00000494 	.inst	0x00000494 ; undefined
     b94:	00000000 	.inst	0x00000000 ; undefined
     b98:	000004d8 	.inst	0x000004d8 ; undefined
	...
     bb0:	0000049c 	.inst	0x0000049c ; undefined
     bb4:	00000000 	.inst	0x00000000 ; undefined
     bb8:	000004a0 	.inst	0x000004a0 ; undefined
     bbc:	00000000 	.inst	0x00000000 ; undefined
     bc0:	000004a4 	.inst	0x000004a4 ; undefined
     bc4:	00000000 	.inst	0x00000000 ; undefined
     bc8:	000004c0 	.inst	0x000004c0 ; undefined
     bcc:	00000000 	.inst	0x00000000 ; undefined
     bd0:	000004c4 	.inst	0x000004c4 ; undefined
     bd4:	00000000 	.inst	0x00000000 ; undefined
     bd8:	000004cc 	.inst	0x000004cc ; undefined
	...
     bf0:	00000474 	.inst	0x00000474 ; undefined
     bf4:	00000000 	.inst	0x00000000 ; undefined
     bf8:	0000047c 	.inst	0x0000047c ; undefined
     bfc:	00000000 	.inst	0x00000000 ; undefined
     c00:	000004d8 	.inst	0x000004d8 ; undefined
     c04:	00000000 	.inst	0x00000000 ; undefined
     c08:	00000530 	.inst	0x00000530 ; undefined
	...
     c20:	000004e8 	.inst	0x000004e8 ; undefined
     c24:	00000000 	.inst	0x00000000 ; undefined
     c28:	000004ec 	.inst	0x000004ec ; undefined
     c2c:	00000000 	.inst	0x00000000 ; undefined
     c30:	000004f8 	.inst	0x000004f8 ; undefined
     c34:	00000000 	.inst	0x00000000 ; undefined
     c38:	00000514 	.inst	0x00000514 ; undefined
     c3c:	00000000 	.inst	0x00000000 ; undefined
     c40:	00000518 	.inst	0x00000518 ; undefined
     c44:	00000000 	.inst	0x00000000 ; undefined
     c48:	00000520 	.inst	0x00000520 ; undefined
	...
     c60:	000005bc 	.inst	0x000005bc ; undefined
     c64:	00000000 	.inst	0x00000000 ; undefined
     c68:	000005cc 	.inst	0x000005cc ; undefined
     c6c:	00000000 	.inst	0x00000000 ; undefined
     c70:	000005d0 	.inst	0x000005d0 ; undefined
     c74:	00000000 	.inst	0x00000000 ; undefined
     c78:	0000061c 	.inst	0x0000061c ; undefined
	...
     c90:	0000079c 	.inst	0x0000079c ; undefined
     c94:	00000000 	.inst	0x00000000 ; undefined
     c98:	000007a4 	.inst	0x000007a4 ; undefined
     c9c:	00000000 	.inst	0x00000000 ; undefined
     ca0:	000007b8 	.inst	0x000007b8 ; undefined
     ca4:	00000000 	.inst	0x00000000 ; undefined
     ca8:	000007e8 	.inst	0x000007e8 ; undefined
	...
     cc0:	00000098 	.inst	0x00000098 ; undefined
     cc4:	00000000 	.inst	0x00000000 ; undefined
     cc8:	000000c0 	.inst	0x000000c0 ; undefined
     ccc:	00000000 	.inst	0x00000000 ; undefined
     cd0:	000000c8 	.inst	0x000000c8 ; undefined
     cd4:	00000000 	.inst	0x00000000 ; undefined
     cd8:	000000d0 	.inst	0x000000d0 ; undefined
	...
     cf0:	000000c0 	.inst	0x000000c0 ; undefined
     cf4:	00000000 	.inst	0x00000000 ; undefined
     cf8:	000000c8 	.inst	0x000000c8 ; undefined
     cfc:	00000000 	.inst	0x00000000 ; undefined
     d00:	000000d0 	.inst	0x000000d0 ; undefined
     d04:	00000000 	.inst	0x00000000 ; undefined
     d08:	000000e8 	.inst	0x000000e8 ; undefined
	...
     d20:	0000012c 	.inst	0x0000012c ; undefined
     d24:	00000000 	.inst	0x00000000 ; undefined
     d28:	00000130 	.inst	0x00000130 ; undefined
     d2c:	00000000 	.inst	0x00000000 ; undefined
     d30:	00000134 	.inst	0x00000134 ; undefined
     d34:	00000000 	.inst	0x00000000 ; undefined
     d38:	00000158 	.inst	0x00000158 ; undefined
     d3c:	00000000 	.inst	0x00000000 ; undefined
     d40:	00000160 	.inst	0x00000160 ; undefined
     d44:	00000000 	.inst	0x00000000 ; undefined
     d48:	00000168 	.inst	0x00000168 ; undefined
	...
     d60:	00000158 	.inst	0x00000158 ; undefined
     d64:	00000000 	.inst	0x00000000 ; undefined
     d68:	00000160 	.inst	0x00000160 ; undefined
     d6c:	00000000 	.inst	0x00000000 ; undefined
     d70:	00000168 	.inst	0x00000168 ; undefined
     d74:	00000000 	.inst	0x00000000 ; undefined
     d78:	00000180 	.inst	0x00000180 ; undefined
	...
     d90:	000001ec 	.inst	0x000001ec ; undefined
     d94:	00000000 	.inst	0x00000000 ; undefined
     d98:	000001f0 	.inst	0x000001f0 ; undefined
     d9c:	00000000 	.inst	0x00000000 ; undefined
     da0:	000001f4 	.inst	0x000001f4 ; undefined
     da4:	00000000 	.inst	0x00000000 ; undefined
     da8:	00000218 	.inst	0x00000218 ; undefined
     dac:	00000000 	.inst	0x00000000 ; undefined
     db0:	00000220 	.inst	0x00000220 ; undefined
     db4:	00000000 	.inst	0x00000000 ; undefined
     db8:	00000228 	.inst	0x00000228 ; undefined
	...
     dd0:	00000218 	.inst	0x00000218 ; undefined
     dd4:	00000000 	.inst	0x00000000 ; undefined
     dd8:	00000220 	.inst	0x00000220 ; undefined
     ddc:	00000000 	.inst	0x00000000 ; undefined
     de0:	00000228 	.inst	0x00000228 ; undefined
     de4:	00000000 	.inst	0x00000000 ; undefined
     de8:	00000240 	.inst	0x00000240 ; undefined
	...
     e00:	00000298 	.inst	0x00000298 ; undefined
     e04:	00000000 	.inst	0x00000000 ; undefined
     e08:	0000029c 	.inst	0x0000029c ; undefined
     e0c:	00000000 	.inst	0x00000000 ; undefined
     e10:	000002a4 	.inst	0x000002a4 ; undefined
     e14:	00000000 	.inst	0x00000000 ; undefined
     e18:	000002c8 	.inst	0x000002c8 ; undefined
     e1c:	00000000 	.inst	0x00000000 ; undefined
     e20:	000002d0 	.inst	0x000002d0 ; undefined
     e24:	00000000 	.inst	0x00000000 ; undefined
     e28:	000002d8 	.inst	0x000002d8 ; undefined
	...
     e40:	000002c8 	.inst	0x000002c8 ; undefined
     e44:	00000000 	.inst	0x00000000 ; undefined
     e48:	000002d0 	.inst	0x000002d0 ; undefined
     e4c:	00000000 	.inst	0x00000000 ; undefined
     e50:	000002d8 	.inst	0x000002d8 ; undefined
     e54:	00000000 	.inst	0x00000000 ; undefined
     e58:	000002f0 	.inst	0x000002f0 ; undefined
	...
     e70:	0000033c 	.inst	0x0000033c ; undefined
     e74:	00000000 	.inst	0x00000000 ; undefined
     e78:	00000340 	.inst	0x00000340 ; undefined
     e7c:	00000000 	.inst	0x00000000 ; undefined
     e80:	00000348 	.inst	0x00000348 ; undefined
     e84:	00000000 	.inst	0x00000000 ; undefined
     e88:	00000370 	.inst	0x00000370 ; undefined
     e8c:	00000000 	.inst	0x00000000 ; undefined
     e90:	00000378 	.inst	0x00000378 ; undefined
     e94:	00000000 	.inst	0x00000000 ; undefined
     e98:	00000380 	.inst	0x00000380 ; undefined
	...
     eb0:	00000370 	.inst	0x00000370 ; undefined
     eb4:	00000000 	.inst	0x00000000 ; undefined
     eb8:	00000378 	.inst	0x00000378 ; undefined
     ebc:	00000000 	.inst	0x00000000 ; undefined
     ec0:	00000380 	.inst	0x00000380 ; undefined
     ec4:	00000000 	.inst	0x00000000 ; undefined
     ec8:	00000398 	.inst	0x00000398 ; undefined
	...
     ee0:	000003dc 	.inst	0x000003dc ; undefined
     ee4:	00000000 	.inst	0x00000000 ; undefined
     ee8:	000003e0 	.inst	0x000003e0 ; undefined
     eec:	00000000 	.inst	0x00000000 ; undefined
     ef0:	000003e8 	.inst	0x000003e8 ; undefined
     ef4:	00000000 	.inst	0x00000000 ; undefined
     ef8:	00000410 	.inst	0x00000410 ; undefined
     efc:	00000000 	.inst	0x00000000 ; undefined
     f00:	00000418 	.inst	0x00000418 ; undefined
     f04:	00000000 	.inst	0x00000000 ; undefined
     f08:	00000420 	.inst	0x00000420 ; undefined
	...
     f20:	00000410 	.inst	0x00000410 ; undefined
     f24:	00000000 	.inst	0x00000000 ; undefined
     f28:	00000418 	.inst	0x00000418 ; undefined
     f2c:	00000000 	.inst	0x00000000 ; undefined
     f30:	00000420 	.inst	0x00000420 ; undefined
     f34:	00000000 	.inst	0x00000000 ; undefined
     f38:	00000438 	.inst	0x00000438 ; undefined
	...
     f50:	00000480 	.inst	0x00000480 ; undefined
     f54:	00000000 	.inst	0x00000000 ; undefined
     f58:	00000484 	.inst	0x00000484 ; undefined
     f5c:	00000000 	.inst	0x00000000 ; undefined
     f60:	00000488 	.inst	0x00000488 ; undefined
     f64:	00000000 	.inst	0x00000000 ; undefined
     f68:	000004b0 	.inst	0x000004b0 ; undefined
     f6c:	00000000 	.inst	0x00000000 ; undefined
     f70:	000004b8 	.inst	0x000004b8 ; undefined
     f74:	00000000 	.inst	0x00000000 ; undefined
     f78:	000004c0 	.inst	0x000004c0 ; undefined
	...
     f90:	000004b0 	.inst	0x000004b0 ; undefined
     f94:	00000000 	.inst	0x00000000 ; undefined
     f98:	000004b8 	.inst	0x000004b8 ; undefined
     f9c:	00000000 	.inst	0x00000000 ; undefined
     fa0:	000004c0 	.inst	0x000004c0 ; undefined
     fa4:	00000000 	.inst	0x00000000 ; undefined
     fa8:	000004d8 	.inst	0x000004d8 ; undefined
	...
     fc0:	00000540 	.inst	0x00000540 ; undefined
     fc4:	00000000 	.inst	0x00000000 ; undefined
     fc8:	00000544 	.inst	0x00000544 ; undefined
     fcc:	00000000 	.inst	0x00000000 ; undefined
     fd0:	00000548 	.inst	0x00000548 ; undefined
     fd4:	00000000 	.inst	0x00000000 ; undefined
     fd8:	00000570 	.inst	0x00000570 ; undefined
     fdc:	00000000 	.inst	0x00000000 ; undefined
     fe0:	00000578 	.inst	0x00000578 ; undefined
     fe4:	00000000 	.inst	0x00000000 ; undefined
     fe8:	00000580 	.inst	0x00000580 ; undefined
	...
    1000:	00000570 	.inst	0x00000570 ; undefined
    1004:	00000000 	.inst	0x00000000 ; undefined
    1008:	00000578 	.inst	0x00000578 ; undefined
    100c:	00000000 	.inst	0x00000000 ; undefined
    1010:	00000580 	.inst	0x00000580 ; undefined
    1014:	00000000 	.inst	0x00000000 ; undefined
    1018:	00000598 	.inst	0x00000598 ; undefined
	...
    1030:	00000790 	.inst	0x00000790 ; undefined
    1034:	00000000 	.inst	0x00000000 ; undefined
    1038:	00000794 	.inst	0x00000794 ; undefined
    103c:	00000000 	.inst	0x00000000 ; undefined
    1040:	000007ac 	.inst	0x000007ac ; undefined
    1044:	00000000 	.inst	0x00000000 ; undefined
    1048:	000007d0 	.inst	0x000007d0 ; undefined
    104c:	00000000 	.inst	0x00000000 ; undefined
    1050:	000007d8 	.inst	0x000007d8 ; undefined
    1054:	00000000 	.inst	0x00000000 ; undefined
    1058:	000007e0 	.inst	0x000007e0 ; undefined
	...
    1070:	000007d0 	.inst	0x000007d0 ; undefined
    1074:	00000000 	.inst	0x00000000 ; undefined
    1078:	000007d8 	.inst	0x000007d8 ; undefined
    107c:	00000000 	.inst	0x00000000 ; undefined
    1080:	000007e0 	.inst	0x000007e0 ; undefined
    1084:	00000000 	.inst	0x00000000 ; undefined
    1088:	000007f8 	.inst	0x000007f8 ; undefined
	...
    10a0:	0000080c 	.inst	0x0000080c ; undefined
    10a4:	00000000 	.inst	0x00000000 ; undefined
    10a8:	000008f8 	.inst	0x000008f8 ; undefined
    10ac:	00000000 	.inst	0x00000000 ; undefined
    10b0:	00000918 	.inst	0x00000918 ; undefined
    10b4:	00000000 	.inst	0x00000000 ; undefined
    10b8:	00000934 	.inst	0x00000934 ; undefined
	...
    10d0:	0000080c 	.inst	0x0000080c ; undefined
    10d4:	00000000 	.inst	0x00000000 ; undefined
    10d8:	000008f0 	.inst	0x000008f0 ; undefined
    10dc:	00000000 	.inst	0x00000000 ; undefined
    10e0:	00000918 	.inst	0x00000918 ; undefined
    10e4:	00000000 	.inst	0x00000000 ; undefined
    10e8:	00000934 	.inst	0x00000934 ; undefined
	...
    1100:	00000814 	.inst	0x00000814 ; undefined
    1104:	00000000 	.inst	0x00000000 ; undefined
    1108:	00000840 	.inst	0x00000840 ; undefined
    110c:	00000000 	.inst	0x00000000 ; undefined
    1110:	00000870 	.inst	0x00000870 ; undefined
    1114:	00000000 	.inst	0x00000000 ; undefined
    1118:	000008ec 	.inst	0x000008ec ; undefined
    111c:	00000000 	.inst	0x00000000 ; undefined
    1120:	00000928 	.inst	0x00000928 ; undefined
    1124:	00000000 	.inst	0x00000000 ; undefined
    1128:	00000934 	.inst	0x00000934 ; undefined
	...
    1140:	00000824 	.inst	0x00000824 ; undefined
    1144:	00000000 	.inst	0x00000000 ; undefined
    1148:	00000838 	.inst	0x00000838 ; undefined
    114c:	00000000 	.inst	0x00000000 ; undefined
    1150:	00000874 	.inst	0x00000874 ; undefined
    1154:	00000000 	.inst	0x00000000 ; undefined
    1158:	00000878 	.inst	0x00000878 ; undefined
    115c:	00000000 	.inst	0x00000000 ; undefined
    1160:	00000884 	.inst	0x00000884 ; undefined
    1164:	00000000 	.inst	0x00000000 ; undefined
    1168:	000008a0 	.inst	0x000008a0 ; undefined
	...
    1180:	0000095c 	.inst	0x0000095c ; undefined
    1184:	00000000 	.inst	0x00000000 ; undefined
    1188:	00000960 	.inst	0x00000960 ; undefined
    118c:	00000000 	.inst	0x00000000 ; undefined
    1190:	00000964 	.inst	0x00000964 ; undefined
    1194:	00000000 	.inst	0x00000000 ; undefined
    1198:	00000988 	.inst	0x00000988 ; undefined
    119c:	00000000 	.inst	0x00000000 ; undefined
    11a0:	00000990 	.inst	0x00000990 ; undefined
    11a4:	00000000 	.inst	0x00000000 ; undefined
    11a8:	00000998 	.inst	0x00000998 ; undefined
	...
    11c0:	00000988 	.inst	0x00000988 ; undefined
    11c4:	00000000 	.inst	0x00000000 ; undefined
    11c8:	00000990 	.inst	0x00000990 ; undefined
    11cc:	00000000 	.inst	0x00000000 ; undefined
    11d0:	00000998 	.inst	0x00000998 ; undefined
    11d4:	00000000 	.inst	0x00000000 ; undefined
    11d8:	000009b0 	.inst	0x000009b0 ; undefined
	...
    11f0:	00000070 	.inst	0x00000070 ; undefined
    11f4:	00000000 	.inst	0x00000000 ; undefined
    11f8:	00000074 	.inst	0x00000074 ; undefined
    11fc:	00000000 	.inst	0x00000000 ; undefined
    1200:	00000078 	.inst	0x00000078 ; undefined
    1204:	00000000 	.inst	0x00000000 ; undefined
    1208:	00000084 	.inst	0x00000084 ; undefined
    120c:	00000000 	.inst	0x00000000 ; undefined
    1210:	00000088 	.inst	0x00000088 ; undefined
    1214:	00000000 	.inst	0x00000000 ; undefined
    1218:	0000008c 	.inst	0x0000008c ; undefined
	...
    1230:	000000c0 	.inst	0x000000c0 ; undefined
    1234:	00000000 	.inst	0x00000000 ; undefined
    1238:	000000c4 	.inst	0x000000c4 ; undefined
    123c:	00000000 	.inst	0x00000000 ; undefined
    1240:	000000cc 	.inst	0x000000cc ; undefined
    1244:	00000000 	.inst	0x00000000 ; undefined
    1248:	000000e4 	.inst	0x000000e4 ; undefined
	...
    1260:	000000ec 	.inst	0x000000ec ; undefined
    1264:	00000000 	.inst	0x00000000 ; undefined
    1268:	000000f0 	.inst	0x000000f0 ; undefined
    126c:	00000000 	.inst	0x00000000 ; undefined
    1270:	000000f4 	.inst	0x000000f4 ; undefined
    1274:	00000000 	.inst	0x00000000 ; undefined
    1278:	000000f8 	.inst	0x000000f8 ; undefined
    127c:	00000000 	.inst	0x00000000 ; undefined
    1280:	00000100 	.inst	0x00000100 ; undefined
    1284:	00000000 	.inst	0x00000000 ; undefined
    1288:	00000110 	.inst	0x00000110 ; undefined
	...
    12a0:	00000118 	.inst	0x00000118 ; undefined
    12a4:	00000000 	.inst	0x00000000 ; undefined
    12a8:	0000011c 	.inst	0x0000011c ; undefined
    12ac:	00000000 	.inst	0x00000000 ; undefined
    12b0:	00000120 	.inst	0x00000120 ; undefined
    12b4:	00000000 	.inst	0x00000000 ; undefined
    12b8:	00000124 	.inst	0x00000124 ; undefined
    12bc:	00000000 	.inst	0x00000000 ; undefined
    12c0:	0000012c 	.inst	0x0000012c ; undefined
    12c4:	00000000 	.inst	0x00000000 ; undefined
    12c8:	0000013c 	.inst	0x0000013c ; undefined
	...
    12e0:	00000350 	.inst	0x00000350 ; undefined
    12e4:	00000000 	.inst	0x00000000 ; undefined
    12e8:	00000358 	.inst	0x00000358 ; undefined
    12ec:	00000000 	.inst	0x00000000 ; undefined
    12f0:	00000360 	.inst	0x00000360 ; undefined
    12f4:	00000000 	.inst	0x00000000 ; undefined
    12f8:	00000368 	.inst	0x00000368 ; undefined
	...
    1310:	0000043c 	.inst	0x0000043c ; undefined
    1314:	00000000 	.inst	0x00000000 ; undefined
    1318:	00000470 	.inst	0x00000470 ; undefined
    131c:	00000000 	.inst	0x00000000 ; undefined
    1320:	00000480 	.inst	0x00000480 ; undefined
    1324:	00000000 	.inst	0x00000000 ; undefined
    1328:	00000484 	.inst	0x00000484 ; undefined
    132c:	00000000 	.inst	0x00000000 ; undefined
    1330:	00000488 	.inst	0x00000488 ; undefined
    1334:	00000000 	.inst	0x00000000 ; undefined
    1338:	0000048c 	.inst	0x0000048c ; undefined
    133c:	00000000 	.inst	0x00000000 ; undefined
    1340:	00000494 	.inst	0x00000494 ; undefined
    1344:	00000000 	.inst	0x00000000 ; undefined
    1348:	00000498 	.inst	0x00000498 ; undefined
    134c:	00000000 	.inst	0x00000000 ; undefined
    1350:	000004a8 	.inst	0x000004a8 ; undefined
    1354:	00000000 	.inst	0x00000000 ; undefined
    1358:	000004b8 	.inst	0x000004b8 ; undefined
	...
    1370:	00000470 	.inst	0x00000470 ; undefined
    1374:	00000000 	.inst	0x00000000 ; undefined
    1378:	00000480 	.inst	0x00000480 ; undefined
    137c:	00000000 	.inst	0x00000000 ; undefined
    1380:	00000484 	.inst	0x00000484 ; undefined
    1384:	00000000 	.inst	0x00000000 ; undefined
    1388:	00000488 	.inst	0x00000488 ; undefined
    138c:	00000000 	.inst	0x00000000 ; undefined
    1390:	0000048c 	.inst	0x0000048c ; undefined
    1394:	00000000 	.inst	0x00000000 ; undefined
    1398:	00000494 	.inst	0x00000494 ; undefined
    139c:	00000000 	.inst	0x00000000 ; undefined
    13a0:	00000498 	.inst	0x00000498 ; undefined
    13a4:	00000000 	.inst	0x00000000 ; undefined
    13a8:	000004a0 	.inst	0x000004a0 ; undefined
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0:	00000447 	.inst	0x00000447 ; undefined
       4:	01240002 	.inst	0x01240002 ; undefined
       8:	01040000 	.inst	0x01040000 ; undefined
       c:	000d0efb 	.inst	0x000d0efb ; undefined
      10:	01010101 	.inst	0x01010101 ; undefined
      14:	01000000 	.inst	0x01000000 ; undefined
      18:	2f010000 	.inst	0x2f010000 ; undefined
      1c:	72657355 	.inst	0x72657355 ; undefined
      20:	62782f73 	.inst	0x62782f73 ; undefined
      24:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
      28:	502f6761 	adr	x1, 5ed16 <__bss_size+0x5ed10>
      2c:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
      30:	2f737463 	.inst	0x2f737463 ; undefined
      34:	534f7958 	.inst	0x534f7958 ; undefined
      38:	72654b2f 	.inst	0x72654b2f ; undefined
      3c:	2f6c656e 	.inst	0x2f6c656e ; undefined
      40:	72756f53 	.inst	0x72756f53 ; undefined
      44:	432f6563 	.inst	0x432f6563 ; undefined
      48:	6f736e6f 	.inst	0x6f736e6f ; undefined
      4c:	4f49656c 	.inst	0x4f49656c ; undefined
      50:	73752f00 	.inst	0x73752f00 ; undefined
      54:	6f6c2f72 	.inst	0x6f6c2f72 ; undefined
      58:	2f6c6163 	umlsl	v3.4s, v11.4h, v12.h[2]
      5c:	6c6c6543 	ldnp	d3, d25, [x10, #-320]
      60:	612f7261 	.inst	0x612f7261 ; undefined
      64:	68637261 	.inst	0x68637261 ; undefined
      68:	6e2d3436 	cmhi	v22.16b, v1.16b, v13.16b
      6c:	2d656e6f 	ldp	s15, s27, [x19, #-216]
      70:	2f666c65 	.inst	0x2f666c65 ; undefined
      74:	2e322e37 	uqsub	v23.8b, v17.8b, v18.8b
      78:	6f742f30 	.inst	0x6f742f30 ; undefined
      7c:	68636c6f 	.inst	0x68636c6f ; undefined
      80:	2f6e6961 	umlsl	v1.4s, v11.4h, v14.h[6]
      84:	2f62696c 	umlsl	v12.4s, v11.4h, v2.h[6]
      88:	2f636367 	umlsl	v7.4s, v27.4h, v3.h[2]
      8c:	63726161 	.inst	0x63726161 ; undefined
      90:	2d343668 	stp	s8, s13, [x19, #-96]
      94:	656e6f6e 	fnmls	z14.h, p3/m, z27.h, z14.h
      98:	666c652d 	.inst	0x666c652d ; undefined
      9c:	322e372f 	orr	w15, w25, #0xfffc0000
      a0:	692f302e 	.inst	0x692f302e ; undefined
      a4:	756c636e 	.inst	0x756c636e ; undefined
      a8:	2f006564 	mvni	v4.2s, #0xb, lsl #24
      ac:	72657355 	.inst	0x72657355 ; undefined
      b0:	62782f73 	.inst	0x62782f73 ; undefined
      b4:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
      b8:	502f6761 	adr	x1, 5eda6 <__bss_size+0x5eda0>
      bc:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
      c0:	2f737463 	.inst	0x2f737463 ; undefined
      c4:	534f7958 	.inst	0x534f7958 ; undefined
      c8:	72654b2f 	.inst	0x72654b2f ; undefined
      cc:	2f6c656e 	.inst	0x2f6c656e ; undefined
      d0:	64616548 	.inst	0x64616548 ; undefined
      d4:	00737265 	.inst	0x00737265 ; undefined
      d8:	6e6f4300 	raddhn2	v0.8h, v24.4s, v15.4s
      dc:	656c6f73 	fnmls	z19.h, p3/m, z27.h, z12.h
      e0:	632e4f49 	.inst	0x632e4f49 ; undefined
      e4:	00000100 	.inst	0x00000100 ; undefined
      e8:	69647473 	ldpsw	x19, x29, [x3, #-224]
      ec:	672d746e 	.inst	0x672d746e ; undefined
      f0:	682e6363 	.inst	0x682e6363 ; undefined
      f4:	00000200 	.inst	0x00000200 ; undefined
      f8:	6d617246 	ldp	d6, d28, [x18, #-496]
      fc:	66754265 	.inst	0x66754265 ; undefined
     100:	2e726566 	umax	v6.4h, v11.4h, v18.4h
     104:	00030068 	.inst	0x00030068 ; undefined
     108:	64747300 	.inst	0x64747300 ; undefined
     10c:	2e677261 	uabdl	v1.4s, v19.4h, v7.4h
     110:	00020068 	.inst	0x00020068 ; undefined
     114:	52415500 	.inst	0x52415500 ; undefined
     118:	00682e54 	.inst	0x00682e54 ; undefined
     11c:	3c000003 	stur	b3, [x0]
     120:	6c697562 	ldnp	d2, d29, [x11, #-368]
     124:	6e692d74 	uqsub	v20.8h, v11.8h, v9.8h
     128:	0000003e 	.inst	0x0000003e ; undefined
     12c:	09000000 	.inst	0x09000000 ; undefined
     130:	0e00c002 	.inst	0x0e00c002 ; undefined
     134:	ff000000 	.inst	0xff000000 ; undefined
     138:	010b03ff 	.inst	0x010b03ff ; undefined
     13c:	2131213c 	.inst	0x2131213c ; undefined
     140:	21301e2d 	.inst	0x21301e2d ; undefined
     144:	1c40232d 	ldr	s13, 805a8 <__bss_size+0x805a2>
     148:	03421d20 	.inst	0x03421d20 ; undefined
     14c:	0200207a 	.inst	0x0200207a ; undefined
     150:	2f7b0204 	mla	v4.4h, v16.4h, v11.h[3]
     154:	211e4c21 	.inst	0x211e4c21 ; undefined
     158:	20750321 	.inst	0x20750321 ; undefined
     15c:	2e0b0343 	ext	v3.8b, v26.8b, v11.8b, #0
     160:	5a212f76 	.inst	0x5a212f76 ; undefined
     164:	305a2101 	adr	x1, b4585 <__bss_size+0xb457f>
     168:	4b4b2101 	sub	w1, w8, w11, lsr #8
     16c:	0402005a 	.inst	0x0402005a ; undefined
     170:	02002b01 	.inst	0x02002b01 ; undefined
     174:	1f230104 	fnmadd	s4, s8, s3, s0
     178:	24012221 	cmpeq	p1.b, p0/z, z17.b, z1.d
     17c:	2077032f 	.inst	0x2077032f ; undefined
     180:	211f211f 	.inst	0x211f211f ; undefined
     184:	2f3c0a03 	.inst	0x2f3c0a03 ; undefined
     188:	20720321 	.inst	0x20720321 ; undefined
     18c:	1f211f21 	fnmadd	s1, s25, s1, s7
     190:	323c0c03 	orr	w3, w0, #0xf0
     194:	2e6f0330 	uaddl	v16.4s, v25.4h, v15.4h
     198:	174a1303 	b	fffffffffd284da4 <__end+0xfffffd19e444>
     19c:	0402003a 	.inst	0x0402003a ; undefined
     1a0:	334c2202 	.inst	0x334c2202 ; undefined
     1a4:	21211e2d 	.inst	0x21211e2d ; undefined
     1a8:	01040200 	.inst	0x01040200 ; undefined
     1ac:	21063c06 	.inst	0x21063c06 ; undefined
     1b0:	3d1b2140 	str	b0, [x10, #1736]
     1b4:	0903371f 	.inst	0x0903371f ; undefined
     1b8:	7203214a 	ands	w10, w10, #0xe000003f
     1bc:	5810033c 	ldr	x28, 20220 <__bss_size+0x2021a>
     1c0:	211f2213 	.inst	0x211f2213 ; undefined
     1c4:	206b0330 	.inst	0x206b0330 ; undefined
     1c8:	21238422 	.inst	0x21238422 ; undefined
     1cc:	2238221f 	.inst	0x2238221f ; undefined
     1d0:	1c212121 	ldr	s1, 425f4 <__bss_size+0x425ee>
     1d4:	4b211f22 	.inst	0x4b211f22 ; undefined
     1d8:	03404153 	.inst	0x03404153 ; undefined
     1dc:	6e032009 	ext	v9.16b, v0.16b, v3.16b, #4
     1e0:	2009032e 	.inst	0x2009032e ; undefined
     1e4:	36200903 	tbz	w3, #4, 304 <__bss_size+0x2fe>
     1e8:	ac03213c 	stnp	q28, q8, [x9, #96]
     1ec:	311d2e7f 	cmn	w19, #0x74b
     1f0:	2000d403 	.inst	0x2000d403 ; undefined
     1f4:	7fa60332 	.inst	0x7fa60332 ; undefined
     1f8:	d403304a 	.inst	0xd403304a ; undefined
     1fc:	68322e00 	.inst	0x68322e00 ; undefined
     200:	207fa403 	.inst	0x207fa403 ; undefined
     204:	2000dc03 	.inst	0x2000dc03 ; undefined
     208:	207fa403 	.inst	0x207fa403 ; undefined
     20c:	00dd0322 	.inst	0x00dd0322 ; undefined
     210:	7fa3032e 	.inst	0x7fa3032e ; undefined
     214:	00df0320 	.inst	0x00df0320 ; undefined
     218:	03213c58 	.inst	0x03213c58 ; undefined
     21c:	1d2e7fa0 	.inst	0x1d2e7fa0 ; undefined
     220:	00e00331 	.inst	0x00e00331 ; undefined
     224:	2f1f3320 	.inst	0x2f1f3320 ; undefined
     228:	7f9a031f 	.inst	0x7f9a031f ; undefined
     22c:	e003302e 	.inst	0xe003302e ; undefined
     230:	1f332e00 	fnmadd	s0, s16, s19, s11
     234:	6a4d1f2f 	ands	w15, w25, w13, lsr #7
     238:	0200241c 	.inst	0x0200241c ; undefined
     23c:	74060204 	.inst	0x74060204 ; undefined
     240:	03040200 	.inst	0x03040200 ; undefined
     244:	03590620 	.inst	0x03590620 ; undefined
     248:	03587f94 	.inst	0x03587f94 ; undefined
     24c:	032000ec 	.inst	0x032000ec ; undefined
     250:	03207f94 	.inst	0x03207f94 ; undefined
     254:	002e00ec 	.inst	0x002e00ec ; NYI
     258:	2f010402 	mvni	v2.2s, #0x20
     25c:	4a7f9303 	.inst	0x4a7f9303 ; undefined
     260:	ed03311d 	.inst	0xed03311d ; undefined
     264:	032f2000 	.inst	0x032f2000 ; undefined
     268:	30667f90 	adr	x16, cd259 <__bss_size+0xcd253>
     26c:	2e00ed03 	.inst	0x2e00ed03 ; undefined
     270:	7f90032f 	.inst	0x7f90032f ; undefined
     274:	ec033066 	.inst	0xec033066 ; undefined
     278:	94032000 	bl	c8278 <__bss_size+0xc8272>
     27c:	ec03207f 	.inst	0xec03207f ; undefined
     280:	92032e00 	and	x0, x16, #0xe00001ffe00001ff
     284:	03302e7f 	.inst	0x03302e7f ; undefined
     288:	032000ec 	.inst	0x032000ec ; undefined
     28c:	03207f94 	.inst	0x03207f94 ; undefined
     290:	582e00ec 	ldr	x12, 5c2ac <__bss_size+0x5c2a6>
     294:	3c4c0394 	ldur	b20, [x28, #192]
     298:	03203403 	.inst	0x03203403 ; undefined
     29c:	3403204c 	cbz	w12, 66a4 <__bss_size+0x669e>
     2a0:	204e0320 	.inst	0x204e0320 ; undefined
     2a4:	333c3203 	.inst	0x333c3203 ; undefined
     2a8:	7f87032f 	.inst	0x7f87032f ; undefined
     2ac:	00f8032e 	.inst	0x00f8032e ; undefined
     2b0:	7f8b032e 	.inst	0x7f8b032e ; undefined
     2b4:	00f50320 	.inst	0x00f50320 ; undefined
     2b8:	2e30032e 	uaddl	v14.8h, v25.8b, v16.8b
     2bc:	2f745503 	.inst	0x2f745503 ; undefined
     2c0:	3c7fad03 	.inst	0x3c7fad03 ; undefined
     2c4:	00d00323 	.inst	0x00d00323 ; undefined
     2c8:	7fa50320 	.inst	0x7fa50320 ; undefined
     2cc:	3c0a033c 	stur	b28, [x25, #160]
     2d0:	7203212f 	ands	w15, w9, #0xe000003f
     2d4:	211f2120 	.inst	0x211f2120 ; undefined
     2d8:	211f301f 	.inst	0x211f301f ; undefined
     2dc:	2e0b031f 	ext	v31.8b, v24.8b, v11.8b, #0
     2e0:	20720332 	.inst	0x20720332 ; undefined
     2e4:	2000eb03 	.inst	0x2000eb03 ; undefined
     2e8:	033c0d03 	.inst	0x033c0d03 ; undefined
     2ec:	2f587fae 	.inst	0x2f587fae ; undefined
     2f0:	6b033e21 	subs	w1, w17, w3, lsl #15
     2f4:	24762220 	cmplo	p0.h, p0/z, z17.h, #88
     2f8:	21221c21 	.inst	0x21221c21 ; undefined
     2fc:	221c2121 	.inst	0x221c2121 ; undefined
     300:	4103211f 	.inst	0x4103211f ; undefined
     304:	00ff034a 	.inst	0x00ff034a ; undefined
     308:	031b2f4a 	.inst	0x031b2f4a ; undefined
     30c:	1a032012 	.inst	0x1a032012 ; undefined
     310:	66660382 	.inst	0x66660382 ; undefined
     314:	585a0388 	ldr	x8, b4384 <__bss_size+0xb437e>
     318:	7f9403c9 	.inst	0x7f9403c9 ; undefined
     31c:	00ec032e 	.inst	0x00ec032e ; undefined
     320:	7f940320 	.inst	0x7f940320 ; undefined
     324:	00ec0320 	.inst	0x00ec0320 ; undefined
     328:	93032f2e 	.inst	0x93032f2e ; undefined
     32c:	311d2e7f 	cmn	w19, #0x74b
     330:	2000ed03 	.inst	0x2000ed03 ; undefined
     334:	21660d03 	.inst	0x21660d03 ; undefined
     338:	7f87031e 	.inst	0x7f87031e ; undefined
     33c:	03302c2e 	.inst	0x03302c2e ; undefined
     340:	032e00ed 	.inst	0x032e00ed ; undefined
     344:	ef033c21 	.inst	0xef033c21 ; undefined
     348:	033f587e 	.inst	0x033f587e ; undefined
     34c:	034a019c 	.inst	0x034a019c ; undefined
     350:	2c587f9b 	ldnp	s27, s31, [x28, #192]
     354:	2c244c30 	stnp	s16, s19, [x1, #-224]
     358:	1f1f2122 	fmadd	s2, s9, s31, s8
     35c:	1f226421 	fnmadd	s1, s1, s2, s25
     360:	1f3d2121 	fnmadd	s1, s9, s29, s8
     364:	20090337 	.inst	0x20090337 ; undefined
     368:	ad202903 	stp	q3, q10, [x8, #-1024]
     36c:	2e7f9403 	mls	v3.4h, v0.4h, v31.4h
     370:	2000ec03 	.inst	0x2000ec03 ; undefined
     374:	207f9403 	.inst	0x207f9403 ; undefined
     378:	2e00ec03 	.inst	0x2e00ec03 ; undefined
     37c:	204c032f 	.inst	0x204c032f ; undefined
     380:	1d204703 	.inst	0x1d204703 ; undefined
     384:	00ed0331 	.inst	0x00ed0331 ; undefined
     388:	4a510320 	eor	w0, w25, w17, lsr #0
     38c:	304a4003 	adr	x3, 94b8d <__bss_size+0x94b87>
     390:	2e00ed03 	.inst	0x2e00ed03 ; undefined
     394:	4a7f9103 	.inst	0x4a7f9103 ; undefined
     398:	383c3b03 	.inst	0x383c3b03 ; undefined
     39c:	032e3703 	.inst	0x032e3703 ; undefined
     3a0:	a1038228 	.inst	0xa1038228 ; undefined
     3a4:	7622587f 	.inst	0x7622587f ; undefined
     3a8:	222a2f24 	.inst	0x222a2f24 ; undefined
     3ac:	1c212121 	ldr	s1, 427d0 <__bss_size+0x427ca>
     3b0:	4b211f22 	.inst	0x4b211f22 ; undefined
     3b4:	20090353 	.inst	0x20090353 ; undefined
     3b8:	ad202903 	stp	q3, q10, [x8, #-1024]
     3bc:	2e7f9403 	mls	v3.4h, v0.4h, v31.4h
     3c0:	2000ec03 	.inst	0x2000ec03 ; undefined
     3c4:	207f9403 	.inst	0x207f9403 ; undefined
     3c8:	2e00ec03 	.inst	0x2e00ec03 ; undefined
     3cc:	204c032f 	.inst	0x204c032f ; undefined
     3d0:	1d204703 	.inst	0x1d204703 ; undefined
     3d4:	00ed0331 	.inst	0x00ed0331 ; undefined
     3d8:	7f930320 	.inst	0x7f930320 ; undefined
     3dc:	302f1d2e 	adr	x14, 5e781 <__bss_size+0x5e77b>
     3e0:	2e00ed03 	.inst	0x2e00ed03 ; undefined
     3e4:	45585103 	.inst	0x45585103 ; undefined
     3e8:	032e3303 	.inst	0x032e3303 ; undefined
     3ec:	aa034a28 	orr	x8, x17, x3, lsl #18
     3f0:	0353827f 	.inst	0x0353827f ; undefined
     3f4:	29032009 	stp	w9, w8, [x0, #24]
     3f8:	9403ad20 	bl	eb878 <__bss_size+0xeb872>
     3fc:	ec032e7f 	.inst	0xec032e7f ; undefined
     400:	94032000 	bl	c8400 <__bss_size+0xc83fa>
     404:	ec03207f 	.inst	0xec03207f ; undefined
     408:	032f2e00 	.inst	0x032f2e00 ; undefined
     40c:	4703204c 	.inst	0x4703204c ; undefined
     410:	03311d20 	.inst	0x03311d20 ; undefined
     414:	032000ed 	.inst	0x032000ed ; undefined
     418:	1d2e7f93 	.inst	0x1d2e7f93 ; undefined
     41c:	ed03302f 	.inst	0xed03302f ; undefined
     420:	51032e00 	sub	w0, w16, #0xcb
     424:	33034558 	bfxil	w24, w10, #3, #15
     428:	4a2c032e 	eon	w14, w25, w12
     42c:	82750386 	.inst	0x82750386 ; undefined
     430:	0340887f 	.inst	0x0340887f ; undefined
     434:	0b033c79 	add	w25, w3, w3, lsl #15
     438:	3c72033c 	.inst	0x3c72033c ; undefined
     43c:	304a1903 	adr	x3, 9475d <__bss_size+0x94757>
     440:	1c244676 	ldr	s22, 48d0c <__bss_size+0x48d06>
     444:	02022240 	.inst	0x02022240 ; undefined
     448:	cf010100 	.inst	0xcf010100 ; undefined
     44c:	02000001 	.inst	0x02000001 ; undefined
     450:	00019700 	.inst	0x00019700 ; undefined
     454:	fb010400 	.inst	0xfb010400 ; undefined
     458:	01000d0e 	.inst	0x01000d0e ; undefined
     45c:	00010101 	.inst	0x00010101 ; undefined
     460:	00010000 	.inst	0x00010000 ; undefined
     464:	552f0100 	.inst	0x552f0100 ; undefined
     468:	73726573 	.inst	0x73726573 ; undefined
     46c:	6862782f 	.inst	0x6862782f ; undefined
     470:	616e7461 	.inst	0x616e7461 ; undefined
     474:	72502f67 	.inst	0x72502f67 ; undefined
     478:	63656a6f 	.inst	0x63656a6f ; undefined
     47c:	582f7374 	ldr	x20, 5f2e8 <__bss_size+0x5f2e2>
     480:	2f534f79 	.inst	0x2f534f79 ; undefined
     484:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
     488:	532f6c65 	.inst	0x532f6c65 ; undefined
     48c:	6372756f 	.inst	0x6372756f ; undefined
     490:	6f432f65 	.inst	0x6f432f65 ; undefined
     494:	2f006572 	mvni	v18.2s, #0xb, lsl #24
     498:	72657355 	.inst	0x72657355 ; undefined
     49c:	62782f73 	.inst	0x62782f73 ; undefined
     4a0:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     4a4:	502f6761 	adr	x1, 5f192 <__bss_size+0x5f18c>
     4a8:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     4ac:	2f737463 	.inst	0x2f737463 ; undefined
     4b0:	534f7958 	.inst	0x534f7958 ; undefined
     4b4:	72654b2f 	.inst	0x72654b2f ; undefined
     4b8:	2f6c656e 	.inst	0x2f6c656e ; undefined
     4bc:	64616548 	.inst	0x64616548 ; undefined
     4c0:	00737265 	.inst	0x00737265 ; undefined
     4c4:	7273752f 	.inst	0x7273752f ; undefined
     4c8:	636f6c2f 	.inst	0x636f6c2f ; undefined
     4cc:	432f6c61 	.inst	0x432f6c61 ; undefined
     4d0:	616c6c65 	.inst	0x616c6c65 ; undefined
     4d4:	61612f72 	.inst	0x61612f72 ; undefined
     4d8:	36686372 	tbz	w18, #13, 1144 <__bss_size+0x113e>
     4dc:	6f6e2d34 	.inst	0x6f6e2d34 ; undefined
     4e0:	652d656e 	.inst	0x652d656e ; undefined
     4e4:	372f666c 	tbnz	w12, #5, fffffffffffff1b0 <__end+0xfffffff18850>
     4e8:	302e322e 	adr	x14, 5cb2d <__bss_size+0x5cb27>
     4ec:	6f6f742f 	uqshl	v15.2d, v1.2d, #47
     4f0:	6168636c 	.inst	0x6168636c ; undefined
     4f4:	6c2f6e69 	stnp	d9, d27, [x19, #-272]
     4f8:	672f6269 	.inst	0x672f6269 ; undefined
     4fc:	612f6363 	.inst	0x612f6363 ; undefined
     500:	68637261 	.inst	0x68637261 ; undefined
     504:	6e2d3436 	cmhi	v22.16b, v1.16b, v13.16b
     508:	2d656e6f 	ldp	s15, s27, [x19, #-216]
     50c:	2f666c65 	.inst	0x2f666c65 ; undefined
     510:	2e322e37 	uqsub	v23.8b, v17.8b, v18.8b
     514:	6e692f30 	uqsub	v16.8h, v25.8h, v9.8h
     518:	64756c63 	.inst	0x64756c63 ; undefined
     51c:	4d000065 	st1	{v5.b}[8], [x3]
     520:	2e6e6961 	.inst	0x2e6e6961 ; undefined
     524:	00010063 	.inst	0x00010063 ; undefined
     528:	61724600 	.inst	0x61724600 ; undefined
     52c:	7542656d 	.inst	0x7542656d ; undefined
     530:	72656666 	.inst	0x72656666 ; undefined
     534:	0200682e 	.inst	0x0200682e ; undefined
     538:	6f430000 	mla	v0.8h, v0.8h, v3.h[0]
     53c:	6c6f736e 	ldnp	d14, d28, [x27, #-272]
     540:	2e4f4965 	.inst	0x2e4f4965 ; undefined
     544:	00020068 	.inst	0x00020068 ; undefined
     548:	69614d00 	ldpsw	x0, x19, [x8, #-248]
     54c:	786f626c 	ldumaxlh	w15, w12, [x19]
     550:	0200682e 	.inst	0x0200682e ; undefined
     554:	78450000 	ldurh	w0, [x0, #80]
     558:	74706563 	.inst	0x74706563 ; undefined
     55c:	736e6f69 	.inst	0x736e6f69 ; undefined
     560:	0200682e 	.inst	0x0200682e ; undefined
     564:	72540000 	.inst	0x72540000 ; undefined
     568:	69666661 	ldpsw	x1, x25, [x19, #-208]
     56c:	67694c63 	.inst	0x67694c63 ; undefined
     570:	2e737468 	uabd	v8.4h, v3.4h, v19.4h
     574:	00020068 	.inst	0x00020068 ; undefined
     578:	4d524100 	.inst	0x4d524100 ; undefined
     57c:	656d6954 	fnmls	z20.h, p2/m, z10.h, z13.h
     580:	00682e72 	.inst	0x00682e72 ; undefined
     584:	49000002 	.inst	0x49000002 ; undefined
     588:	7265746e 	.inst	0x7265746e ; undefined
     58c:	74707572 	.inst	0x74707572 ; undefined
     590:	746e6f43 	.inst	0x746e6f43 ; undefined
     594:	6c6c6f72 	ldnp	d18, d27, [x27, #-320]
     598:	682e7265 	.inst	0x682e7265 ; undefined
     59c:	00000200 	.inst	0x00000200 ; undefined
     5a0:	74726956 	.inst	0x74726956 ; undefined
     5a4:	4d6c6175 	.inst	0x4d6c6175 ; undefined
     5a8:	726f6d65 	.inst	0x726f6d65 ; undefined
     5ac:	00682e79 	.inst	0x00682e79 ; undefined
     5b0:	46000002 	.inst	0x46000002 ; undefined
     5b4:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
     5b8:	66667542 	.inst	0x66667542 ; undefined
     5bc:	72477265 	.inst	0x72477265 ; undefined
     5c0:	69687061 	ldpsw	x1, x28, [x3, #-192]
     5c4:	682e7363 	.inst	0x682e7363 ; undefined
     5c8:	00000200 	.inst	0x00000200 ; undefined
     5cc:	65726854 	fnmls	z20.h, p2/m, z2.h, z18.h
     5d0:	6e696461 	umax	v1.8h, v3.8h, v9.8h
     5d4:	00682e67 	.inst	0x00682e67 ; undefined
     5d8:	73000002 	.inst	0x73000002 ; undefined
     5dc:	6e696474 	umax	v20.8h, v3.8h, v9.8h
     5e0:	63672d74 	.inst	0x63672d74 ; undefined
     5e4:	00682e63 	.inst	0x00682e63 ; undefined
     5e8:	00000003 	.inst	0x00000003 ; undefined
     5ec:	50020900 	adr	x0, 470e <__bss_size+0x4708>
     5f0:	00000e48 	.inst	0x00000e48 ; undefined
     5f4:	03ffff00 	.inst	0x03ffff00 ; undefined
     5f8:	29250115 	stp	w21, w0, [x8, #-216]
     5fc:	223d2225 	.inst	0x223d2225 ; undefined
     600:	59595959 	.inst	0x59595959 ; undefined
     604:	3d5a5959 	ldr	b25, [x10, #1686]
     608:	3d223d3f 	str	b31, [x9, #2191]
     60c:	3d223d22 	str	b2, [x9, #2191]
     610:	3d223d22 	str	b2, [x9, #2191]
     614:	223d3d22 	.inst	0x223d3d22 ; undefined
     618:	00030222 	.inst	0x00030222 ; undefined
     61c:	020f0101 	.inst	0x020f0101 ; undefined
     620:	00020000 	.inst	0x00020000 ; undefined
     624:	0000011e 	.inst	0x0000011e ; undefined
     628:	0efb0104 	.inst	0x0efb0104 ; undefined
     62c:	0101000d 	.inst	0x0101000d ; undefined
     630:	00000101 	.inst	0x00000101 ; undefined
     634:	00000100 	.inst	0x00000100 ; undefined
     638:	73552f01 	.inst	0x73552f01 ; undefined
     63c:	2f737265 	.inst	0x2f737265 ; undefined
     640:	61686278 	.inst	0x61686278 ; undefined
     644:	67616e74 	.inst	0x67616e74 ; undefined
     648:	6f72502f 	.inst	0x6f72502f ; undefined
     64c:	7463656a 	.inst	0x7463656a ; undefined
     650:	79582f73 	ldrh	w19, [x27, #3094]
     654:	4b2f534f 	sub	w15, w26, w15, uxtw #4
     658:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
     65c:	6f532f6c 	.inst	0x6f532f6c ; undefined
     660:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
     664:	726f432f 	.inst	0x726f432f ; undefined
     668:	752f0065 	.inst	0x752f0065 ; undefined
     66c:	6c2f7273 	stnp	d19, d28, [x19, #-272]
     670:	6c61636f 	ldnp	d15, d24, [x27, #-496]
     674:	6c65432f 	ldnp	d15, d16, [x25, #-432]
     678:	2f72616c 	umlsl	v12.4s, v11.4h, v2.h[3]
     67c:	63726161 	.inst	0x63726161 ; undefined
     680:	2d343668 	stp	s8, s13, [x19, #-96]
     684:	656e6f6e 	fnmls	z14.h, p3/m, z27.h, z14.h
     688:	666c652d 	.inst	0x666c652d ; undefined
     68c:	322e372f 	orr	w15, w25, #0xfffc0000
     690:	742f302e 	.inst	0x742f302e ; undefined
     694:	636c6f6f 	.inst	0x636c6f6f ; undefined
     698:	6e696168 	rsubhn2	v8.8h, v11.4s, v9.4s
     69c:	62696c2f 	.inst	0x62696c2f ; undefined
     6a0:	6363672f 	.inst	0x6363672f ; undefined
     6a4:	7261612f 	.inst	0x7261612f ; undefined
     6a8:	34366863 	cbz	w3, 6d3b4 <__bss_size+0x6d3ae>
     6ac:	6e6f6e2d 	umin	v13.8h, v17.8h, v15.8h
     6b0:	6c652d65 	ldnp	d5, d11, [x11, #-432]
     6b4:	2e372f66 	uqsub	v6.8b, v27.8b, v23.8b
     6b8:	2f302e32 	.inst	0x2f302e32 ; undefined
     6bc:	6c636e69 	ldnp	d9, d27, [x19, #-464]
     6c0:	00656475 	.inst	0x00656475 ; undefined
     6c4:	6573552f 	fnmla	z15.h, p5/m, z9.h, z19.h
     6c8:	782f7372 	lduminh	w15, w18, [x27]
     6cc:	74616862 	.inst	0x74616862 ; undefined
     6d0:	2f67616e 	umlsl	v14.4s, v11.4h, v7.h[2]
     6d4:	6a6f7250 	bics	w16, w18, w15, lsr #28
     6d8:	73746365 	.inst	0x73746365 ; undefined
     6dc:	4f79582f 	.inst	0x4f79582f ; undefined
     6e0:	654b2f53 	.inst	0x654b2f53 ; undefined
     6e4:	6c656e72 	ldnp	d18, d27, [x19, #-432]
     6e8:	6165482f 	.inst	0x6165482f ; undefined
     6ec:	73726564 	.inst	0x73726564 ; undefined
     6f0:	654d0000 	fadd	z0.h, z0.h, z13.h
     6f4:	632e756e 	.inst	0x632e756e ; undefined
     6f8:	00000100 	.inst	0x00000100 ; undefined
     6fc:	69647473 	ldpsw	x19, x29, [x3, #-224]
     700:	672d746e 	.inst	0x672d746e ; undefined
     704:	682e6363 	.inst	0x682e6363 ; undefined
     708:	00000200 	.inst	0x00000200 ; undefined
     70c:	6d617246 	ldp	d6, d28, [x18, #-496]
     710:	66754265 	.inst	0x66754265 ; undefined
     714:	2e726566 	umax	v6.4h, v11.4h, v18.4h
     718:	00030068 	.inst	0x00030068 ; undefined
     71c:	6e6f4300 	raddhn2	v0.8h, v24.4s, v15.4s
     720:	656c6f73 	fnmls	z19.h, p3/m, z27.h, z12.h
     724:	682e4f49 	.inst	0x682e4f49 ; undefined
     728:	00000300 	.inst	0x00000300 ; undefined
     72c:	6d617246 	ldp	d6, d28, [x18, #-496]
     730:	66754265 	.inst	0x66754265 ; undefined
     734:	47726566 	.inst	0x47726566 ; undefined
     738:	68706172 	.inst	0x68706172 ; undefined
     73c:	2e736369 	rsubhn	v9.4h, v27.4s, v19.4s
     740:	00030068 	.inst	0x00030068 ; undefined
     744:	09000000 	.inst	0x09000000 ; undefined
     748:	0e0eb002 	.inst	0x0e0eb002 ; undefined
     74c:	ff000000 	.inst	0xff000000 ; undefined
     750:	2d2118ff 	stp	s31, s6, [x7, #-248]
     754:	2f212121 	.inst	0x2f212121 ; undefined
     758:	3d31211e 	str	b30, [x8, #3144]
     75c:	211f3021 	.inst	0x211f3021 ; undefined
     760:	214c401e 	.inst	0x214c401e ; undefined
     764:	0a03212d 	and	w13, w9, w3, lsl #8
     768:	2078032e 	.inst	0x2078032e ; undefined
     76c:	2e0b032f 	ext	v15.8b, v25.8b, v11.8b, #0
     770:	03207803 	.inst	0x03207803 ; undefined
     774:	003c4a0a 	.inst	0x003c4a0a ; NYI
     778:	23010402 	.inst	0x23010402 ; undefined
     77c:	01040200 	.inst	0x01040200 ; undefined
     780:	232d303e 	.inst	0x232d303e ; undefined
     784:	1f2f014e 	fnmadd	s14, s10, s15, s0
     788:	821d0321 	.inst	0x821d0321 ; undefined
     78c:	3c66031d 	.inst	0x3c66031d ; undefined
     790:	3d4a5403 	ldr	b3, [x0, #661]
     794:	00c70321 	.inst	0x00c70321 ; undefined
     798:	7fb8032e 	.inst	0x7fb8032e ; undefined
     79c:	0c032120 	.inst	0x0c032120 ; undefined
     7a0:	580a0320 	ldr	x0, 14804 <__bss_size+0x147fe>
     7a4:	2f207803 	.inst	0x2f207803 ; undefined
     7a8:	032e3803 	.inst	0x032e3803 ; undefined
     7ac:	3503204b 	cbnz	w11, 6bb4 <__bss_size+0x6bae>
     7b0:	206d0320 	.inst	0x206d0320 ; undefined
     7b4:	03201303 	.inst	0x03201303 ; undefined
     7b8:	033a2065 	.inst	0x033a2065 ; undefined
     7bc:	2f3e2075 	.inst	0x2f3e2075 ; undefined
     7c0:	03202503 	.inst	0x03202503 ; undefined
     7c4:	2703205b 	.inst	0x2703205b ; undefined
     7c8:	032d2158 	.inst	0x032d2158 ; undefined
     7cc:	034a7fb5 	.inst	0x034a7fb5 ; undefined
     7d0:	502000cb 	adr	x11, 407ea <__bss_size+0x407e4>
     7d4:	03207503 	.inst	0x03207503 ; undefined
     7d8:	3e032048 	.inst	0x3e032048 ; undefined
     7dc:	0021212e 	.inst	0x0021212e ; NYI
     7e0:	4d010402 	.inst	0x4d010402 ; undefined
     7e4:	01040200 	.inst	0x01040200 ; undefined
     7e8:	04020031 	.inst	0x04020031 ; undefined
     7ec:	02002f01 	.inst	0x02002f01 ; undefined
     7f0:	00210104 	.inst	0x00210104 ; NYI
     7f4:	03010402 	.inst	0x03010402 ; undefined
     7f8:	1a032056 	.inst	0x1a032056 ; undefined
     7fc:	2e0b0390 	ext	v16.8b, v28.8b, v11.8b, #0
     800:	03212f31 	.inst	0x03212f31 ; undefined
     804:	75032056 	.inst	0x75032056 ; undefined
     808:	71033e3c 	subs	w28, w17, #0xcf
     80c:	0402002e 	.inst	0x0402002e ; undefined
     810:	3c180301 	stur	b1, [x24, #-128]
     814:	2f4a5403 	.inst	0x2f4a5403 ; undefined
     818:	03211f21 	.inst	0x03211f21 ; undefined
     81c:	60032e2c 	.inst	0x60032e2c ; undefined
     820:	4a0a033c 	eor	w28, w25, w10
     824:	2f207803 	.inst	0x2f207803 ; undefined
     828:	2e220331 	uaddl	v17.8h, v25.8b, v2.8b
     82c:	01000302 	.inst	0x01000302 ; undefined
     830:	0000f901 	.inst	0x0000f901 ; undefined
     834:	b3000200 	.inst	0xb3000200 ; undefined
     838:	04000000 	add	z0.b, p0/m, z0.b, z0.b
     83c:	0d0efb01 	.inst	0x0d0efb01 ; undefined
     840:	01010100 	.inst	0x01010100 ; undefined
     844:	00000001 	.inst	0x00000001 ; undefined
     848:	01000001 	.inst	0x01000001 ; undefined
     84c:	6573552f 	fnmla	z15.h, p5/m, z9.h, z19.h
     850:	782f7372 	lduminh	w15, w18, [x27]
     854:	74616862 	.inst	0x74616862 ; undefined
     858:	2f67616e 	umlsl	v14.4s, v11.4h, v7.h[2]
     85c:	6a6f7250 	bics	w16, w18, w15, lsr #28
     860:	73746365 	.inst	0x73746365 ; undefined
     864:	4f79582f 	.inst	0x4f79582f ; undefined
     868:	654b2f53 	.inst	0x654b2f53 ; undefined
     86c:	6c656e72 	ldnp	d18, d27, [x19, #-432]
     870:	756f532f 	.inst	0x756f532f ; undefined
     874:	2f656372 	umlsl	v18.4s, v27.4h, v5.h[2]
     878:	65637845 	fnmls	z5.h, p6/m, z2.h, z3.h
     87c:	6f697470 	uqshl	v16.2d, v3.2d, #41
     880:	2f00736e 	.inst	0x2f00736e ; undefined
     884:	72657355 	.inst	0x72657355 ; undefined
     888:	62782f73 	.inst	0x62782f73 ; undefined
     88c:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     890:	502f6761 	adr	x1, 5f57e <__bss_size+0x5f578>
     894:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     898:	2f737463 	.inst	0x2f737463 ; undefined
     89c:	534f7958 	.inst	0x534f7958 ; undefined
     8a0:	72654b2f 	.inst	0x72654b2f ; undefined
     8a4:	2f6c656e 	.inst	0x2f6c656e ; undefined
     8a8:	64616548 	.inst	0x64616548 ; undefined
     8ac:	00737265 	.inst	0x00737265 ; undefined
     8b0:	63784500 	.inst	0x63784500 ; undefined
     8b4:	69747065 	ldpsw	x5, x28, [x3, #-96]
     8b8:	2e736e6f 	umin	v15.4h, v19.4h, v19.4h
     8bc:	00010063 	.inst	0x00010063 ; undefined
     8c0:	6e6f4300 	raddhn2	v0.8h, v24.4s, v15.4s
     8c4:	656c6f73 	fnmls	z19.h, p3/m, z27.h, z12.h
     8c8:	682e4f49 	.inst	0x682e4f49 ; undefined
     8cc:	00000200 	.inst	0x00000200 ; undefined
     8d0:	544d5241 	b.ne	9b318 <__bss_size+0x9b312>  // b.any
     8d4:	72656d69 	.inst	0x72656d69 ; undefined
     8d8:	0200682e 	.inst	0x0200682e ; undefined
     8dc:	68540000 	.inst	0x68540000 ; undefined
     8e0:	64616572 	.inst	0x64616572 ; undefined
     8e4:	2e676e69 	umin	v9.4h, v19.4h, v7.4h
     8e8:	00020068 	.inst	0x00020068 ; undefined
     8ec:	09000000 	.inst	0x09000000 ; undefined
     8f0:	0e11e002 	.inst	0x0e11e002 ; undefined
     8f4:	ff000000 	.inst	0xff000000 ; undefined
     8f8:	011203ff 	.inst	0x011203ff ; undefined
     8fc:	21222c22 	.inst	0x21222c22 ; undefined
     900:	5959593d 	.inst	0x5959593d ; undefined
     904:	17031f5a 	b	fffffffffc0c866c <__end+0xfffffbfe1d0c>
     908:	3d213c3c 	str	b28, [x1, #2127]
     90c:	7469032f 	.inst	0x7469032f ; undefined
     910:	03303030 	.inst	0x03303030 ; undefined
     914:	7603200b 	.inst	0x7603200b ; undefined
     918:	03212720 	.inst	0x03212720 ; undefined
     91c:	03213c7a 	.inst	0x03213c7a ; undefined
     920:	2d216611 	stp	s17, s25, [x16, #-248]
     924:	2d214e21 	stp	s1, s19, [x17, #-248]
     928:	00010221 	.inst	0x00010221 ; undefined
     92c:	00f70101 	.inst	0x00f70101 ; undefined
     930:	00020000 	.inst	0x00020000 ; undefined
     934:	000000cc 	.inst	0x000000cc ; undefined
     938:	0efb0104 	.inst	0x0efb0104 ; undefined
     93c:	0101000d 	.inst	0x0101000d ; undefined
     940:	00000101 	.inst	0x00000101 ; undefined
     944:	00000100 	.inst	0x00000100 ; undefined
     948:	73552f01 	.inst	0x73552f01 ; undefined
     94c:	2f737265 	.inst	0x2f737265 ; undefined
     950:	61686278 	.inst	0x61686278 ; undefined
     954:	67616e74 	.inst	0x67616e74 ; undefined
     958:	6f72502f 	.inst	0x6f72502f ; undefined
     95c:	7463656a 	.inst	0x7463656a ; undefined
     960:	79582f73 	ldrh	w19, [x27, #3094]
     964:	4b2f534f 	sub	w15, w26, w15, uxtw #4
     968:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
     96c:	6f532f6c 	.inst	0x6f532f6c ; undefined
     970:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
     974:	7265502f 	.inst	0x7265502f ; undefined
     978:	65687069 	fnmls	z9.h, p4/m, z3.h, z8.h
     97c:	736c6172 	.inst	0x736c6172 ; undefined
     980:	4d52412f 	.inst	0x4d52412f ; undefined
     984:	656d6954 	fnmls	z20.h, p2/m, z10.h, z13.h
     988:	752f0072 	.inst	0x752f0072 ; undefined
     98c:	6c2f7273 	stnp	d19, d28, [x19, #-272]
     990:	6c61636f 	ldnp	d15, d24, [x27, #-496]
     994:	6c65432f 	ldnp	d15, d16, [x25, #-432]
     998:	2f72616c 	umlsl	v12.4s, v11.4h, v2.h[3]
     99c:	63726161 	.inst	0x63726161 ; undefined
     9a0:	2d343668 	stp	s8, s13, [x19, #-96]
     9a4:	656e6f6e 	fnmls	z14.h, p3/m, z27.h, z14.h
     9a8:	666c652d 	.inst	0x666c652d ; undefined
     9ac:	322e372f 	orr	w15, w25, #0xfffc0000
     9b0:	742f302e 	.inst	0x742f302e ; undefined
     9b4:	636c6f6f 	.inst	0x636c6f6f ; undefined
     9b8:	6e696168 	rsubhn2	v8.8h, v11.4s, v9.4s
     9bc:	62696c2f 	.inst	0x62696c2f ; undefined
     9c0:	6363672f 	.inst	0x6363672f ; undefined
     9c4:	7261612f 	.inst	0x7261612f ; undefined
     9c8:	34366863 	cbz	w3, 6d6d4 <__bss_size+0x6d6ce>
     9cc:	6e6f6e2d 	umin	v13.8h, v17.8h, v15.8h
     9d0:	6c652d65 	ldnp	d5, d11, [x11, #-432]
     9d4:	2e372f66 	uqsub	v6.8b, v27.8b, v23.8b
     9d8:	2f302e32 	.inst	0x2f302e32 ; undefined
     9dc:	6c636e69 	ldnp	d9, d27, [x19, #-464]
     9e0:	00656475 	.inst	0x00656475 ; undefined
     9e4:	4d524100 	.inst	0x4d524100 ; undefined
     9e8:	656d6954 	fnmls	z20.h, p2/m, z10.h, z13.h
     9ec:	00632e72 	.inst	0x00632e72 ; undefined
     9f0:	73000001 	.inst	0x73000001 ; undefined
     9f4:	6e696474 	umax	v20.8h, v3.8h, v9.8h
     9f8:	63672d74 	.inst	0x63672d74 ; undefined
     9fc:	00682e63 	.inst	0x00682e63 ; undefined
     a00:	00000002 	.inst	0x00000002 ; undefined
     a04:	30020900 	adr	x0, 4b25 <__bss_size+0x4b1f>
     a08:	00000e13 	.inst	0x00000e13 ; undefined
     a0c:	14ffff00 	b	400060c <__bss_size+0x4000606>
     a10:	2f2d2f13 	.inst	0x2f2d2f13 ; undefined
     a14:	5d132221 	.inst	0x5d132221 ; undefined
     a18:	223d133e 	.inst	0x223d133e ; undefined
     a1c:	13223d13 	.inst	0x13223d13 ; undefined
     a20:	4b15223d 	sub	w29, w17, w21, lsl #8
     a24:	01000102 	.inst	0x01000102 ; undefined
     a28:	00012d01 	.inst	0x00012d01 ; undefined
     a2c:	c4000200 	ld1sb	{z0.d}, p0/z, [x16, z0.d, uxtw]
     a30:	04000000 	add	z0.b, p0/m, z0.b, z0.b
     a34:	0d0efb01 	.inst	0x0d0efb01 ; undefined
     a38:	01010100 	.inst	0x01010100 ; undefined
     a3c:	00000001 	.inst	0x00000001 ; undefined
     a40:	01000001 	.inst	0x01000001 ; undefined
     a44:	6573552f 	fnmla	z15.h, p5/m, z9.h, z19.h
     a48:	782f7372 	lduminh	w15, w18, [x27]
     a4c:	74616862 	.inst	0x74616862 ; undefined
     a50:	2f67616e 	umlsl	v14.4s, v11.4h, v7.h[2]
     a54:	6a6f7250 	bics	w16, w18, w15, lsr #28
     a58:	73746365 	.inst	0x73746365 ; undefined
     a5c:	4f79582f 	.inst	0x4f79582f ; undefined
     a60:	654b2f53 	.inst	0x654b2f53 ; undefined
     a64:	6c656e72 	ldnp	d18, d27, [x19, #-432]
     a68:	756f532f 	.inst	0x756f532f ; undefined
     a6c:	2f656372 	umlsl	v18.4s, v27.4h, v5.h[2]
     a70:	69726550 	ldpsw	x16, x25, [x10, #-112]
     a74:	72656870 	.inst	0x72656870 ; undefined
     a78:	2f736c61 	.inst	0x2f736c61 ; undefined
     a7c:	4f495047 	.inst	0x4f495047 ; undefined
     a80:	73752f00 	.inst	0x73752f00 ; undefined
     a84:	6f6c2f72 	.inst	0x6f6c2f72 ; undefined
     a88:	2f6c6163 	umlsl	v3.4s, v11.4h, v12.h[2]
     a8c:	6c6c6543 	ldnp	d3, d25, [x10, #-320]
     a90:	612f7261 	.inst	0x612f7261 ; undefined
     a94:	68637261 	.inst	0x68637261 ; undefined
     a98:	6e2d3436 	cmhi	v22.16b, v1.16b, v13.16b
     a9c:	2d656e6f 	ldp	s15, s27, [x19, #-216]
     aa0:	2f666c65 	.inst	0x2f666c65 ; undefined
     aa4:	2e322e37 	uqsub	v23.8b, v17.8b, v18.8b
     aa8:	6f742f30 	.inst	0x6f742f30 ; undefined
     aac:	68636c6f 	.inst	0x68636c6f ; undefined
     ab0:	2f6e6961 	umlsl	v1.4s, v11.4h, v14.h[6]
     ab4:	2f62696c 	umlsl	v12.4s, v11.4h, v2.h[6]
     ab8:	2f636367 	umlsl	v7.4s, v27.4h, v3.h[2]
     abc:	63726161 	.inst	0x63726161 ; undefined
     ac0:	2d343668 	stp	s8, s13, [x19, #-96]
     ac4:	656e6f6e 	fnmls	z14.h, p3/m, z27.h, z14.h
     ac8:	666c652d 	.inst	0x666c652d ; undefined
     acc:	322e372f 	orr	w15, w25, #0xfffc0000
     ad0:	692f302e 	.inst	0x692f302e ; undefined
     ad4:	756c636e 	.inst	0x756c636e ; undefined
     ad8:	00006564 	.inst	0x00006564 ; undefined
     adc:	4f495047 	.inst	0x4f495047 ; undefined
     ae0:	0100632e 	.inst	0x0100632e ; undefined
     ae4:	74730000 	.inst	0x74730000 ; undefined
     ae8:	746e6964 	.inst	0x746e6964 ; undefined
     aec:	6363672d 	.inst	0x6363672d ; undefined
     af0:	0200682e 	.inst	0x0200682e ; undefined
     af4:	00000000 	.inst	0x00000000 ; undefined
     af8:	13c00209 	.inst	0x13c00209 ; undefined
     afc:	0000000e 	.inst	0x0000000e ; undefined
     b00:	1614ffff 	b	fffffffff8540afc <__end+0xfffff845a19c>
     b04:	3f3f3f31 	.inst	0x3f3f3f31 ; undefined
     b08:	58740340 	ldr	x0, e8b70 <__bss_size+0xe8b6a>
     b0c:	212e0f03 	.inst	0x212e0f03 ; undefined
     b10:	6b03213d 	subs	w29, w9, w3, lsl #8
     b14:	2e13032e 	ext	v14.8b, v25.8b, v19.8b, #0
     b18:	212f211f 	.inst	0x212f211f ; undefined
     b1c:	032e7103 	.inst	0x032e7103 ; undefined
     b20:	211f2e0d 	.inst	0x211f2e0d ; undefined
     b24:	7403212f 	.inst	0x7403212f ; undefined
     b28:	0b034d3c 	add	w28, w9, w3, lsl #19
     b2c:	5a311358 	.inst	0x5a311358 ; undefined
     b30:	133e5c1c 	.inst	0x133e5c1c ; undefined
     b34:	5c1c5a31 	ldr	d17, 39678 <__bss_size+0x39672>
     b38:	0171033e 	.inst	0x0171033e ; undefined
     b3c:	3c11032f 	stur	b15, [x25, #-240]
     b40:	206f0322 	.inst	0x206f0322 ; undefined
     b44:	302e1103 	adr	x3, 5cd65 <__bss_size+0x5cd5f>
     b48:	03206d03 	.inst	0x03206d03 ; undefined
     b4c:	6f034a11 	.inst	0x6f034a11 ; undefined
     b50:	2e11032e 	ext	v14.8b, v25.8b, v17.8b, #0
     b54:	00010230 	.inst	0x00010230 ; undefined
     b58:	00bd0101 	.inst	0x00bd0101 ; undefined
     b5c:	00020000 	.inst	0x00020000 ; undefined
     b60:	0000009a 	.inst	0x0000009a ; undefined
     b64:	0efb0104 	.inst	0x0efb0104 ; undefined
     b68:	0101000d 	.inst	0x0101000d ; undefined
     b6c:	00000101 	.inst	0x00000101 ; undefined
     b70:	00000100 	.inst	0x00000100 ; undefined
     b74:	73552f01 	.inst	0x73552f01 ; undefined
     b78:	2f737265 	.inst	0x2f737265 ; undefined
     b7c:	61686278 	.inst	0x61686278 ; undefined
     b80:	67616e74 	.inst	0x67616e74 ; undefined
     b84:	6f72502f 	.inst	0x6f72502f ; undefined
     b88:	7463656a 	.inst	0x7463656a ; undefined
     b8c:	79582f73 	ldrh	w19, [x27, #3094]
     b90:	4b2f534f 	sub	w15, w26, w15, uxtw #4
     b94:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
     b98:	6f532f6c 	.inst	0x6f532f6c ; undefined
     b9c:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
     ba0:	7265502f 	.inst	0x7265502f ; undefined
     ba4:	65687069 	fnmls	z9.h, p4/m, z3.h, z8.h
     ba8:	736c6172 	.inst	0x736c6172 ; undefined
     bac:	4950472f 	.inst	0x4950472f ; undefined
     bb0:	552f004f 	.inst	0x552f004f ; undefined
     bb4:	73726573 	.inst	0x73726573 ; undefined
     bb8:	6862782f 	.inst	0x6862782f ; undefined
     bbc:	616e7461 	.inst	0x616e7461 ; undefined
     bc0:	72502f67 	.inst	0x72502f67 ; undefined
     bc4:	63656a6f 	.inst	0x63656a6f ; undefined
     bc8:	582f7374 	ldr	x20, 5fa34 <__bss_size+0x5fa2e>
     bcc:	2f534f79 	.inst	0x2f534f79 ; undefined
     bd0:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
     bd4:	482f6c65 	.inst	0x482f6c65 ; undefined
     bd8:	65646165 	fnmls	z5.h, p0/m, z11.h, z4.h
     bdc:	00007372 	.inst	0x00007372 ; undefined
     be0:	66617254 	.inst	0x66617254 ; undefined
     be4:	4c636966 	.inst	0x4c636966 ; undefined
     be8:	74686769 	.inst	0x74686769 ; undefined
     bec:	00632e73 	.inst	0x00632e73 ; undefined
     bf0:	47000001 	.inst	0x47000001 ; undefined
     bf4:	2e4f4950 	.inst	0x2e4f4950 ; undefined
     bf8:	00020068 	.inst	0x00020068 ; undefined
     bfc:	09000000 	.inst	0x09000000 ; undefined
     c00:	0e158002 	.inst	0x0e158002 ; undefined
     c04:	ff000000 	.inst	0xff000000 ; undefined
     c08:	2d2115ff 	stp	s31, s5, [x15, #-248]
     c0c:	1f3e2121 	fnmadd	s1, s9, s30, s8
     c10:	134d133f 	.inst	0x134d133f ; undefined
     c14:	0302134d 	.inst	0x0302134d ; undefined
     c18:	67010100 	.inst	0x67010100 ; undefined
     c1c:	02000001 	.inst	0x02000001 ; undefined
     c20:	0000fb00 	.inst	0x0000fb00 ; undefined
     c24:	fb010400 	.inst	0xfb010400 ; undefined
     c28:	01000d0e 	.inst	0x01000d0e ; undefined
     c2c:	00010101 	.inst	0x00010101 ; undefined
     c30:	00010000 	.inst	0x00010000 ; undefined
     c34:	552f0100 	.inst	0x552f0100 ; undefined
     c38:	73726573 	.inst	0x73726573 ; undefined
     c3c:	6862782f 	.inst	0x6862782f ; undefined
     c40:	616e7461 	.inst	0x616e7461 ; undefined
     c44:	72502f67 	.inst	0x72502f67 ; undefined
     c48:	63656a6f 	.inst	0x63656a6f ; undefined
     c4c:	582f7374 	ldr	x20, 5fab8 <__bss_size+0x5fab2>
     c50:	2f534f79 	.inst	0x2f534f79 ; undefined
     c54:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
     c58:	532f6c65 	.inst	0x532f6c65 ; undefined
     c5c:	6372756f 	.inst	0x6372756f ; undefined
     c60:	65502f65 	fcmge	p5.h, p3/z, z27.h, #0.0
     c64:	68706972 	.inst	0x68706972 ; undefined
     c68:	6c617265 	ldnp	d5, d28, [x19, #-496]
     c6c:	50472f73 	adr	x19, 8f25a <__bss_size+0x8f254>
     c70:	2f004f49 	.inst	0x2f004f49 ; undefined
     c74:	2f727375 	.inst	0x2f727375 ; undefined
     c78:	61636f6c 	.inst	0x61636f6c ; undefined
     c7c:	65432f6c 	.inst	0x65432f6c ; undefined
     c80:	72616c6c 	.inst	0x72616c6c ; undefined
     c84:	7261612f 	.inst	0x7261612f ; undefined
     c88:	34366863 	cbz	w3, 6d994 <__bss_size+0x6d98e>
     c8c:	6e6f6e2d 	umin	v13.8h, v17.8h, v15.8h
     c90:	6c652d65 	ldnp	d5, d11, [x11, #-432]
     c94:	2e372f66 	uqsub	v6.8b, v27.8b, v23.8b
     c98:	2f302e32 	.inst	0x2f302e32 ; undefined
     c9c:	6c6f6f74 	ldnp	d20, d27, [x27, #-272]
     ca0:	69616863 	ldpsw	x3, x26, [x3, #-248]
     ca4:	696c2f6e 	ldpsw	x14, x11, [x27, #-160]
     ca8:	63672f62 	.inst	0x63672f62 ; undefined
     cac:	61612f63 	.inst	0x61612f63 ; undefined
     cb0:	36686372 	tbz	w18, #13, 191c <__bss_size+0x1916>
     cb4:	6f6e2d34 	.inst	0x6f6e2d34 ; undefined
     cb8:	652d656e 	.inst	0x652d656e ; undefined
     cbc:	372f666c 	tbnz	w12, #5, fffffffffffff988 <__end+0xfffffff19028>
     cc0:	302e322e 	adr	x14, 5d305 <__bss_size+0x5d2ff>
     cc4:	636e692f 	.inst	0x636e692f ; undefined
     cc8:	6564756c 	fnmls	z12.h, p5/m, z11.h, z4.h
     ccc:	73552f00 	.inst	0x73552f00 ; undefined
     cd0:	2f737265 	.inst	0x2f737265 ; undefined
     cd4:	61686278 	.inst	0x61686278 ; undefined
     cd8:	67616e74 	.inst	0x67616e74 ; undefined
     cdc:	6f72502f 	.inst	0x6f72502f ; undefined
     ce0:	7463656a 	.inst	0x7463656a ; undefined
     ce4:	79582f73 	ldrh	w19, [x27, #3094]
     ce8:	4b2f534f 	sub	w15, w26, w15, uxtw #4
     cec:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
     cf0:	65482f6c 	.inst	0x65482f6c ; undefined
     cf4:	72656461 	.inst	0x72656461 ; undefined
     cf8:	55000073 	.inst	0x55000073 ; undefined
     cfc:	2e545241 	.inst	0x2e545241 ; undefined
     d00:	00010063 	.inst	0x00010063 ; undefined
     d04:	64747300 	.inst	0x64747300 ; undefined
     d08:	2d746e69 	ldp	s9, s27, [x19, #-96]
     d0c:	2e636367 	rsubhn	v7.4h, v27.4s, v3.4s
     d10:	00020068 	.inst	0x00020068 ; undefined
     d14:	49504700 	.inst	0x49504700 ; undefined
     d18:	00682e4f 	.inst	0x00682e4f ; undefined
     d1c:	00000003 	.inst	0x00000003 ; undefined
     d20:	e0020900 	.inst	0xe0020900 ; undefined
     d24:	00000e15 	.inst	0x00000e15 ; undefined
     d28:	15ffff00 	b	8000928 <__bss_size+0x8000922>
     d2c:	24242a24 	cmplo	p4.b, p2/z, z17.b, #16
     d30:	7803282a 	sttrh	w10, [x1, #50]
     d34:	200b032e 	.inst	0x200b032e ; undefined
     d38:	032e7903 	.inst	0x032e7903 ; undefined
     d3c:	7a03200a 	.inst	0x7a03200a ; undefined
     d40:	0326232e 	.inst	0x0326232e ; undefined
     d44:	1d262e7a 	.inst	0x1d262e7a ; undefined
     d48:	03200a03 	.inst	0x03200a03 ; undefined
     d4c:	0a032079 	and	w25, w3, w3, lsl #8
     d50:	31231d20 	adds	w0, w9, #0x8c7
     d54:	0402003f 	.inst	0x0402003f ; undefined
     d58:	003e4d03 	.inst	0x003e4d03 ; NYI
     d5c:	5b030402 	.inst	0x5b030402 ; undefined
     d60:	232b313e 	.inst	0x232b313e ; undefined
     d64:	0014302f 	.inst	0x0014302f ; undefined
     d68:	06010402 	.inst	0x06010402 ; undefined
     d6c:	3e3d062e 	.inst	0x3e3d062e ; undefined
     d70:	4c3d5d0f 	.inst	0x4c3d5d0f ; undefined
     d74:	04020014 	.inst	0x04020014 ; undefined
     d78:	062e0601 	.inst	0x062e0601 ; undefined
     d7c:	5d0f3e3d 	.inst	0x5d0f3e3d ; undefined
     d80:	0001023d 	.inst	0x0001023d ; undefined
     d84:	02660101 	.inst	0x02660101 ; undefined
     d88:	00020000 	.inst	0x00020000 ; undefined
     d8c:	00000147 	.inst	0x00000147 ; undefined
     d90:	0efb0104 	.inst	0x0efb0104 ; undefined
     d94:	0101000d 	.inst	0x0101000d ; undefined
     d98:	00000101 	.inst	0x00000101 ; undefined
     d9c:	00000100 	.inst	0x00000100 ; undefined
     da0:	73552f01 	.inst	0x73552f01 ; undefined
     da4:	2f737265 	.inst	0x2f737265 ; undefined
     da8:	61686278 	.inst	0x61686278 ; undefined
     dac:	67616e74 	.inst	0x67616e74 ; undefined
     db0:	6f72502f 	.inst	0x6f72502f ; undefined
     db4:	7463656a 	.inst	0x7463656a ; undefined
     db8:	79582f73 	ldrh	w19, [x27, #3094]
     dbc:	4b2f534f 	sub	w15, w26, w15, uxtw #4
     dc0:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
     dc4:	6f532f6c 	.inst	0x6f532f6c ; undefined
     dc8:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
     dcc:	7265502f 	.inst	0x7265502f ; undefined
     dd0:	65687069 	fnmls	z9.h, p4/m, z3.h, z8.h
     dd4:	736c6172 	.inst	0x736c6172 ; undefined
     dd8:	5550472f 	.inst	0x5550472f ; undefined
     ddc:	73752f00 	.inst	0x73752f00 ; undefined
     de0:	6f6c2f72 	.inst	0x6f6c2f72 ; undefined
     de4:	2f6c6163 	umlsl	v3.4s, v11.4h, v12.h[2]
     de8:	6c6c6543 	ldnp	d3, d25, [x10, #-320]
     dec:	612f7261 	.inst	0x612f7261 ; undefined
     df0:	68637261 	.inst	0x68637261 ; undefined
     df4:	6e2d3436 	cmhi	v22.16b, v1.16b, v13.16b
     df8:	2d656e6f 	ldp	s15, s27, [x19, #-216]
     dfc:	2f666c65 	.inst	0x2f666c65 ; undefined
     e00:	2e322e37 	uqsub	v23.8b, v17.8b, v18.8b
     e04:	6f742f30 	.inst	0x6f742f30 ; undefined
     e08:	68636c6f 	.inst	0x68636c6f ; undefined
     e0c:	2f6e6961 	umlsl	v1.4s, v11.4h, v14.h[6]
     e10:	2f62696c 	umlsl	v12.4s, v11.4h, v2.h[6]
     e14:	2f636367 	umlsl	v7.4s, v27.4h, v3.h[2]
     e18:	63726161 	.inst	0x63726161 ; undefined
     e1c:	2d343668 	stp	s8, s13, [x19, #-96]
     e20:	656e6f6e 	fnmls	z14.h, p3/m, z27.h, z14.h
     e24:	666c652d 	.inst	0x666c652d ; undefined
     e28:	322e372f 	orr	w15, w25, #0xfffc0000
     e2c:	692f302e 	.inst	0x692f302e ; undefined
     e30:	756c636e 	.inst	0x756c636e ; undefined
     e34:	2f006564 	mvni	v4.2s, #0xb, lsl #24
     e38:	72657355 	.inst	0x72657355 ; undefined
     e3c:	62782f73 	.inst	0x62782f73 ; undefined
     e40:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     e44:	502f6761 	adr	x1, 5fb32 <__bss_size+0x5fb2c>
     e48:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     e4c:	2f737463 	.inst	0x2f737463 ; undefined
     e50:	534f7958 	.inst	0x534f7958 ; undefined
     e54:	72654b2f 	.inst	0x72654b2f ; undefined
     e58:	2f6c656e 	.inst	0x2f6c656e ; undefined
     e5c:	64616548 	.inst	0x64616548 ; undefined
     e60:	00737265 	.inst	0x00737265 ; undefined
     e64:	61724600 	.inst	0x61724600 ; undefined
     e68:	7542656d 	.inst	0x7542656d ; undefined
     e6c:	72656666 	.inst	0x72656666 ; undefined
     e70:	0100632e 	.inst	0x0100632e ; undefined
     e74:	74730000 	.inst	0x74730000 ; undefined
     e78:	746e6964 	.inst	0x746e6964 ; undefined
     e7c:	6363672d 	.inst	0x6363672d ; undefined
     e80:	0200682e 	.inst	0x0200682e ; undefined
     e84:	72460000 	.inst	0x72460000 ; undefined
     e88:	42656d61 	.inst	0x42656d61 ; undefined
     e8c:	65666675 	fnmls	z21.h, p1/m, z19.h, z6.h
     e90:	00682e72 	.inst	0x00682e72 ; undefined
     e94:	43000003 	.inst	0x43000003 ; undefined
     e98:	6f736e6f 	.inst	0x6f736e6f ; undefined
     e9c:	4f49656c 	.inst	0x4f49656c ; undefined
     ea0:	0300682e 	.inst	0x0300682e ; undefined
     ea4:	78450000 	ldurh	w0, [x0, #80]
     ea8:	74706563 	.inst	0x74706563 ; undefined
     eac:	736e6f69 	.inst	0x736e6f69 ; undefined
     eb0:	0300682e 	.inst	0x0300682e ; undefined
     eb4:	614d0000 	.inst	0x614d0000 ; undefined
     eb8:	6f626c69 	.inst	0x6f626c69 ; undefined
     ebc:	00682e78 	.inst	0x00682e78 ; undefined
     ec0:	56000003 	.inst	0x56000003 ; undefined
     ec4:	75747269 	.inst	0x75747269 ; undefined
     ec8:	654d6c61 	fcmeq	p1.h, p3/z, z3.h, z13.h
     ecc:	79726f6d 	ldrh	w13, [x27, #6454]
     ed0:	0300682e 	.inst	0x0300682e ; undefined
     ed4:	00000000 	.inst	0x00000000 ; undefined
     ed8:	17600209 	b	fffffffffd8016fc <__end+0xfffffd71ad9c>
     edc:	0000000e 	.inst	0x0000000e ; undefined
     ee0:	271affff 	.inst	0x271affff ; undefined
     ee4:	43207903 	.inst	0x43207903 ; undefined
     ee8:	034a0f03 	.inst	0x034a0f03 ; undefined
     eec:	0f032071 	.inst	0x0f032071 ; undefined
     ef0:	200f0320 	.inst	0x200f0320 ; undefined
     ef4:	031b251b 	.inst	0x031b251b ; undefined
     ef8:	271b200a 	.inst	0x271b200a ; undefined
     efc:	2009031e 	.inst	0x2009031e ; undefined
     f00:	03204d03 	.inst	0x03204d03 ; undefined
     f04:	5403202c 	b.gt	7308 <__bss_size+0x7302>
     f08:	2033033c 	.inst	0x2033033c ; undefined
     f0c:	03201703 	.inst	0x03201703 ; undefined
     f10:	7a032071 	.inst	0x7a032071 ; undefined
     f14:	2059033c 	.inst	0x2059033c ; undefined
     f18:	25252524 	.inst	0x25252524 ; undefined
     f1c:	26201403 	.inst	0x26201403 ; undefined
     f20:	23262425 	.inst	0x23262425 ; undefined
     f24:	3b215d31 	.inst	0x3b215d31 ; undefined
     f28:	221d2222 	.inst	0x221d2222 ; undefined
     f2c:	35311e3d 	cbnz	w29, 632f0 <__bss_size+0x632ea>
     f30:	21207803 	.inst	0x21207803 ; undefined
     f34:	211e1e27 	.inst	0x211e1e27 ; undefined
     f38:	04020023 	.inst	0x04020023 ; undefined
     f3c:	06200601 	.inst	0x06200601 ; undefined
     f40:	04020041 	.inst	0x04020041 ; undefined
     f44:	063c0601 	.inst	0x063c0601 ; undefined
     f48:	4e323240 	ssubw2	v0.8h, v18.8h, v18.16b
     f4c:	1e302925 	fadd	s5, s9, s16
     f50:	231d2421 	.inst	0x231d2421 ; undefined
     f54:	21334521 	.inst	0x21334521 ; undefined
     f58:	4b754b4b 	.inst	0x4b754b4b ; undefined
     f5c:	5967674b 	.inst	0x5967674b ; undefined
     f60:	4f4a5d03 	.inst	0x4f4a5d03 ; undefined
     f64:	034e4e4e 	.inst	0x034e4e4e ; undefined
     f68:	034a3c5e 	.inst	0x034a3c5e ; undefined
     f6c:	213c2036 	.inst	0x213c2036 ; undefined
     f70:	31412f21 	adds	w1, w25, #0x4b, lsl #12
     f74:	7a032c22 	.inst	0x7a032c22 ; undefined
     f78:	242f3f20 	cmplo	p0.b, p7/z, z25.b, #60
     f7c:	2b23502a 	adds	w10, w1, w3, uxtw #4
     f80:	2e090323 	ext	v3.8b, v25.8b, v9.8b, #0
     f84:	20700327 	.inst	0x20700327 ; undefined
     f88:	23200a03 	.inst	0x23200a03 ; undefined
     f8c:	4e222323 	ssubl2	v3.8h, v25.16b, v2.16b
     f90:	331f214c 	bfi	w12, w10, #1, #9
     f94:	3c52032d 	ldur	b13, [x25, #-224]
     f98:	29033141 	stp	w1, w12, [x10, #24]
     f9c:	02002f2e 	.inst	0x02002f2e ; undefined
     fa0:	002b0204 	.inst	0x002b0204 ; NYI
     fa4:	26020402 	.inst	0x26020402 ; undefined
     fa8:	02040200 	.inst	0x02040200 ; undefined
     fac:	2f207a03 	.inst	0x2f207a03 ; undefined
     fb0:	21204e03 	.inst	0x21204e03 ; undefined
     fb4:	032f3f31 	.inst	0x032f3f31 ; undefined
     fb8:	2f2f2e2b 	.inst	0x2f2f2e2b ; undefined
     fbc:	7a03261c 	.inst	0x7a03261c ; undefined
     fc0:	033d3620 	.inst	0x033d3620 ; undefined
     fc4:	034a2e6d 	.inst	0x034a2e6d ; undefined
     fc8:	4f402e15 	.inst	0x4f402e15 ; undefined
     fcc:	7a03505d 	.inst	0x7a03505d ; undefined
     fd0:	2521232e 	.inst	0x2521232e ; undefined
     fd4:	35207703 	cbnz	w3, 41eb4 <__bss_size+0x41eae>
     fd8:	79032121 	strh	w1, [x9, #400]
     fdc:	251c2520 	cmplt	p0.b, p1/z, z9.b, #-4
     fe0:	032f251c 	.inst	0x032f251c ; undefined
     fe4:	4b4b3c6d 	sub	w13, w3, w11, lsr #15
     fe8:	024b3d3f 	.inst	0x024b3d3f ; undefined
     fec:	01010003 	.inst	0x01010003 ; undefined
     ff0:	00000280 	.inst	0x00000280 ; undefined
     ff4:	01210002 	.inst	0x01210002 ; undefined
     ff8:	01040000 	.inst	0x01040000 ; undefined
     ffc:	000d0efb 	.inst	0x000d0efb ; undefined
    1000:	01010101 	.inst	0x01010101 ; undefined
    1004:	01000000 	.inst	0x01000000 ; undefined
    1008:	2f010000 	.inst	0x2f010000 ; undefined
    100c:	72657355 	.inst	0x72657355 ; undefined
    1010:	62782f73 	.inst	0x62782f73 ; undefined
    1014:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
    1018:	502f6761 	adr	x1, 5fd06 <__bss_size+0x5fd00>
    101c:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
    1020:	2f737463 	.inst	0x2f737463 ; undefined
    1024:	534f7958 	.inst	0x534f7958 ; undefined
    1028:	72654b2f 	.inst	0x72654b2f ; undefined
    102c:	2f6c656e 	.inst	0x2f6c656e ; undefined
    1030:	72756f53 	.inst	0x72756f53 ; undefined
    1034:	502f6563 	adr	x3, 5fce2 <__bss_size+0x5fcdc>
    1038:	70697265 	adr	x5, d3e87 <__bss_size+0xd3e81>
    103c:	61726568 	.inst	0x61726568 ; undefined
    1040:	472f736c 	.inst	0x472f736c ; undefined
    1044:	2f005550 	bic	v16.2s, #0xa, lsl #16
    1048:	2f727375 	.inst	0x2f727375 ; undefined
    104c:	61636f6c 	.inst	0x61636f6c ; undefined
    1050:	65432f6c 	.inst	0x65432f6c ; undefined
    1054:	72616c6c 	.inst	0x72616c6c ; undefined
    1058:	7261612f 	.inst	0x7261612f ; undefined
    105c:	34366863 	cbz	w3, 6dd68 <__bss_size+0x6dd62>
    1060:	6e6f6e2d 	umin	v13.8h, v17.8h, v15.8h
    1064:	6c652d65 	ldnp	d5, d11, [x11, #-432]
    1068:	2e372f66 	uqsub	v6.8b, v27.8b, v23.8b
    106c:	2f302e32 	.inst	0x2f302e32 ; undefined
    1070:	6c6f6f74 	ldnp	d20, d27, [x27, #-272]
    1074:	69616863 	ldpsw	x3, x26, [x3, #-248]
    1078:	696c2f6e 	ldpsw	x14, x11, [x27, #-160]
    107c:	63672f62 	.inst	0x63672f62 ; undefined
    1080:	61612f63 	.inst	0x61612f63 ; undefined
    1084:	36686372 	tbz	w18, #13, 1cf0 <__bss_size+0x1cea>
    1088:	6f6e2d34 	.inst	0x6f6e2d34 ; undefined
    108c:	652d656e 	.inst	0x652d656e ; undefined
    1090:	372f666c 	tbnz	w12, #5, fffffffffffffd5c <__end+0xfffffff193fc>
    1094:	302e322e 	adr	x14, 5d6d9 <__bss_size+0x5d6d3>
    1098:	636e692f 	.inst	0x636e692f ; undefined
    109c:	6564756c 	fnmls	z12.h, p5/m, z11.h, z4.h
    10a0:	73552f00 	.inst	0x73552f00 ; undefined
    10a4:	2f737265 	.inst	0x2f737265 ; undefined
    10a8:	61686278 	.inst	0x61686278 ; undefined
    10ac:	67616e74 	.inst	0x67616e74 ; undefined
    10b0:	6f72502f 	.inst	0x6f72502f ; undefined
    10b4:	7463656a 	.inst	0x7463656a ; undefined
    10b8:	79582f73 	ldrh	w19, [x27, #3094]
    10bc:	4b2f534f 	sub	w15, w26, w15, uxtw #4
    10c0:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
    10c4:	65482f6c 	.inst	0x65482f6c ; undefined
    10c8:	72656461 	.inst	0x72656461 ; undefined
    10cc:	46000073 	.inst	0x46000073 ; undefined
    10d0:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
    10d4:	66667542 	.inst	0x66667542 ; undefined
    10d8:	72477265 	.inst	0x72477265 ; undefined
    10dc:	69687061 	ldpsw	x1, x28, [x3, #-192]
    10e0:	632e7363 	.inst	0x632e7363 ; undefined
    10e4:	00000100 	.inst	0x00000100 ; undefined
    10e8:	69647473 	ldpsw	x19, x29, [x3, #-224]
    10ec:	672d746e 	.inst	0x672d746e ; undefined
    10f0:	682e6363 	.inst	0x682e6363 ; undefined
    10f4:	00000200 	.inst	0x00000200 ; undefined
    10f8:	6d617246 	ldp	d6, d28, [x18, #-496]
    10fc:	66754265 	.inst	0x66754265 ; undefined
    1100:	2e726566 	umax	v6.4h, v11.4h, v18.4h
    1104:	00030068 	.inst	0x00030068 ; undefined
    1108:	6e6f4300 	raddhn2	v0.8h, v24.4s, v15.4s
    110c:	656c6f73 	fnmls	z19.h, p3/m, z27.h, z12.h
    1110:	746e6f46 	.inst	0x746e6f46 ; undefined
    1114:	0300682e 	.inst	0x0300682e ; undefined
    1118:	00000000 	.inst	0x00000000 ; undefined
    111c:	1cb00209 	ldr	s9, fffffffffff6115c <__end+0xffffffe7a7fc>
    1120:	0000000e 	.inst	0x0000000e ; undefined
    1124:	0b03ffff 	.inst	0x0b03ffff ; undefined
    1128:	00d54b01 	.inst	0x00d54b01 ; undefined
    112c:	31030402 	adds	w2, w0, #0xc1
    1130:	03040200 	.inst	0x03040200 ; undefined
    1134:	0402004b 	.inst	0x0402004b ; undefined
    1138:	7a496403 	.inst	0x7a496403 ; undefined
    113c:	1f4b3d3e 	fmadd	d30, d9, d11, d15
    1140:	7703211f 	.inst	0x7703211f ; undefined
    1144:	644bbc2e 	.inst	0x644bbc2e ; undefined
    1148:	7411032d 	.inst	0x7411032d ; undefined
    114c:	586d035a 	ldr	x26, db1b4 <__bss_size+0xdb1ae>
    1150:	4a201303 	eon	w3, w24, w0, lsl #4
    1154:	4b2e6f03 	sub	w3, w24, w14, uxtx #3
    1158:	1b032d64 	madd	w4, w11, w3, w11
    115c:	2b775a3c 	.inst	0x2b775a3c ; undefined
    1160:	02003d21 	.inst	0x02003d21 ; undefined
    1164:	00210304 	.inst	0x00210304 ; NYI
    1168:	73030402 	.inst	0x73030402 ; undefined
    116c:	03040200 	.inst	0x03040200 ; undefined
    1170:	04020021 	.inst	0x04020021 ; undefined
    1174:	02001f03 	.inst	0x02001f03 ; undefined
    1178:	412d0204 	.inst	0x412d0204 ; undefined
    117c:	00ad3d84 	.inst	0x00ad3d84 ; undefined
    1180:	4b030402 	sub	w2, w0, w3, lsl #1
    1184:	03040200 	.inst	0x03040200 ; undefined
    1188:	3e794949 	.inst	0x3e794949 ; undefined
    118c:	913c7903 	add	x3, x8, #0xf1e
    1190:	0349494b 	.inst	0x0349494b ; undefined
    1194:	1e306609 	fccmp	s16, s16, #0x9, vs
    1198:	c85a2121 	ldxr	x1, [x9]
    119c:	313b2f3f 	cmn	w25, #0xecb
    11a0:	04020038 	.inst	0x04020038 ; undefined
    11a4:	09033b02 	.inst	0x09033b02 ; undefined
    11a8:	2c3e922e 	stnp	s14, s4, [x17, #-12]
    11ac:	0334263e 	.inst	0x0334263e ; undefined
    11b0:	1d316674 	.inst	0x1d316674 ; undefined
    11b4:	01040200 	.inst	0x01040200 ; undefined
    11b8:	04020022 	.inst	0x04020022 ; undefined
    11bc:	02004b01 	.inst	0x02004b01 ; undefined
    11c0:	00390104 	.inst	0x00390104 ; NYI
    11c4:	23010402 	.inst	0x23010402 ; undefined
    11c8:	01040200 	.inst	0x01040200 ; undefined
    11cc:	1d4d422b 	.inst	0x1d4d422b ; undefined
    11d0:	0402002e 	.inst	0x0402002e ; undefined
    11d4:	02002201 	.inst	0x02002201 ; undefined
    11d8:	004b0104 	.inst	0x004b0104 ; undefined
    11dc:	39010402 	strb	w2, [x0, #65]
    11e0:	01040200 	.inst	0x01040200 ; undefined
    11e4:	04020023 	.inst	0x04020023 ; undefined
    11e8:	4d502b01 	.inst	0x4d502b01 ; undefined
    11ec:	2e7a0326 	uaddl	v6.4s, v25.4h, v26.4h
    11f0:	02003277 	.inst	0x02003277 ; undefined
    11f4:	001f0104 	.inst	0x001f0104 ; undefined
    11f8:	21010402 	.inst	0x21010402 ; undefined
    11fc:	01040200 	.inst	0x01040200 ; undefined
    1200:	0402001f 	.inst	0x0402001f ; undefined
    1204:	02003101 	.inst	0x02003101 ; undefined
    1208:	001d0104 	.inst	0x001d0104 ; undefined
    120c:	22010402 	.inst	0x22010402 ; undefined
    1210:	01040200 	.inst	0x01040200 ; undefined
    1214:	0402001e 	.inst	0x0402001e ; undefined
    1218:	02003101 	.inst	0x02003101 ; undefined
    121c:	45930304 	.inst	0x45930304 ; undefined
    1220:	2f205f03 	.inst	0x2f205f03 ; undefined
    1224:	3b38313b 	.inst	0x3b38313b ; undefined
    1228:	03040200 	.inst	0x03040200 ; undefined
    122c:	314a2703 	adds	w3, w24, #0x289, lsl #12
    1230:	3d1f2f92 	str	b18, [x28, #1995]
    1234:	03741103 	.inst	0x03741103 ; undefined
    1238:	5603d66e 	.inst	0x5603d66e ; undefined
    123c:	313b2f20 	adds	w0, w25, #0xecb
    1240:	3f033b38 	.inst	0x3f033b38 ; undefined
    1244:	214b952e 	.inst	0x214b952e ; undefined
    1248:	4d24211f 	.inst	0x4d24211f ; undefined
    124c:	3d4a6603 	ldr	b3, [x16, #665]
    1250:	03753d3d 	.inst	0x03753d3d ; undefined
    1254:	212e7fbb 	.inst	0x212e7fbb ; undefined
    1258:	494b592d 	.inst	0x494b592d ; undefined
    125c:	66090349 	.inst	0x66090349 ; undefined
    1260:	00d1032f 	.inst	0x00d1032f ; undefined
    1264:	4a6d032e 	eon	w14, w25, w13, lsr #0
    1268:	032f1f2f 	.inst	0x032f1f2f ; undefined
    126c:	02672074 	.inst	0x02672074 ; undefined
    1270:	01010001 	.inst	0x01010001 ; undefined
    1274:	00000359 	.inst	0x00000359 ; undefined
    1278:	01120002 	.inst	0x01120002 ; undefined
    127c:	01040000 	.inst	0x01040000 ; undefined
    1280:	000d0efb 	.inst	0x000d0efb ; undefined
    1284:	01010101 	.inst	0x01010101 ; undefined
    1288:	01000000 	.inst	0x01000000 ; undefined
    128c:	2f010000 	.inst	0x2f010000 ; undefined
    1290:	72657355 	.inst	0x72657355 ; undefined
    1294:	62782f73 	.inst	0x62782f73 ; undefined
    1298:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
    129c:	502f6761 	adr	x1, 5ff8a <__bss_size+0x5ff84>
    12a0:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
    12a4:	2f737463 	.inst	0x2f737463 ; undefined
    12a8:	534f7958 	.inst	0x534f7958 ; undefined
    12ac:	72654b2f 	.inst	0x72654b2f ; undefined
    12b0:	2f6c656e 	.inst	0x2f6c656e ; undefined
    12b4:	72756f53 	.inst	0x72756f53 ; undefined
    12b8:	502f6563 	adr	x3, 5ff66 <__bss_size+0x5ff60>
    12bc:	70697265 	adr	x5, d410b <__bss_size+0xd4105>
    12c0:	61726568 	.inst	0x61726568 ; undefined
    12c4:	472f736c 	.inst	0x472f736c ; undefined
    12c8:	2f005550 	bic	v16.2s, #0xa, lsl #16
    12cc:	2f727375 	.inst	0x2f727375 ; undefined
    12d0:	61636f6c 	.inst	0x61636f6c ; undefined
    12d4:	65432f6c 	.inst	0x65432f6c ; undefined
    12d8:	72616c6c 	.inst	0x72616c6c ; undefined
    12dc:	7261612f 	.inst	0x7261612f ; undefined
    12e0:	34366863 	cbz	w3, 6dfec <__bss_size+0x6dfe6>
    12e4:	6e6f6e2d 	umin	v13.8h, v17.8h, v15.8h
    12e8:	6c652d65 	ldnp	d5, d11, [x11, #-432]
    12ec:	2e372f66 	uqsub	v6.8b, v27.8b, v23.8b
    12f0:	2f302e32 	.inst	0x2f302e32 ; undefined
    12f4:	6c6f6f74 	ldnp	d20, d27, [x27, #-272]
    12f8:	69616863 	ldpsw	x3, x26, [x3, #-248]
    12fc:	696c2f6e 	ldpsw	x14, x11, [x27, #-160]
    1300:	63672f62 	.inst	0x63672f62 ; undefined
    1304:	61612f63 	.inst	0x61612f63 ; undefined
    1308:	36686372 	tbz	w18, #13, 1f74 <__bss_size+0x1f6e>
    130c:	6f6e2d34 	.inst	0x6f6e2d34 ; undefined
    1310:	652d656e 	.inst	0x652d656e ; undefined
    1314:	372f666c 	tbnz	w12, #5, ffffffffffffffe0 <__end+0xfffffff19680>
    1318:	302e322e 	adr	x14, 5d95d <__bss_size+0x5d957>
    131c:	636e692f 	.inst	0x636e692f ; undefined
    1320:	6564756c 	fnmls	z12.h, p5/m, z11.h, z4.h
    1324:	73552f00 	.inst	0x73552f00 ; undefined
    1328:	2f737265 	.inst	0x2f737265 ; undefined
    132c:	61686278 	.inst	0x61686278 ; undefined
    1330:	67616e74 	.inst	0x67616e74 ; undefined
    1334:	6f72502f 	.inst	0x6f72502f ; undefined
    1338:	7463656a 	.inst	0x7463656a ; undefined
    133c:	79582f73 	ldrh	w19, [x27, #3094]
    1340:	4b2f534f 	sub	w15, w26, w15, uxtw #4
    1344:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
    1348:	65482f6c 	.inst	0x65482f6c ; undefined
    134c:	72656461 	.inst	0x72656461 ; undefined
    1350:	4d000073 	st1	{v19.b}[8], [x3]
    1354:	626c6961 	.inst	0x626c6961 ; undefined
    1358:	632e786f 	.inst	0x632e786f ; undefined
    135c:	00000100 	.inst	0x00000100 ; undefined
    1360:	69647473 	ldpsw	x19, x29, [x3, #-224]
    1364:	672d746e 	.inst	0x672d746e ; undefined
    1368:	682e6363 	.inst	0x682e6363 ; undefined
    136c:	00000200 	.inst	0x00000200 ; undefined
    1370:	65637845 	fnmls	z5.h, p6/m, z2.h, z3.h
    1374:	6f697470 	uqshl	v16.2d, v3.2d, #41
    1378:	682e736e 	.inst	0x682e736e ; undefined
    137c:	00000300 	.inst	0x00000300 ; undefined
    1380:	736e6f43 	.inst	0x736e6f43 ; undefined
    1384:	49656c6f 	.inst	0x49656c6f ; undefined
    1388:	00682e4f 	.inst	0x00682e4f ; undefined
    138c:	00000003 	.inst	0x00000003 ; undefined
    1390:	10020900 	adr	x0, 54b0 <__bss_size+0x54aa>
    1394:	00000e25 	.inst	0x00000e25 ; undefined
    1398:	18ffff00 	ldr	w0, 1378 <__bss_size+0x1372>
    139c:	0200212f 	.inst	0x0200212f ; undefined
    13a0:	3c060104 	stur	b4, [x8, #96]
    13a4:	212d3006 	.inst	0x212d3006 ; undefined
    13a8:	0013303d 	.inst	0x0013303d ; undefined
    13ac:	06010402 	.inst	0x06010402 ; undefined
    13b0:	002f062e 	.inst	0x002f062e ; NYI
    13b4:	06010402 	.inst	0x06010402 ; undefined
    13b8:	4c2f062e 	.inst	0x4c2f062e ; undefined
    13bc:	03233923 	.inst	0x03233923 ; undefined
    13c0:	4c2f5872 	.inst	0x4c2f5872 ; undefined
    13c4:	2a24212d 	orn	w13, w9, w4, lsl #8
    13c8:	1b032f32 	madd	w18, w25, w3, w11
    13cc:	4e2c4d4a 	sqshl	v10.16b, v10.16b, v12.16b
    13d0:	1d233923 	.inst	0x1d233923 ; undefined
    13d4:	20550315 	.inst	0x20550315 ; undefined
    13d8:	03202b03 	.inst	0x03202b03 ; undefined
    13dc:	4c212055 	.inst	0x4c212055 ; undefined
    13e0:	2a24212d 	orn	w13, w9, w4, lsl #8
    13e4:	38032f32 	strb	w18, [x25, #50]!
    13e8:	0402004a 	.inst	0x0402004a ; undefined
    13ec:	064a0601 	.inst	0x064a0601 ; undefined
    13f0:	7803334e 	sturh	w14, [x26, #51]
    13f4:	2350403c 	.inst	0x2350403c ; undefined
    13f8:	151d2339 	b	474a0dc <__bss_size+0x474a0d6>
    13fc:	207fb203 	.inst	0x207fb203 ; undefined
    1400:	2000ce03 	.inst	0x2000ce03 ; undefined
    1404:	207fb203 	.inst	0x207fb203 ; undefined
    1408:	212d4c21 	.inst	0x212d4c21 ; undefined
    140c:	2f322a24 	.inst	0x2f322a24 ; undefined
    1410:	4a00db03 	.inst	0x4a00db03 ; undefined
    1414:	01040200 	.inst	0x01040200 ; undefined
    1418:	4f064a06 	.inst	0x4f064a06 ; undefined
    141c:	2b235e38 	.inst	0x2b235e38 ; undefined
    1420:	03151d23 	.inst	0x03151d23 ; undefined
    1424:	03207f93 	.inst	0x03207f93 ; undefined
    1428:	032000ed 	.inst	0x032000ed ; undefined
    142c:	8703200c 	.inst	0x8703200c ; undefined
    1430:	4c21207f 	.inst	0x4c21207f ; undefined
    1434:	2a24212d 	orn	w13, w9, w4, lsl #8
    1438:	f9032f32 	str	x18, [x25, #1624]
    143c:	384f4a00 	ldtrb	w0, [x16, #244]
    1440:	2339235e 	.inst	0x2339235e ; undefined
    1444:	f503151d 	.inst	0xf503151d ; undefined
    1448:	8b03207e 	add	x30, x3, x3, lsl #8
    144c:	0c032001 	.inst	0x0c032001 ; undefined
    1450:	7ee90320 	.inst	0x7ee90320 ; undefined
    1454:	2d5a2120 	ldp	s0, s8, [x9, #208]
    1458:	322a2421 	orr	w1, w1, #0xffc00000
    145c:	0197032f 	.inst	0x0197032f ; undefined
    1460:	42384f4a 	.inst	0x42384f4a ; undefined
    1464:	1d233923 	.inst	0x1d233923 ; undefined
    1468:	7ed70315 	.inst	0x7ed70315 ; undefined
    146c:	01a90320 	.inst	0x01a90320 ; undefined
    1470:	200c0320 	.inst	0x200c0320 ; undefined
    1474:	207ecb03 	.inst	0x207ecb03 ; undefined
    1478:	212d5a21 	.inst	0x212d5a21 ; undefined
    147c:	2f322a24 	.inst	0x2f322a24 ; undefined
    1480:	4a01b503 	.inst	0x4a01b503 ; undefined
    1484:	2342384f 	.inst	0x2342384f ; undefined
    1488:	152b232b 	b	4aca134 <__bss_size+0x4aca12e>
    148c:	03200903 	.inst	0x03200903 ; undefined
    1490:	03207eb0 	.inst	0x03207eb0 ; undefined
    1494:	032001d1 	.inst	0x032001d1 ; undefined
    1498:	21207eaf 	.inst	0x21207eaf ; undefined
    149c:	24212d5a 	cmpls	p10.b, p3/z, z10.b, #4
    14a0:	032f322a 	.inst	0x032f322a ; undefined
    14a4:	4f4a01d4 	.inst	0x4f4a01d4 ; undefined
    14a8:	23512983 	.inst	0x23512983 ; undefined
    14ac:	152b232b 	b	4aca158 <__bss_size+0x4aca152>
    14b0:	03200903 	.inst	0x03200903 ; undefined
    14b4:	03207e90 	.inst	0x03207e90 ; undefined
    14b8:	032001f1 	.inst	0x032001f1 ; undefined
    14bc:	21207e8f 	.inst	0x21207e8f ; undefined
    14c0:	24212d5a 	cmpls	p10.b, p3/z, z10.b, #4
    14c4:	032f322a 	.inst	0x032f322a ; undefined
    14c8:	4f4a01f4 	.inst	0x4f4a01f4 ; undefined
    14cc:	3e232431 	.inst	0x3e232431 ; undefined
    14d0:	78034038 	sturh	w24, [x1, #52]
    14d4:	3c78032e 	.inst	0x3c78032e ; undefined
    14d8:	214a1203 	.inst	0x214a1203 ; undefined
    14dc:	4397211f 	.inst	0x4397211f ; undefined
    14e0:	2e73031f 	uaddl	v31.4s, v24.4h, v19.4h
    14e4:	3c0a0378 	stur	b24, [x27, #160]
    14e8:	3c73031f 	.inst	0x3c73031f ; undefined
    14ec:	404a0a03 	.inst	0x404a0a03 ; undefined
    14f0:	1f412a1f 	fmadd	d31, d16, d1, d10
    14f4:	031f4229 	.inst	0x031f4229 ; undefined
    14f8:	1f442e79 	fmadd	d25, d19, d4, d11
    14fc:	032e7603 	.inst	0x032e7603 ; undefined
    1500:	031f3c0b 	.inst	0x031f3c0b ; undefined
    1504:	032f2e73 	.inst	0x032f2e73 ; undefined
    1508:	031f3c0d 	.inst	0x031f3c0d ; undefined
    150c:	09032e78 	.inst	0x09032e78 ; undefined
    1510:	75031f3c 	.inst	0x75031f3c ; undefined
    1514:	3c0c032e 	stur	b14, [x25, #192]
    1518:	236b2c1f 	.inst	0x236b2c1f ; undefined
    151c:	231d2339 	.inst	0x231d2339 ; undefined
    1520:	207ddd03 	.inst	0x207ddd03 ; undefined
    1524:	2002a003 	.inst	0x2002a003 ; undefined
    1528:	233c0903 	.inst	0x233c0903 ; undefined
    152c:	03207403 	.inst	0x03207403 ; undefined
    1530:	21207de0 	.inst	0x21207de0 ; undefined
    1534:	24212d4c 	cmplo	p12.b, p3/z, z10.b, #4
    1538:	032f322a 	.inst	0x032f322a ; undefined
    153c:	034a02ac 	.inst	0x034a02ac ; undefined
    1540:	8403580f 	ld1b	{z15.s}, p6/z, [x0, z3.s, uxtw]
    1544:	ba032e7f 	.inst	0xba032e7f ; undefined
    1548:	03304a7e 	.inst	0x03304a7e ; undefined
    154c:	033c01c4 	.inst	0x033c01c4 ; undefined
    1550:	212e00f4 	.inst	0x212e00f4 ; undefined
    1554:	0021303e 	.inst	0x0021303e ; NYI
    1558:	41020402 	.inst	0x41020402 ; undefined
    155c:	02040200 	.inst	0x02040200 ; undefined
    1560:	2e7f8103 	umlal	v3.4s, v8.4h, v31.4h
    1564:	02040200 	.inst	0x02040200 ; undefined
    1568:	207eb903 	.inst	0x207eb903 ; undefined
    156c:	02040200 	.inst	0x02040200 ; undefined
    1570:	2001c703 	.inst	0x2001c703 ; undefined
    1574:	02040200 	.inst	0x02040200 ; undefined
    1578:	00200903 	.inst	0x00200903 ; NYI
    157c:	21020402 	.inst	0x21020402 ; undefined
    1580:	02040200 	.inst	0x02040200 ; undefined
    1584:	207eaf03 	.inst	0x207eaf03 ; undefined
    1588:	40212f21 	.inst	0x40212f21 ; undefined
    158c:	01d4032f 	.inst	0x01d4032f ; undefined
    1590:	e8034f4a 	.inst	0xe8034f4a ; undefined
    1594:	70039000 	adr	x0, 8797 <__bss_size+0x8791>
    1598:	2e120320 	ext	v0.8b, v25.8b, v18.8b, #0
    159c:	03827803 	.inst	0x03827803 ; undefined
    15a0:	034a7f9a 	.inst	0x034a7f9a ; undefined
    15a4:	033c00d8 	.inst	0x033c00d8 ; undefined
    15a8:	39233c18 	strb	w24, [x0, #2255]
    15ac:	03151d23 	.inst	0x03151d23 ; undefined
    15b0:	03207db0 	.inst	0x03207db0 ; undefined
    15b4:	032002d0 	.inst	0x032002d0 ; undefined
    15b8:	21207db0 	.inst	0x21207db0 ; undefined
    15bc:	24212d4c 	cmplo	p12.b, p3/z, z10.b, #4
    15c0:	032f322a 	.inst	0x032f322a ; undefined
    15c4:	4e4a02dd 	.inst	0x4e4a02dd ; undefined
    15c8:	2a211f3d 	orn	w29, w25, w1, lsl #7
    15cc:	01000302 	.inst	0x01000302 ; undefined
    15d0:	00010101 	.inst	0x00010101 ; undefined
    15d4:	e2000200 	.inst	0xe2000200 ; undefined
    15d8:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    15dc:	0d0efb01 	.inst	0x0d0efb01 ; undefined
    15e0:	01010100 	.inst	0x01010100 ; undefined
    15e4:	00000001 	.inst	0x00000001 ; undefined
    15e8:	01000001 	.inst	0x01000001 ; undefined
    15ec:	6573552f 	fnmla	z15.h, p5/m, z9.h, z19.h
    15f0:	782f7372 	lduminh	w15, w18, [x27]
    15f4:	74616862 	.inst	0x74616862 ; undefined
    15f8:	2f67616e 	umlsl	v14.4s, v11.4h, v7.h[2]
    15fc:	6a6f7250 	bics	w16, w18, w15, lsr #28
    1600:	73746365 	.inst	0x73746365 ; undefined
    1604:	4f79582f 	.inst	0x4f79582f ; undefined
    1608:	654b2f53 	.inst	0x654b2f53 ; undefined
    160c:	6c656e72 	ldnp	d18, d27, [x19, #-432]
    1610:	756f532f 	.inst	0x756f532f ; undefined
    1614:	2f656372 	umlsl	v18.4s, v27.4h, v5.h[2]
    1618:	69726550 	ldpsw	x16, x25, [x10, #-112]
    161c:	72656870 	.inst	0x72656870 ; undefined
    1620:	2f736c61 	.inst	0x2f736c61 ; undefined
    1624:	65746e49 	fnmls	z9.h, p3/m, z18.h, z20.h
    1628:	70757272 	adr	x18, ec477 <__bss_size+0xec471>
    162c:	6e6f4374 	raddhn2	v20.8h, v27.4s, v15.4s
    1630:	6c6f7274 	ldnp	d20, d28, [x19, #-272]
    1634:	0072656c 	.inst	0x0072656c ; undefined
    1638:	7273752f 	.inst	0x7273752f ; undefined
    163c:	636f6c2f 	.inst	0x636f6c2f ; undefined
    1640:	432f6c61 	.inst	0x432f6c61 ; undefined
    1644:	616c6c65 	.inst	0x616c6c65 ; undefined
    1648:	61612f72 	.inst	0x61612f72 ; undefined
    164c:	36686372 	tbz	w18, #13, 22b8 <__bss_size+0x22b2>
    1650:	6f6e2d34 	.inst	0x6f6e2d34 ; undefined
    1654:	652d656e 	.inst	0x652d656e ; undefined
    1658:	372f666c 	tbnz	w12, #5, 324 <__bss_size+0x31e>
    165c:	302e322e 	adr	x14, 5dca1 <__bss_size+0x5dc9b>
    1660:	6f6f742f 	uqshl	v15.2d, v1.2d, #47
    1664:	6168636c 	.inst	0x6168636c ; undefined
    1668:	6c2f6e69 	stnp	d9, d27, [x19, #-272]
    166c:	672f6269 	.inst	0x672f6269 ; undefined
    1670:	612f6363 	.inst	0x612f6363 ; undefined
    1674:	68637261 	.inst	0x68637261 ; undefined
    1678:	6e2d3436 	cmhi	v22.16b, v1.16b, v13.16b
    167c:	2d656e6f 	ldp	s15, s27, [x19, #-216]
    1680:	2f666c65 	.inst	0x2f666c65 ; undefined
    1684:	2e322e37 	uqsub	v23.8b, v17.8b, v18.8b
    1688:	6e692f30 	uqsub	v16.8h, v25.8h, v9.8h
    168c:	64756c63 	.inst	0x64756c63 ; undefined
    1690:	49000065 	.inst	0x49000065 ; undefined
    1694:	7265746e 	.inst	0x7265746e ; undefined
    1698:	74707572 	.inst	0x74707572 ; undefined
    169c:	746e6f43 	.inst	0x746e6f43 ; undefined
    16a0:	6c6c6f72 	ldnp	d18, d27, [x27, #-320]
    16a4:	632e7265 	.inst	0x632e7265 ; undefined
    16a8:	00000100 	.inst	0x00000100 ; undefined
    16ac:	69647473 	ldpsw	x19, x29, [x3, #-224]
    16b0:	672d746e 	.inst	0x672d746e ; undefined
    16b4:	682e6363 	.inst	0x682e6363 ; undefined
    16b8:	00000200 	.inst	0x00000200 ; undefined
    16bc:	02090000 	.inst	0x02090000 ; undefined
    16c0:	000e2f00 	.inst	0x000e2f00 ; undefined
    16c4:	ffff0000 	.inst	0xffff0000 ; undefined
    16c8:	3e591314 	.inst	0x3e591314 ; undefined
    16cc:	133e5913 	.inst	0x133e5913 ; undefined
    16d0:	0001023d 	.inst	0x0001023d ; undefined
    16d4:	00f10101 	.inst	0x00f10101 ; undefined
    16d8:	00020000 	.inst	0x00020000 ; undefined
    16dc:	000000d2 	.inst	0x000000d2 ; undefined
    16e0:	0efb0104 	.inst	0x0efb0104 ; undefined
    16e4:	0101000d 	.inst	0x0101000d ; undefined
    16e8:	00000101 	.inst	0x00000101 ; undefined
    16ec:	00000100 	.inst	0x00000100 ; undefined
    16f0:	73552f01 	.inst	0x73552f01 ; undefined
    16f4:	2f737265 	.inst	0x2f737265 ; undefined
    16f8:	61686278 	.inst	0x61686278 ; undefined
    16fc:	67616e74 	.inst	0x67616e74 ; undefined
    1700:	6f72502f 	.inst	0x6f72502f ; undefined
    1704:	7463656a 	.inst	0x7463656a ; undefined
    1708:	79582f73 	ldrh	w19, [x27, #3094]
    170c:	4b2f534f 	sub	w15, w26, w15, uxtw #4
    1710:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
    1714:	6f532f6c 	.inst	0x6f532f6c ; undefined
    1718:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
    171c:	7265502f 	.inst	0x7265502f ; undefined
    1720:	65687069 	fnmls	z9.h, p4/m, z3.h, z8.h
    1724:	736c6172 	.inst	0x736c6172 ; undefined
    1728:	7379532f 	.inst	0x7379532f ; undefined
    172c:	546d6574 	.inst	0x546d6574 ; undefined
    1730:	72656d69 	.inst	0x72656d69 ; undefined
    1734:	73752f00 	.inst	0x73752f00 ; undefined
    1738:	6f6c2f72 	.inst	0x6f6c2f72 ; undefined
    173c:	2f6c6163 	umlsl	v3.4s, v11.4h, v12.h[2]
    1740:	6c6c6543 	ldnp	d3, d25, [x10, #-320]
    1744:	612f7261 	.inst	0x612f7261 ; undefined
    1748:	68637261 	.inst	0x68637261 ; undefined
    174c:	6e2d3436 	cmhi	v22.16b, v1.16b, v13.16b
    1750:	2d656e6f 	ldp	s15, s27, [x19, #-216]
    1754:	2f666c65 	.inst	0x2f666c65 ; undefined
    1758:	2e322e37 	uqsub	v23.8b, v17.8b, v18.8b
    175c:	6f742f30 	.inst	0x6f742f30 ; undefined
    1760:	68636c6f 	.inst	0x68636c6f ; undefined
    1764:	2f6e6961 	umlsl	v1.4s, v11.4h, v14.h[6]
    1768:	2f62696c 	umlsl	v12.4s, v11.4h, v2.h[6]
    176c:	2f636367 	umlsl	v7.4s, v27.4h, v3.h[2]
    1770:	63726161 	.inst	0x63726161 ; undefined
    1774:	2d343668 	stp	s8, s13, [x19, #-96]
    1778:	656e6f6e 	fnmls	z14.h, p3/m, z27.h, z14.h
    177c:	666c652d 	.inst	0x666c652d ; undefined
    1780:	322e372f 	orr	w15, w25, #0xfffc0000
    1784:	692f302e 	.inst	0x692f302e ; undefined
    1788:	756c636e 	.inst	0x756c636e ; undefined
    178c:	00006564 	.inst	0x00006564 ; undefined
    1790:	74737953 	.inst	0x74737953 ; undefined
    1794:	69546d65 	ldpsw	x5, x27, [x11, #160]
    1798:	2e72656d 	umax	v13.4h, v11.4h, v18.4h
    179c:	00010063 	.inst	0x00010063 ; undefined
    17a0:	64747300 	.inst	0x64747300 ; undefined
    17a4:	2d746e69 	ldp	s9, s27, [x19, #-96]
    17a8:	2e636367 	rsubhn	v7.4h, v27.4s, v3.4s
    17ac:	00020068 	.inst	0x00020068 ; undefined
    17b0:	09000000 	.inst	0x09000000 ; undefined
    17b4:	0e2f5002 	sabal	v2.8h, v0.8b, v15.8b
    17b8:	ff000000 	.inst	0xff000000 ; undefined
    17bc:	831314ff 	.inst	0x831314ff ; undefined
    17c0:	4c4b134c 	.inst	0x4c4b134c ; undefined
    17c4:	02023d13 	.inst	0x02023d13 ; undefined
    17c8:	b4010100 	cbz	x0, 37e8 <__bss_size+0x37e2>
    17cc:	02000001 	.inst	0x02000001 ; undefined
    17d0:	00014400 	.inst	0x00014400 ; undefined
    17d4:	fb010400 	.inst	0xfb010400 ; undefined
    17d8:	01000d0e 	.inst	0x01000d0e ; undefined
    17dc:	00010101 	.inst	0x00010101 ; undefined
    17e0:	00010000 	.inst	0x00010000 ; undefined
    17e4:	552f0100 	.inst	0x552f0100 ; undefined
    17e8:	73726573 	.inst	0x73726573 ; undefined
    17ec:	6862782f 	.inst	0x6862782f ; undefined
    17f0:	616e7461 	.inst	0x616e7461 ; undefined
    17f4:	72502f67 	.inst	0x72502f67 ; undefined
    17f8:	63656a6f 	.inst	0x63656a6f ; undefined
    17fc:	582f7374 	ldr	x20, 60668 <__bss_size+0x60662>
    1800:	2f534f79 	.inst	0x2f534f79 ; undefined
    1804:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
    1808:	532f6c65 	.inst	0x532f6c65 ; undefined
    180c:	6372756f 	.inst	0x6372756f ; undefined
    1810:	63532f65 	.inst	0x63532f65 ; undefined
    1814:	75646568 	.inst	0x75646568 ; undefined
    1818:	0072656c 	.inst	0x0072656c ; undefined
    181c:	7273752f 	.inst	0x7273752f ; undefined
    1820:	636f6c2f 	.inst	0x636f6c2f ; undefined
    1824:	432f6c61 	.inst	0x432f6c61 ; undefined
    1828:	616c6c65 	.inst	0x616c6c65 ; undefined
    182c:	61612f72 	.inst	0x61612f72 ; undefined
    1830:	36686372 	tbz	w18, #13, 249c <__bss_size+0x2496>
    1834:	6f6e2d34 	.inst	0x6f6e2d34 ; undefined
    1838:	652d656e 	.inst	0x652d656e ; undefined
    183c:	372f666c 	tbnz	w12, #5, 508 <__bss_size+0x502>
    1840:	302e322e 	adr	x14, 5de85 <__bss_size+0x5de7f>
    1844:	6f6f742f 	uqshl	v15.2d, v1.2d, #47
    1848:	6168636c 	.inst	0x6168636c ; undefined
    184c:	6c2f6e69 	stnp	d9, d27, [x19, #-272]
    1850:	672f6269 	.inst	0x672f6269 ; undefined
    1854:	612f6363 	.inst	0x612f6363 ; undefined
    1858:	68637261 	.inst	0x68637261 ; undefined
    185c:	6e2d3436 	cmhi	v22.16b, v1.16b, v13.16b
    1860:	2d656e6f 	ldp	s15, s27, [x19, #-216]
    1864:	2f666c65 	.inst	0x2f666c65 ; undefined
    1868:	2e322e37 	uqsub	v23.8b, v17.8b, v18.8b
    186c:	6e692f30 	uqsub	v16.8h, v25.8h, v9.8h
    1870:	64756c63 	.inst	0x64756c63 ; undefined
    1874:	552f0065 	.inst	0x552f0065 ; undefined
    1878:	73726573 	.inst	0x73726573 ; undefined
    187c:	6862782f 	.inst	0x6862782f ; undefined
    1880:	616e7461 	.inst	0x616e7461 ; undefined
    1884:	72502f67 	.inst	0x72502f67 ; undefined
    1888:	63656a6f 	.inst	0x63656a6f ; undefined
    188c:	582f7374 	ldr	x20, 606f8 <__bss_size+0x606f2>
    1890:	2f534f79 	.inst	0x2f534f79 ; undefined
    1894:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
    1898:	482f6c65 	.inst	0x482f6c65 ; undefined
    189c:	65646165 	fnmls	z5.h, p0/m, z11.h, z4.h
    18a0:	00007372 	.inst	0x00007372 ; undefined
    18a4:	65726854 	fnmls	z20.h, p2/m, z2.h, z18.h
    18a8:	6e696461 	umax	v1.8h, v3.8h, v9.8h
    18ac:	00632e67 	.inst	0x00632e67 ; undefined
    18b0:	73000001 	.inst	0x73000001 ; undefined
    18b4:	6e696474 	umax	v20.8h, v3.8h, v9.8h
    18b8:	63672d74 	.inst	0x63672d74 ; undefined
    18bc:	00682e63 	.inst	0x00682e63 ; undefined
    18c0:	46000002 	.inst	0x46000002 ; undefined
    18c4:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
    18c8:	66667542 	.inst	0x66667542 ; undefined
    18cc:	682e7265 	.inst	0x682e7265 ; undefined
    18d0:	00000300 	.inst	0x00000300 ; undefined
    18d4:	74726956 	.inst	0x74726956 ; undefined
    18d8:	4d6c6175 	.inst	0x4d6c6175 ; undefined
    18dc:	726f6d65 	.inst	0x726f6d65 ; undefined
    18e0:	00682e79 	.inst	0x00682e79 ; undefined
    18e4:	41000003 	.inst	0x41000003 ; undefined
    18e8:	69544d52 	ldpsw	x18, x19, [x10, #160]
    18ec:	2e72656d 	umax	v13.4h, v11.4h, v18.4h
    18f0:	00030068 	.inst	0x00030068 ; undefined
    18f4:	61724600 	.inst	0x61724600 ; undefined
    18f8:	7542656d 	.inst	0x7542656d ; undefined
    18fc:	72656666 	.inst	0x72656666 ; undefined
    1900:	70617247 	adr	x7, c474b <__bss_size+0xc4745>
    1904:	73636968 	.inst	0x73636968 ; undefined
    1908:	0300682e 	.inst	0x0300682e ; undefined
    190c:	654d0000 	fadd	z0.h, z0.h, z13.h
    1910:	682e756e 	.inst	0x682e756e ; undefined
    1914:	00000300 	.inst	0x00000300 ; undefined
    1918:	02090000 	.inst	0x02090000 ; undefined
    191c:	000e2fc0 	.inst	0x000e2fc0 ; undefined
    1920:	ffff0000 	.inst	0xffff0000 ; undefined
    1924:	00011a03 	.inst	0x00011a03 ; undefined
    1928:	30010402 	adr	x2, 39a9 <__bss_size+0x39a3>
    192c:	2f667a03 	.inst	0x2f667a03 ; undefined
    1930:	002e0903 	.inst	0x002e0903 ; NYI
    1934:	4c010402 	.inst	0x4c010402 ; undefined
    1938:	01040200 	.inst	0x01040200 ; undefined
    193c:	02006a2f 	.inst	0x02006a2f ; undefined
    1940:	00300104 	.inst	0x00300104 ; NYI
    1944:	2f010402 	mvni	v2.2s, #0x20
    1948:	01040200 	.inst	0x01040200 ; undefined
    194c:	0402002f 	.inst	0x0402002f ; undefined
    1950:	02002f01 	.inst	0x02002f01 ; undefined
    1954:	6a2f0104 	bics	w4, w8, w15
    1958:	3d312b23 	str	b3, [x25, #3146]
    195c:	1d232c3e 	.inst	0x1d232c3e ; undefined
    1960:	09032122 	.inst	0x09032122 ; undefined
    1964:	2077033c 	.inst	0x2077033c ; undefined
    1968:	03200903 	.inst	0x03200903 ; undefined
    196c:	60132e09 	.inst	0x60132e09 ; undefined
    1970:	4d1d2340 	.inst	0x4d1d2340 ; undefined
    1974:	71034b4b 	subs	w11, w26, #0xd2
    1978:	211f4b2e 	.inst	0x211f4b2e ; undefined
    197c:	0202212d 	.inst	0x0202212d ; undefined
    1980:	11010100 	add	w0, w8, #0x40
    1984:	02000002 	.inst	0x02000002 ; undefined
    1988:	00011600 	.inst	0x00011600 ; undefined
    198c:	fb010400 	.inst	0xfb010400 ; undefined
    1990:	01000d0e 	.inst	0x01000d0e ; undefined
    1994:	00010101 	.inst	0x00010101 ; undefined
    1998:	00010000 	.inst	0x00010000 ; undefined
    199c:	552f0100 	.inst	0x552f0100 ; undefined
    19a0:	73726573 	.inst	0x73726573 ; undefined
    19a4:	6862782f 	.inst	0x6862782f ; undefined
    19a8:	616e7461 	.inst	0x616e7461 ; undefined
    19ac:	72502f67 	.inst	0x72502f67 ; undefined
    19b0:	63656a6f 	.inst	0x63656a6f ; undefined
    19b4:	582f7374 	ldr	x20, 60820 <__bss_size+0x6081a>
    19b8:	2f534f79 	.inst	0x2f534f79 ; undefined
    19bc:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
    19c0:	532f6c65 	.inst	0x532f6c65 ; undefined
    19c4:	6372756f 	.inst	0x6372756f ; undefined
    19c8:	69562f65 	ldpsw	x5, x11, [x27, #176]
    19cc:	61757472 	.inst	0x61757472 ; undefined
    19d0:	6d654d6c 	ldp	d12, d19, [x11, #-432]
    19d4:	0079726f 	.inst	0x0079726f ; undefined
    19d8:	7273752f 	.inst	0x7273752f ; undefined
    19dc:	636f6c2f 	.inst	0x636f6c2f ; undefined
    19e0:	432f6c61 	.inst	0x432f6c61 ; undefined
    19e4:	616c6c65 	.inst	0x616c6c65 ; undefined
    19e8:	61612f72 	.inst	0x61612f72 ; undefined
    19ec:	36686372 	tbz	w18, #13, 2658 <__bss_size+0x2652>
    19f0:	6f6e2d34 	.inst	0x6f6e2d34 ; undefined
    19f4:	652d656e 	.inst	0x652d656e ; undefined
    19f8:	372f666c 	tbnz	w12, #5, 6c4 <__bss_size+0x6be>
    19fc:	302e322e 	adr	x14, 5e041 <__bss_size+0x5e03b>
    1a00:	6f6f742f 	uqshl	v15.2d, v1.2d, #47
    1a04:	6168636c 	.inst	0x6168636c ; undefined
    1a08:	6c2f6e69 	stnp	d9, d27, [x19, #-272]
    1a0c:	672f6269 	.inst	0x672f6269 ; undefined
    1a10:	612f6363 	.inst	0x612f6363 ; undefined
    1a14:	68637261 	.inst	0x68637261 ; undefined
    1a18:	6e2d3436 	cmhi	v22.16b, v1.16b, v13.16b
    1a1c:	2d656e6f 	ldp	s15, s27, [x19, #-216]
    1a20:	2f666c65 	.inst	0x2f666c65 ; undefined
    1a24:	2e322e37 	uqsub	v23.8b, v17.8b, v18.8b
    1a28:	6e692f30 	uqsub	v16.8h, v25.8h, v9.8h
    1a2c:	64756c63 	.inst	0x64756c63 ; undefined
    1a30:	552f0065 	.inst	0x552f0065 ; undefined
    1a34:	73726573 	.inst	0x73726573 ; undefined
    1a38:	6862782f 	.inst	0x6862782f ; undefined
    1a3c:	616e7461 	.inst	0x616e7461 ; undefined
    1a40:	72502f67 	.inst	0x72502f67 ; undefined
    1a44:	63656a6f 	.inst	0x63656a6f ; undefined
    1a48:	582f7374 	ldr	x20, 608b4 <__bss_size+0x608ae>
    1a4c:	2f534f79 	.inst	0x2f534f79 ; undefined
    1a50:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
    1a54:	482f6c65 	.inst	0x482f6c65 ; undefined
    1a58:	65646165 	fnmls	z5.h, p0/m, z11.h, z4.h
    1a5c:	00007372 	.inst	0x00007372 ; undefined
    1a60:	74726956 	.inst	0x74726956 ; undefined
    1a64:	4d6c6175 	.inst	0x4d6c6175 ; undefined
    1a68:	726f6d65 	.inst	0x726f6d65 ; undefined
    1a6c:	00632e79 	.inst	0x00632e79 ; undefined
    1a70:	73000001 	.inst	0x73000001 ; undefined
    1a74:	6e696474 	umax	v20.8h, v3.8h, v9.8h
    1a78:	63672d74 	.inst	0x63672d74 ; undefined
    1a7c:	00682e63 	.inst	0x00682e63 ; undefined
    1a80:	43000002 	.inst	0x43000002 ; undefined
    1a84:	6f736e6f 	.inst	0x6f736e6f ; undefined
    1a88:	4f49656c 	.inst	0x4f49656c ; undefined
    1a8c:	0300682e 	.inst	0x0300682e ; undefined
    1a90:	78450000 	ldurh	w0, [x0, #80]
    1a94:	74706563 	.inst	0x74706563 ; undefined
    1a98:	736e6f69 	.inst	0x736e6f69 ; undefined
    1a9c:	0300682e 	.inst	0x0300682e ; undefined
    1aa0:	00000000 	.inst	0x00000000 ; undefined
    1aa4:	31500209 	adds	w9, w16, #0x400, lsl #12
    1aa8:	0000000e 	.inst	0x0000000e ; undefined
    1aac:	1d03ffff 	.inst	0x1d03ffff ; undefined
    1ab0:	30211401 	adr	x1, 43d31 <__bss_size+0x43d2b>
    1ab4:	3e21135a 	.inst	0x3e21135a ; undefined
    1ab8:	13302f13 	.inst	0x13302f13 ; undefined
    1abc:	2124302f 	.inst	0x2124302f ; undefined
    1ac0:	032a321b 	.inst	0x032a321b ; undefined
    1ac4:	1203206e 	and	w14, w3, #0xe000003f
    1ac8:	206f0320 	.inst	0x206f0320 ; undefined
    1acc:	2e100321 	ext	v1.8b, v25.8b, v16.8b, #0
    1ad0:	03207003 	.inst	0x03207003 ; undefined
    1ad4:	1b212014 	.inst	0x1b212014 ; undefined
    1ad8:	20690325 	.inst	0x20690325 ; undefined
    1adc:	18032f21 	ldr	w1, 80c0 <__bss_size+0x80ba>
    1ae0:	6503214a 	.inst	0x6503214a ; undefined
    1ae4:	201a0320 	.inst	0x201a0320 ; undefined
    1ae8:	20660321 	.inst	0x20660321 ; undefined
    1aec:	4a1c032f 	eor	w15, w25, w28
    1af0:	20610321 	.inst	0x20610321 ; undefined
    1af4:	03201e03 	.inst	0x03201e03 ; undefined
    1af8:	1e032063 	.inst	0x1e032063 ; undefined
    1afc:	2e630320 	uaddl	v0.4s, v25.4h, v3.4h
    1b00:	214a2003 	.inst	0x214a2003 ; undefined
    1b04:	03205d03 	.inst	0x03205d03 ; undefined
    1b08:	5f032022 	.inst	0x5f032022 ; undefined
    1b0c:	20220320 	.inst	0x20220320 ; undefined
    1b10:	032e5f03 	.inst	0x032e5f03 ; undefined
    1b14:	22214a24 	.inst	0x22214a24 ; undefined
    1b18:	232b222c 	.inst	0x232b222c ; undefined
    1b1c:	594b5921 	.inst	0x594b5921 ; undefined
    1b20:	4b4b4b59 	sub	w25, w26, w11, lsr #18
    1b24:	4b4b4b4b 	sub	w11, w26, w11, lsr #18
    1b28:	3165214b 	adds	w11, w10, #0x948, lsl #12
    1b2c:	1e224b13 	fmax	s19, s24, s2
    1b30:	2b312122 	adds	w2, w9, w17, uxth
    1b34:	79034b23 	strh	w3, [x25, #420]
    1b38:	7a032620 	.inst	0x7a032620 ; undefined
    1b3c:	30592620 	adr	x0, b4001 <__bss_size+0xb3ffb>
    1b40:	303a2214 	adr	x20, 75f81 <__bss_size+0x75f7b>
    1b44:	1f213e3d 	fnmadd	s29, s17, s1, s15
    1b48:	4021334b 	.inst	0x4021334b ; undefined
    1b4c:	033f401c 	.inst	0x033f401c ; undefined
    1b50:	03587fb2 	.inst	0x03587fb2 ; undefined
    1b54:	033c00d0 	.inst	0x033c00d0 ; undefined
    1b58:	03207fb0 	.inst	0x03207fb0 ; undefined
    1b5c:	032e00d9 	.inst	0x032e00d9 ; undefined
    1b60:	332c2077 	.inst	0x332c2077 ; undefined
    1b64:	2e11031b 	ext	v27.8b, v24.8b, v17.8b, #0
    1b68:	21303a3e 	.inst	0x21303a3e ; undefined
    1b6c:	4b4b4b4b 	sub	w11, w26, w11, lsr #18
    1b70:	5803314b 	ldr	x11, 8198 <__bss_size+0x8192>
    1b74:	582a0366 	ldr	x6, 55be0 <__bss_size+0x55bda>
    1b78:	2042032f 	.inst	0x2042032f ; undefined
    1b7c:	3f2f224b 	.inst	0x3f2f224b ; undefined
    1b80:	79032241 	strh	w1, [x18, #400]
    1b84:	251b253c 	cmple	p12.b, p1/z, z9.b, #-5
    1b88:	20790322 	.inst	0x20790322 ; undefined
    1b8c:	2e330327 	uaddl	v7.8h, v25.8b, v19.8b
    1b90:	022e4003 	.inst	0x022e4003 ; undefined
    1b94:	01010004 	.inst	0x01010004 ; undefined
    1b98:	00000090 	.inst	0x00000090 ; undefined
    1b9c:	004e0002 	.inst	0x004e0002 ; undefined
    1ba0:	01040000 	.inst	0x01040000 ; undefined
    1ba4:	000d0efb 	.inst	0x000d0efb ; undefined
    1ba8:	01010101 	.inst	0x01010101 ; undefined
    1bac:	01000000 	.inst	0x01000000 ; undefined
    1bb0:	2f010000 	.inst	0x2f010000 ; undefined
    1bb4:	72657355 	.inst	0x72657355 ; undefined
    1bb8:	62782f73 	.inst	0x62782f73 ; undefined
    1bbc:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
    1bc0:	502f6761 	adr	x1, 608ae <__bss_size+0x608a8>
    1bc4:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
    1bc8:	2f737463 	.inst	0x2f737463 ; undefined
    1bcc:	534f7958 	.inst	0x534f7958 ; undefined
    1bd0:	72654b2f 	.inst	0x72654b2f ; undefined
    1bd4:	2f6c656e 	.inst	0x2f6c656e ; undefined
    1bd8:	72756f53 	.inst	0x72756f53 ; undefined
    1bdc:	432f6563 	.inst	0x432f6563 ; undefined
    1be0:	0065726f 	.inst	0x0065726f ; undefined
    1be4:	6f6f4200 	mls	v0.8h, v16.8h, v15.h[2]
    1be8:	00532e74 	.inst	0x00532e74 ; undefined
    1bec:	00000001 	.inst	0x00000001 ; undefined
    1bf0:	00020900 	.inst	0x00020900 ; undefined
    1bf4:	00000e00 	.inst	0x00000e00 ; undefined
    1bf8:	16ffff00 	b	fffffffffc0017f8 <__end+0xfffffbf1ae98>
    1bfc:	21212121 	.inst	0x21212121 ; undefined
    1c00:	21212121 	.inst	0x21212121 ; undefined
    1c04:	21212121 	.inst	0x21212121 ; undefined
    1c08:	21212121 	.inst	0x21212121 ; undefined
    1c0c:	21212121 	.inst	0x21212121 ; undefined
    1c10:	21212121 	.inst	0x21212121 ; undefined
    1c14:	21212121 	.inst	0x21212121 ; undefined
    1c18:	21232121 	.inst	0x21232121 ; undefined
    1c1c:	25212323 	.inst	0x25212323 ; undefined
    1c20:	21212121 	.inst	0x21212121 ; undefined
    1c24:	02222321 	.inst	0x02222321 ; undefined
    1c28:	01010005 	.inst	0x01010005 ; undefined
    1c2c:	00000077 	.inst	0x00000077 ; undefined
    1c30:	00560002 	.inst	0x00560002 ; undefined
    1c34:	01040000 	.inst	0x01040000 ; undefined
    1c38:	000d0efb 	.inst	0x000d0efb ; undefined
    1c3c:	01010101 	.inst	0x01010101 ; undefined
    1c40:	01000000 	.inst	0x01000000 ; undefined
    1c44:	2f010000 	.inst	0x2f010000 ; undefined
    1c48:	72657355 	.inst	0x72657355 ; undefined
    1c4c:	62782f73 	.inst	0x62782f73 ; undefined
    1c50:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
    1c54:	502f6761 	adr	x1, 60942 <__bss_size+0x6093c>
    1c58:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
    1c5c:	2f737463 	.inst	0x2f737463 ; undefined
    1c60:	534f7958 	.inst	0x534f7958 ; undefined
    1c64:	72654b2f 	.inst	0x72654b2f ; undefined
    1c68:	2f6c656e 	.inst	0x2f6c656e ; undefined
    1c6c:	72756f53 	.inst	0x72756f53 ; undefined
    1c70:	432f6563 	.inst	0x432f6563 ; undefined
    1c74:	0065726f 	.inst	0x0065726f ; undefined
    1c78:	69614d00 	ldpsw	x0, x19, [x8, #-248]
    1c7c:	7373416e 	.inst	0x7373416e ; undefined
    1c80:	6c626d65 	ldnp	d5, d27, [x11, #-480]
    1c84:	00532e79 	.inst	0x00532e79 ; undefined
    1c88:	00000001 	.inst	0x00000001 ; undefined
    1c8c:	08020900 	stxrb	w2, w0, [x8]
    1c90:	00000e36 	.inst	0x00000e36 ; undefined
    1c94:	16ffff00 	b	fffffffffc001894 <__end+0xfffffbf1af34>
    1c98:	24212121 	cmplo	p1.b, p0/z, z9.b, #4
    1c9c:	21242121 	.inst	0x21242121 ; undefined
    1ca0:	01022121 	.inst	0x01022121 ; undefined
    1ca4:	e2010100 	.inst	0xe2010100 ; undefined
    1ca8:	02000000 	.inst	0x02000000 ; undefined
    1cac:	00006200 	.inst	0x00006200 ; undefined
    1cb0:	fb010400 	.inst	0xfb010400 ; undefined
    1cb4:	01000d0e 	.inst	0x01000d0e ; undefined
    1cb8:	00010101 	.inst	0x00010101 ; undefined
    1cbc:	00010000 	.inst	0x00010000 ; undefined
    1cc0:	552f0100 	.inst	0x552f0100 ; undefined
    1cc4:	73726573 	.inst	0x73726573 ; undefined
    1cc8:	6862782f 	.inst	0x6862782f ; undefined
    1ccc:	616e7461 	.inst	0x616e7461 ; undefined
    1cd0:	72502f67 	.inst	0x72502f67 ; undefined
    1cd4:	63656a6f 	.inst	0x63656a6f ; undefined
    1cd8:	582f7374 	ldr	x20, 60b44 <__bss_size+0x60b3e>
    1cdc:	2f534f79 	.inst	0x2f534f79 ; undefined
    1ce0:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
    1ce4:	532f6c65 	.inst	0x532f6c65 ; undefined
    1ce8:	6372756f 	.inst	0x6372756f ; undefined
    1cec:	78452f65 	ldrh	w5, [x27, #82]!
    1cf0:	74706563 	.inst	0x74706563 ; undefined
    1cf4:	736e6f69 	.inst	0x736e6f69 ; undefined
    1cf8:	78450000 	ldurh	w0, [x0, #80]
    1cfc:	74706563 	.inst	0x74706563 ; undefined
    1d00:	736e6f69 	.inst	0x736e6f69 ; undefined
    1d04:	65737341 	fnmls	z1.h, p4/m, z26.h, z19.h
    1d08:	796c626d 	ldrh	w13, [x19, #5680]
    1d0c:	0100532e 	.inst	0x0100532e ; undefined
    1d10:	00000000 	.inst	0x00000000 ; undefined
    1d14:	36380209 	tbz	w9, #7, 1d54 <__bss_size+0x1d4e>
    1d18:	0000000e 	.inst	0x0000000e ; undefined
    1d1c:	2116ffff 	.inst	0x2116ffff ; undefined
    1d20:	21242124 	.inst	0x21242124 ; undefined
    1d24:	21242124 	.inst	0x21242124 ; undefined
    1d28:	21242124 	.inst	0x21242124 ; undefined
    1d2c:	21242124 	.inst	0x21242124 ; undefined
    1d30:	23232328 	.inst	0x23232328 ; undefined
    1d34:	22212221 	.inst	0x22212221 ; undefined
    1d38:	22212221 	.inst	0x22212221 ; undefined
    1d3c:	22212221 	.inst	0x22212221 ; undefined
    1d40:	22212221 	.inst	0x22212221 ; undefined
    1d44:	22212221 	.inst	0x22212221 ; undefined
    1d48:	22212221 	.inst	0x22212221 ; undefined
    1d4c:	22212221 	.inst	0x22212221 ; undefined
    1d50:	23212221 	.inst	0x23212221 ; undefined
    1d54:	21232121 	.inst	0x21232121 ; undefined
    1d58:	23212321 	.inst	0x23212321 ; undefined
    1d5c:	21232323 	.inst	0x21232323 ; undefined
    1d60:	21212321 	.inst	0x21212321 ; undefined
    1d64:	21222123 	.inst	0x21222123 ; undefined
    1d68:	21222122 	.inst	0x21222122 ; undefined
    1d6c:	21222122 	.inst	0x21222122 ; undefined
    1d70:	21222122 	.inst	0x21222122 ; undefined
    1d74:	21222122 	.inst	0x21222122 ; undefined
    1d78:	21222122 	.inst	0x21222122 ; undefined
    1d7c:	21222122 	.inst	0x21222122 ; undefined
    1d80:	21222122 	.inst	0x21222122 ; undefined
    1d84:	25232323 	.inst	0x25232323 ; undefined
    1d88:	01000702 	.inst	0x01000702 ; undefined
    1d8c:	00009601 	.inst	0x00009601 ; undefined
    1d90:	5b000200 	.inst	0x5b000200 ; undefined
    1d94:	04000000 	add	z0.b, p0/m, z0.b, z0.b
    1d98:	0d0efb01 	.inst	0x0d0efb01 ; undefined
    1d9c:	01010100 	.inst	0x01010100 ; undefined
    1da0:	00000001 	.inst	0x00000001 ; undefined
    1da4:	01000001 	.inst	0x01000001 ; undefined
    1da8:	6573552f 	fnmla	z15.h, p5/m, z9.h, z19.h
    1dac:	782f7372 	lduminh	w15, w18, [x27]
    1db0:	74616862 	.inst	0x74616862 ; undefined
    1db4:	2f67616e 	umlsl	v14.4s, v11.4h, v7.h[2]
    1db8:	6a6f7250 	bics	w16, w18, w15, lsr #28
    1dbc:	73746365 	.inst	0x73746365 ; undefined
    1dc0:	4f79582f 	.inst	0x4f79582f ; undefined
    1dc4:	654b2f53 	.inst	0x654b2f53 ; undefined
    1dc8:	6c656e72 	ldnp	d18, d27, [x19, #-432]
    1dcc:	756f532f 	.inst	0x756f532f ; undefined
    1dd0:	2f656372 	umlsl	v18.4s, v27.4h, v5.h[2]
    1dd4:	65637845 	fnmls	z5.h, p6/m, z2.h, z3.h
    1dd8:	6f697470 	uqshl	v16.2d, v3.2d, #41
    1ddc:	0000736e 	.inst	0x0000736e ; undefined
    1de0:	74636556 	.inst	0x74636556 ; undefined
    1de4:	6154726f 	.inst	0x6154726f ; undefined
    1de8:	2e656c62 	umin	v2.4h, v3.4h, v5.4h
    1dec:	00010053 	.inst	0x00010053 ; undefined
    1df0:	09000000 	.inst	0x09000000 ; undefined
    1df4:	0e380002 	saddl	v2.8h, v0.8b, v24.8b
    1df8:	ff000000 	.inst	0xff000000 ; undefined
    1dfc:	212116ff 	.inst	0x212116ff ; undefined
    1e00:	1703fe02 	b	fffffffffc101608 <__end+0xfffffc01aca8>
    1e04:	e708e708 	.inst	0xe708e708 ; undefined
    1e08:	e708e708 	.inst	0xe708e708 ; undefined
    1e0c:	e708e708 	.inst	0xe708e708 ; undefined
    1e10:	e708e708 	.inst	0xe708e708 ; undefined
    1e14:	e708e708 	.inst	0xe708e708 ; undefined
    1e18:	e708e708 	.inst	0xe708e708 ; undefined
    1e1c:	e708e708 	.inst	0xe708e708 ; undefined
    1e20:	2002e708 	.inst	0x2002e708 ; undefined
    1e24:	81010100 	.inst	0x81010100 ; undefined
    1e28:	02000000 	.inst	0x02000000 ; undefined
    1e2c:	00005e00 	.inst	0x00005e00 ; undefined
    1e30:	fb010400 	.inst	0xfb010400 ; undefined
    1e34:	01000d0e 	.inst	0x01000d0e ; undefined
    1e38:	00010101 	.inst	0x00010101 ; undefined
    1e3c:	00010000 	.inst	0x00010000 ; undefined
    1e40:	552f0100 	.inst	0x552f0100 ; undefined
    1e44:	73726573 	.inst	0x73726573 ; undefined
    1e48:	6862782f 	.inst	0x6862782f ; undefined
    1e4c:	616e7461 	.inst	0x616e7461 ; undefined
    1e50:	72502f67 	.inst	0x72502f67 ; undefined
    1e54:	63656a6f 	.inst	0x63656a6f ; undefined
    1e58:	582f7374 	ldr	x20, 60cc4 <__bss_size+0x60cbe>
    1e5c:	2f534f79 	.inst	0x2f534f79 ; undefined
    1e60:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
    1e64:	532f6c65 	.inst	0x532f6c65 ; undefined
    1e68:	6372756f 	.inst	0x6372756f ; undefined
    1e6c:	69562f65 	ldpsw	x5, x11, [x27, #176]
    1e70:	61757472 	.inst	0x61757472 ; undefined
    1e74:	6d654d6c 	ldp	d12, d19, [x11, #-432]
    1e78:	0079726f 	.inst	0x0079726f ; undefined
    1e7c:	61725400 	.inst	0x61725400 ; undefined
    1e80:	616c736e 	.inst	0x616c736e ; undefined
    1e84:	6e6f6974 	.inst	0x6e6f6974 ; undefined
    1e88:	0100532e 	.inst	0x0100532e ; undefined
    1e8c:	00000000 	.inst	0x00000000 ; undefined
    1e90:	48000209 	stxrh	w0, w9, [x16]
    1e94:	0000000e 	.inst	0x0000000e ; undefined
    1e98:	2116ffff 	.inst	0x2116ffff ; undefined
    1e9c:	21212121 	.inst	0x21212121 ; undefined
    1ea0:	21242121 	.inst	0x21242121 ; undefined
    1ea4:	02212121 	.inst	0x02212121 ; undefined
    1ea8:	01010006 	.inst	0x01010006 ; undefined

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	6d617266 	ldp	d6, d28, [x19, #-496]
       4:	75625f65 	.inst	0x75625f65 ; undefined
       8:	72656666 	.inst	0x72656666 ; undefined
       c:	7968705f 	ldrh	wzr, [x2, #5176]
      10:	61636973 	.inst	0x61636973 ; undefined
      14:	61625f6c 	.inst	0x61625f6c ; undefined
      18:	615f6573 	.inst	0x615f6573 ; undefined
      1c:	65726464 	fnmls	z4.h, p1/m, z3.h, z18.h
      20:	66007373 	.inst	0x66007373 ; undefined
      24:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
      28:	6675625f 	.inst	0x6675625f ; undefined
      2c:	5f726566 	.inst	0x5f726566 ; undefined
      30:	63746970 	.inst	0x63746970 ; undefined
      34:	61750068 	.inst	0x61750068 ; undefined
      38:	6f5f7472 	uqshl	v18.2d, v3.2d, #31
      3c:	75707475 	.inst	0x75707475 ; undefined
      40:	72660074 	.inst	0x72660074 ; undefined
      44:	5f656d61 	.inst	0x5f656d61 ; undefined
      48:	66667562 	.inst	0x66667562 ; undefined
      4c:	765f7265 	.inst	0x765f7265 ; undefined
      50:	75747269 	.inst	0x75747269 ; undefined
      54:	625f6c61 	.inst	0x625f6c61 ; undefined
      58:	5f657361 	sqdmlsl	s1, h27, v5.h[2]
      5c:	72646461 	.inst	0x72646461 ; undefined
      60:	00737365 	.inst	0x00737365 ; undefined
      64:	20554e47 	.inst	0x20554e47 ; undefined
      68:	20313143 	.inst	0x20313143 ; undefined
      6c:	2e322e37 	uqsub	v23.8b, v17.8b, v18.8b
      70:	6d2d2030 	stp	d16, d8, [x1, #-304]
      74:	3d757063 	ldr	b3, [x3, #3420]
      78:	74726f63 	.inst	0x74726f63 ; undefined
      7c:	612d7865 	.inst	0x612d7865 ; undefined
      80:	6e2b3335 	usubw2	v21.8h, v25.8h, v11.16b
      84:	2070666f 	.inst	0x2070666f ; undefined
      88:	696c6d2d 	ldpsw	x13, x27, [x9, #-160]
      8c:	656c7474 	fnmls	z20.h, p5/m, z3.h, z12.h
      90:	646e652d 	.inst	0x646e652d ; undefined
      94:	206e6169 	.inst	0x206e6169 ; undefined
      98:	62616d2d 	.inst	0x62616d2d ; undefined
      9c:	706c3d69 	adr	x9, d884b <__bss_size+0xd8845>
      a0:	2d203436 	stp	s22, s13, [x1, #-256]
      a4:	672d2067 	.inst	0x672d2067 ; undefined
      a8:	334f2d20 	.inst	0x334f2d20 ; undefined
      ac:	74732d20 	.inst	0x74732d20 ; undefined
      b0:	6e673d64 	cmhs	v4.8h, v11.8h, v7.8h
      b4:	20313175 	.inst	0x20313175 ; undefined
      b8:	7266662d 	.inst	0x7266662d ; undefined
      bc:	74736565 	.inst	0x74736565 ; undefined
      c0:	69646e61 	ldpsw	x1, x27, [x19, #-224]
      c4:	5f00676e 	.inst	0x5f00676e ; undefined
      c8:	5f72675f 	.inst	0x5f72675f ; undefined
      cc:	00706f74 	.inst	0x00706f74 ; undefined
      d0:	6d617266 	ldp	d6, d28, [x19, #-496]
      d4:	75625f65 	.inst	0x75625f65 ; undefined
      d8:	72656666 	.inst	0x72656666 ; undefined
      dc:	6469775f 	.inst	0x6469775f ; undefined
      e0:	70006874 	adr	x20, def <__bss_size+0xde9>
      e4:	5f687475 	sqshl	d21, d3, #40
      e8:	75003436 	.inst	0x75003436 ; undefined
      ec:	36746e69 	tbz	w9, #14, ffffffffffff8eb8 <__end+0xfffffff12558>
      f0:	00745f34 	.inst	0x00745f34 ; undefined
      f4:	6e697270 	uabdl2	v16.4s, v19.8h, v9.8h
      f8:	006e6c74 	.inst	0x006e6c74 ; undefined
      fc:	6e675f5f 	uqrshl	v31.8h, v26.8h, v7.8h
     100:	765f6375 	.inst	0x765f6375 ; undefined
     104:	696c5f61 	ldpsw	x1, x23, [x27, #-160]
     108:	5f007473 	.inst	0x5f007473 ; undefined
     10c:	5f61765f 	sqshl	d31, d18, #33
     110:	7473696c 	.inst	0x7473696c ; undefined
     114:	736e7500 	.inst	0x736e7500 ; undefined
     118:	656e6769 	fnmls	z9.h, p1/m, z27.h, z14.h
     11c:	68632064 	.inst	0x68632064 ; undefined
     120:	67007261 	.inst	0x67007261 ; undefined
     124:	00637465 	.inst	0x00637465 ; undefined
     128:	676e6f6c 	.inst	0x676e6f6c ; undefined
     12c:	736e7520 	.inst	0x736e7520 ; undefined
     130:	656e6769 	fnmls	z9.h, p1/m, z27.h, z14.h
     134:	6e692064 	usubl2	v4.4s, v3.8h, v9.8h
     138:	68730074 	.inst	0x68730074 ; undefined
     13c:	2074726f 	.inst	0x2074726f ; undefined
     140:	69736e75 	ldpsw	x21, x27, [x19, #-104]
     144:	64656e67 	.inst	0x64656e67 ; undefined
     148:	746e6920 	.inst	0x746e6920 ; undefined
     14c:	74757000 	.inst	0x74757000 ; undefined
     150:	6f660077 	mla	v23.8h, v3.8h, v6.h[2]
     154:	74616d72 	.inst	0x74616d72 ; undefined
     158:	675f5f00 	.inst	0x675f5f00 ; undefined
     15c:	666f5f72 	.inst	0x666f5f72 ; undefined
     160:	62007366 	.inst	0x62007366 ; undefined
     164:	00657361 	.inst	0x00657361 ; undefined
     168:	69676964 	ldpsw	x4, x26, [x11, #-200]
     16c:	61750074 	.inst	0x61750074 ; undefined
     170:	695f7472 	ldpsw	x18, x29, [x3, #248]
     174:	7475706e 	.inst	0x7475706e ; undefined
     178:	61726600 	.inst	0x61726600 ; undefined
     17c:	625f656d 	.inst	0x625f656d ; undefined
     180:	65666675 	fnmls	z21.h, p1/m, z19.h, z6.h
     184:	65685f72 	fnmla	z18.h, p7/m, z27.h, z8.h
     188:	74686769 	.inst	0x74686769 ; undefined
     18c:	73552f00 	.inst	0x73552f00 ; undefined
     190:	2f737265 	.inst	0x2f737265 ; undefined
     194:	61686278 	.inst	0x61686278 ; undefined
     198:	67616e74 	.inst	0x67616e74 ; undefined
     19c:	6f72502f 	.inst	0x6f72502f ; undefined
     1a0:	7463656a 	.inst	0x7463656a ; undefined
     1a4:	79582f73 	ldrh	w19, [x27, #3094]
     1a8:	4b2f534f 	sub	w15, w26, w15, uxtw #4
     1ac:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
     1b0:	6f532f6c 	.inst	0x6f532f6c ; undefined
     1b4:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
     1b8:	6e6f432f 	raddhn2	v15.8h, v25.4s, v15.4s
     1bc:	656c6f73 	fnmls	z19.h, p3/m, z27.h, z12.h
     1c0:	432f4f49 	.inst	0x432f4f49 ; undefined
     1c4:	6f736e6f 	.inst	0x6f736e6f ; undefined
     1c8:	4f49656c 	.inst	0x4f49656c ; undefined
     1cc:	5f00632e 	.inst	0x5f00632e ; undefined
     1d0:	5f72765f 	sqshl	d31, d18, #50
     1d4:	7366666f 	.inst	0x7366666f ; undefined
     1d8:	61726600 	.inst	0x61726600 ; undefined
     1dc:	625f656d 	.inst	0x625f656d ; undefined
     1e0:	65666675 	fnmls	z21.h, p1/m, z19.h, z6.h
     1e4:	69735f72 	ldpsw	x18, x23, [x27, #-104]
     1e8:	6e00657a 	.inst	0x6e00657a ; undefined
     1ec:	00706d75 	.inst	0x00706d75 ; undefined
     1f0:	6e697270 	uabdl2	v16.4s, v19.8h, v9.8h
     1f4:	73006674 	.inst	0x73006674 ; undefined
     1f8:	6c756f68 	ldnp	d8, d27, [x27, #-176]
     1fc:	72705f64 	.inst	0x72705f64 ; undefined
     200:	00746e69 	.inst	0x00746e69 ; undefined
     204:	726f6873 	.inst	0x726f6873 ; undefined
     208:	6e692074 	usubl2	v20.4s, v3.8h, v9.8h
     20c:	75700074 	.inst	0x75700074 ; undefined
     210:	72747374 	.inst	0x72747374 ; undefined
     214:	61726600 	.inst	0x61726600 ; undefined
     218:	625f656d 	.inst	0x625f656d ; undefined
     21c:	65666675 	fnmls	z21.h, p1/m, z19.h, z6.h
     220:	65645f72 	fnmla	z18.h, p7/m, z27.h, z4.h
     224:	00687470 	.inst	0x00687470 ; undefined
     228:	72765f5f 	.inst	0x72765f5f ; undefined
     22c:	706f745f 	adr	xzr, df0b7 <__bss_size+0xdf0b1>
     230:	6e697500 	uabd	v0.8h, v8.8h, v9.8h
     234:	5f323374 	.inst	0x5f323374 ; undefined
     238:	6f6c0074 	mla	v20.8h, v3.8h, v12.h[2]
     23c:	6920676e 	.inst	0x6920676e ; undefined
     240:	6e00746e 	.inst	0x6e00746e ; undefined
     244:	696c7765 	ldpsw	x5, x29, [x27, #-160]
     248:	2f00656e 	mvni	v14.2s, #0xb, lsl #24
     24c:	72657355 	.inst	0x72657355 ; undefined
     250:	62782f73 	.inst	0x62782f73 ; undefined
     254:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     258:	502f6761 	adr	x1, 5ef46 <__bss_size+0x5ef40>
     25c:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     260:	2f737463 	.inst	0x2f737463 ; undefined
     264:	534f7958 	.inst	0x534f7958 ; undefined
     268:	72654b2f 	.inst	0x72654b2f ; undefined
     26c:	2f6c656e 	.inst	0x2f6c656e ; undefined
     270:	6c697562 	ldnp	d2, d29, [x11, #-368]
     274:	69750064 	ldpsw	x4, x0, [x3, #-88]
     278:	5f006132 	.inst	0x5f006132 ; undefined
     27c:	6174735f 	.inst	0x6174735f ; undefined
     280:	73006b63 	.inst	0x73006b63 ; undefined
     284:	765f7465 	.inst	0x765f7465 ; undefined
     288:	6f746365 	umlsl2	v5.4s, v27.8h, v4.h[3]
     28c:	61745f72 	.inst	0x61745f72 ; undefined
     290:	00656c62 	.inst	0x00656c62 ; undefined
     294:	6d656d76 	ldp	d22, d27, [x11, #-432]
     298:	696e695f 	ldpsw	xzr, x26, [x10, #-144]
     29c:	68740074 	.inst	0x68740074 ; undefined
     2a0:	64616572 	.inst	0x64616572 ; undefined
     2a4:	6900305f 	.inst	0x6900305f ; undefined
     2a8:	655f7172 	fcmne	p2.h, p4/z, z11.h, z31.h
     2ac:	6c62616e 	ldnp	d14, d24, [x11, #-480]
     2b0:	72660065 	.inst	0x72660065 ; undefined
     2b4:	5f656d61 	.inst	0x5f656d61 ; undefined
     2b8:	66667562 	.inst	0x66667562 ; undefined
     2bc:	635f7265 	.inst	0x635f7265 ; undefined
     2c0:	7261656c 	.inst	0x7261656c ; undefined
     2c4:	69616d00 	ldpsw	x0, x27, [x8, #-248]
     2c8:	786f626c 	ldumaxlh	w15, w12, [x19]
     2cc:	7465675f 	.inst	0x7465675f ; undefined
     2d0:	6d72615f 	ldp	d31, d24, [x10, #-224]
     2d4:	6d656d5f 	ldp	d31, d27, [x10, #-432]
     2d8:	5f79726f 	sqdmlsl	s15, h19, v9.h[3]
     2dc:	657a6973 	fnmls	z19.h, p2/m, z11.h, z26.h
     2e0:	69616d00 	ldpsw	x0, x27, [x8, #-248]
     2e4:	786f626c 	ldumaxlh	w15, w12, [x19]
     2e8:	7465675f 	.inst	0x7465675f ; undefined
     2ec:	7269665f 	.inst	0x7269665f ; undefined
     2f0:	7261776d 	.inst	0x7261776d ; undefined
     2f4:	65725f65 	fnmla	z5.h, p7/m, z27.h, z18.h
     2f8:	69736976 	ldpsw	x22, x26, [x11, #-104]
     2fc:	61006e6f 	.inst	0x61006e6f ; undefined
     300:	745f6d72 	.inst	0x745f6d72 ; undefined
     304:	72656d69 	.inst	0x72656d69 ; undefined
     308:	616e655f 	.inst	0x616e655f ; undefined
     30c:	00656c62 	.inst	0x00656c62 ; undefined
     310:	6e69616d 	rsubhn2	v13.8h, v11.4s, v9.4s
     314:	61726600 	.inst	0x61726600 ; undefined
     318:	625f656d 	.inst	0x625f656d ; undefined
     31c:	65666675 	fnmls	z21.h, p1/m, z19.h, z6.h
     320:	6e695f72 	uqrshl	v18.8h, v27.8h, v9.8h
     324:	65007469 	.inst	0x65007469 ; undefined
     328:	70656378 	adr	x24, caf97 <__bss_size+0xcaf91>
     32c:	6e6f6974 	.inst	0x6e6f6974 ; undefined
     330:	76656c5f 	.inst	0x76656c5f ; undefined
     334:	6d006c65 	stp	d5, d27, [x3]
     338:	626c6961 	.inst	0x626c6961 ; undefined
     33c:	675f786f 	.inst	0x675f786f ; undefined
     340:	625f7465 	.inst	0x625f7465 ; undefined
     344:	6472616f 	.inst	0x6472616f ; undefined
     348:	646f6d5f 	.inst	0x646f6d5f ; undefined
     34c:	6d006c65 	stp	d5, d27, [x3]
     350:	626c6961 	.inst	0x626c6961 ; undefined
     354:	675f786f 	.inst	0x675f786f ; undefined
     358:	735f7465 	.inst	0x735f7465 ; undefined
     35c:	65747379 	fnmls	z25.h, p4/m, z27.h, z20.h
     360:	65745f6d 	fnmla	z13.h, p7/m, z27.h, z20.h
     364:	6d00706d 	stp	d13, d28, [x3]
     368:	626c6961 	.inst	0x626c6961 ; undefined
     36c:	675f786f 	.inst	0x675f786f ; undefined
     370:	765f7465 	.inst	0x765f7465 ; undefined
     374:	656d5f63 	fnmla	z3.h, p7/m, z27.h, z13.h
     378:	79726f6d 	ldrh	w13, [x27, #6454]
     37c:	7a69735f 	.inst	0x7a69735f ; undefined
     380:	63690065 	.inst	0x63690065 ; undefined
     384:	616e655f 	.inst	0x616e655f ; undefined
     388:	5f656c62 	.inst	0x5f656c62 ; undefined
     38c:	74737973 	.inst	0x74737973 ; undefined
     390:	745f6d65 	.inst	0x745f6d65 ; undefined
     394:	72656d69 	.inst	0x72656d69 ; undefined
     398:	6168635f 	.inst	0x6168635f ; undefined
     39c:	5f315f6e 	.inst	0x5f315f6e ; undefined
     3a0:	00717269 	.inst	0x00717269 ; undefined
     3a4:	66617274 	.inst	0x66617274 ; undefined
     3a8:	5f636966 	.inst	0x5f636966 ; undefined
     3ac:	6867696c 	.inst	0x6867696c ; undefined
     3b0:	695f7374 	ldpsw	x20, x28, [x27, #248]
     3b4:	0074696e 	.inst	0x0074696e ; undefined
     3b8:	655f6369 	fcmeq	p9.h, p0/z, z27.h, z31.h
     3bc:	6c62616e 	ldnp	d14, d24, [x11, #-480]
     3c0:	72615f65 	.inst	0x72615f65 ; undefined
     3c4:	69745f6d 	ldpsw	x13, x23, [x27, #-96]
     3c8:	5f72656d 	.inst	0x5f72656d ; undefined
     3cc:	00717269 	.inst	0x00717269 ; undefined
     3d0:	6573552f 	fnmla	z15.h, p5/m, z9.h, z19.h
     3d4:	782f7372 	lduminh	w15, w18, [x27]
     3d8:	74616862 	.inst	0x74616862 ; undefined
     3dc:	2f67616e 	umlsl	v14.4s, v11.4h, v7.h[2]
     3e0:	6a6f7250 	bics	w16, w18, w15, lsr #28
     3e4:	73746365 	.inst	0x73746365 ; undefined
     3e8:	4f79582f 	.inst	0x4f79582f ; undefined
     3ec:	654b2f53 	.inst	0x654b2f53 ; undefined
     3f0:	6c656e72 	ldnp	d18, d27, [x19, #-432]
     3f4:	756f532f 	.inst	0x756f532f ; undefined
     3f8:	2f656372 	umlsl	v18.4s, v27.4h, v5.h[2]
     3fc:	65726f43 	fnmls	z3.h, p3/m, z26.h, z18.h
     400:	69614d2f 	ldpsw	x15, x19, [x9, #-248]
     404:	00632e6e 	.inst	0x00632e6e ; undefined
     408:	6c69616d 	ldnp	d13, d24, [x11, #-368]
     40c:	5f786f62 	.inst	0x5f786f62 ; undefined
     410:	5f746567 	.inst	0x5f746567 ; undefined
     414:	72616f62 	.inst	0x72616f62 ; undefined
     418:	65725f64 	fnmla	z4.h, p7/m, z27.h, z18.h
     41c:	69736976 	ldpsw	x22, x26, [x11, #-104]
     420:	74006e6f 	.inst	0x74006e6f ; undefined
     424:	77657079 	.inst	0x77657079 ; undefined
     428:	65746972 	fnmls	z18.h, p2/m, z11.h, z20.h
     42c:	6f6d5f72 	.inst	0x6f6d5f72 ; undefined
     430:	66006564 	.inst	0x66006564 ; undefined
     434:	6563726f 	fnmls	z15.h, p4/m, z19.h, z3.h
     438:	6378655f 	.inst	0x6378655f ; undefined
     43c:	69747065 	ldpsw	x5, x28, [x3, #-96]
     440:	66006e6f 	.inst	0x66006e6f ; undefined
     444:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
     448:	6675625f 	.inst	0x6675625f ; undefined
     44c:	5f726566 	.inst	0x5f726566 ; undefined
     450:	77617264 	.inst	0x77617264 ; undefined
     454:	7571735f 	.inst	0x7571735f ; undefined
     458:	5f657261 	sqdmlsl	s1, h19, v5.h[2]
     45c:	6e726f63 	umin	v3.8h, v27.8h, v18.8h
     460:	2f007265 	.inst	0x2f007265 ; undefined
     464:	72657355 	.inst	0x72657355 ; undefined
     468:	62782f73 	.inst	0x62782f73 ; undefined
     46c:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     470:	502f6761 	adr	x1, 5f15e <__bss_size+0x5f158>
     474:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     478:	2f737463 	.inst	0x2f737463 ; undefined
     47c:	534f7958 	.inst	0x534f7958 ; undefined
     480:	72654b2f 	.inst	0x72654b2f ; undefined
     484:	2f6c656e 	.inst	0x2f6c656e ; undefined
     488:	72756f53 	.inst	0x72756f53 ; undefined
     48c:	432f6563 	.inst	0x432f6563 ; undefined
     490:	2f65726f 	fcmla	v15.4h, v19.4h, v5.h[1], #270
     494:	756e654d 	.inst	0x756e654d ; undefined
     498:	6200632e 	.inst	0x6200632e ; undefined
     49c:	6b636f6c 	.inst	0x6b636f6c ; undefined
     4a0:	6d756e5f 	ldp	d31, d27, [x18, #-176]
     4a4:	74656700 	.inst	0x74656700 ; undefined
     4a8:	6964655f 	ldpsw	xzr, x25, [x10, #-224]
     4ac:	6c625f64 	ldnp	d4, d23, [x27, #-480]
     4b0:	736b636f 	.inst	0x736b636f ; undefined
     4b4:	6e697500 	uabd	v0.8h, v8.8h, v9.8h
     4b8:	745f3874 	.inst	0x745f3874 ; undefined
     4bc:	69727000 	ldpsw	x0, x28, [x0, #-112]
     4c0:	615f746e 	.inst	0x615f746e ; undefined
     4c4:	615f6c6c 	.inst	0x615f6c6c ; undefined
     4c8:	69696373 	ldpsw	x19, x24, [x27, #-184]
     4cc:	6168635f 	.inst	0x6168635f ; undefined
     4d0:	66007372 	.inst	0x66007372 ; undefined
     4d4:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
     4d8:	6675625f 	.inst	0x6675625f ; undefined
     4dc:	5f726566 	.inst	0x5f726566 ; undefined
     4e0:	5f746567 	.inst	0x5f746567 ; undefined
     4e4:	64696465 	.inst	0x64696465 ; undefined
     4e8:	6f6c625f 	umlsl2	v31.4s, v18.8h, v12.h[2]
     4ec:	74006b63 	.inst	0x74006b63 ; undefined
     4f0:	5f747365 	sqdmlsl	s5, h27, v4.h[3]
     4f4:	63617473 	.inst	0x63617473 ; undefined
     4f8:	78655f6b 	.inst	0x78655f6b ; undefined
     4fc:	646f6c70 	.inst	0x646f6c70 ; undefined
     500:	616d0065 	.inst	0x616d0065 ; undefined
     504:	6d5f6e69 	ldp	d9, d27, [x19, #496]
     508:	5f756e65 	.inst	0x5f756e65 ; undefined
     50c:	696f6863 	ldpsw	x3, x26, [x3, #-136]
     510:	6d006563 	stp	d3, d25, [x11]
     514:	5f6e6961 	.inst	0x5f6e6961 ; undefined
     518:	756e656d 	.inst	0x756e656d ; undefined
     51c:	72687400 	.inst	0x72687400 ; undefined
     520:	5f646165 	.inst	0x5f646165 ; undefined
     524:	74697773 	.inst	0x74697773 ; undefined
     528:	67006863 	.inst	0x67006863 ; undefined
     52c:	72656e65 	.inst	0x72656e65 ; undefined
     530:	655f6369 	fcmeq	p9.h, p0/z, z27.h, z31.h
     534:	726f7272 	.inst	0x726f7272 ; undefined
     538:	63786500 	.inst	0x63786500 ; undefined
     53c:	69747065 	ldpsw	x5, x28, [x3, #-96]
     540:	645f6e6f 	fcmla	z15.h, p3/m, z19.h, z31.h, #270
     544:	69617465 	ldpsw	x5, x29, [x3, #-248]
     548:	315f736c 	adds	w12, w27, #0x7dc, lsl #12
     54c:	63786500 	.inst	0x63786500 ; undefined
     550:	69747065 	ldpsw	x5, x28, [x3, #-96]
     554:	735f6e6f 	.inst	0x735f6e6f ; undefined
     558:	72646e79 	.inst	0x72646e79 ; undefined
     55c:	5f656d6f 	.inst	0x5f656d6f ; undefined
     560:	72610031 	.inst	0x72610031 ; undefined
     564:	69745f6d 	ldpsw	x13, x23, [x27, #-96]
     568:	5f72656d 	.inst	0x5f72656d ; undefined
     56c:	5f6b6361 	.inst	0x5f6b6361 ; undefined
     570:	65746e69 	fnmls	z9.h, p3/m, z19.h, z20.h
     574:	70757272 	adr	x18, eb3c3 <__bss_size+0xeb3bd>
     578:	78650074 	ldaddlh	w5, w20, [x3]
     57c:	74706563 	.inst	0x74706563 ; undefined
     580:	5f6e6f69 	.inst	0x5f6e6f69 ; undefined
     584:	6b6e696c 	.inst	0x6b6e696c ; undefined
     588:	2f00315f 	.inst	0x2f00315f ; undefined
     58c:	72657355 	.inst	0x72657355 ; undefined
     590:	62782f73 	.inst	0x62782f73 ; undefined
     594:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     598:	502f6761 	adr	x1, 5f286 <__bss_size+0x5f280>
     59c:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     5a0:	2f737463 	.inst	0x2f737463 ; undefined
     5a4:	534f7958 	.inst	0x534f7958 ; undefined
     5a8:	72654b2f 	.inst	0x72654b2f ; undefined
     5ac:	2f6c656e 	.inst	0x2f6c656e ; undefined
     5b0:	72756f53 	.inst	0x72756f53 ; undefined
     5b4:	452f6563 	.inst	0x452f6563 ; undefined
     5b8:	70656378 	adr	x24, cb227 <__bss_size+0xcb221>
     5bc:	6e6f6974 	.inst	0x6e6f6974 ; undefined
     5c0:	78452f73 	ldrh	w19, [x27, #82]!
     5c4:	74706563 	.inst	0x74706563 ; undefined
     5c8:	736e6f69 	.inst	0x736e6f69 ; undefined
     5cc:	6100632e 	.inst	0x6100632e ; undefined
     5d0:	745f6d72 	.inst	0x745f6d72 ; undefined
     5d4:	72656d69 	.inst	0x72656d69 ; undefined
     5d8:	7361775f 	.inst	0x7361775f ; undefined
     5dc:	746e695f 	.inst	0x746e695f ; undefined
     5e0:	75727265 	.inst	0x75727265 ; undefined
     5e4:	64657470 	.inst	0x64657470 ; undefined
     5e8:	72616d00 	.inst	0x72616d00 ; undefined
     5ec:	0072656b 	.inst	0x0072656b ; undefined
     5f0:	65766173 	fnmls	z19.h, p0/m, z11.h, z22.h
     5f4:	72705f64 	.inst	0x72705f64 ; undefined
     5f8:	6172676f 	.inst	0x6172676f ; undefined
     5fc:	74735f6d 	.inst	0x74735f6d ; undefined
     600:	5f657461 	sqshl	d1, d3, #37
     604:	6e690031 	uaddl2	v17.4s, v1.8h, v9.8h
     608:	72726574 	.inst	0x72726574 ; undefined
     60c:	5f747075 	sqdmlsl	s21, h3, v4.h[3]
     610:	74617473 	.inst	0x74617473 ; undefined
     614:	315f7375 	adds	w21, w27, #0x7dc, lsl #12
     618:	63786500 	.inst	0x63786500 ; undefined
     61c:	69747065 	ldpsw	x5, x28, [x3, #-96]
     620:	685f6e6f 	.inst	0x685f6e6f ; undefined
     624:	6c646e61 	ldnp	d1, d27, [x19, #-448]
     628:	315f7265 	adds	w5, w19, #0x7dc, lsl #12
     62c:	6c696d00 	ldnp	d0, d27, [x8, #-368]
     630:	63657369 	.inst	0x63657369 ; undefined
     634:	73646e6f 	.inst	0x73646e6f ; undefined
     638:	6d726100 	ldp	d0, d24, [x8, #-224]
     63c:	6d69745f 	ldp	d31, d29, [x2, #-368]
     640:	645f7265 	fcmla	z5.h, p4/m, z19.h, z31.h, #270
     644:	62617369 	.inst	0x62617369 ; undefined
     648:	2f00656c 	mvni	v12.2s, #0xb, lsl #24
     64c:	72657355 	.inst	0x72657355 ; undefined
     650:	62782f73 	.inst	0x62782f73 ; undefined
     654:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     658:	502f6761 	adr	x1, 5f346 <__bss_size+0x5f340>
     65c:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     660:	2f737463 	.inst	0x2f737463 ; undefined
     664:	534f7958 	.inst	0x534f7958 ; undefined
     668:	72654b2f 	.inst	0x72654b2f ; undefined
     66c:	2f6c656e 	.inst	0x2f6c656e ; undefined
     670:	72756f53 	.inst	0x72756f53 ; undefined
     674:	502f6563 	adr	x3, 5f322 <__bss_size+0x5f31c>
     678:	70697265 	adr	x5, d34c7 <__bss_size+0xd34c1>
     67c:	61726568 	.inst	0x61726568 ; undefined
     680:	412f736c 	.inst	0x412f736c ; undefined
     684:	69544d52 	ldpsw	x18, x19, [x10, #160]
     688:	2f72656d 	.inst	0x2f72656d ; undefined
     68c:	544d5241 	b.ne	9b0d4 <__bss_size+0x9b0ce>  // b.any
     690:	72656d69 	.inst	0x72656d69 ; undefined
     694:	6100632e 	.inst	0x6100632e ; undefined
     698:	745f6d72 	.inst	0x745f6d72 ; undefined
     69c:	72656d69 	.inst	0x72656d69 ; undefined
     6a0:	5f73695f 	.inst	0x5f73695f ; undefined
     6a4:	62616e65 	.inst	0x62616e65 ; undefined
     6a8:	0064656c 	.inst	0x0064656c ; undefined
     6ac:	5f6d7261 	sqdmlsl	s1, h19, v13.h[2]
     6b0:	656d6974 	fnmls	z20.h, p2/m, z11.h, z13.h
     6b4:	6f635f72 	.inst	0x6f635f72 ; undefined
     6b8:	64746e75 	.inst	0x64746e75 ; undefined
     6bc:	006e776f 	.inst	0x006e776f ; undefined
     6c0:	6f697067 	fcmla	v7.8h, v3.8h, v9.h[1], #270
     6c4:	6174735f 	.inst	0x6174735f ; undefined
     6c8:	735f7472 	.inst	0x735f7472 ; undefined
     6cc:	67007465 	.inst	0x67007465 ; undefined
     6d0:	5f6f6970 	.inst	0x5f6f6970 ; undefined
     6d4:	65646f6d 	fnmls	z13.h, p3/m, z27.h, z4.h
     6d8:	69706700 	ldpsw	x0, x25, [x24, #-128]
     6dc:	65735f6f 	fnmla	z15.h, p7/m, z27.h, z19.h
     6e0:	552f0074 	.inst	0x552f0074 ; undefined
     6e4:	73726573 	.inst	0x73726573 ; undefined
     6e8:	6862782f 	.inst	0x6862782f ; undefined
     6ec:	616e7461 	.inst	0x616e7461 ; undefined
     6f0:	72502f67 	.inst	0x72502f67 ; undefined
     6f4:	63656a6f 	.inst	0x63656a6f ; undefined
     6f8:	582f7374 	ldr	x20, 5f564 <__bss_size+0x5f55e>
     6fc:	2f534f79 	.inst	0x2f534f79 ; undefined
     700:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
     704:	532f6c65 	.inst	0x532f6c65 ; undefined
     708:	6372756f 	.inst	0x6372756f ; undefined
     70c:	65502f65 	fcmge	p5.h, p3/z, z27.h, #0.0
     710:	68706972 	.inst	0x68706972 ; undefined
     714:	6c617265 	ldnp	d5, d28, [x19, #-496]
     718:	50472f73 	adr	x19, 8ed06 <__bss_size+0x8ed00>
     71c:	472f4f49 	.inst	0x472f4f49 ; undefined
     720:	2e4f4950 	.inst	0x2e4f4950 ; undefined
     724:	70670063 	adr	x3, ce733 <__bss_size+0xce72d>
     728:	635f6f69 	.inst	0x635f6f69 ; undefined
     72c:	7261656c 	.inst	0x7261656c ; undefined
     730:	72756300 	.inst	0x72756300 ; undefined
     734:	746e6572 	.inst	0x746e6572 ; undefined
     738:	646f6d5f 	.inst	0x646f6d5f ; undefined
     73c:	552f0065 	.inst	0x552f0065 ; undefined
     740:	73726573 	.inst	0x73726573 ; undefined
     744:	6862782f 	.inst	0x6862782f ; undefined
     748:	616e7461 	.inst	0x616e7461 ; undefined
     74c:	72502f67 	.inst	0x72502f67 ; undefined
     750:	63656a6f 	.inst	0x63656a6f ; undefined
     754:	582f7374 	ldr	x20, 5f5c0 <__bss_size+0x5f5ba>
     758:	2f534f79 	.inst	0x2f534f79 ; undefined
     75c:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
     760:	532f6c65 	.inst	0x532f6c65 ; undefined
     764:	6372756f 	.inst	0x6372756f ; undefined
     768:	65502f65 	fcmge	p5.h, p3/z, z27.h, #0.0
     76c:	68706972 	.inst	0x68706972 ; undefined
     770:	6c617265 	ldnp	d5, d28, [x19, #-496]
     774:	50472f73 	adr	x19, 8ed62 <__bss_size+0x8ed5c>
     778:	542f4f49 	b.ls	5f160 <__bss_size+0x5f15a>  // b.plast
     77c:	66666172 	.inst	0x66666172 ; undefined
     780:	694c6369 	ldpsw	x9, x24, [x27, #96]
     784:	73746867 	.inst	0x73746867 ; undefined
     788:	7400632e 	.inst	0x7400632e ; undefined
     78c:	66666172 	.inst	0x66666172 ; undefined
     790:	6c5f6369 	ldnp	d9, d24, [x27, #496]
     794:	74686769 	.inst	0x74686769 ; undefined
     798:	6465725f 	.inst	0x6465725f ; undefined
     79c:	006e6f5f 	.inst	0x006e6f5f ; undefined
     7a0:	66617274 	.inst	0x66617274 ; undefined
     7a4:	5f636966 	.inst	0x5f636966 ; undefined
     7a8:	6867696c 	.inst	0x6867696c ; undefined
     7ac:	72675f74 	.inst	0x72675f74 ; undefined
     7b0:	5f6e6565 	.inst	0x5f6e6565 ; undefined
     7b4:	74006e6f 	.inst	0x74006e6f ; undefined
     7b8:	66666172 	.inst	0x66666172 ; undefined
     7bc:	6c5f6369 	ldnp	d9, d24, [x27, #496]
     7c0:	74686769 	.inst	0x74686769 ; undefined
     7c4:	6c65795f 	ldnp	d31, d30, [x10, #-432]
     7c8:	5f776f6c 	.inst	0x5f776f6c ; undefined
     7cc:	75006e6f 	.inst	0x75006e6f ; undefined
     7d0:	5f747261 	sqdmlsl	s1, h19, v4.h[3]
     7d4:	75746573 	.inst	0x75746573 ; undefined
     7d8:	61750070 	.inst	0x61750070 ; undefined
     7dc:	695f7472 	ldpsw	x18, x29, [x3, #248]
     7e0:	7475706e 	.inst	0x7475706e ; undefined
     7e4:	756c665f 	.inst	0x756c665f ; undefined
     7e8:	6c006873 	stnp	d19, d26, [x3]
     7ec:	65747465 	fnmls	z5.h, p5/m, z3.h, z20.h
     7f0:	552f0072 	.inst	0x552f0072 ; undefined
     7f4:	73726573 	.inst	0x73726573 ; undefined
     7f8:	6862782f 	.inst	0x6862782f ; undefined
     7fc:	616e7461 	.inst	0x616e7461 ; undefined
     800:	72502f67 	.inst	0x72502f67 ; undefined
     804:	63656a6f 	.inst	0x63656a6f ; undefined
     808:	582f7374 	ldr	x20, 5f674 <__bss_size+0x5f66e>
     80c:	2f534f79 	.inst	0x2f534f79 ; undefined
     810:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
     814:	532f6c65 	.inst	0x532f6c65 ; undefined
     818:	6372756f 	.inst	0x6372756f ; undefined
     81c:	65502f65 	fcmge	p5.h, p3/z, z27.h, #0.0
     820:	68706972 	.inst	0x68706972 ; undefined
     824:	6c617265 	ldnp	d5, d28, [x19, #-496]
     828:	50472f73 	adr	x19, 8ee16 <__bss_size+0x8ee10>
     82c:	552f4f49 	.inst	0x552f4f49 ; undefined
     830:	2e545241 	.inst	0x2e545241 ; undefined
     834:	61750063 	.inst	0x61750063 ; undefined
     838:	6f5f7472 	uqshl	v18.2d, v3.2d, #31
     83c:	75707475 	.inst	0x75707475 ; undefined
     840:	6c665f74 	ldnp	d20, d23, [x27, #-416]
     844:	00687375 	.inst	0x00687375 ; undefined
     848:	6e697270 	uabdl2	v16.4s, v19.8h, v9.8h
     84c:	65685f74 	fnmla	z20.h, p7/m, z27.h, z8.h
     850:	00385f78 	.inst	0x00385f78 ; NYI
     854:	7373656d 	.inst	0x7373656d ; undefined
     858:	00656761 	.inst	0x00656761 ; undefined
     85c:	69736564 	ldpsw	x4, x25, [x11, #-104]
     860:	5f646572 	.inst	0x5f646572 ; undefined
     864:	666f5f79 	.inst	0x666f5f79 ; undefined
     868:	74657366 	.inst	0x74657366 ; undefined
     86c:	6c6c6100 	ldnp	d0, d24, [x8, #-320]
     870:	7461636f 	.inst	0x7461636f ; undefined
     874:	72665f65 	.inst	0x72665f65 ; undefined
     878:	6c5f6d6f 	ldnp	d15, d27, [x11, #496]
     87c:	7265776f 	.inst	0x7265776f ; undefined
     880:	00336c5f 	.inst	0x00336c5f ; NYI
     884:	31786568 	adds	w8, w11, #0xe19, lsl #12
     888:	78656800 	ldrh	w0, [x0, x5]
     88c:	63610032 	.inst	0x63610032 ; undefined
     890:	6c617574 	ldnp	d20, d29, [x11, #-496]
     894:	6f5f785f 	.inst	0x6f5f785f ; undefined
     898:	65736666 	fnmls	z6.h, p1/m, z19.h, z19.h
     89c:	69750074 	ldpsw	x20, x0, [x3, #-88]
     8a0:	7470746e 	.inst	0x7470746e ; undefined
     8a4:	00745f72 	.inst	0x00745f72 ; undefined
     8a8:	69736564 	ldpsw	x4, x25, [x11, #-104]
     8ac:	5f646572 	.inst	0x5f646572 ; undefined
     8b0:	666f5f78 	.inst	0x666f5f78 ; undefined
     8b4:	74657366 	.inst	0x74657366 ; undefined
     8b8:	6c6f6300 	ldnp	d0, d24, [x24, #-272]
     8bc:	7400726f 	.inst	0x7400726f ; undefined
     8c0:	5f747365 	sqdmlsl	s5, h27, v4.h[3]
     8c4:	6e617274 	uabdl2	v20.4s, v19.8h, v1.8h
     8c8:	74616c73 	.inst	0x74616c73 ; undefined
     8cc:	006e6f69 	.inst	0x006e6f69 ; undefined
     8d0:	75746361 	.inst	0x75746361 ; undefined
     8d4:	795f6c61 	ldrh	w1, [x3, #4022]
     8d8:	66666f5f 	.inst	0x66666f5f ; undefined
     8dc:	00746573 	.inst	0x00746573 ; undefined
     8e0:	64696465 	.inst	0x64696465 ; undefined
     8e4:	78697000 	lduminlh	w9, w0, [x0]
     8e8:	6f5f6c65 	.inst	0x6f5f6c65 ; undefined
     8ec:	65736666 	fnmls	z6.h, p1/m, z19.h, z19.h
     8f0:	72660074 	.inst	0x72660074 ; undefined
     8f4:	5f656d61 	.inst	0x5f656d61 ; undefined
     8f8:	66667562 	.inst	0x66667562 ; undefined
     8fc:	645f7265 	fcmla	z5.h, p4/m, z19.h, z31.h, #270
     900:	00776172 	.inst	0x00776172 ; undefined
     904:	6573552f 	fnmla	z15.h, p5/m, z9.h, z19.h
     908:	782f7372 	lduminh	w15, w18, [x27]
     90c:	74616862 	.inst	0x74616862 ; undefined
     910:	2f67616e 	umlsl	v14.4s, v11.4h, v7.h[2]
     914:	6a6f7250 	bics	w16, w18, w15, lsr #28
     918:	73746365 	.inst	0x73746365 ; undefined
     91c:	4f79582f 	.inst	0x4f79582f ; undefined
     920:	654b2f53 	.inst	0x654b2f53 ; undefined
     924:	6c656e72 	ldnp	d18, d27, [x19, #-432]
     928:	756f532f 	.inst	0x756f532f ; undefined
     92c:	2f656372 	umlsl	v18.4s, v27.4h, v5.h[2]
     930:	69726550 	ldpsw	x16, x25, [x10, #-112]
     934:	72656870 	.inst	0x72656870 ; undefined
     938:	2f736c61 	.inst	0x2f736c61 ; undefined
     93c:	2f555047 	.inst	0x2f555047 ; undefined
     940:	6d617246 	ldp	d6, d28, [x18, #-496]
     944:	66754265 	.inst	0x66754265 ; undefined
     948:	2e726566 	umax	v6.4h, v11.4h, v18.4h
     94c:	65640063 	fmla	z3.h, p0/m, z3.h, z4.h
     950:	65726973 	fnmls	z19.h, p2/m, z11.h, z18.h
     954:	65645f64 	fnmla	z4.h, p7/m, z27.h, z4.h
     958:	00687470 	.inst	0x00687470 ; undefined
     95c:	6c69616d 	ldnp	d13, d24, [x11, #-368]
     960:	5f786f62 	.inst	0x5f786f62 ; undefined
     964:	74697277 	.inst	0x74697277 ; undefined
     968:	65640065 	fmla	z5.h, p0/m, z3.h, z4.h
     96c:	65726973 	fnmls	z19.h, p2/m, z11.h, z18.h
     970:	69775f64 	ldpsw	x4, x23, [x27, #-72]
     974:	00687464 	.inst	0x00687464 ; undefined
     978:	756c6176 	.inst	0x756c6176 ; undefined
     97c:	68700065 	.inst	0x68700065 ; undefined
     980:	63697379 	.inst	0x63697379 ; undefined
     984:	775f6c61 	.inst	0x775f6c61 ; undefined
     988:	68746469 	.inst	0x68746469 ; undefined
     98c:	73656400 	.inst	0x73656400 ; undefined
     990:	64657269 	.inst	0x64657269 ; undefined
     994:	6965685f 	ldpsw	xzr, x26, [x2, #-216]
     998:	00746867 	.inst	0x00746867 ; undefined
     99c:	73796870 	.inst	0x73796870 ; undefined
     9a0:	6c616369 	ldnp	d9, d24, [x27, #-496]
     9a4:	6965685f 	ldpsw	xzr, x26, [x2, #-216]
     9a8:	00746867 	.inst	0x00746867 ; undefined
     9ac:	6c69616d 	ldnp	d13, d24, [x11, #-368]
     9b0:	5f786f62 	.inst	0x5f786f62 ; undefined
     9b4:	74696177 	.inst	0x74696177 ; undefined
     9b8:	6165725f 	.inst	0x6165725f ; undefined
     9bc:	6e650064 	uaddl2	v4.4s, v3.8h, v5.8h
     9c0:	64615f64 	.inst	0x64615f64 ; undefined
     9c4:	73657264 	.inst	0x73657264 ; undefined
     9c8:	72660073 	.inst	0x72660073 ; undefined
     9cc:	5f656d61 	.inst	0x5f656d61 ; undefined
     9d0:	66667562 	.inst	0x66667562 ; undefined
     9d4:	705f7265 	adr	x5, bf823 <__bss_size+0xbf81d>
     9d8:	00637475 	.inst	0x00637475 ; undefined
     9dc:	656e696c 	fnmls	z12.h, p2/m, z11.h, z14.h
     9e0:	6968745f 	ldpsw	xzr, x29, [x2, #-192]
     9e4:	656e6b63 	fnmls	z3.h, p2/m, z27.h, z14.h
     9e8:	66007373 	.inst	0x66007373 ; undefined
     9ec:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
     9f0:	6675625f 	.inst	0x6675625f ; undefined
     9f4:	5f726566 	.inst	0x5f726566 ; undefined
     9f8:	77617264 	.inst	0x77617264 ; undefined
     9fc:	6f72635f 	umlsl2	v31.4s, v26.8h, v2.h[3]
     a00:	66007373 	.inst	0x66007373 ; undefined
     a04:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
     a08:	6675625f 	.inst	0x6675625f ; undefined
     a0c:	5f726566 	.inst	0x5f726566 ; undefined
     a10:	6e696170 	rsubhn2	v16.8h, v11.4s, v9.4s
     a14:	72660074 	.inst	0x72660074 ; undefined
     a18:	5f656d61 	.inst	0x5f656d61 ; undefined
     a1c:	66667562 	.inst	0x66667562 ; undefined
     a20:	645f7265 	fcmla	z5.h, p4/m, z19.h, z31.h, #270
     a24:	5f776172 	.inst	0x5f776172 ; undefined
     a28:	72616863 	.inst	0x72616863 ; undefined
     a2c:	6e696c00 	umin	v0.8h, v0.8h, v9.8h
     a30:	69775f65 	ldpsw	x5, x23, [x27, #-72]
     a34:	00687464 	.inst	0x00687464 ; undefined
     a38:	72727563 	.inst	0x72727563 ; undefined
     a3c:	5f746e65 	.inst	0x5f746e65 ; undefined
     a40:	75630078 	.inst	0x75630078 ; undefined
     a44:	6e657272 	uabdl2	v18.4s, v19.8h, v5.8h
     a48:	00795f74 	.inst	0x00795f74 ; undefined
     a4c:	6d617266 	ldp	d6, d28, [x19, #-496]
     a50:	75625f65 	.inst	0x75625f65 ; undefined
     a54:	72656666 	.inst	0x72656666 ; undefined
     a58:	6172645f 	.inst	0x6172645f ; undefined
     a5c:	6f625f77 	.inst	0x6f625f77 ; undefined
     a60:	72656472 	.inst	0x72656472 ; undefined
     a64:	4e4f4600 	.inst	0x4e4f4600 ; undefined
     a68:	552f0054 	.inst	0x552f0054 ; undefined
     a6c:	73726573 	.inst	0x73726573 ; undefined
     a70:	6862782f 	.inst	0x6862782f ; undefined
     a74:	616e7461 	.inst	0x616e7461 ; undefined
     a78:	72502f67 	.inst	0x72502f67 ; undefined
     a7c:	63656a6f 	.inst	0x63656a6f ; undefined
     a80:	582f7374 	ldr	x20, 5f8ec <__bss_size+0x5f8e6>
     a84:	2f534f79 	.inst	0x2f534f79 ; undefined
     a88:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
     a8c:	532f6c65 	.inst	0x532f6c65 ; undefined
     a90:	6372756f 	.inst	0x6372756f ; undefined
     a94:	65502f65 	fcmge	p5.h, p3/z, z27.h, #0.0
     a98:	68706972 	.inst	0x68706972 ; undefined
     a9c:	6c617265 	ldnp	d5, d28, [x19, #-496]
     aa0:	50472f73 	adr	x19, 8f08e <__bss_size+0x8f088>
     aa4:	72462f55 	.inst	0x72462f55 ; undefined
     aa8:	42656d61 	.inst	0x42656d61 ; undefined
     aac:	65666675 	fnmls	z21.h, p1/m, z19.h, z6.h
     ab0:	61724772 	.inst	0x61724772 ; undefined
     ab4:	63696870 	.inst	0x63696870 ; undefined
     ab8:	00632e73 	.inst	0x00632e73 ; undefined
     abc:	6d617266 	ldp	d6, d28, [x19, #-496]
     ac0:	75625f65 	.inst	0x75625f65 ; undefined
     ac4:	72656666 	.inst	0x72656666 ; undefined
     ac8:	6172645f 	.inst	0x6172645f ; undefined
     acc:	72635f77 	.inst	0x72635f77 ; undefined
     ad0:	5f73736f 	sqdmlsl	s15, h27, v3.h[3]
     ad4:	6e726f63 	umin	v3.8h, v27.8h, v18.8h
     ad8:	66007265 	.inst	0x66007265 ; undefined
     adc:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
     ae0:	6675625f 	.inst	0x6675625f ; undefined
     ae4:	5f726566 	.inst	0x5f726566 ; undefined
     ae8:	77617264 	.inst	0x77617264 ; undefined
     aec:	6f72635f 	umlsl2	v31.4s, v26.8h, v2.h[3]
     af0:	665f7373 	.inst	0x665f7373 ; undefined
     af4:	5f6c6c75 	.inst	0x5f6c6c75 ; undefined
     af8:	65726373 	fnmls	z19.h, p0/m, z27.h, z18.h
     afc:	66006e65 	.inst	0x66006e65 ; undefined
     b00:	656d6172 	fnmls	z18.h, p0/m, z11.h, z13.h
     b04:	6675625f 	.inst	0x6675625f ; undefined
     b08:	5f726566 	.inst	0x5f726566 ; undefined
     b0c:	69747570 	ldpsw	x16, x29, [x11, #-96]
     b10:	0034365f 	.inst	0x0034365f ; NYI
     b14:	73656f64 	.inst	0x73656f64 ; undefined
     b18:	746f6e5f 	.inst	0x746f6e5f ; undefined
     b1c:	6978655f 	ldpsw	xzr, x25, [x10, #-64]
     b20:	67007473 	.inst	0x67007473 ; undefined
     b24:	705f7465 	adr	x5, bf9b3 <__bss_size+0xbf9ad>
     b28:	69737968 	ldpsw	x8, x30, [x11, #-104]
     b2c:	5f6c6163 	.inst	0x5f6c6163 ; undefined
     b30:	72646461 	.inst	0x72646461 ; undefined
     b34:	00737365 	.inst	0x00737365 ; undefined
     b38:	65726170 	fnmls	z16.h, p0/m, z11.h, z18.h
     b3c:	695f746e 	ldpsw	x14, x29, [x3, #248]
     b40:	616d0064 	.inst	0x616d0064 ; undefined
     b44:	6f626c69 	.inst	0x6f626c69 ; undefined
     b48:	72705f78 	.inst	0x72705f78 ; undefined
     b4c:	5f746e69 	.inst	0x5f746e69 ; undefined
     b50:	636f6c63 	.inst	0x636f6c63 ; undefined
     b54:	616e5f6b 	.inst	0x616e5f6b ; undefined
     b58:	2f00656d 	mvni	v13.2s, #0xb, lsl #24
     b5c:	72657355 	.inst	0x72657355 ; undefined
     b60:	62782f73 	.inst	0x62782f73 ; undefined
     b64:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     b68:	502f6761 	adr	x1, 5f856 <__bss_size+0x5f850>
     b6c:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     b70:	2f737463 	.inst	0x2f737463 ; undefined
     b74:	534f7958 	.inst	0x534f7958 ; undefined
     b78:	72654b2f 	.inst	0x72654b2f ; undefined
     b7c:	2f6c656e 	.inst	0x2f6c656e ; undefined
     b80:	72756f53 	.inst	0x72756f53 ; undefined
     b84:	502f6563 	adr	x3, 5f832 <__bss_size+0x5f82c>
     b88:	70697265 	adr	x5, d39d7 <__bss_size+0xd39d1>
     b8c:	61726568 	.inst	0x61726568 ; undefined
     b90:	472f736c 	.inst	0x472f736c ; undefined
     b94:	4d2f5550 	.inst	0x4d2f5550 ; undefined
     b98:	626c6961 	.inst	0x626c6961 ; undefined
     b9c:	632e786f 	.inst	0x632e786f ; undefined
     ba0:	69616d00 	ldpsw	x0, x27, [x8, #-248]
     ba4:	786f626c 	ldumaxlh	w15, w12, [x19]
     ba8:	7275745f 	.inst	0x7275745f ; undefined
     bac:	656c5f6e 	fnmla	z14.h, p7/m, z27.h, z12.h
     bb0:	6e6f5f64 	uqrshl	v4.8h, v27.8h, v15.8h
     bb4:	69616d00 	ldpsw	x0, x27, [x8, #-248]
     bb8:	786f626c 	ldumaxlh	w15, w12, [x19]
     bbc:	6972705f 	ldpsw	xzr, x28, [x2, #-112]
     bc0:	615f746e 	.inst	0x615f746e ; undefined
     bc4:	635f6c6c 	.inst	0x635f6c6c ; undefined
     bc8:	6b636f6c 	.inst	0x6b636f6c ; undefined
     bcc:	616d0073 	.inst	0x616d0073 ; undefined
     bd0:	6f626c69 	.inst	0x6f626c69 ; undefined
     bd4:	72705f78 	.inst	0x72705f78 ; undefined
     bd8:	5f746e69 	.inst	0x5f746e69 ; undefined
     bdc:	636f6c63 	.inst	0x636f6c63 ; undefined
     be0:	74735f6b 	.inst	0x74735f6b ; undefined
     be4:	00657461 	.inst	0x00657461 ; undefined
     be8:	6c69616d 	ldnp	d13, d24, [x11, #-368]
     bec:	5f786f62 	.inst	0x5f786f62 ; undefined
     bf0:	6e697270 	uabdl2	v16.4s, v19.8h, v9.8h
     bf4:	6c635f74 	ldnp	d20, d23, [x27, #-464]
     bf8:	5f6b636f 	.inst	0x5f6b636f ; undefined
     bfc:	72727563 	.inst	0x72727563 ; undefined
     c00:	5f746e65 	.inst	0x5f746e65 ; undefined
     c04:	71657266 	subs	w6, w19, #0x95c, lsl #12
     c08:	636e6575 	.inst	0x636e6575 ; undefined
     c0c:	63690079 	.inst	0x63690079 ; undefined
     c10:	7361625f 	.inst	0x7361625f ; undefined
     c14:	695f6369 	ldpsw	x9, x24, [x27, #248]
     c18:	705f7172 	adr	x18, bfa47 <__bss_size+0xbfa41>
     c1c:	69646e65 	ldpsw	x5, x27, [x19, #-224]
     c20:	2f00676e 	mvni	v14.2s, #0x1b, lsl #24
     c24:	72657355 	.inst	0x72657355 ; undefined
     c28:	62782f73 	.inst	0x62782f73 ; undefined
     c2c:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     c30:	502f6761 	adr	x1, 5f91e <__bss_size+0x5f918>
     c34:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     c38:	2f737463 	.inst	0x2f737463 ; undefined
     c3c:	534f7958 	.inst	0x534f7958 ; undefined
     c40:	72654b2f 	.inst	0x72654b2f ; undefined
     c44:	2f6c656e 	.inst	0x2f6c656e ; undefined
     c48:	72756f53 	.inst	0x72756f53 ; undefined
     c4c:	502f6563 	adr	x3, 5f8fa <__bss_size+0x5f8f4>
     c50:	70697265 	adr	x5, d3a9f <__bss_size+0xd3a99>
     c54:	61726568 	.inst	0x61726568 ; undefined
     c58:	492f736c 	.inst	0x492f736c ; undefined
     c5c:	7265746e 	.inst	0x7265746e ; undefined
     c60:	74707572 	.inst	0x74707572 ; undefined
     c64:	746e6f43 	.inst	0x746e6f43 ; undefined
     c68:	6c6c6f72 	ldnp	d18, d27, [x27, #-320]
     c6c:	492f7265 	.inst	0x492f7265 ; undefined
     c70:	7265746e 	.inst	0x7265746e ; undefined
     c74:	74707572 	.inst	0x74707572 ; undefined
     c78:	746e6f43 	.inst	0x746e6f43 ; undefined
     c7c:	6c6c6f72 	ldnp	d18, d27, [x27, #-320]
     c80:	632e7265 	.inst	0x632e7265 ; undefined
     c84:	73797300 	.inst	0x73797300 ; undefined
     c88:	5f6d6574 	.inst	0x5f6d6574 ; undefined
     c8c:	656d6974 	fnmls	z20.h, p2/m, z11.h, z13.h
     c90:	68635f72 	.inst	0x68635f72 ; undefined
     c94:	315f6e61 	adds	w1, w19, #0x7db, lsl #12
     c98:	7361775f 	.inst	0x7361775f ; undefined
     c9c:	746e695f 	.inst	0x746e695f ; undefined
     ca0:	75727265 	.inst	0x75727265 ; undefined
     ca4:	64657470 	.inst	0x64657470 ; undefined
     ca8:	73797300 	.inst	0x73797300 ; undefined
     cac:	5f6d6574 	.inst	0x5f6d6574 ; undefined
     cb0:	656d6974 	fnmls	z20.h, p2/m, z11.h, z13.h
     cb4:	68635f72 	.inst	0x68635f72 ; undefined
     cb8:	315f6e61 	adds	w1, w19, #0x7db, lsl #12
     cbc:	6b63615f 	.inst	0x6b63615f ; undefined
     cc0:	746e695f 	.inst	0x746e695f ; undefined
     cc4:	75727265 	.inst	0x75727265 ; undefined
     cc8:	2f007470 	bic	v16.2s, #0x3, lsl #24
     ccc:	72657355 	.inst	0x72657355 ; undefined
     cd0:	62782f73 	.inst	0x62782f73 ; undefined
     cd4:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
     cd8:	502f6761 	adr	x1, 5f9c6 <__bss_size+0x5f9c0>
     cdc:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
     ce0:	2f737463 	.inst	0x2f737463 ; undefined
     ce4:	534f7958 	.inst	0x534f7958 ; undefined
     ce8:	72654b2f 	.inst	0x72654b2f ; undefined
     cec:	2f6c656e 	.inst	0x2f6c656e ; undefined
     cf0:	72756f53 	.inst	0x72756f53 ; undefined
     cf4:	502f6563 	adr	x3, 5f9a2 <__bss_size+0x5f99c>
     cf8:	70697265 	adr	x5, d3b47 <__bss_size+0xd3b41>
     cfc:	61726568 	.inst	0x61726568 ; undefined
     d00:	532f736c 	.inst	0x532f736c ; undefined
     d04:	65747379 	fnmls	z25.h, p4/m, z27.h, z20.h
     d08:	6d69546d 	ldp	d13, d21, [x3, #-368]
     d0c:	532f7265 	.inst	0x532f7265 ; undefined
     d10:	65747379 	fnmls	z25.h, p4/m, z27.h, z20.h
     d14:	6d69546d 	ldp	d13, d21, [x3, #-368]
     d18:	632e7265 	.inst	0x632e7265 ; undefined
     d1c:	73797300 	.inst	0x73797300 ; undefined
     d20:	5f6d6574 	.inst	0x5f6d6574 ; undefined
     d24:	656d6974 	fnmls	z20.h, p2/m, z11.h, z13.h
     d28:	68635f72 	.inst	0x68635f72 ; undefined
     d2c:	315f6e61 	adds	w1, w19, #0x7db, lsl #12
     d30:	756f635f 	.inst	0x756f635f ; undefined
     d34:	6f64746e 	uqshl	v14.2d, v3.2d, #36
     d38:	63006e77 	.inst	0x63006e77 ; undefined
     d3c:	65727275 	fnmls	z21.h, p4/m, z19.h, z18.h
     d40:	745f746e 	.inst	0x745f746e ; undefined
     d44:	61657268 	.inst	0x61657268 ; undefined
     d48:	61735f64 	.inst	0x61735f64 ; undefined
     d4c:	5f646576 	.inst	0x5f646576 ; undefined
     d50:	676f7270 	.inst	0x676f7270 ; undefined
     d54:	5f6d6172 	.inst	0x5f6d6172 ; undefined
     d58:	6e756f63 	umin	v3.8h, v27.8h, v21.8h
     d5c:	00726574 	.inst	0x00726574 ; undefined
     d60:	65726874 	fnmls	z20.h, p2/m, z3.h, z18.h
     d64:	335f6461 	.inst	0x335f6461 ; undefined
     d68:	72687400 	.inst	0x72687400 ; undefined
     d6c:	5f646165 	.inst	0x5f646165 ; undefined
     d70:	75630032 	.inst	0x75630032 ; undefined
     d74:	6e657272 	uabdl2	v18.4s, v19.8h, v5.8h
     d78:	68745f74 	.inst	0x68745f74 ; undefined
     d7c:	64616572 	.inst	0x64616572 ; undefined
     d80:	6d756e5f 	ldp	d31, d27, [x18, #-176]
     d84:	72687400 	.inst	0x72687400 ; undefined
     d88:	5f646165 	.inst	0x5f646165 ; undefined
     d8c:	75630031 	.inst	0x75630031 ; undefined
     d90:	6e657272 	uabdl2	v18.4s, v19.8h, v5.8h
     d94:	68745f74 	.inst	0x68745f74 ; undefined
     d98:	64616572 	.inst	0x64616572 ; undefined
     d9c:	7661735f 	.inst	0x7661735f ; undefined
     da0:	735f6465 	.inst	0x735f6465 ; undefined
     da4:	6b636174 	.inst	0x6b636174 ; undefined
     da8:	696f705f 	ldpsw	xzr, x28, [x2, #-136]
     dac:	7265746e 	.inst	0x7265746e ; undefined
     db0:	72685400 	.inst	0x72685400 ; undefined
     db4:	00646165 	.inst	0x00646165 ; undefined
     db8:	6573552f 	fnmla	z15.h, p5/m, z9.h, z19.h
     dbc:	782f7372 	lduminh	w15, w18, [x27]
     dc0:	74616862 	.inst	0x74616862 ; undefined
     dc4:	2f67616e 	umlsl	v14.4s, v11.4h, v7.h[2]
     dc8:	6a6f7250 	bics	w16, w18, w15, lsr #28
     dcc:	73746365 	.inst	0x73746365 ; undefined
     dd0:	4f79582f 	.inst	0x4f79582f ; undefined
     dd4:	654b2f53 	.inst	0x654b2f53 ; undefined
     dd8:	6c656e72 	ldnp	d18, d27, [x19, #-432]
     ddc:	756f532f 	.inst	0x756f532f ; undefined
     de0:	2f656372 	umlsl	v18.4s, v27.4h, v5.h[2]
     de4:	65686353 	fnmls	z19.h, p0/m, z26.h, z8.h
     de8:	656c7564 	fnmls	z4.h, p5/m, z11.h, z12.h
     dec:	68542f72 	.inst	0x68542f72 ; undefined
     df0:	64616572 	.inst	0x64616572 ; undefined
     df4:	2e676e69 	umin	v9.4h, v19.4h, v7.4h
     df8:	68740063 	.inst	0x68740063 ; undefined
     dfc:	64616572 	.inst	0x64616572 ; undefined
     e00:	5f676e69 	.inst	0x5f676e69 ; undefined
     e04:	74696e69 	.inst	0x74696e69 ; undefined
     e08:	756f6300 	.inst	0x756f6300 ; undefined
     e0c:	7265746e 	.inst	0x7265746e ; undefined
     e10:	6565735f 	fnmls	z31.h, p4/m, z26.h, z5.h
     e14:	6874006e 	.inst	0x6874006e ; undefined
     e18:	64616572 	.inst	0x64616572 ; undefined
     e1c:	73690073 	.inst	0x73690073 ; undefined
     e20:	7268745f 	.inst	0x7268745f ; undefined
     e24:	69646165 	ldpsw	x5, x24, [x11, #-224]
     e28:	725f676e 	.inst	0x725f676e ; undefined
     e2c:	79646165 	ldrh	w5, [x11, #4656]
     e30:	72656b00 	.inst	0x72656b00 ; undefined
     e34:	5f6c656e 	.inst	0x5f6c656e ; undefined
     e38:	72617473 	.inst	0x72617473 ; undefined
     e3c:	656b0074 	fmla	z20.h, p0/m, z3.h, z11.h
     e40:	6c656e72 	ldnp	d18, d27, [x19, #-432]
     e44:	776f6c5f 	.inst	0x776f6c5f ; undefined
     e48:	6c5f7265 	ldnp	d5, d28, [x19, #496]
     e4c:	61705f32 	.inst	0x61705f32 ; undefined
     e50:	745f6567 	.inst	0x745f6567 ; undefined
     e54:	656c6261 	fnmls	z1.h, p0/m, z19.h, z12.h
     e58:	6765625f 	.inst	0x6765625f ; undefined
     e5c:	63006e69 	.inst	0x63006e69 ; undefined
     e60:	74616572 	.inst	0x74616572 ; undefined
     e64:	61745f65 	.inst	0x61745f65 ; undefined
     e68:	5f656c62 	.inst	0x5f656c62 ; undefined
     e6c:	63736564 	.inst	0x63736564 ; undefined
     e70:	74706972 	.inst	0x74706972 ; undefined
     e74:	6e00726f 	ext	v15.16b, v19.16b, v0.16b, #14
     e78:	705f6d75 	adr	x21, bfc27 <__bss_size+0xbfc21>
     e7c:	73656761 	.inst	0x73656761 ; undefined
     e80:	7165725f 	cmp	w18, #0x95c, lsl #12
     e84:	65726975 	fnmls	z21.h, p2/m, z11.h, z18.h
     e88:	5f5f0064 	.inst	0x5f5f0064 ; undefined
     e8c:	00646e65 	.inst	0x00646e65 ; undefined
     e90:	6e72656b 	umax	v11.8h, v11.8h, v18.8h
     e94:	755f6c65 	.inst	0x755f6c65 ; undefined
     e98:	72657070 	.inst	0x72657070 ; undefined
     e9c:	5f336c5f 	.inst	0x5f336c5f ; undefined
     ea0:	65676170 	fnmls	z16.h, p0/m, z11.h, z7.h
     ea4:	6261745f 	.inst	0x6261745f ; undefined
     ea8:	655f656c 	fcmeq	p12.h, p1/z, z11.h, z31.h
     eac:	6b00646e 	subs	w14, w3, w0, lsl #25
     eb0:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
     eb4:	70755f6c 	adr	x12, ebaa3 <__bss_size+0xeba9d>
     eb8:	5f726570 	.inst	0x5f726570 ; undefined
     ebc:	705f336c 	adr	x12, bf52b <__bss_size+0xbf525>
     ec0:	5f656761 	.inst	0x5f656761 ; undefined
     ec4:	6c626174 	ldnp	d20, d24, [x11, #-480]
     ec8:	75635f65 	.inst	0x75635f65 ; undefined
     ecc:	6e657272 	uabdl2	v18.4s, v19.8h, v5.8h
     ed0:	656b0074 	fmla	z20.h, p0/m, z3.h, z11.h
     ed4:	6c656e72 	ldnp	d18, d27, [x19, #-432]
     ed8:	5f316c5f 	.inst	0x5f316c5f ; undefined
     edc:	65676170 	fnmls	z16.h, p0/m, z11.h, z7.h
     ee0:	6261745f 	.inst	0x6261745f ; undefined
     ee4:	625f656c 	.inst	0x625f656c ; undefined
     ee8:	6e696765 	umax	v5.8h, v27.8h, v9.8h
     eec:	72656b00 	.inst	0x72656b00 ; undefined
     ef0:	5f6c656e 	.inst	0x5f6c656e ; undefined
     ef4:	00646e65 	.inst	0x00646e65 ; undefined
     ef8:	61657263 	.inst	0x61657263 ; undefined
     efc:	6e5f6574 	.inst	0x6e5f6574 ; undefined
     f00:	616d726f 	.inst	0x616d726f ; undefined
     f04:	6c625f6c 	ldnp	d12, d23, [x27, #-480]
     f08:	5f6b636f 	.inst	0x5f6b636f ; undefined
     f0c:	63736564 	.inst	0x63736564 ; undefined
     f10:	74706972 	.inst	0x74706972 ; undefined
     f14:	6b00726f 	subs	w15, w19, w0, lsl #28
     f18:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
     f1c:	6f6c5f6c 	.inst	0x6f6c5f6c ; undefined
     f20:	5f726577 	.inst	0x5f726577 ; undefined
     f24:	705f336c 	adr	x12, bf593 <__bss_size+0xbf58d>
     f28:	5f656761 	.inst	0x5f656761 ; undefined
     f2c:	6c626174 	ldnp	d20, d24, [x11, #-480]
     f30:	756e5f65 	.inst	0x756e5f65 ; undefined
     f34:	61705f6d 	.inst	0x61705f6d ; undefined
     f38:	5f736567 	.inst	0x5f736567 ; undefined
     f3c:	64657375 	.inst	0x64657375 ; undefined
     f40:	65726300 	fnmls	z0.h, p0/m, z24.h, z18.h
     f44:	5f657461 	sqshl	d1, d3, #37
     f48:	69766564 	ldpsw	x4, x25, [x11, #-80]
     f4c:	625f6563 	.inst	0x625f6563 ; undefined
     f50:	6b636f6c 	.inst	0x6b636f6c ; undefined
     f54:	7365645f 	.inst	0x7365645f ; undefined
     f58:	70697263 	adr	x3, d3da7 <__bss_size+0xd3da1>
     f5c:	00726f74 	.inst	0x00726f74 ; undefined
     f60:	6e72656b 	umax	v11.8h, v11.8h, v18.8h
     f64:	6c5f6c65 	ldnp	d5, d27, [x3, #496]
     f68:	7265776f 	.inst	0x7265776f ; undefined
     f6c:	5f336c5f 	.inst	0x5f336c5f ; undefined
     f70:	65676170 	fnmls	z16.h, p0/m, z11.h, z7.h
     f74:	6261745f 	.inst	0x6261745f ; undefined
     f78:	625f656c 	.inst	0x625f656c ; undefined
     f7c:	6e696765 	umax	v5.8h, v27.8h, v9.8h
     f80:	73552f00 	.inst	0x73552f00 ; undefined
     f84:	2f737265 	.inst	0x2f737265 ; undefined
     f88:	61686278 	.inst	0x61686278 ; undefined
     f8c:	67616e74 	.inst	0x67616e74 ; undefined
     f90:	6f72502f 	.inst	0x6f72502f ; undefined
     f94:	7463656a 	.inst	0x7463656a ; undefined
     f98:	79582f73 	ldrh	w19, [x27, #3094]
     f9c:	4b2f534f 	sub	w15, w26, w15, uxtw #4
     fa0:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
     fa4:	6f532f6c 	.inst	0x6f532f6c ; undefined
     fa8:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
     fac:	7269562f 	.inst	0x7269562f ; undefined
     fb0:	6c617574 	ldnp	d20, d29, [x11, #-496]
     fb4:	6f6d654d 	sqshlu	v13.2d, v10.2d, #45
     fb8:	562f7972 	.inst	0x562f7972 ; undefined
     fbc:	75747269 	.inst	0x75747269 ; undefined
     fc0:	654d6c61 	fcmeq	p1.h, p3/z, z3.h, z13.h
     fc4:	79726f6d 	ldrh	w13, [x27, #6454]
     fc8:	7200632e 	ands	w14, w25, #0x1ffffff
     fcc:	69616d65 	ldpsw	x5, x27, [x11, #-248]
     fd0:	7265646e 	.inst	0x7265646e ; undefined
     fd4:	61656d00 	.inst	0x61656d00 ; undefined
     fd8:	65727573 	fnmls	z19.h, p5/m, z11.h, z18.h
     fdc:	7265705f 	.inst	0x7265705f ; undefined
     fe0:	65687069 	fnmls	z9.h, p4/m, z3.h, z8.h
     fe4:	736c6172 	.inst	0x736c6172 ; undefined
     fe8:	646e615f 	.inst	0x646e615f ; undefined
     fec:	6863735f 	.inst	0x6863735f ; undefined
     ff0:	6c756465 	ldnp	d5, d25, [x3, #-176]
     ff4:	735f7265 	.inst	0x735f7265 ; undefined
     ff8:	6b636174 	.inst	0x6b636174 ; undefined
     ffc:	61656d00 	.inst	0x61656d00 ; undefined
    1000:	65727573 	fnmls	z19.h, p5/m, z11.h, z18.h
    1004:	6761705f 	.inst	0x6761705f ; undefined
    1008:	61745f65 	.inst	0x61745f65 ; undefined
    100c:	73656c62 	.inst	0x73656c62 ; undefined
    1010:	696c6100 	ldpsw	x0, x24, [x8, #-160]
    1014:	64656e67 	.inst	0x64656e67 ; undefined
    1018:	72656b00 	.inst	0x72656b00 ; undefined
    101c:	5f6c656e 	.inst	0x5f6c656e ; undefined
    1020:	65776f6c 	fnmls	z12.h, p3/m, z27.h, z23.h
    1024:	336c5f72 	.inst	0x336c5f72 ; undefined
    1028:	6761705f 	.inst	0x6761705f ; undefined
    102c:	61745f65 	.inst	0x61745f65 ; undefined
    1030:	5f656c62 	.inst	0x5f656c62 ; undefined
    1034:	00646e65 	.inst	0x00646e65 ; undefined
    1038:	5f706f74 	.inst	0x5f706f74 ; undefined
    103c:	705f666f 	adr	x15, bfd0b <__bss_size+0xbfd05>
    1040:	69737968 	ldpsw	x8, x30, [x11, #-104]
    1044:	5f6c6163 	.inst	0x5f6c6163 ; undefined
    1048:	6f6d656d 	sqshlu	v13.2d, v11.2d, #45
    104c:	6e5f7972 	.inst	0x6e5f7972 ; undefined
    1050:	625f6d75 	.inst	0x625f6d75 ; undefined
    1054:	73657479 	.inst	0x73657479 ; undefined
    1058:	6573755f 	fnmls	z31.h, p5/m, z10.h, z19.h
    105c:	656b0064 	fmla	z4.h, p0/m, z3.h, z11.h
    1060:	6c656e72 	ldnp	d18, d27, [x19, #-432]
    1064:	7070755f 	adr	xzr, e1f0f <__bss_size+0xe1f09>
    1068:	6c5f7265 	ldnp	d5, d28, [x19, #496]
    106c:	61705f33 	.inst	0x61705f33 ; undefined
    1070:	745f6567 	.inst	0x745f6567 ; undefined
    1074:	656c6261 	fnmls	z1.h, p0/m, z19.h, z12.h
    1078:	6d756e5f 	ldp	d31, d27, [x18, #-176]
    107c:	6761705f 	.inst	0x6761705f ; undefined
    1080:	755f7365 	.inst	0x755f7365 ; undefined
    1084:	00646573 	.inst	0x00646573 ; undefined
    1088:	64646170 	.inst	0x64646170 ; undefined
    108c:	74735f72 	.inst	0x74735f72 ; undefined
    1090:	00747261 	.inst	0x00747261 ; undefined
    1094:	67696c61 	.inst	0x67696c61 ; undefined
    1098:	34365f6e 	cbz	w14, 6dc84 <__bss_size+0x6dc7e>
    109c:	00626b5f 	.inst	0x00626b5f ; undefined
    10a0:	7361656d 	.inst	0x7361656d ; undefined
    10a4:	5f657275 	sqdmlsl	s21, h19, v5.h[2]
    10a8:	5f706f74 	.inst	0x5f706f74 ; undefined
    10ac:	705f666f 	adr	x15, bfd7b <__bss_size+0xbfd75>
    10b0:	69737968 	ldpsw	x8, x30, [x11, #-104]
    10b4:	5f6c6163 	.inst	0x5f6c6163 ; undefined
    10b8:	6f6d656d 	sqshlu	v13.2d, v11.2d, #45
    10bc:	6b007972 	subs	w18, w11, w0, lsl #30
    10c0:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
    10c4:	70755f6c 	adr	x12, ebcb3 <__bss_size+0xebcad>
    10c8:	5f726570 	.inst	0x5f726570 ; undefined
    10cc:	705f326c 	adr	x12, bf71b <__bss_size+0xbf715>
    10d0:	5f656761 	.inst	0x5f656761 ; undefined
    10d4:	6c626174 	ldnp	d20, d24, [x11, #-480]
    10d8:	65625f65 	fnmla	z5.h, p7/m, z27.h, z2.h
    10dc:	006e6967 	.inst	0x006e6967 ; undefined
    10e0:	6e72656b 	umax	v11.8h, v11.8h, v18.8h
    10e4:	6c5f6c65 	ldnp	d5, d27, [x3, #496]
    10e8:	7265776f 	.inst	0x7265776f ; undefined
    10ec:	5f336c5f 	.inst	0x5f336c5f ; undefined
    10f0:	65676170 	fnmls	z16.h, p0/m, z11.h, z7.h
    10f4:	6261745f 	.inst	0x6261745f ; undefined
    10f8:	635f656c 	.inst	0x635f656c ; undefined
    10fc:	65727275 	fnmls	z21.h, p4/m, z19.h, z18.h
    1100:	6c00746e 	stnp	d14, d29, [x3]
    1104:	5f747361 	sqdmlsl	s1, h27, v4.h[3]
    1108:	65676170 	fnmls	z16.h, p0/m, z11.h, z7.h
    110c:	6461705f 	.inst	0x6461705f ; undefined
    1110:	76007264 	.inst	0x76007264 ; undefined
    1114:	72646461 	.inst	0x72646461 ; undefined
    1118:	6174735f 	.inst	0x6174735f ; undefined
    111c:	6b007472 	subs	w18, w3, w0, lsl #29
    1120:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
    1124:	316c5f6c 	adds	w12, w27, #0xb17, lsl #12
    1128:	6761705f 	.inst	0x6761705f ; undefined
    112c:	61745f65 	.inst	0x61745f65 ; undefined
    1130:	5f656c62 	.inst	0x5f656c62 ; undefined
    1134:	00646e65 	.inst	0x00646e65 ; undefined
    1138:	5f6d756e 	sqshl	d14, d11, #45
    113c:	65676170 	fnmls	z16.h, p0/m, z11.h, z7.h
    1140:	6b735f73 	.inst	0x6b735f73 ; undefined
    1144:	65707069 	fnmls	z9.h, p4/m, z3.h, z16.h
    1148:	61700064 	.inst	0x61700064 ; undefined
    114c:	5f726464 	.inst	0x5f726464 ; undefined
    1150:	00727563 	.inst	0x00727563 ; undefined
    1154:	6e72656b 	umax	v11.8h, v11.8h, v18.8h
    1158:	6c5f6c65 	ldnp	d5, d27, [x3, #496]
    115c:	7265776f 	.inst	0x7265776f ; undefined
    1160:	5f326c5f 	.inst	0x5f326c5f ; undefined
    1164:	65676170 	fnmls	z16.h, p0/m, z11.h, z7.h
    1168:	6261745f 	.inst	0x6261745f ; undefined
    116c:	655f656c 	fcmeq	p12.h, p1/z, z11.h, z31.h
    1170:	6b00646e 	subs	w14, w3, w0, lsl #25
    1174:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
    1178:	70755f6c 	adr	x12, ebd67 <__bss_size+0xebd61>
    117c:	5f726570 	.inst	0x5f726570 ; undefined
    1180:	705f326c 	adr	x12, bf7cf <__bss_size+0xbf7c9>
    1184:	5f656761 	.inst	0x5f656761 ; undefined
    1188:	6c626174 	ldnp	d20, d24, [x11, #-480]
    118c:	6e655f65 	uqrshl	v5.8h, v27.8h, v5.8h
    1190:	5f5f0064 	.inst	0x5f5f0064 ; undefined
    1194:	72617473 	.inst	0x72617473 ; undefined
    1198:	656b0074 	fmla	z20.h, p0/m, z3.h, z11.h
    119c:	6c656e72 	ldnp	d18, d27, [x19, #-432]
    11a0:	7070755f 	adr	xzr, e204b <__bss_size+0xe2045>
    11a4:	6c5f7265 	ldnp	d5, d28, [x19, #496]
    11a8:	61705f33 	.inst	0x61705f33 ; undefined
    11ac:	745f6567 	.inst	0x745f6567 ; undefined
    11b0:	656c6261 	fnmls	z1.h, p0/m, z19.h, z12.h
    11b4:	6765625f 	.inst	0x6765625f ; undefined
    11b8:	2f006e69 	.inst	0x2f006e69 ; undefined
    11bc:	72657355 	.inst	0x72657355 ; undefined
    11c0:	62782f73 	.inst	0x62782f73 ; undefined
    11c4:	6e746168 	rsubhn2	v8.8h, v11.4s, v20.4s
    11c8:	502f6761 	adr	x1, 5feb6 <__bss_size+0x5feb0>
    11cc:	656a6f72 	fnmls	z18.h, p3/m, z27.h, z10.h
    11d0:	2f737463 	.inst	0x2f737463 ; undefined
    11d4:	534f7958 	.inst	0x534f7958 ; undefined
    11d8:	72654b2f 	.inst	0x72654b2f ; undefined
    11dc:	2f6c656e 	.inst	0x2f6c656e ; undefined
    11e0:	72756f53 	.inst	0x72756f53 ; undefined
    11e4:	432f6563 	.inst	0x432f6563 ; undefined
    11e8:	2f65726f 	fcmla	v15.4h, v19.4h, v5.h[1], #270
    11ec:	746f6f42 	.inst	0x746f6f42 ; undefined
    11f0:	4700532e 	.inst	0x4700532e ; undefined
    11f4:	4120554e 	.inst	0x4120554e ; undefined
    11f8:	2e322053 	usubl	v19.8h, v2.8b, v18.8b
    11fc:	312e3932 	adds	w18, w9, #0xb8e
    1200:	73552f00 	.inst	0x73552f00 ; undefined
    1204:	2f737265 	.inst	0x2f737265 ; undefined
    1208:	61686278 	.inst	0x61686278 ; undefined
    120c:	67616e74 	.inst	0x67616e74 ; undefined
    1210:	6f72502f 	.inst	0x6f72502f ; undefined
    1214:	7463656a 	.inst	0x7463656a ; undefined
    1218:	79582f73 	ldrh	w19, [x27, #3094]
    121c:	4b2f534f 	sub	w15, w26, w15, uxtw #4
    1220:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
    1224:	6f532f6c 	.inst	0x6f532f6c ; undefined
    1228:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
    122c:	726f432f 	.inst	0x726f432f ; undefined
    1230:	614d2f65 	.inst	0x614d2f65 ; undefined
    1234:	73416e69 	.inst	0x73416e69 ; undefined
    1238:	626d6573 	.inst	0x626d6573 ; undefined
    123c:	532e796c 	.inst	0x532e796c ; undefined
    1240:	73552f00 	.inst	0x73552f00 ; undefined
    1244:	2f737265 	.inst	0x2f737265 ; undefined
    1248:	61686278 	.inst	0x61686278 ; undefined
    124c:	67616e74 	.inst	0x67616e74 ; undefined
    1250:	6f72502f 	.inst	0x6f72502f ; undefined
    1254:	7463656a 	.inst	0x7463656a ; undefined
    1258:	79582f73 	ldrh	w19, [x27, #3094]
    125c:	4b2f534f 	sub	w15, w26, w15, uxtw #4
    1260:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
    1264:	6f532f6c 	.inst	0x6f532f6c ; undefined
    1268:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
    126c:	6378452f 	.inst	0x6378452f ; undefined
    1270:	69747065 	ldpsw	x5, x28, [x3, #-96]
    1274:	2f736e6f 	.inst	0x2f736e6f ; undefined
    1278:	65637845 	fnmls	z5.h, p6/m, z2.h, z3.h
    127c:	6f697470 	uqshl	v16.2d, v3.2d, #41
    1280:	7341736e 	.inst	0x7341736e ; undefined
    1284:	626d6573 	.inst	0x626d6573 ; undefined
    1288:	532e796c 	.inst	0x532e796c ; undefined
    128c:	73552f00 	.inst	0x73552f00 ; undefined
    1290:	2f737265 	.inst	0x2f737265 ; undefined
    1294:	61686278 	.inst	0x61686278 ; undefined
    1298:	67616e74 	.inst	0x67616e74 ; undefined
    129c:	6f72502f 	.inst	0x6f72502f ; undefined
    12a0:	7463656a 	.inst	0x7463656a ; undefined
    12a4:	79582f73 	ldrh	w19, [x27, #3094]
    12a8:	4b2f534f 	sub	w15, w26, w15, uxtw #4
    12ac:	656e7265 	fnmls	z5.h, p4/m, z19.h, z14.h
    12b0:	6f532f6c 	.inst	0x6f532f6c ; undefined
    12b4:	65637275 	fnmls	z21.h, p4/m, z19.h, z3.h
    12b8:	6378452f 	.inst	0x6378452f ; undefined
    12bc:	69747065 	ldpsw	x5, x28, [x3, #-96]
    12c0:	2f736e6f 	.inst	0x2f736e6f ; undefined
    12c4:	74636556 	.inst	0x74636556 ; undefined
    12c8:	6154726f 	.inst	0x6154726f ; undefined
    12cc:	2e656c62 	umin	v2.4h, v3.4h, v5.4h
    12d0:	552f0053 	.inst	0x552f0053 ; undefined
    12d4:	73726573 	.inst	0x73726573 ; undefined
    12d8:	6862782f 	.inst	0x6862782f ; undefined
    12dc:	616e7461 	.inst	0x616e7461 ; undefined
    12e0:	72502f67 	.inst	0x72502f67 ; undefined
    12e4:	63656a6f 	.inst	0x63656a6f ; undefined
    12e8:	582f7374 	ldr	x20, 60154 <__bss_size+0x6014e>
    12ec:	2f534f79 	.inst	0x2f534f79 ; undefined
    12f0:	6e72654b 	umax	v11.8h, v10.8h, v18.8h
    12f4:	532f6c65 	.inst	0x532f6c65 ; undefined
    12f8:	6372756f 	.inst	0x6372756f ; undefined
    12fc:	69562f65 	ldpsw	x5, x11, [x27, #176]
    1300:	61757472 	.inst	0x61757472 ; undefined
    1304:	6d654d6c 	ldp	d12, d19, [x11, #-432]
    1308:	2f79726f 	.inst	0x2f79726f ; undefined
    130c:	6e617254 	uabdl2	v20.4s, v18.8h, v1.8h
    1310:	74616c73 	.inst	0x74616c73 ; undefined
    1314:	2e6e6f69 	umin	v9.4h, v27.4h, v14.4h
    1318:	Address 0x0000000000001318 is out of bounds.


Disassembly of section .debug_frame:

0000000000000000 <.debug_frame>:
       0:	0000000c 	.inst	0x0000000c ; undefined
       4:	ffffffff 	.inst	0xffffffff ; undefined
       8:	78040001 	sturh	w1, [x0, #64]
       c:	001f0c1e 	.inst	0x001f0c1e ; undefined
      10:	00000034 	.word	0x00000034
      14:	00000000 	.word	0x00000000
      18:	000e00c0 	.word	0x000e00c0
      1c:	ffff0000 	.word	0xffff0000
      20:	00000040 	.word	0x00000040
      24:	00000000 	.word	0x00000000
      28:	9d200e41 	.word	0x9d200e41
      2c:	41039e04 	.word	0x41039e04
      30:	93411d0d 	.word	0x93411d0d
      34:	de0a4602 	.word	0xde0a4602
      38:	1f0cd3dd 	.word	0x1f0cd3dd
      3c:	450b4100 	.word	0x450b4100
      40:	0cd3ddde 	.word	0x0cd3ddde
      44:	0000001f 	.word	0x0000001f
      48:	00000034 	.word	0x00000034
      4c:	00000000 	.word	0x00000000
      50:	000e0100 	.word	0x000e0100
      54:	ffff0000 	.word	0xffff0000
      58:	00000094 	.word	0x00000094
      5c:	00000000 	.word	0x00000000
      60:	9d300e41 	.word	0x9d300e41
      64:	41059e06 	.word	0x41059e06
      68:	93411d0d 	.word	0x93411d0d
      6c:	42039404 	.word	0x42039404
      70:	01960295 	.word	0x01960295
      74:	d5ddde5f 	.word	0xd5ddde5f
      78:	0cd4d3d6 	.word	0x0cd4d3d6
      7c:	0000001f 	.word	0x0000001f
      80:	00000024 	.word	0x00000024
      84:	00000000 	.word	0x00000000
      88:	000e01a0 	.word	0x000e01a0
      8c:	ffff0000 	.word	0xffff0000
      90:	00000014 	.word	0x00000014
      94:	00000000 	.word	0x00000000
      98:	9d100e41 	.word	0x9d100e41
      9c:	41019e02 	.word	0x41019e02
      a0:	de421d0d 	.word	0xde421d0d
      a4:	001f0cdd 	.word	0x001f0cdd
      a8:	00000014 	.word	0x00000014
      ac:	00000000 	.word	0x00000000
      b0:	000e01c0 	.word	0x000e01c0
      b4:	ffff0000 	.word	0xffff0000
      b8:	00000020 	.word	0x00000020
      bc:	00000000 	.word	0x00000000
      c0:	00000014 	.word	0x00000014
      c4:	00000000 	.word	0x00000000
      c8:	000e01e0 	.word	0x000e01e0
      cc:	ffff0000 	.word	0xffff0000
      d0:	00000050 	.word	0x00000050
      d4:	00000000 	.word	0x00000000
      d8:	00000014 	.word	0x00000014
      dc:	00000000 	.word	0x00000000
      e0:	000e0230 	.word	0x000e0230
      e4:	ffff0000 	.word	0xffff0000
      e8:	00000078 	.word	0x00000078
      ec:	00000000 	.word	0x00000000
      f0:	00000014 	.word	0x00000014
      f4:	00000000 	.word	0x00000000
      f8:	000e02b0 	.word	0x000e02b0
      fc:	ffff0000 	.word	0xffff0000
     100:	000000a4 	.word	0x000000a4
     104:	00000000 	.word	0x00000000
     108:	00000014 	.word	0x00000014
     10c:	00000000 	.word	0x00000000
     110:	000e0360 	.word	0x000e0360
     114:	ffff0000 	.word	0xffff0000
     118:	000000cc 	.word	0x000000cc
     11c:	00000000 	.word	0x00000000
     120:	0000003c 	.word	0x0000003c
     124:	00000000 	.word	0x00000000
     128:	000e0430 	.word	0x000e0430
     12c:	ffff0000 	.word	0xffff0000
     130:	00000064 	.word	0x00000064
     134:	00000000 	.word	0x00000000
     138:	9d200e41 	.word	0x9d200e41
     13c:	41039e04 	.word	0x41039e04
     140:	93411d0d 	.word	0x93411d0d
     144:	4b019402 	.word	0x4b019402
     148:	d3ddde0a 	.word	0xd3ddde0a
     14c:	001f0cd4 	.word	0x001f0cd4
     150:	de480b42 	.word	0xde480b42
     154:	0cd4d3dd 	.word	0x0cd4d3dd
     158:	0000001f 	.word	0x0000001f
     15c:	00000000 	.word	0x00000000
     160:	00000024 	.word	0x00000024
     164:	00000000 	.word	0x00000000
     168:	000e04a0 	.word	0x000e04a0
     16c:	ffff0000 	.word	0xffff0000
     170:	00000024 	.word	0x00000024
     174:	00000000 	.word	0x00000000
     178:	9d100e41 	.word	0x9d100e41
     17c:	42019e02 	.word	0x42019e02
     180:	de441d0d 	.word	0xde441d0d
     184:	001f0cdd 	.word	0x001f0cdd
     188:	0000003c 	.word	0x0000003c
     18c:	00000000 	.word	0x00000000
     190:	000e04d0 	.word	0x000e04d0
     194:	ffff0000 	.word	0xffff0000
     198:	00000074 	.word	0x00000074
     19c:	00000000 	.word	0x00000000
     1a0:	9d200e41 	.word	0x9d200e41
     1a4:	41039e04 	.word	0x41039e04
     1a8:	93411d0d 	.word	0x93411d0d
     1ac:	4d019402 	.word	0x4d019402
     1b0:	d3ddde0a 	.word	0xd3ddde0a
     1b4:	001f0cd4 	.word	0x001f0cd4
     1b8:	de4a0b42 	.word	0xde4a0b42
     1bc:	0cd4d3dd 	.word	0x0cd4d3dd
     1c0:	0000001f 	.word	0x0000001f
     1c4:	00000000 	.word	0x00000000
     1c8:	00000064 	.word	0x00000064
     1cc:	00000000 	.word	0x00000000
     1d0:	000e0550 	.word	0x000e0550
     1d4:	ffff0000 	.word	0xffff0000
     1d8:	00000158 	.word	0x00000158
     1dc:	00000000 	.word	0x00000000
     1e0:	9d400e41 	.word	0x9d400e41
     1e4:	41079e08 	.word	0x41079e08
     1e8:	93421d0d 	.word	0x93421d0d
     1ec:	96049506 	.word	0x96049506
     1f0:	02974303 	.word	0x02974303
     1f4:	4d05944e 	.word	0x4d05944e
     1f8:	de0a4cd4 	.word	0xde0a4cd4
     1fc:	d6d5d7dd 	.word	0xd6d5d7dd
     200:	001f0cd3 	.word	0x001f0cd3
     204:	de4a0b42 	.word	0xde4a0b42
     208:	d6d5d7dd 	.word	0xd6d5d7dd
     20c:	001f0cd3 	.word	0x001f0cd3
     210:	401d0c42 	.word	0x401d0c42
     214:	05940693 	.word	0x05940693
     218:	03960495 	.word	0x03960495
     21c:	089d0297 	.word	0x089d0297
     220:	d452079e 	.word	0xd452079e
     224:	44059441 	.word	0x44059441
     228:	0b41d40a 	.word	0x0b41d40a
     22c:	0000d441 	.word	0x0000d441
     230:	000000c4 	.word	0x000000c4
     234:	00000000 	.word	0x00000000
     238:	000e06b0 	.word	0x000e06b0
     23c:	ffff0000 	.word	0xffff0000
     240:	0000079c 	.word	0x0000079c
     244:	00000000 	.word	0x00000000
     248:	01800e41 	.word	0x01800e41
     24c:	0f9e109d 	.word	0x0f9e109d
     250:	411d0d41 	.word	0x411d0d41
     254:	0d940e93 	.word	0x0d940e93
     258:	960c9544 	.word	0x960c9544
     25c:	980a970b 	.word	0x980a970b
     260:	08994409 	.word	0x08994409
     264:	ddde0a51 	.word	0xddde0a51
     268:	d5d8d7d9 	.word	0xd5d8d7d9
     26c:	0cd4d3d6 	.word	0x0cd4d3d6
     270:	0b42001f 	.word	0x0b42001f
     274:	9a069b63 	.word	0x9a069b63
     278:	dbda6307 	.word	0xdbda6307
     27c:	ddde0a55 	.word	0xddde0a55
     280:	d5d8d7d9 	.word	0xd5d8d7d9
     284:	0cd4d3d6 	.word	0x0cd4d3d6
     288:	0b41001f 	.word	0x0b41001f
     28c:	9a069b47 	.word	0x9a069b47
     290:	059c4107 	.word	0x059c4107
     294:	41dadb63 	.word	0x41dadb63
     298:	079a48dc 	.word	0x079a48dc
     29c:	059c069b 	.word	0x059c069b
     2a0:	dcdbda47 	.word	0xdcdbda47
     2a4:	9a069b4c 	.word	0x9a069b4c
     2a8:	0a440207 	.word	0x0a440207
     2ac:	0b41dadb 	.word	0x0b41dadb
     2b0:	44dadb4b 	.word	0x44dadb4b
     2b4:	069b079a 	.word	0x069b079a
     2b8:	41dadb48 	.word	0x41dadb48
     2bc:	069b079a 	.word	0x069b079a
     2c0:	da43059c 	.word	0xda43059c
     2c4:	9b41dcdb 	.word	0x9b41dcdb
     2c8:	02079a06 	.word	0x02079a06
     2cc:	dadb0a4a 	.word	0xdadb0a4a
     2d0:	0a490b42 	.word	0x0a490b42
     2d4:	0b41dadb 	.word	0x0b41dadb
     2d8:	dadb0a74 	.word	0xdadb0a74
     2dc:	0a490b42 	.word	0x0a490b42
     2e0:	0b41dadb 	.word	0x0b41dadb
     2e4:	48059c50 	.word	0x48059c50
     2e8:	48dcdbda 	.word	0x48dcdbda
     2ec:	069b079a 	.word	0x069b079a
     2f0:	43059c46 	.word	0x43059c46
     2f4:	dbda43dc 	.word	0xdbda43dc
     2f8:	0000002c 	.word	0x0000002c
     2fc:	00000000 	.word	0x00000000
     300:	000e0e50 	.word	0x000e0e50
     304:	ffff0000 	.word	0xffff0000
     308:	00000054 	.word	0x00000054
     30c:	00000000 	.word	0x00000000
     310:	01900e41 	.word	0x01900e41
     314:	119e129d 	.word	0x119e129d
     318:	521d0d41 	.word	0x521d0d41
     31c:	1f0cddde 	.word	0x1f0cddde
	...
     328:	0000000c 	.word	0x0000000c
     32c:	ffffffff 	.word	0xffffffff
     330:	78040001 	.word	0x78040001
     334:	001f0c1e 	.word	0x001f0c1e
     338:	00000024 	.word	0x00000024
     33c:	00000328 	.word	0x00000328
     340:	000e4850 	.word	0x000e4850
     344:	ffff0000 	.word	0xffff0000
     348:	00000154 	.word	0x00000154
     34c:	00000000 	.word	0x00000000
     350:	9d100e41 	.word	0x9d100e41
     354:	43019e02 	.word	0x43019e02
     358:	00001d0d 	.word	0x00001d0d
     35c:	00000000 	.word	0x00000000
     360:	0000000c 	.word	0x0000000c
     364:	ffffffff 	.word	0xffffffff
     368:	78040001 	.word	0x78040001
     36c:	001f0c1e 	.word	0x001f0c1e
     370:	00000024 	.word	0x00000024
     374:	00000360 	.word	0x00000360
     378:	000e0eb0 	.word	0x000e0eb0
     37c:	ffff0000 	.word	0xffff0000
     380:	0000002c 	.word	0x0000002c
     384:	00000000 	.word	0x00000000
     388:	9d100e41 	.word	0x9d100e41
     38c:	43019e02 	.word	0x43019e02
     390:	de451d0d 	.word	0xde451d0d
     394:	001f0cdd 	.word	0x001f0cdd
     398:	0000002c 	.word	0x0000002c
     39c:	00000360 	.word	0x00000360
     3a0:	000e0ee0 	.word	0x000e0ee0
     3a4:	ffff0000 	.word	0xffff0000
     3a8:	0000003c 	.word	0x0000003c
     3ac:	00000000 	.word	0x00000000
     3b0:	9d200e41 	.word	0x9d200e41
     3b4:	41039e04 	.word	0x41039e04
     3b8:	93411d0d 	.word	0x93411d0d
     3bc:	ddde4b02 	.word	0xddde4b02
     3c0:	001f0cd3 	.word	0x001f0cd3
     3c4:	00000000 	.word	0x00000000
     3c8:	00000024 	.word	0x00000024
     3cc:	00000360 	.word	0x00000360
     3d0:	000e0f20 	.word	0x000e0f20
     3d4:	ffff0000 	.word	0xffff0000
     3d8:	00000034 	.word	0x00000034
     3dc:	00000000 	.word	0x00000000
     3e0:	9d100e41 	.word	0x9d100e41
     3e4:	43019e02 	.word	0x43019e02
     3e8:	de481d0d 	.word	0xde481d0d
     3ec:	001f0cdd 	.word	0x001f0cdd
     3f0:	0000002c 	.word	0x0000002c
     3f4:	00000360 	.word	0x00000360
     3f8:	000e0f60 	.word	0x000e0f60
     3fc:	ffff0000 	.word	0xffff0000
     400:	00000030 	.word	0x00000030
     404:	00000000 	.word	0x00000000
     408:	9d200e41 	.word	0x9d200e41
     40c:	41039e04 	.word	0x41039e04
     410:	93411d0d 	.word	0x93411d0d
     414:	ddde4802 	.word	0xddde4802
     418:	001f0cd3 	.word	0x001f0cd3
     41c:	00000000 	.word	0x00000000
     420:	00000014 	.word	0x00000014
     424:	00000360 	.word	0x00000360
     428:	000e0f90 	.word	0x000e0f90
     42c:	ffff0000 	.word	0xffff0000
     430:	00000004 	.word	0x00000004
     434:	00000000 	.word	0x00000000
     438:	00000064 	.word	0x00000064
     43c:	00000360 	.word	0x00000360
     440:	000e0fa0 	.word	0x000e0fa0
     444:	ffff0000 	.word	0xffff0000
     448:	000000e4 	.word	0x000000e4
     44c:	00000000 	.word	0x00000000
     450:	9d200e41 	.word	0x9d200e41
     454:	43039e04 	.word	0x43039e04
     458:	0a491d0d 	.word	0x0a491d0d
     45c:	1f0cddde 	.word	0x1f0cddde
     460:	4b0b4300 	.word	0x4b0b4300
     464:	0cddde0a 	.word	0x0cddde0a
     468:	0b42001f 	.word	0x0b42001f
     46c:	ddde0a4b 	.word	0xddde0a4b
     470:	41001f0c 	.word	0x41001f0c
     474:	de0a410b 	.word	0xde0a410b
     478:	001f0cdd 	.word	0x001f0cdd
     47c:	0a410b41 	.word	0x0a410b41
     480:	1f0cddde 	.word	0x1f0cddde
     484:	410b4200 	.word	0x410b4200
     488:	d3470293 	.word	0xd3470293
     48c:	0cddde41 	.word	0x0cddde41
     490:	0c41001f 	.word	0x0c41001f
     494:	049d201d 	.word	0x049d201d
     498:	0000039e 	.word	0x0000039e
     49c:	00000000 	.word	0x00000000
     4a0:	0000002c 	.word	0x0000002c
     4a4:	00000360 	.word	0x00000360
     4a8:	000e1090 	.word	0x000e1090
     4ac:	ffff0000 	.word	0xffff0000
     4b0:	00000150 	.word	0x00000150
     4b4:	00000000 	.word	0x00000000
     4b8:	9d400e41 	.word	0x9d400e41
     4bc:	43079e08 	.word	0x43079e08
     4c0:	93411d0d 	.word	0x93411d0d
     4c4:	44059406 	.word	0x44059406
     4c8:	03960495 	.word	0x03960495
     4cc:	01980297 	.word	0x01980297
     4d0:	0000000c 	.word	0x0000000c
     4d4:	ffffffff 	.word	0xffffffff
     4d8:	78040001 	.word	0x78040001
     4dc:	001f0c1e 	.word	0x001f0c1e
     4e0:	00000024 	.word	0x00000024
     4e4:	000004d0 	.word	0x000004d0
     4e8:	000e11e0 	.word	0x000e11e0
     4ec:	ffff0000 	.word	0xffff0000
     4f0:	00000080 	.word	0x00000080
     4f4:	00000000 	.word	0x00000000
     4f8:	9d100e41 	.word	0x9d100e41
     4fc:	43019e02 	.word	0x43019e02
     500:	de591d0d 	.word	0xde591d0d
     504:	001f0cdd 	.word	0x001f0cdd
     508:	00000024 	.word	0x00000024
     50c:	000004d0 	.word	0x000004d0
     510:	000e1260 	.word	0x000e1260
     514:	ffff0000 	.word	0xffff0000
     518:	00000034 	.word	0x00000034
     51c:	00000000 	.word	0x00000000
     520:	9d200e41 	.word	0x9d200e41
     524:	41039e04 	.word	0x41039e04
     528:	93411d0d 	.word	0x93411d0d
     52c:	00000002 	.word	0x00000002
     530:	0000002c 	.word	0x0000002c
     534:	000004d0 	.word	0x000004d0
     538:	000e12a0 	.word	0x000e12a0
     53c:	ffff0000 	.word	0xffff0000
     540:	00000044 	.word	0x00000044
     544:	00000000 	.word	0x00000000
     548:	9d100e41 	.word	0x9d100e41
     54c:	41019e02 	.word	0x41019e02
     550:	0a461d0d 	.word	0x0a461d0d
     554:	1f0cddde 	.word	0x1f0cddde
     558:	000b4100 	.word	0x000b4100
     55c:	00000000 	.word	0x00000000
     560:	00000024 	.word	0x00000024
     564:	000004d0 	.word	0x000004d0
     568:	000e12f0 	.word	0x000e12f0
     56c:	ffff0000 	.word	0xffff0000
     570:	00000014 	.word	0x00000014
     574:	00000000 	.word	0x00000000
     578:	9d100e41 	.word	0x9d100e41
     57c:	43019e02 	.word	0x43019e02
     580:	00001d0d 	.word	0x00001d0d
     584:	00000000 	.word	0x00000000
     588:	00000024 	.word	0x00000024
     58c:	000004d0 	.word	0x000004d0
     590:	000e1310 	.word	0x000e1310
     594:	ffff0000 	.word	0xffff0000
     598:	00000014 	.word	0x00000014
     59c:	00000000 	.word	0x00000000
     5a0:	9d100e41 	.word	0x9d100e41
     5a4:	43019e02 	.word	0x43019e02
     5a8:	00001d0d 	.word	0x00001d0d
     5ac:	00000000 	.word	0x00000000
     5b0:	0000000c 	.word	0x0000000c
     5b4:	ffffffff 	.word	0xffffffff
     5b8:	78040001 	.word	0x78040001
     5bc:	001f0c1e 	.word	0x001f0c1e
     5c0:	00000014 	.word	0x00000014
     5c4:	000005b0 	.word	0x000005b0
     5c8:	000e1330 	.word	0x000e1330
     5cc:	ffff0000 	.word	0xffff0000
     5d0:	00000020 	.word	0x00000020
     5d4:	00000000 	.word	0x00000000
     5d8:	00000014 	.word	0x00000014
     5dc:	000005b0 	.word	0x000005b0
     5e0:	000e1350 	.word	0x000e1350
     5e4:	ffff0000 	.word	0xffff0000
     5e8:	0000001c 	.word	0x0000001c
     5ec:	00000000 	.word	0x00000000
     5f0:	00000014 	.word	0x00000014
     5f4:	000005b0 	.word	0x000005b0
     5f8:	000e1370 	.word	0x000e1370
     5fc:	ffff0000 	.word	0xffff0000
     600:	00000010 	.word	0x00000010
     604:	00000000 	.word	0x00000000
     608:	00000014 	.word	0x00000014
     60c:	000005b0 	.word	0x000005b0
     610:	000e1380 	.word	0x000e1380
     614:	ffff0000 	.word	0xffff0000
     618:	00000010 	.word	0x00000010
     61c:	00000000 	.word	0x00000000
     620:	00000014 	.word	0x00000014
     624:	000005b0 	.word	0x000005b0
     628:	000e1390 	.word	0x000e1390
     62c:	ffff0000 	.word	0xffff0000
     630:	00000010 	.word	0x00000010
     634:	00000000 	.word	0x00000000
     638:	00000014 	.word	0x00000014
     63c:	000005b0 	.word	0x000005b0
     640:	000e13a0 	.word	0x000e13a0
     644:	ffff0000 	.word	0xffff0000
     648:	00000014 	.word	0x00000014
     64c:	00000000 	.word	0x00000000
     650:	0000000c 	.word	0x0000000c
     654:	ffffffff 	.word	0xffffffff
     658:	78040001 	.word	0x78040001
     65c:	001f0c1e 	.word	0x001f0c1e
     660:	00000014 	.word	0x00000014
     664:	00000650 	.word	0x00000650
     668:	000e13c0 	.word	0x000e13c0
     66c:	ffff0000 	.word	0xffff0000
     670:	000000d8 	.word	0x000000d8
     674:	00000000 	.word	0x00000000
     678:	00000014 	.word	0x00000014
     67c:	00000650 	.word	0x00000650
     680:	000e14a0 	.word	0x000e14a0
     684:	ffff0000 	.word	0xffff0000
     688:	00000038 	.word	0x00000038
     68c:	00000000 	.word	0x00000000
     690:	00000014 	.word	0x00000014
     694:	00000650 	.word	0x00000650
     698:	000e14e0 	.word	0x000e14e0
     69c:	ffff0000 	.word	0xffff0000
     6a0:	00000038 	.word	0x00000038
     6a4:	00000000 	.word	0x00000000
     6a8:	00000014 	.word	0x00000014
     6ac:	00000650 	.word	0x00000650
     6b0:	000e1520 	.word	0x000e1520
     6b4:	ffff0000 	.word	0xffff0000
     6b8:	0000005c 	.word	0x0000005c
     6bc:	00000000 	.word	0x00000000
     6c0:	0000000c 	.word	0x0000000c
     6c4:	ffffffff 	.word	0xffffffff
     6c8:	78040001 	.word	0x78040001
     6cc:	001f0c1e 	.word	0x001f0c1e
     6d0:	00000024 	.word	0x00000024
     6d4:	000006c0 	.word	0x000006c0
     6d8:	000e1580 	.word	0x000e1580
     6dc:	ffff0000 	.word	0xffff0000
     6e0:	00000030 	.word	0x00000030
     6e4:	00000000 	.word	0x00000000
     6e8:	9d100e41 	.word	0x9d100e41
     6ec:	43019e02 	.word	0x43019e02
     6f0:	de451d0d 	.word	0xde451d0d
     6f4:	001f0cdd 	.word	0x001f0cdd
     6f8:	00000014 	.word	0x00000014
     6fc:	000006c0 	.word	0x000006c0
     700:	000e15b0 	.word	0x000e15b0
     704:	ffff0000 	.word	0xffff0000
     708:	0000000c 	.word	0x0000000c
     70c:	00000000 	.word	0x00000000
     710:	00000014 	.word	0x00000014
     714:	000006c0 	.word	0x000006c0
     718:	000e15c0 	.word	0x000e15c0
     71c:	ffff0000 	.word	0xffff0000
     720:	0000000c 	.word	0x0000000c
     724:	00000000 	.word	0x00000000
     728:	00000014 	.word	0x00000014
     72c:	000006c0 	.word	0x000006c0
     730:	000e15d0 	.word	0x000e15d0
     734:	ffff0000 	.word	0xffff0000
     738:	0000000c 	.word	0x0000000c
     73c:	00000000 	.word	0x00000000
     740:	0000000c 	.word	0x0000000c
     744:	ffffffff 	.word	0xffffffff
     748:	78040001 	.word	0x78040001
     74c:	001f0c1e 	.word	0x001f0c1e
     750:	00000024 	.word	0x00000024
     754:	00000740 	.word	0x00000740
     758:	000e15e0 	.word	0x000e15e0
     75c:	ffff0000 	.word	0xffff0000
     760:	000000e0 	.word	0x000000e0
     764:	00000000 	.word	0x00000000
     768:	9d100e41 	.word	0x9d100e41
     76c:	43019e02 	.word	0x43019e02
     770:	de731d0d 	.word	0xde731d0d
     774:	001f0cdd 	.word	0x001f0cdd
     778:	00000014 	.word	0x00000014
     77c:	00000740 	.word	0x00000740
     780:	000e16c0 	.word	0x000e16c0
     784:	ffff0000 	.word	0xffff0000
     788:	00000018 	.word	0x00000018
     78c:	00000000 	.word	0x00000000
     790:	00000014 	.word	0x00000014
     794:	00000740 	.word	0x00000740
     798:	000e16e0 	.word	0x000e16e0
     79c:	ffff0000 	.word	0xffff0000
     7a0:	00000024 	.word	0x00000024
     7a4:	00000000 	.word	0x00000000
     7a8:	00000014 	.word	0x00000014
     7ac:	00000740 	.word	0x00000740
     7b0:	000e1710 	.word	0x000e1710
     7b4:	ffff0000 	.word	0xffff0000
     7b8:	00000018 	.word	0x00000018
     7bc:	00000000 	.word	0x00000000
     7c0:	00000014 	.word	0x00000014
     7c4:	00000740 	.word	0x00000740
     7c8:	000e1730 	.word	0x000e1730
     7cc:	ffff0000 	.word	0xffff0000
     7d0:	00000024 	.word	0x00000024
     7d4:	00000000 	.word	0x00000000
     7d8:	0000000c 	.word	0x0000000c
     7dc:	ffffffff 	.word	0xffffffff
     7e0:	78040001 	.word	0x78040001
     7e4:	001f0c1e 	.word	0x001f0c1e
     7e8:	0000007c 	.word	0x0000007c
     7ec:	000007d8 	.word	0x000007d8
     7f0:	000e1760 	.word	0x000e1760
     7f4:	ffff0000 	.word	0xffff0000
     7f8:	000002c0 	.word	0x000002c0
     7fc:	00000000 	.word	0x00000000
     800:	01d00e41 	.word	0x01d00e41
     804:	199e1a9d 	.word	0x199e1a9d
     808:	411d0d42 	.word	0x411d0d42
     80c:	95551893 	.word	0x95551893
     810:	17945316 	.word	0x17945316
     814:	43129945 	.word	0x43129945
     818:	14971398 	.word	0x14971398
     81c:	7a159664 	.word	0x7a159664
     820:	d6d741d4 	.word	0xd6d741d4
     824:	43d8d941 	.word	0x43d8d941
     828:	d3d5ddde 	.word	0xd3d5ddde
     82c:	41001f0c 	.word	0x41001f0c
     830:	01d01d0c 	.word	0x01d01d0c
     834:	17941893 	.word	0x17941893
     838:	14971695 	.word	0x14971695
     83c:	12991398 	.word	0x12991398
     840:	199e1a9d 	.word	0x199e1a9d
     844:	15960a43 	.word	0x15960a43
     848:	0a430b41 	.word	0x0a430b41
     84c:	0b411596 	.word	0x0b411596
     850:	15960a43 	.word	0x15960a43
     854:	96430b41 	.word	0x96430b41
     858:	d7d64415 	.word	0xd7d64415
     85c:	9743d9d8 	.word	0x9743d9d8
     860:	41159614 	.word	0x41159614
     864:	13981299 	.word	0x13981299
     868:	00000034 	.word	0x00000034
     86c:	000007d8 	.word	0x000007d8
     870:	000e1a20 	.word	0x000e1a20
     874:	ffff0000 	.word	0xffff0000
     878:	00000064 	.word	0x00000064
     87c:	00000000 	.word	0x00000000
     880:	9d200e41 	.word	0x9d200e41
     884:	41039e04 	.word	0x41039e04
     888:	93411d0d 	.word	0x93411d0d
     88c:	de0a4c02 	.word	0xde0a4c02
     890:	1f0cd3dd 	.word	0x1f0cd3dd
     894:	480b4100 	.word	0x480b4100
     898:	0cd3ddde 	.word	0x0cd3ddde
     89c:	0000001f 	.word	0x0000001f
     8a0:	00000044 	.word	0x00000044
     8a4:	000007d8 	.word	0x000007d8
     8a8:	000e1a90 	.word	0x000e1a90
     8ac:	ffff0000 	.word	0xffff0000
     8b0:	0000012c 	.word	0x0000012c
     8b4:	00000000 	.word	0x00000000
     8b8:	01d00e41 	.word	0x01d00e41
     8bc:	199e1a9d 	.word	0x199e1a9d
     8c0:	551d0d43 	.word	0x551d0d43
     8c4:	18931794 	.word	0x18931794
     8c8:	67169542 	.word	0x67169542
     8cc:	d542d3d4 	.word	0xd542d3d4
     8d0:	ddde0a41 	.word	0xddde0a41
     8d4:	41001f0c 	.word	0x41001f0c
     8d8:	1794430b 	.word	0x1794430b
     8dc:	95411893 	.word	0x95411893
     8e0:	00000016 	.word	0x00000016
     8e4:	00000000 	.word	0x00000000
     8e8:	0000002c 	.word	0x0000002c
     8ec:	000007d8 	.word	0x000007d8
     8f0:	000e1bc0 	.word	0x000e1bc0
     8f4:	ffff0000 	.word	0xffff0000
     8f8:	000000e8 	.word	0x000000e8
     8fc:	00000000 	.word	0x00000000
     900:	9d200e41 	.word	0x9d200e41
     904:	41039e04 	.word	0x41039e04
     908:	93411d0d 	.word	0x93411d0d
     90c:	de0a6102 	.word	0xde0a6102
     910:	1f0cd3dd 	.word	0x1f0cd3dd
     914:	000b4100 	.word	0x000b4100
     918:	0000000c 	.word	0x0000000c
     91c:	ffffffff 	.word	0xffffffff
     920:	78040001 	.word	0x78040001
     924:	001f0c1e 	.word	0x001f0c1e
     928:	00000054 	.word	0x00000054
     92c:	00000918 	.word	0x00000918
     930:	000e1cb0 	.word	0x000e1cb0
     934:	ffff0000 	.word	0xffff0000
     938:	000000b0 	.word	0x000000b0
     93c:	00000000 	.word	0x00000000
     940:	9d600e41 	.word	0x9d600e41
     944:	410b9e0c 	.word	0x410b9e0c
     948:	9c411d0d 	.word	0x9c411d0d
     94c:	07964401 	.word	0x07964401
     950:	98420895 	.word	0x98420895
     954:	42069705 	.word	0x42069705
     958:	0499039a 	.word	0x0499039a
     95c:	43029b42 	.word	0x43029b42
     960:	0a930994 	.word	0x0a930994
     964:	41d3d455 	.word	0x41d3d455
     968:	d841d5d6 	.word	0xd841d5d6
     96c:	d9da41d7 	.word	0xd9da41d7
     970:	de42db41 	.word	0xde42db41
     974:	1f0cdcdd 	.word	0x1f0cdcdd
	...
     980:	0000004c 	.word	0x0000004c
     984:	00000918 	.word	0x00000918
     988:	000e1d60 	.word	0x000e1d60
     98c:	ffff0000 	.word	0xffff0000
     990:	000000bc 	.word	0x000000bc
     994:	00000000 	.word	0x00000000
     998:	9d600e41 	.word	0x9d600e41
     99c:	410b9e0c 	.word	0x410b9e0c
     9a0:	98441d0d 	.word	0x98441d0d
     9a4:	45049905 	.word	0x45049905
     9a8:	9643039a 	.word	0x9643039a
     9ac:	42089507 	.word	0x42089507
     9b0:	9442029b 	.word	0x9442029b
     9b4:	420a9309 	.word	0x420a9309
     9b8:	d4540697 	.word	0xd4540697
     9bc:	d5d641d3 	.word	0xd5d641d3
     9c0:	db41d741 	.word	0xdb41d741
     9c4:	daddde43 	.word	0xdaddde43
     9c8:	1f0cd9d8 	.word	0x1f0cd9d8
     9cc:	00000000 	.word	0x00000000
     9d0:	0000003c 	.word	0x0000003c
     9d4:	00000918 	.word	0x00000918
     9d8:	000e1e20 	.word	0x000e1e20
     9dc:	ffff0000 	.word	0xffff0000
     9e0:	00000080 	.word	0x00000080
     9e4:	00000000 	.word	0x00000000
     9e8:	9d400e41 	.word	0x9d400e41
     9ec:	41079e08 	.word	0x41079e08
     9f0:	95411d0d 	.word	0x95411d0d
     9f4:	44039604 	.word	0x44039604
     9f8:	05940693 	.word	0x05940693
     9fc:	01980297 	.word	0x01980297
     a00:	d7ddde58 	.word	0xd7ddde58
     a04:	d3d6d5d8 	.word	0xd3d6d5d8
     a08:	001f0cd4 	.word	0x001f0cd4
     a0c:	00000000 	.word	0x00000000
     a10:	0000003c 	.word	0x0000003c
     a14:	00000918 	.word	0x00000918
     a18:	000e1ea0 	.word	0x000e1ea0
     a1c:	ffff0000 	.word	0xffff0000
     a20:	00000084 	.word	0x00000084
     a24:	00000000 	.word	0x00000000
     a28:	9d400e41 	.word	0x9d400e41
     a2c:	41079e08 	.word	0x41079e08
     a30:	95411d0d 	.word	0x95411d0d
     a34:	43039604 	.word	0x43039604
     a38:	01980297 	.word	0x01980297
     a3c:	94069344 	.word	0x94069344
     a40:	ddde5605 	.word	0xddde5605
     a44:	d6d5d8d7 	.word	0xd6d5d8d7
     a48:	1f0cd4d3 	.word	0x1f0cd4d3
     a4c:	00000000 	.word	0x00000000
     a50:	00000044 	.word	0x00000044
     a54:	00000918 	.word	0x00000918
     a58:	000e1f30 	.word	0x000e1f30
     a5c:	ffff0000 	.word	0xffff0000
     a60:	00000090 	.word	0x00000090
     a64:	00000000 	.word	0x00000000
     a68:	9d400e41 	.word	0x9d400e41
     a6c:	41079e08 	.word	0x41079e08
     a70:	98411d0d 	.word	0x98411d0d
     a74:	05944401 	.word	0x05944401
     a78:	96420693 	.word	0x96420693
     a7c:	44049503 	.word	0x44049503
     a80:	d4520297 	.word	0xd4520297
     a84:	d5d641d3 	.word	0xd5d641d3
     a88:	de42d741 	.word	0xde42d741
     a8c:	1f0cd8dd 	.word	0x1f0cd8dd
	...
     a98:	0000003c 	.word	0x0000003c
     a9c:	00000918 	.word	0x00000918
     aa0:	000e1fc0 	.word	0x000e1fc0
     aa4:	ffff0000 	.word	0xffff0000
     aa8:	00000094 	.word	0x00000094
     aac:	00000000 	.word	0x00000000
     ab0:	9d400e41 	.word	0x9d400e41
     ab4:	41079e08 	.word	0x41079e08
     ab8:	97411d0d 	.word	0x97411d0d
     abc:	05944402 	.word	0x05944402
     ac0:	96440693 	.word	0x96440693
     ac4:	52049503 	.word	0x52049503
     ac8:	d641d3d4 	.word	0xd641d3d4
     acc:	ddde46d5 	.word	0xddde46d5
     ad0:	001f0cd7 	.word	0x001f0cd7
     ad4:	00000000 	.word	0x00000000
     ad8:	0000003c 	.word	0x0000003c
     adc:	00000918 	.word	0x00000918
     ae0:	000e2060 	.word	0x000e2060
     ae4:	ffff0000 	.word	0xffff0000
     ae8:	00000094 	.word	0x00000094
     aec:	00000000 	.word	0x00000000
     af0:	9d500e41 	.word	0x9d500e41
     af4:	42099e0a 	.word	0x42099e0a
     af8:	95411d0d 	.word	0x95411d0d
     afc:	45059606 	.word	0x45059606
     b00:	03980497 	.word	0x03980497
     b04:	93440299 	.word	0x93440299
     b08:	57079408 	.word	0x57079408
     b0c:	d7d9ddde 	.word	0xd7d9ddde
     b10:	d3d6d5d8 	.word	0xd3d6d5d8
     b14:	001f0cd4 	.word	0x001f0cd4
     b18:	00000054 	.word	0x00000054
     b1c:	00000918 	.word	0x00000918
     b20:	000e2100 	.word	0x000e2100
     b24:	ffff0000 	.word	0xffff0000
     b28:	000000f0 	.word	0x000000f0
     b2c:	00000000 	.word	0x00000000
     b30:	9d400e41 	.word	0x9d400e41
     b34:	41079e08 	.word	0x41079e08
     b38:	93411d0d 	.word	0x93411d0d
     b3c:	44059406 	.word	0x44059406
     b40:	0a470495 	.word	0x0a470495
     b44:	d3d5ddde 	.word	0xd3d5ddde
     b48:	001f0cd4 	.word	0x001f0cd4
     b4c:	97410b42 	.word	0x97410b42
     b50:	42039602 	.word	0x42039602
     b54:	d7510198 	.word	0xd7510198
     b58:	44d841d6 	.word	0x44d841d6
     b5c:	d64f0396 	.word	0xd64f0396
     b60:	d5ddde43 	.word	0xd5ddde43
     b64:	1f0cd4d3 	.word	0x1f0cd4d3
	...
     b70:	00000044 	.word	0x00000044
     b74:	00000918 	.word	0x00000918
     b78:	000e21f0 	.word	0x000e21f0
     b7c:	ffff0000 	.word	0xffff0000
     b80:	000000f4 	.word	0x000000f4
     b84:	00000000 	.word	0x00000000
     b88:	9d700e41 	.word	0x9d700e41
     b8c:	430d9e0e 	.word	0x430d9e0e
     b90:	99411d0d 	.word	0x99411d0d
     b94:	45059a06 	.word	0x45059a06
     b98:	0b940c93 	.word	0x0b940c93
     b9c:	09960a95 	.word	0x09960a95
     ba0:	07980897 	.word	0x07980897
     ba4:	d9ddde72 	.word	0xd9ddde72
     ba8:	d5d8d7da 	.word	0xd5d8d7da
     bac:	0cd4d3d6 	.word	0x0cd4d3d6
     bb0:	0000001f 	.word	0x0000001f
     bb4:	00000000 	.word	0x00000000
     bb8:	00000074 	.word	0x00000074
     bbc:	00000918 	.word	0x00000918
     bc0:	000e22f0 	.word	0x000e22f0
     bc4:	ffff0000 	.word	0xffff0000
     bc8:	00000214 	.word	0x00000214
     bcc:	00000000 	.word	0x00000000
     bd0:	9d500e41 	.word	0x9d500e41
     bd4:	43099e0a 	.word	0x43099e0a
     bd8:	94421d0d 	.word	0x94421d0d
     bdc:	46029907 	.word	0x46029907
     be0:	04970398 	.word	0x04970398
     be4:	95059644 	.word	0x95059644
     be8:	019a4506 	.word	0x019a4506
     bec:	54089345 	.word	0x54089345
     bf0:	d5d641d3 	.word	0xd5d641d3
     bf4:	43d7d842 	.word	0x43d7d842
     bf8:	de0a4fda 	.word	0xde0a4fda
     bfc:	0cd4d9dd 	.word	0x0cd4d9dd
     c00:	0b41001f 	.word	0x0b41001f
     c04:	96049755 	.word	0x96049755
     c08:	08934405 	.word	0x08934405
     c0c:	51069541 	.word	0x51069541
     c10:	43d541d3 	.word	0x43d541d3
     c14:	de44d6d7 	.word	0xde44d6d7
     c18:	0cd4d9dd 	.word	0x0cd4d9dd
     c1c:	0c41001f 	.word	0x0c41001f
     c20:	0794501d 	.word	0x0794501d
     c24:	0a9d0299 	.word	0x0a9d0299
     c28:	0000099e 	.word	0x0000099e
     c2c:	00000000 	.word	0x00000000
     c30:	0000000c 	.word	0x0000000c
     c34:	ffffffff 	.word	0xffffffff
     c38:	78040001 	.word	0x78040001
     c3c:	001f0c1e 	.word	0x001f0c1e
     c40:	00000024 	.word	0x00000024
     c44:	00000c30 	.word	0x00000c30
     c48:	000e2510 	.word	0x000e2510
     c4c:	ffff0000 	.word	0xffff0000
     c50:	00000040 	.word	0x00000040
     c54:	00000000 	.word	0x00000000
     c58:	9d100e41 	.word	0x9d100e41
     c5c:	41019e02 	.word	0x41019e02
     c60:	de4d1d0d 	.word	0xde4d1d0d
     c64:	001f0cdd 	.word	0x001f0cdd
     c68:	00000014 	.word	0x00000014
     c6c:	00000c30 	.word	0x00000c30
     c70:	000e2550 	.word	0x000e2550
     c74:	ffff0000 	.word	0xffff0000
     c78:	00000024 	.word	0x00000024
     c7c:	00000000 	.word	0x00000000
     c80:	0000002c 	.word	0x0000002c
     c84:	00000c30 	.word	0x00000c30
     c88:	000e2580 	.word	0x000e2580
     c8c:	ffff0000 	.word	0xffff0000
     c90:	0000009c 	.word	0x0000009c
     c94:	00000000 	.word	0x00000000
     c98:	9d300e41 	.word	0x9d300e41
     c9c:	44059e06 	.word	0x44059e06
     ca0:	0a5e1d0d 	.word	0x0a5e1d0d
     ca4:	1f0cddde 	.word	0x1f0cddde
     ca8:	000b4100 	.word	0x000b4100
     cac:	00000000 	.word	0x00000000
     cb0:	0000002c 	.word	0x0000002c
     cb4:	00000c30 	.word	0x00000c30
     cb8:	000e2620 	.word	0x000e2620
     cbc:	ffff0000 	.word	0xffff0000
     cc0:	000000bc 	.word	0x000000bc
     cc4:	00000000 	.word	0x00000000
     cc8:	9d300e41 	.word	0x9d300e41
     ccc:	44059e06 	.word	0x44059e06
     cd0:	0a631d0d 	.word	0x0a631d0d
     cd4:	1f0cddde 	.word	0x1f0cddde
     cd8:	000b4100 	.word	0x000b4100
     cdc:	00000000 	.word	0x00000000
     ce0:	0000002c 	.word	0x0000002c
     ce4:	00000c30 	.word	0x00000c30
     ce8:	000e26e0 	.word	0x000e26e0
     cec:	ffff0000 	.word	0xffff0000
     cf0:	000000a8 	.word	0x000000a8
     cf4:	00000000 	.word	0x00000000
     cf8:	9d300e41 	.word	0x9d300e41
     cfc:	44059e06 	.word	0x44059e06
     d00:	0a611d0d 	.word	0x0a611d0d
     d04:	1f0cddde 	.word	0x1f0cddde
     d08:	000b4100 	.word	0x000b4100
     d0c:	00000000 	.word	0x00000000
     d10:	0000002c 	.word	0x0000002c
     d14:	00000c30 	.word	0x00000c30
     d18:	000e2790 	.word	0x000e2790
     d1c:	ffff0000 	.word	0xffff0000
     d20:	00000098 	.word	0x00000098
     d24:	00000000 	.word	0x00000000
     d28:	9d300e41 	.word	0x9d300e41
     d2c:	43059e06 	.word	0x43059e06
     d30:	0a5e1d0d 	.word	0x0a5e1d0d
     d34:	1f0cddde 	.word	0x1f0cddde
     d38:	000b4100 	.word	0x000b4100
     d3c:	00000000 	.word	0x00000000
     d40:	0000002c 	.word	0x0000002c
     d44:	00000c30 	.word	0x00000c30
     d48:	000e2830 	.word	0x000e2830
     d4c:	ffff0000 	.word	0xffff0000
     d50:	000000a0 	.word	0x000000a0
     d54:	00000000 	.word	0x00000000
     d58:	9d300e41 	.word	0x9d300e41
     d5c:	44059e06 	.word	0x44059e06
     d60:	0a5f1d0d 	.word	0x0a5f1d0d
     d64:	1f0cddde 	.word	0x1f0cddde
     d68:	000b4100 	.word	0x000b4100
     d6c:	00000000 	.word	0x00000000
     d70:	0000002c 	.word	0x0000002c
     d74:	00000c30 	.word	0x00000c30
     d78:	000e28d0 	.word	0x000e28d0
     d7c:	ffff0000 	.word	0xffff0000
     d80:	000000a0 	.word	0x000000a0
     d84:	00000000 	.word	0x00000000
     d88:	9d300e41 	.word	0x9d300e41
     d8c:	44059e06 	.word	0x44059e06
     d90:	0a5f1d0d 	.word	0x0a5f1d0d
     d94:	1f0cddde 	.word	0x1f0cddde
     d98:	000b4100 	.word	0x000b4100
     d9c:	00000000 	.word	0x00000000
     da0:	0000002c 	.word	0x0000002c
     da4:	00000c30 	.word	0x00000c30
     da8:	000e2970 	.word	0x000e2970
     dac:	ffff0000 	.word	0xffff0000
     db0:	000000bc 	.word	0x000000bc
     db4:	00000000 	.word	0x00000000
     db8:	9d300e41 	.word	0x9d300e41
     dbc:	43059e06 	.word	0x43059e06
     dc0:	0a671d0d 	.word	0x0a671d0d
     dc4:	1f0cddde 	.word	0x1f0cddde
     dc8:	000b4100 	.word	0x000b4100
     dcc:	00000000 	.word	0x00000000
     dd0:	00000034 	.word	0x00000034
     dd4:	00000c30 	.word	0x00000c30
     dd8:	000e2a30 	.word	0x000e2a30
     ddc:	ffff0000 	.word	0xffff0000
     de0:	000000dc 	.word	0x000000dc
     de4:	00000000 	.word	0x00000000
     de8:	9d300e41 	.word	0x9d300e41
     dec:	43059e06 	.word	0x43059e06
     df0:	0a661d0d 	.word	0x0a661d0d
     df4:	1f0cddde 	.word	0x1f0cddde
     df8:	440b4200 	.word	0x440b4200
     dfc:	0cddde0a 	.word	0x0cddde0a
     e00:	0b41001f 	.word	0x0b41001f
     e04:	00000000 	.word	0x00000000
     e08:	0000007c 	.word	0x0000007c
     e0c:	00000c30 	.word	0x00000c30
     e10:	000e2b10 	.word	0x000e2b10
     e14:	ffff0000 	.word	0xffff0000
     e18:	00000164 	.word	0x00000164
     e1c:	00000000 	.word	0x00000000
     e20:	9d100e41 	.word	0x9d100e41
     e24:	42019e02 	.word	0x42019e02
     e28:	0a4d1d0d 	.word	0x0a4d1d0d
     e2c:	1f0cddde 	.word	0x1f0cddde
     e30:	4b0b4200 	.word	0x4b0b4200
     e34:	0cddde0a 	.word	0x0cddde0a
     e38:	0b43001f 	.word	0x0b43001f
     e3c:	ddde0a48 	.word	0xddde0a48
     e40:	42001f0c 	.word	0x42001f0c
     e44:	de0a440b 	.word	0xde0a440b
     e48:	001f0cdd 	.word	0x001f0cdd
     e4c:	0a440b42 	.word	0x0a440b42
     e50:	1f0cddde 	.word	0x1f0cddde
     e54:	440b4200 	.word	0x440b4200
     e58:	0cddde0a 	.word	0x0cddde0a
     e5c:	0b42001f 	.word	0x0b42001f
     e60:	ddde0a44 	.word	0xddde0a44
     e64:	42001f0c 	.word	0x42001f0c
     e68:	de0a460b 	.word	0xde0a460b
     e6c:	001f0cdd 	.word	0x001f0cdd
     e70:	0a440b42 	.word	0x0a440b42
     e74:	1f0cddde 	.word	0x1f0cddde
     e78:	440b4200 	.word	0x440b4200
     e7c:	0cddde0a 	.word	0x0cddde0a
     e80:	0b42001f 	.word	0x0b42001f
     e84:	00000000 	.word	0x00000000
     e88:	0000004c 	.word	0x0000004c
     e8c:	00000c30 	.word	0x00000c30
     e90:	000e2c80 	.word	0x000e2c80
     e94:	ffff0000 	.word	0xffff0000
     e98:	000001d0 	.word	0x000001d0
     e9c:	00000000 	.word	0x00000000
     ea0:	01f00e41 	.word	0x01f00e41
     ea4:	1d9e1e9d 	.word	0x1d9e1e9d
     ea8:	4a1d0d44 	.word	0x4a1d0d44
     eac:	1b941c93 	.word	0x1b941c93
     eb0:	19961a95 	.word	0x19961a95
     eb4:	17981897 	.word	0x17981897
     eb8:	159a1699 	.word	0x159a1699
     ebc:	5902149b 	.word	0x5902149b
     ec0:	dbddde0a 	.word	0xdbddde0a
     ec4:	d8d7dad9 	.word	0xd8d7dad9
     ec8:	d4d3d6d5 	.word	0xd4d3d6d5
     ecc:	42001f0c 	.word	0x42001f0c
     ed0:	0000000b 	.word	0x0000000b
     ed4:	00000000 	.word	0x00000000
     ed8:	0000002c 	.word	0x0000002c
     edc:	00000c30 	.word	0x00000c30
     ee0:	000e2e50 	.word	0x000e2e50
     ee4:	ffff0000 	.word	0xffff0000
     ee8:	000000a8 	.word	0x000000a8
     eec:	00000000 	.word	0x00000000
     ef0:	9d300e41 	.word	0x9d300e41
     ef4:	44059e06 	.word	0x44059e06
     ef8:	0a5f1d0d 	.word	0x0a5f1d0d
     efc:	1f0cddde 	.word	0x1f0cddde
     f00:	000b4300 	.word	0x000b4300
     f04:	00000000 	.word	0x00000000
     f08:	0000000c 	.word	0x0000000c
     f0c:	ffffffff 	.word	0xffffffff
     f10:	78040001 	.word	0x78040001
     f14:	001f0c1e 	.word	0x001f0c1e
     f18:	00000014 	.word	0x00000014
     f1c:	00000f08 	.word	0x00000f08
     f20:	000e2f00 	.word	0x000e2f00
     f24:	ffff0000 	.word	0xffff0000
     f28:	00000018 	.word	0x00000018
     f2c:	00000000 	.word	0x00000000
     f30:	00000014 	.word	0x00000014
     f34:	00000f08 	.word	0x00000f08
     f38:	000e2f20 	.word	0x000e2f20
     f3c:	ffff0000 	.word	0xffff0000
     f40:	00000018 	.word	0x00000018
     f44:	00000000 	.word	0x00000000
     f48:	00000014 	.word	0x00000014
     f4c:	00000f08 	.word	0x00000f08
     f50:	000e2f40 	.word	0x000e2f40
     f54:	ffff0000 	.word	0xffff0000
     f58:	00000010 	.word	0x00000010
     f5c:	00000000 	.word	0x00000000
     f60:	0000000c 	.word	0x0000000c
     f64:	ffffffff 	.word	0xffffffff
     f68:	78040001 	.word	0x78040001
     f6c:	001f0c1e 	.word	0x001f0c1e
     f70:	00000014 	.word	0x00000014
     f74:	00000f60 	.word	0x00000f60
     f78:	000e2f50 	.word	0x000e2f50
     f7c:	ffff0000 	.word	0xffff0000
     f80:	00000024 	.word	0x00000024
     f84:	00000000 	.word	0x00000000
     f88:	00000014 	.word	0x00000014
     f8c:	00000f60 	.word	0x00000f60
     f90:	000e2f80 	.word	0x000e2f80
     f94:	ffff0000 	.word	0xffff0000
     f98:	00000014 	.word	0x00000014
     f9c:	00000000 	.word	0x00000000
     fa0:	00000014 	.word	0x00000014
     fa4:	00000f60 	.word	0x00000f60
     fa8:	000e2fa0 	.word	0x000e2fa0
     fac:	ffff0000 	.word	0xffff0000
     fb0:	00000014 	.word	0x00000014
     fb4:	00000000 	.word	0x00000000
     fb8:	0000000c 	.word	0x0000000c
     fbc:	ffffffff 	.word	0xffffffff
     fc0:	78040001 	.word	0x78040001
     fc4:	001f0c1e 	.word	0x001f0c1e
     fc8:	00000014 	.word	0x00000014
     fcc:	00000fb8 	.word	0x00000fb8
     fd0:	000e2fc0 	.word	0x000e2fc0
     fd4:	ffff0000 	.word	0xffff0000
     fd8:	00000018 	.word	0x00000018
     fdc:	00000000 	.word	0x00000000
     fe0:	00000024 	.word	0x00000024
     fe4:	00000fb8 	.word	0x00000fb8
     fe8:	000e2fe0 	.word	0x000e2fe0
     fec:	ffff0000 	.word	0xffff0000
     ff0:	0000000c 	.word	0x0000000c
     ff4:	00000000 	.word	0x00000000
     ff8:	9d100e41 	.word	0x9d100e41
     ffc:	41019e02 	.word	0x41019e02
    1000:	00001d0d 	.word	0x00001d0d
    1004:	00000000 	.word	0x00000000
    1008:	00000024 	.word	0x00000024
    100c:	00000fb8 	.word	0x00000fb8
    1010:	000e2ff0 	.word	0x000e2ff0
    1014:	ffff0000 	.word	0xffff0000
    1018:	00000024 	.word	0x00000024
    101c:	00000000 	.word	0x00000000
    1020:	9d300e41 	.word	0x9d300e41
    1024:	41059e06 	.word	0x41059e06
    1028:	93411d0d 	.word	0x93411d0d
    102c:	00000004 	.word	0x00000004
    1030:	00000024 	.word	0x00000024
    1034:	00000fb8 	.word	0x00000fb8
    1038:	000e3020 	.word	0x000e3020
    103c:	ffff0000 	.word	0xffff0000
    1040:	00000034 	.word	0x00000034
    1044:	00000000 	.word	0x00000000
    1048:	9d100e41 	.word	0x9d100e41
    104c:	41019e02 	.word	0x41019e02
    1050:	00001d0d 	.word	0x00001d0d
    1054:	00000000 	.word	0x00000000
    1058:	00000024 	.word	0x00000024
    105c:	00000fb8 	.word	0x00000fb8
    1060:	000e3060 	.word	0x000e3060
    1064:	ffff0000 	.word	0xffff0000
    1068:	00000060 	.word	0x00000060
    106c:	00000000 	.word	0x00000000
    1070:	9d200e41 	.word	0x9d200e41
    1074:	43039e04 	.word	0x43039e04
    1078:	93411d0d 	.word	0x93411d0d
    107c:	00019402 	.word	0x00019402
    1080:	00000014 	.word	0x00000014
    1084:	00000fb8 	.word	0x00000fb8
    1088:	000e30c0 	.word	0x000e30c0
    108c:	ffff0000 	.word	0xffff0000
    1090:	0000008c 	.word	0x0000008c
    1094:	00000000 	.word	0x00000000
    1098:	0000000c 	.word	0x0000000c
    109c:	ffffffff 	.word	0xffffffff
    10a0:	78040001 	.word	0x78040001
    10a4:	001f0c1e 	.word	0x001f0c1e
    10a8:	00000014 	.word	0x00000014
    10ac:	00001098 	.word	0x00001098
    10b0:	000e3150 	.word	0x000e3150
    10b4:	ffff0000 	.word	0xffff0000
    10b8:	00000014 	.word	0x00000014
    10bc:	00000000 	.word	0x00000000
    10c0:	00000014 	.word	0x00000014
    10c4:	00001098 	.word	0x00001098
    10c8:	000e3170 	.word	0x000e3170
    10cc:	ffff0000 	.word	0xffff0000
    10d0:	0000000c 	.word	0x0000000c
    10d4:	00000000 	.word	0x00000000
    10d8:	00000014 	.word	0x00000014
    10dc:	00001098 	.word	0x00001098
    10e0:	000e3180 	.word	0x000e3180
    10e4:	ffff0000 	.word	0xffff0000
    10e8:	00000010 	.word	0x00000010
    10ec:	00000000 	.word	0x00000000
    10f0:	00000014 	.word	0x00000014
    10f4:	00001098 	.word	0x00001098
    10f8:	000e3190 	.word	0x000e3190
    10fc:	ffff0000 	.word	0xffff0000
    1100:	00000010 	.word	0x00000010
    1104:	00000000 	.word	0x00000000
    1108:	0000004c 	.word	0x0000004c
    110c:	00001098 	.word	0x00001098
    1110:	000e31a0 	.word	0x000e31a0
    1114:	ffff0000 	.word	0xffff0000
    1118:	000001fc 	.word	0x000001fc
    111c:	00000000 	.word	0x00000000
    1120:	9d700e41 	.word	0x9d700e41
    1124:	430d9e0e 	.word	0x430d9e0e
    1128:	93411d0d 	.word	0x93411d0d
    112c:	4d0b940c 	.word	0x4d0b940c
    1130:	09960a95 	.word	0x09960a95
    1134:	07980897 	.word	0x07980897
    1138:	059a0699 	.word	0x059a0699
    113c:	039c049b 	.word	0x039c049b
    1140:	ddde6c02 	.word	0xddde6c02
    1144:	dad9dcdb 	.word	0xdad9dcdb
    1148:	d6d5d8d7 	.word	0xd6d5d8d7
    114c:	1f0cd4d3 	.word	0x1f0cd4d3
	...
    1158:	00000014 	.word	0x00000014
    115c:	00001098 	.word	0x00001098
    1160:	000e33a0 	.word	0x000e33a0
    1164:	ffff0000 	.word	0xffff0000
    1168:	0000006c 	.word	0x0000006c
    116c:	00000000 	.word	0x00000000
    1170:	00000014 	.word	0x00000014
    1174:	00001098 	.word	0x00001098
    1178:	000e3410 	.word	0x000e3410
    117c:	ffff0000 	.word	0xffff0000
    1180:	00000028 	.word	0x00000028
    1184:	00000000 	.word	0x00000000
    1188:	0000003c 	.word	0x0000003c
    118c:	00001098 	.word	0x00001098
    1190:	000e3440 	.word	0x000e3440
    1194:	ffff0000 	.word	0xffff0000
    1198:	00000138 	.word	0x00000138
    119c:	00000000 	.word	0x00000000
    11a0:	9d400e41 	.word	0x9d400e41
    11a4:	42079e08 	.word	0x42079e08
    11a8:	93431d0d 	.word	0x93431d0d
    11ac:	95059406 	.word	0x95059406
    11b0:	97039604 	.word	0x97039604
    11b4:	02019802 	.word	0x02019802
    11b8:	ddde0a44 	.word	0xddde0a44
    11bc:	d6d5d8d7 	.word	0xd6d5d8d7
    11c0:	1f0cd4d3 	.word	0x1f0cd4d3
    11c4:	000b4100 	.word	0x000b4100
    11c8:	0000002c 	.word	0x0000002c
    11cc:	00001098 	.word	0x00001098
    11d0:	000e3580 	.word	0x000e3580
    11d4:	ffff0000 	.word	0xffff0000
    11d8:	00000088 	.word	0x00000088
    11dc:	00000000 	.word	0x00000000
    11e0:	9d100e41 	.word	0x9d100e41
    11e4:	41019e02 	.word	0x41019e02
    11e8:	0a5b1d0d 	.word	0x0a5b1d0d
    11ec:	1f0cddde 	.word	0x1f0cddde
    11f0:	000b4100 	.word	0x000b4100
    11f4:	00000000 	.word	0x00000000
